<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">


	<!-- 默认Controller扫描，如果以com.tzdr开头的项目和组件不用再声明。自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.tzdr.api.controller" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<!-- 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler />

	<!-- 定义无Controller的path<->view直接映射 -->
	<mvc:view-controller path="/" view-name="redirect:/admin/login" />
	

	<mvc:annotation-driven validator="validator">
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean class="com.tzdr.common.web.support.DynamicProxyObjectMapper">
						<property name="dateFormat">
							<bean class="java.text.SimpleDateFormat">
								<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
							</bean>
						</property>
					</bean>
				</property>
				<property name="supportedMediaTypes">
					<list>
						<value>application/json</value>
						<value>text/json</value>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			  <!-- StringHttpMessageConverter编码为UTF-8，防止乱码 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
                <property name = "supportedMediaTypes">
                    <list>
                        <bean class="org.springframework.http.MediaType">
                            <constructor-arg index="0" value="text"/>
                            <constructor-arg index="1" value="plain"/>
                            <constructor-arg index="2" value="UTF-8"/>
                        </bean>
                        <bean class="org.springframework.http.MediaType">
                            <constructor-arg index="0" value="*"/>
                            <constructor-arg index="1" value="*"/>
                            <constructor-arg index="2" value="UTF-8"/>
                        </bean>
                    </list>
                </property>
            </bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">  
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>  
    </bean>  
     
    
    

	<!-- 定义异常处理  自己也可以扩展HandlerExceptionResolver -->
	 <bean id="exceptionResolver" class="com.tzdr.api.support.ExceptionResolver"/>
	<!-- <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		定义默认的异常处理页面，当该异常类型的注册时使用
		<property name="defaultErrorView" value="error"></property>
		定义异常处理页面用来获取异常信息的变量名，默认名为exception
		<property name="exceptionAttribute" value="ex"></property>
		定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">error</prop>

				这里还可以继续扩展对不同异常类型的处理
			</props>
		</property>
	</bean>
 -->
 
 
	<!-- 定义JSP文件的位置  加上jstlView-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	  	<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	 <!-- 静态资源映射 -->
    <mvc:resources mapping="/static/**" location="/static/"/>
	<mvc:resources mapping="/upload/**" location="/upload/"/>
	 
	<!-- 文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>104857600</value><!-- 上传文件大小限制为100M，100*1024*1024 -->
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
	<!-- 控制器异常处理 -->
	
	<!-- 拦截器配置：可配置多个 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- /myPath/** 表示拦截根目录下myPath目录的所有请求。根目录配置：/** -->
			<mvc:mapping path="/user/**"/>
			<mvc:mapping path="/security/**"/>
			<mvc:mapping path="/trade/**"/>
			<mvc:mapping path="/fund/**"/>
			<mvc:mapping path="/pay/**"/>
			<mvc:mapping path="/message/**"/>
			<!-- 拦截器顺序：preHandle >> postHandle >> afterCompletion -->
			<bean class="com.tzdr.api.support.SessionInterceptor"></bean>
		</mvc:interceptor>
     	<!--设置跨域拦截器-->  
		<mvc:interceptor>
             <mvc:mapping path="/regist" />
             <mvc:mapping path="/sms" />
             <mvc:mapping path="/activity/*" />
            <bean class="com.tzdr.api.interceptor.CrossDomainInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
</beans>
