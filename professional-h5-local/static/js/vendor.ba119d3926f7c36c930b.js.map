{"version":3,"sources":["webpack:///static/js/vendor.ba119d3926f7c36c930b.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/util.js","webpack:///./~/_vue-loader@12.2.1@vue-loader/lib/component-normalizer.js","webpack:///./~/_echarts@3.6.2@echarts/lib/echarts.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/graphic.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/number.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/model.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Path.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/vector.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/env.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/Model.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/format.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/clazz.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/BoundingRect.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/Component.js","webpack:///./~/_babel-runtime@6.23.0@babel-runtime/core-js/json/stringify.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/bar.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/axisHelper.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/text.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/curve.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/matrix.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/layout.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/event.js","webpack:///./~/_zrender@3.5.2@zrender/lib/mixin/Eventful.js","webpack:///./~/_zrender@3.5.2@zrender/lib/tool/color.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_core.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_descriptors.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/line.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/modelHelper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/tooltip.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/Series.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/scale/Scale.js","webpack:///./~/_vuex@2.3.1@vuex/dist/vuex.esm.js","webpack:///./~/_zrender@3.5.2@zrender/lib/config.js","webpack:///./~/_zrender@3.5.2@zrender/lib/container/Group.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/PathProxy.js","webpack:///./~/_vue@2.3.4@vue/dist/vue.esm.js","webpack:///./~/_babel-runtime@6.23.0@babel-runtime/helpers/extends.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_fails.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_global.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_is-object.js","webpack:///./~/_echarts@3.6.2@echarts/lib/CoordinateSystem.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/candlestick.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/helper/createListFromArray.js","webpack:///./~/_echarts@3.6.2@echarts/lib/data/List.js","webpack:///./~/_echarts@3.6.2@echarts/lib/data/helper/completeDimensions.js","webpack:///./~/_echarts@3.6.2@echarts/lib/scale/Interval.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/component.js","webpack:///./~/_echarts@3.6.2@echarts/lib/view/Chart.js","webpack:///(webpack)/buildin/global.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/timsort.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Displayable.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Gradient.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_defined.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_export.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_iobject.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_object-dp.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_to-integer.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_to-iobject.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/helper/Symbol.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/helper/whiskerBoxCommon.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axis/AxisBuilder.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axis/AxisView.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axis/cartesianAxisHelper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/globalListener.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/viewHelper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/gridSimple.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/Axis.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/axisModelCommonMixin.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/cartesian/AxisModel.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Grid.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/mixin/colorPalette.js","webpack:///./~/_echarts@3.6.2@echarts/lib/scale/helper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/symbol.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/throttle.js","webpack:///./~/_zrender@3.5.2@zrender/lib/Element.js","webpack:///./~/_zrender@3.5.2@zrender/lib/animation/Animator.js","webpack:///./~/_zrender@3.5.2@zrender/lib/animation/requestAnimationFrame.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/util.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/LRU.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/guid.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/log.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Image.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Pattern.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Style.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/helper/poly.js","webpack:///./~/_zrender@3.5.2@zrender/lib/mixin/Transformable.js","webpack:///./~/_vue-resource@1.3.4@vue-resource/dist/vue-resource.es2015.js","webpack:///./~/_babel-runtime@6.23.0@babel-runtime/core-js/object/assign.js","webpack:///./~/_babel-runtime@6.23.0@babel-runtime/core-js/object/define-property.js","webpack:///./~/_babel-runtime@6.23.0@babel-runtime/helpers/defineProperty.js","webpack:///./~/_core-js@2.4.1@core-js/library/fn/json/stringify.js","webpack:///./~/_core-js@2.4.1@core-js/library/fn/object/assign.js","webpack:///./~/_core-js@2.4.1@core-js/library/fn/object/define-property.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_a-function.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_an-object.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_array-includes.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_cof.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_ctx.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_dom-create.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_enum-bug-keys.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_has.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_hide.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_ie8-dom-define.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_object-assign.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_object-gops.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_object-keys-internal.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_object-keys.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_object-pie.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_property-desc.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_shared-key.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_shared.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_to-index.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_to-length.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_to-object.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_to-primitive.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_uid.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/es6.object.assign.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/es6.object.define-property.js","webpack:///./~/_echarts@3.6.2@echarts/lib/ExtensionAPI.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/bar/BarSeries.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/bar/BarView.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/bar/barItemStyle.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/bar/helper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/candlestick/CandlestickSeries.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/candlestick/CandlestickView.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/candlestick/candlestickLayout.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/candlestick/candlestickVisual.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/candlestick/preprocessor.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/helper/SymbolDraw.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/helper/WhiskerBoxDraw.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/helper/labelHelper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/line/LineSeries.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/line/LineView.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/line/poly.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axis.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axis/CartesianAxisView.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/tooltip/TooltipContent.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/tooltip/TooltipModel.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/tooltip/TooltipView.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/axisDefault.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/axisModelCreator.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Axis2D.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Cartesian.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/cartesian/GridModel.js","webpack:///./~/_echarts@3.6.2@echarts/lib/data/DataDiffer.js","webpack:///./~/_echarts@3.6.2@echarts/lib/helper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/layout/barGrid.js","webpack:///./~/_echarts@3.6.2@echarts/lib/layout/points.js","webpack:///./~/_echarts@3.6.2@echarts/lib/loading/default.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/Global.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/OptionManager.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/globalDefault.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/mixin/areaStyle.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/mixin/boxLayout.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/mixin/itemStyle.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/mixin/lineStyle.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/mixin/textStyle.js","webpack:///./~/_echarts@3.6.2@echarts/lib/preprocessor/backwardCompat.js","webpack:///./~/_echarts@3.6.2@echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./~/_echarts@3.6.2@echarts/lib/processor/dataSample.js","webpack:///./~/_echarts@3.6.2@echarts/lib/scale/Log.js","webpack:///./~/_echarts@3.6.2@echarts/lib/scale/Ordinal.js","webpack:///./~/_echarts@3.6.2@echarts/lib/scale/Time.js","webpack:///./~/_echarts@3.6.2@echarts/lib/view/Component.js","webpack:///./~/_echarts@3.6.2@echarts/lib/visual/seriesColor.js","webpack:///./~/_echarts@3.6.2@echarts/lib/visual/symbol.js","webpack:///./~/_vue-router@2.5.3@vue-router/dist/vue-router.esm.js","webpack:///./~/_vue-style-loader@3.0.1@vue-style-loader/lib/listToStyles.js","webpack:///./~/_zrender@3.5.2@zrender/lib/Handler.js","webpack:///./~/_zrender@3.5.2@zrender/lib/Layer.js","webpack:///./~/_zrender@3.5.2@zrender/lib/Painter.js","webpack:///./~/_zrender@3.5.2@zrender/lib/Storage.js","webpack:///./~/_zrender@3.5.2@zrender/lib/animation/Animation.js","webpack:///./~/_zrender@3.5.2@zrender/lib/animation/Clip.js","webpack:///./~/_zrender@3.5.2@zrender/lib/animation/easing.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/arc.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/cubic.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/line.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/path.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/quadratic.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/windingLine.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/GestureMgr.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/bbox.js","webpack:///./~/_zrender@3.5.2@zrender/lib/dom/HandlerProxy.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/CompoundPath.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/LinearGradient.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/RadialGradient.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Text.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/helper/roundRect.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/helper/smoothBezier.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/helper/smoothSpline.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/mixin/RectText.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Arc.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/BezierCurve.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Circle.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Line.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Polygon.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Polyline.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Rect.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Ring.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Sector.js","webpack:///./~/_zrender@3.5.2@zrender/lib/mixin/Animatable.js","webpack:///./~/_zrender@3.5.2@zrender/lib/mixin/Draggable.js","webpack:///./~/_zrender@3.5.2@zrender/lib/tool/path.js","webpack:///./~/_zrender@3.5.2@zrender/lib/tool/transformPath.js","webpack:///./~/_zrender@3.5.2@zrender/lib/zrender.js","webpack:///./~/_css-loader@0.28.4@css-loader/lib/css-base.js","webpack:///./~/_vue-style-loader@3.0.1@vue-style-loader/lib/addStylesClient.js"],"names":["webpackJsonp","module","exports","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","createCanvas","document","createElement","getContext","_ctx","util","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","concat","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","slice","Function","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","set","createHashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","Array","get","prefixedKey","removeKey","noop","rawScriptExports","compiledTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","default","options","render","staticRenderFns","_scopeId","hook","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","functional","existing","beforeCreate","h","__webpack_require__","global","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","opts","prioritySortFunc","a","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","width","height","_throttledZrFlush","throttle","zrUtil","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","createExtensionAPI","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","on","_onframe","doConvertPixel","methodName","finder","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","updateDirectly","ecIns","payload","mainType","subType","callView","view","__alive","__model","query","eachComponent","model","index","__viewId","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","__id","__ecComponentInfo","componentIndex","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","chartView","storage","elCount","traverse","el","isGroup","env","node","useHoverLayer","ignore","frameDrawNum","needProgressive","progressive","Math","floor","stopAnimation","blendMode","canvasSupported","setStyle","z","zlevel","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","window","GlobalModel","OptionManager","ComponentModel","SeriesModel","graphic","colorTool","ACTION_REG","off","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","log","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","pixelRatio","backgroundColor","list","getDisplayList","getDataURL","excludeComponents","excludesComponentViews","self","url","toDataURL","getConnectedDataURL","groupId","mathMin","min","mathMax","max","left","Infinity","top","right","bottom","canvasList","canvas","boundingRect","getBoundingClientRect","targetCanvas","img","Image","style","x","y","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","getViewOfComponentModel","getViewOfSeriesModel","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","name","cfg","hideLoading","loadingEffects","opt","browser","weChat","MOUSE_EVENT_NAMES","eveName","e","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","clear","idBase","Date","groupIdBase","echarts","version","dependencies","replace","existInstance","getInstanceByDom","nodeName","toUpperCase","clientWidth","clientHeight","setAttribute","connect","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","isNaN","registerPostUpdate","postUpdateFunc","registerAction","test","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","Axis","number","format","matrix","vector","color","helper","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","getShallow","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","pathTool","Path","Transformable","BoundingRect","round","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","extendShape","extendPath","pathData","extendFromString","makePath","rect","layout","path","createFromString","getBoundingRect","aspect","cx","cy","resizePath","mergePath","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","shape","lineWidth","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","setHoverStyle","hoverSilentOnTouch","setText","textStyle","labelModel","labelPosition","labelOffset","labelColor","textStyleModel","textDistance","textFont","getFont","textPosition","textOffset","textFill","getTextColor","gTextStyleModel","fontStyle","fontWeight","fontSize","fontFamily","join","updateProps","initProps","getTransform","ancestor","mat","identity","mul","getLocalTransform","transform","invert","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","anid","oldEl","newProp","clipPointsByRect","points","point","clipRectByRect","targetRect","_trim","str","quantityExponent","val","LN10","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","match","parseFloat","NaN","precision","returnStr","toFixed","asc","arr","sort","getPrecision","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","dataQuantity","sizeQuantity","isFinite","getPercentWithPrecision","valueList","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","radian","pi2","PI","isRadianAroundZero","TIME_REG","getTimezoneOffset","parseDate","exec","timezoneOffset","timeOffset","quantity","nice","nf","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","has","formatUtil","nubmerUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","LABEL_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","createDataFormatModel","dataFormatMixin","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","seriesId","seriesName","marker","getTooltipMarker","$vars","getFormattedLabel","dimIndex","labelProp","itemModel","getItemModel","formatter","formatTpl","formatTooltip","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","makeGetter","hostObj","parsedKey","queryType","includeMainTypes","queryParam","queryComponents","dataDimToCoordDim","dataDim","getDimension","dimItem","getDimensionInfo","coordDim","coordDimToDataDim","dimName","coordDimIndex","otherDimToDataDim","otherDim","otherDims","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","scale","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","text","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","copy","w","lineScale","strokeNoScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirty","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","sqrt","Sub","extendFrom","defaultShape","thisShape","ArrayCtor","Float32Array","out","v1","v2","scaleAndAdd","lenSquare","div","dot","s","normalize","d","distance","distanceSquare","negate","lerp","t","lengthSquare","dist","distSquare","navigator","os","ua","firefox","ie","edge","touchEventsSupported","pointerEventsSupported","userAgent","parentModel","doGet","pathArr","getParent","getParentMethod","clazzUtil","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","Ctor","setReadOnly","properties","customizeGetParent","enableClassExtend","numberUtil","textContain","addCommas","toCamelCase","upperCaseFirst","group1","charAt","normalizeCssArray","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","tpl","paramsList","encode","seriesLen","alias","k","formatTplSimple","extraCssText","s2d","formatTime","isUTC","date","utc","M","capitalFirst","substr","truncateText","checkClassType","superCall","superApply","IS_CONTAINER","host","hasOwn","ret","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","enableClassManagement","entity","makeContainer","container","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","o","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","getDependencies","deps","arrayPush","componentUtil","defaultOption","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","__esModule","barLayoutGrid","eachSeriesByType","setVisual","OrdinalScale","IntervalScale","Scale","axisHelper","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","setBlank","getNeedCrossZero","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","axis","getAxisLabelInterval","tickCoords","labels","font","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","getTextWidth","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getTextRect","textAlign","textBaseline","textLineLen","lineHeight","adjustTextPositionOnRect","textRect","textHeight","halfHeight","containerWidth","ellipsis","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","cos","THREE_SQRT","sin","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","HV_NAMES","box","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","copyLayoutParams","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","stop","preventDefault","stopPropagation","cancelBubble","returnValue","Dispatcher","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseInt","parseCssFloat","cssHueToRgb","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastMapToColor","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","mapToColor","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","core","__e","defineProperty","collectAxesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","axesInfo","useHandle","seriesModels","axesInfoInCoordSys","seriesInvolved","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysAxesInfo","coordSysMap","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","label","show","crossStyle","lineStyle","collectSeriesInfo","seriesTooltipTrigger","seriesTooltipShow","getAxis","dim","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","collect","fixValue","getAxisInfo","reverse","isBlank","getAxisPointerModel","classUtil","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","fillDataTextStyle","newSeriesOption","cloneShallow","getLinkedData","setData","getRawData","getBaseAxis","multipleSeries","formattedValue","setEachItem","dimIdx","tooltip","valStr","vertially","tooltipName","tooltipDims","colorEl","animationEnabled","getColorFromPalette","scope","getAxisTooltipData","getTooltipPosition","excludes","includes","propName","setting","_setting","_extent","_interval","scaleProto","getSetting","unionExtent","unionExtentFromData","getDataExtent","start","end","thisExtent","_isBlank","__webpack_exports__","devtoolPlugin","store","devtoolHook","_devtoolHook","emit","targetState","replaceState","subscribe","mutation","state","forEachValue","fn","keys","isPromise","then","msg","targetModule","newModule","modules","getChild","resetStore","hot","_actions","_mutations","_wrappedGetters","_modulesNamespaceMap","installModule","_modules","root","resetStoreVM","oldVm","_vm","getters","wrappedGetters","computed","enumerable","Vue","config","$$state","strict","enableStrictMode","_withCommit","_data","nextTick","$destroy","rootState","isRoot","namespace","getNamespace","namespaced","parentState","getNestedState","moduleName","local","makeLocalContext","forEachMutation","registerMutation","forEachAction","forEachGetter","getter","registerGetter","forEachChild","noNamespace","dispatch","_type","_payload","_options","unifyObjectStyle","error","commit","defineProperties","makeLocalGetters","gettersProxy","splitPos","localType","res","rootGetters","Promise","resolve","catch","err","rawGetter","$watch","_committing","deep","sync","install","_Vue","applyMixin","normalizeMap","normalizeNamespace","getModuleByNamespace","mapMutations","mapActions","vuexInit","$options","$store","usesInit","_lifecycleHooks","_init","__VUE_DEVTOOLS_GLOBAL_HOOK__","Module","rawModule","runtime","_children","_rawModule","rawState","prototypeAccessors$1","addChild","removeChild","mutations","ModuleCollection","rawRootModule","this$1","rawChildModule","unregister","Store","plugins","_subscribers","_watcherVM","ref","plugin","prototypeAccessors","entry","subs","watch","registerModule","unregisterModule","delete","hotUpdate","newOptions","committing","mapState","states","vuex","mapGetters","index_esm","debugMode","Element","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","offset","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","isUndef","undefined","isDef","isTrue","isFalse","isPlainObject","_toString","isRegExp","JSON","toNumber","expectsLowerCase","cache","boundFn","_length","toArray","to","_from","toObject","looseEqual","isObjectA","isObjectB","looseIndexOf","once","called","isReserved","def","writable","configurable","bailRE","segments","handleError","vm","info","errorHandler","inBrowser","isNative","pushTarget","_target","Dep","targetStack","popTarget","protoAugment","src","__proto__","copyAugment","observe","asRootData","ob","__ob__","Observer","observerState","shouldConvert","isServerRendering","isExtensible","_isVue","vmCount","defineReactive$$1","customSetter","dep","property","getOwnPropertyDescriptor","setter","childOb","depend","dependArray","newVal","notify","del","mergeData","toVal","fromVal","mergeHook","parentVal","childVal","mergeAssets","normalizeProps","camelize","normalizeDirectives","dirs","directives","mergeOptions","mergeField","strat","strats","defaultStrat","extendsFrom","extends","mixins","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","capitalize","validateProp","propOptions","propsData","absent","isType","Boolean","hyphenate","getPropDefaultValue","prevShouldConvert","_props","getType","createTextVNode","VNode","cloneVNode","vnode","cloned","tag","elm","componentOptions","ns","isStatic","isComment","isCloned","cloneVNodes","vnodes","createFnInvoker","fns","invoker","arguments$1","updateListeners","oldOn","remove$$1","cur","old","capture","passive","mergeVNodeHook","hookKey","wrappedHook","oldHook","extractPropsFromVNodeData","attrs","altKey","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","last","_isVList","ensureCtor","comp","resolveAsyncComponent","factory","baseCtor","errorComp","resolved","loading","loadingComp","contexts","forceRender","$forceUpdate","reject","reason","delay","setTimeout","timeout","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","once$$1","$once","$on","remove$1","$off","oldListeners","resolveSlots","slots","defaultSlot","functionalContext","slot","every","isWhitespace","resolveScopedSlots","initLifecycle","abstract","$parent","$children","$root","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","mountComponent","hydrating","$el","createEmptyVNode","callHook","updateComponent","_update","_render","Watcher","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","emptyObject","_parentVnode","_vnode","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","$emit","resetSchedulerState","queue","activatedChildren","waiting","flushing","flushSchedulerQueue","watcher","run","activatedQueue","updatedQueue","callActivatedHooks","callUpdateHooks","devtools","queueActivatedComponent","queueWatcher","seenObjects","_traverse","seen","isA","depId","proxy","sourceKey","sharedPropertyDefinition","initState","_watchers","methods","initMethods","initData","initComputed","initWatch","propsOptions","watchers","_computedWatchers","userDef","computedWatcherOptions","defineComputed","createComputedGetter","evaluate","createWatcher","initProvide","provide","_provided","initInjections","resolveInject","inject","hasSymbol","Reflect","ownKeys","provideKey","createFunctionalComponent","mergeProps","_context","injections","functionalOptions","createComponent","_base","cid","resolveConstructorOptions","transformModel","nativeOn","mergeHooks","createComponentInstanceForVnode","parentElm","refElm","vnodeComponentOptions","_isComponent","_componentTag","_parentElm","_refElm","inlineTemplate","hooksToMerge","fromParent","ours","componentVNodeHooks","mergeHook$1","two","callback","normalizationType","alwaysNormalize","ALWAYS_NORMALIZE","_createElement","SIMPLE_NORMALIZE","getTagNamespace","isReservedTag","parsePlatformTagName","applyNS","renderList","renderSlot","fallback","bindObject","scopedSlotFn","slotNodes","resolveFilter","checkKeyCodes","eventKeyCode","builtInAlias","keyCodes","bindObjectProps","asProp","mustUseProp","domProps","renderStatic","isInFor","tree","_staticTrees","_renderProxy","markStatic","markOnce","isOnce","markStaticNode","initRender","renderContext","_c","$createElement","initInternalComponent","super","superOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","extended","sealed","sealedOptions","dedupe","Vue$3","initUse","use","installed","unshift","initMixin$1","initExtend","Super","SuperId","cachedCtors","_Ctor","initProps$1","initComputed$1","ASSET_TYPES","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","current","cachedNode","pruneCacheEntry","componentInstance","genClassForVnode","parentNode","childNode","mergeClassData","genClassFromData","staticClass","class","dynamicClass","stringifyClass","stringified","isSVG","isUnknownElement","unknownElementCache","HTMLUnknownElement","HTMLElement","selected","querySelector","createElement$1","tagName","multiple","createElementNS","namespaceMap","createTextNode","createComment","insertBefore","newNode","referenceNode","appendChild","setTextContent","textContent","registerRef","isRemoval","refs","refInFor","sameVnode","sameInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldVnode","oldDir","dir","isCreate","emptyNode","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","updateAttrs","oldAttrs","setAttr","isIE9","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","removeAttribute","isBooleanAttr","isFalsyAttrValue","setAttributeNS","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","parseFilters","exp","pushFilter","filters","lastFilterIndex","trim","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","validDivisionCharRE","wrapFilter","baseWarn","pluckModuleFunction","_","addProp","addAttr","addDirective","arg","addHandler","important","events","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","attrsMap","attrsList","genComponentModel","valueExpression","assignment","genAssignmentCode","modelRs","parseModel","index$1","expressionPos","expressionEndPos","lastIndexOf","eof","chr","isStringStart","parseString","parseBracket","substring","inBracket","stringQuote","_warn","warn$1","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","trueValueBinding","falseValueBinding","CHECKBOX_RADIO_TOKEN","selectedVal","code","lazy","needCompositionGuard","RANGE_TOKEN","normalizeEvents","isIE","isChrome","add$1","oldHandler","target$1","ev","remove$2","supportsPassive","updateDOMListeners","updateDOMProps","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","isDirty","isInputChanged","activeElement","_vModifiers","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","getStyle","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","setProp","addClass","classList","removeClass","tar","resolveTransition","def$$1","css","autoCssTransition","nextFrame","raf","addTransitionClass","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","onEnd","styles","getComputedStyle","transitionDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","enter","toggleDisplay","_leaveCb","cancelled","transition","_enterCb","enterClass","enterToClass","enterActiveClass","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","activeInstance","transitionNode","isAppear","isRootInsert","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","pendingNode","_pending","isValidDuration","leave","rm","performLeave","beforeLeave","leaveClass","leaveActiveClass","leaveToClass","explicitLeaveDuration","afterLeave","leaveCancelled","delayLeave","invokerFns","_enter","setSelected","binding","isMultiple","getValue","selectedIndex","hasNoMatchingOption","onCompositionStart","onCompositionEnd","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","key$1","rawChild","hasParentTransition","isSameChild","oldChild","callPendingCbs","_moveCb","recordPosition","newPos","applyTranslation","oldPos","pos","moved","WebkitTransform","transitionDuration","decode","html","decoder","innerHTML","decodeAttr","shouldDecodeNewlines","re","encodedAttrWithNewLines","encodedAttr","decodingMap","parseHTML","advance","parseEndTag","lowerCasedTagName","lowerCasedTag","lastTag","expectHTML","isUnaryTag$$1","isUnaryTag","no","canBeLeftOpenTag$$1","canBeLeftOpenTag","isPlainTextElement","stackedTag","reStackedTag","reCache","RegExp","endTagLength","rest","endTag","chars","textEnd","comment","commentEnd","conditionalComment","conditionalEnd","doctypeMatch","doctype","endTagMatch","curIndex","startTagMatch","startTagOpen","startTagClose","attribute","unarySlash","isNonPhrasingTag","unary","IS_REGEX_CAPTURING_BROKEN","rest$1","parseText","delimiters","tagRE","buildRegex","defaultTagRE","tokens","lastIndex","template","endPre","element","pre","inVPre","platformIsPreTag","inPre","warn$2","platformGetTagNamespace","platformMustUseProp","isPreTag","preTransforms","transforms","postTransforms","currentParent","preserveWhitespace","guardIESVGBug","makeAttrsMap","isForbiddenTag","forbidden","processPre","processRawAttrs","processFor","processIf","processOnce","processKey","processRef","processSlot","processComponent","i$1","processAttrs","if","elseif","else","addIfCondition","block","processIfConditions","slotScope","slotTarget","i$2","lastNode","isTextTag","decodeHTMLCached","checkInFor","inMatch","forAliasRE","for","iteratorMatch","forIteratorRE","iterator1","iterator2","findPrevElement","ifConditions","slotName","isProp","dirRE","hasBindings","parseModifiers","modifierRE","bindRE","camel","onRE","argMatch","argRE","ieNSBug","ieNSPrefix","optimize","isStaticKey","genStaticKeysCached","staticKeys","isPlatformReservedTag","markStatic$1","markStaticRoots","genStaticKeys$1","static","staticInFor","staticRoot","walkThroughConditionsBlocks","conditionBlocks","isBuiltInTag","isDirectChildOfTemplateFor","genHandlers","genHandler","isMethodPath","simplePathRE","isFunctionExpression","fnExpRE","genModifierCode","modifierCode","genKeyFilter","genFilterCode","keyVal","bind$1","wrapData","generate","ast","prevStaticRenderFns","currentStaticRenderFns","prevOnceCount","onceCount","currentOptions","warn$3","transforms$1","dataGenFns","platformDirectives$1","isPlatformReservedTag$1","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genSlot","genComponent","genData","genChildren","genIfConditions","conditions","genTernaryExp","genDirectives","genProps","genScopedSlots","genInlineTemplate","needRuntime","hasRuntime","gen","baseDirectives","inlineRenderFns","genScopedSlot","genForScopedSlot","checkSkip","el$1","getNormalizationType","genNode","needsNormalization","some","maybeComponent","genText","transformSpecialNewlines","bind$$1","componentName","baseCompile","makeFunction","errors","transformNode","classBinding","genData$1","transformNode$1","styleBinding","genData$2","getOuterHTML","outerHTML","cloneNode","camelizeRE","hyphenateRE","SSR_ATTR","LIFECYCLE_HOOKS","optionMergeStrategies","productionTip","performance","ignoredElements","isReservedAttr","freeze","hasProto","UA","isEdge","isAndroid","isIOS","_isServer","_Set","VUE_ENV","Symbol","nextTickHandler","pending","copies","callbacks","timerFunc","logError","MutationObserver","counter","observer","textNode","characterData","_resolve","Set","addSub","removeSub","addDep","arrayMethods","original","observeArray","arrayKeys","getOwnPropertyNames","isSettingProps","walk","items","instanceData","defaultData","raw","uid$2","expOrFn","user","active","newDeps","depIds","newDepIds","cleanupDeps","teardown","$mount","keepAlive","mountedNode","prepatch","insert","destroy","uid$1","_uid","_self","dataDef","propsDef","$set","$delete","immediate","hookRE","cbs","prevVnode","prevActiveInstance","__patch__","__vue__","$nextTick","_o","_n","_s","_l","_q","_i","_m","_f","_k","_b","_v","_e","_u","patternTypes","KeepAlive","include","exclude","created","destroyed","builtInComponents","configDef","defineReactive","testEl","acceptValue","svg","math","isHTMLTag","nodeOps","hooks","baseModules","klass","cssText","listDelimiter","propertyDelimiter","cssVarRE","importantRE","setProperty","normalizedName","prefixes","upper","prefixed","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","requestAnimationFrame","activate","platformModules","patch","backend","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","postpatch","invokeInsertHook","initial","hydrate","hasChildNodes","childrenMatch","firstChild","isRenderedModule","isInitialPatch","isRealElement","hasAttribute","oldElm","parentElm$1","vmodel","model$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","body","offsetHeight","propertyName","_hasMove","platformComponents","content","encoded","singleAttrIdentifier","singleAttrAssign","singleAttrValues","ncname","qnameCapture","&lt;","&gt;","&quot;","&amp;","&#10;","regexEscapeRE","open","esc","tab","space","up","down","genGuard","prevent","ctrl","alt","meta","middle","cloak","klass$1","style$1","modules$1","directives$1","baseOptions","ref$1","compile","finalOptions","tips","tip$$1","compiled","compileToFunctions","functionCompileCache","fnGenErrors","idToTemplate","mount","documentElement","_assign","_assign2","__g","it","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","completeDimOpt","encodeDef","dimsDef","completeDimensions","categoryIndex","nameList","createNameList","categories","dimValueGetter","hasItemOption","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","stackable","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","angle","geo","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","DefaultDataProvider","dataArray","_array","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","hostModel","_storage","originalStorage","dimStore","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","time","DataDiffer","pure","getItem","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","isDataArray","nameDimIdx","dimensionInfoMap","size","idList","nameRepeatCount","itemName","DataCtor","stackedValue","getValues","dimData","dimExtent","getSum","rawIndex","mid","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","dimensionInfoList","wrapMethod","injectFunction","originalMethod","TRANSFERABLE_METHODS","CHANGABLE_METHODS","sysDims","applyDim","resultItem","OTHER_DIMS","coordDimNameMap","genName","fromZero","dataDimNameMap","dimCount","value0","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","dataDims","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","extra","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","roundNumber","_intervalPrecision","getInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","topologicalTravel","targetNameList","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","Chart","elSetState","toggleHighlight","dataIdx","highlight","downplay","chartProto","eval","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","rectHover","beforeBrush","afterBrush","rectContain","coord","animateStyle","useStyle","Gradient","addColorStop","TypeError","hide","$export","own","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","P","IS_BIND","IS_WRAP","W","expProto","virtual","U","cof","propertyIsEnumerable","anObject","IE8_DOM_DEFINE","toPrimitive","dP","O","Attributes","IObject","defined","getSymbolSize","symbolSize","getScale","seriesScope","updateData","driftSymbol","drift","symbolUtil","labelHelper","symbolProto","_createSymbol","symbolType","symbolPath","createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","setZ","setDraggable","_updateCommon","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","cursorStyle","getItemStyle","elStyle","setColor","opacity","valueDim","findLabelValueDim","setTextToStyle","onEmphasis","ratio","onNormal","fadeOut","WhiskerBoxDraw","seriesModelMixin","_baseAxisDim","addOrdinal","coordDims","baseAxisDimIndex","baseAxisDim","otherAxisDim","defaultValueDimensions","viewMixin","whiskerBoxDraw","_whiskerBoxDraw","getStyleUpdater","makeAxisEventDataBase","endTextLayout","textRotate","textVerticalAlign","rotationDiff","inverse","onLeft","tooltipOpt","fixMinMaxLabelShow","textEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","isTwoLabelOverlapped","labelLayout","firstRect","nextRect","mRotationBack","AxisBuilder","nameDirection","tickDirection","labelDirection","dumbGroup","updateTransform","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","lineCap","getLineStyle","axisTick","tickModel","lineStyleModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","ifIgnoreOnTick","axisLabel","axisLabelShow","labelMargin","labelRotation","labelRotate","innerTextLayout","categoryData","triggerEvent","tickVal","itemTextStyleModel","textColor","dataToCoord","labelStr","textEl","targetType","decomposeTransform","axisName","nameLocation","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","axisRotation","textRotation","rawTick","updateAxisPointer","axisView","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","axisPointerClazz","registerAxisPointerClass","gridModel","getZero","theAxis","grid","toGlobalCoord","rawAxisPosition","axisPosition","onZero","axisDim","getRect","rectBound","axisOffset","posMap","dirMap","labelInside","getLabelInterval","dataToPoint","initGlobalListeners","useHandler","dis","makeDispatchAction","records","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","pendingList","globalListener","confineInContainer","viewWidth","viewHeight","buildElStyle","axisPointerType","styleModel","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","align","verticalAlign","bgColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","buildCartesianSingleLabelElOption","textLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","xAxis","yAxis","fixExtentWithBands","nTick","normalizedExtent","onBand","_labelInterval","containData","coordToData","pointToData","alignWithLabel","bands","getBands","coords","getLabelsCoords","getBandWidth","axisExtent","isHorizontal","origin","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","getAxisType","axisModelCreator","AxisModel","gridIndex","gridId","extraOption","isAxisUsedInTheGrid","getLabelUnionRect","labelCount","isLabelIgnored","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","updateAxisTransfrom","coordBase","axisExtentSum","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","gridProto","ifAxisCanNotOnZero","axes","axesMap","_updateScale","ignoreContainLabel","adjustAxes","axesList","gridRect","getBoxLayoutParams","labelUnionRect","axisIndex","axesMapOnDim","getCartesian","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","cartesian","coordsList","createAxisCreator","axisPositionUsed","axesCount","addAxis","baseAxis","otherAxis","getOtherAxis","grids","colorIdx","colorNameMap","colorPalette","fixExtent","Triangle","Diamond","Pin","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","line","roundRect","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","lib","ORIGIN_METHOD","RATE","debounce","lastExec","getTime","timer","currCall","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","guid","Animatable","clipPath","afterUpdate","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","_getter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","PI2","normalizeRadian","LinkedList","head","tail","linkedListProto","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","leastUsedEntry","idStart","ZImage","globalImageCache","_image","cachedImgObj","onload","sWidth","sHeight","drawImage","repeat","createPattern","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","textStroke","textPositionRect","textShadowBlur","textShadowOffsetX","textShadowOffsetY","textTransform","blend","prevStyle","firstDraw","styleName","globalAlpha","globalCompositeOperation","otherStyle","canvasGradient","styleProto","smoothSpline","smoothBezier","smooth","controlPoints","smoothConstraint","cp1","cp2","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","Promise$1","executor","PENDING","deferred","promise","PromiseObj","debug","ntick","trimEnd","toLower","toUpper","getPrototypeOf","isBlob","Blob","isFormData","FormData","fulfilled","rejected","$vm","iterator","_merge","expand","variables","tmpl","expanded","vars","operators","literal","operator","variable","separator","encodeReserved","modifier","isDefined","encodeValue","isKeyOperator","encodeURIComponent","part","encodeURI","Url","options$$1","serialize","isJson","[","{","sendRequest","request","client","xhrClient","nodeClient","normalizeName","blobText","reader","FileReader","readAsText","isBlobText","Http","Client","interceptors","interceptor","Request","response","ok","Resource","resource","assign","$http","Util","http","$url","$resource","$promise","iterable","race","p$1","onResolved","onRejected","finally","urlParams","escape","documentMode","href","protocol","port","hostname","pathname","search","xdrClient","xdr","XDomainRequest","respondWith","responseText","abort","getUrl","onabort","onerror","ontimeout","onprogress","send","getBody","SUPPORTS_CORS","XMLHttpRequest","cors","orgUrl","location","reqUrl","crossOrigin","emulateHTTP","form","headers","emulateJSON","json","bodyText","jsonpClient","script","jsonp","jsonpCallback","async","before","header","common","custom","xhr","statusText","getAllResponseHeaders","row","append","progress","upload","responseType","withCredentials","credentials","setRequestHeader","resp","statusCode","statusMessage","error$$1","reqHandlers","resHandlers","Headers","getAll","deleteAll","thisArg","Response","bodyBlob","blob","COMMON_HEADERS","Accept","JSON_CONTENT_TYPE","Content-Type","post","method$$1","save","_defineProperty","_defineProperty2","$JSON","$Object","desc","toIObject","toLength","toIndex","IS_INCLUDES","$this","fromIndex","aFunction","that","is","createDesc","object","getKeys","gOPS","pIE","$assign","aLen","getSymbols","isEnum","getOwnPropertySymbols","arrayIndexOf","IE_PROTO","$keys","enumBugKeys","bitmap","shared","toInteger","valueOf","px","chartInstance","echartsAPIList","brushSelector","removeRect","animationModel","removeSector","isPolar","itemStyleModel","getBarItemStyle","labelPositionOutside","setLabel","getLineWidth","rawLayout","BAR_BORDER_WIDTH_QUERY","BarView","coordinateSystemType","isHorizontalOrRadial","elementCreator","newIndex","oldIndex","execute","rectShape","animateProperty","animateTarget","isRadial","sector","sectorShape","fixedLineWidth","signX","signY","getMarkerPosition","pt","legendHoverLink","barMinHeight","barMinAngle","getBorderLineDash","labelText","whiskerBoxCommon","CandlestickSeries","color0","borderWidth","borderColor","borderColor0","barMaxWidth","barMinWidth","barWidth","animationUpdate","animationDuration","getShadowDim","selectors","itemLayout","brushRect","itemGroup","normalItemStyleModel","whiskerEl","whiskerIndex","bodyEl","bodyIndex","CandlestickView","calculateCandleWidth","bandWidth","cDim","candleWidth","chartLayout","variableDim","constDim","vDims","getPoint","axisDimVal","addBodyEnd","point1","point2","bodyEnds","openVal","closeVal","lowestVal","highestVal","ocLow","ocHigh","ocLowPoint","ocHighPoint","lowestPoint","highestPoint","whiskerEnds","sign","initBaseline","pmin","pmax","positiveBorderColorQuery","negativeBorderColorQuery","positiveColorQuery","negativeColorQuery","eachRawSeriesByType","legendSymbol","isSeriesFiltered","seriesItem","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","SymbolCtor","newIdx","symbolEl","oldIdx","enableAnimation","WhiskerBox","styleUpdater","_createContent","transInit","makeWhiskerEndsShape","ends","WhiskerPath","pts","whiskerBoxProto","whiskerBoxDrawProto","labelDims","clipOverflow","smoothMonotone","symbol","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","getGlobalExtent","halfBandWidth","getStackedOnPoints","valueAxis","valueStart","baseDataOffset","stackedOnSameSign","stackedData","createGridClipShape","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","stepPt","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","gradient","lineAnimationDiff","polyHelper","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnSmooth","categoryAxis","getAxesByScale","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","vec2Min","vec2Max","getBoundingBox","ptMin","ptMax","stackedOnBBox","cartesianAxisHelper","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","axisBuilder","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","areaStyle","axisTrigger","link","AxisPointerModel","triggerOn","animationDurationUpdate","shadowStyle","padding","handle","icon","AxisPonterView","disopse","BaseAxisPointer","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","createIcon","handleModel","iconStr","updateMandatoryProps","eventTool","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","doClear","buildLabel","getAxisDimIndex","viewHelper","CartesianAxisPointer","otherExtent","pixelValue","pointerShapeBuilder","currPosition","cursorOtherValue","tooltipOptions","targetShape","shadow","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisId","valueLabelOpt","outputAxesInfo","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","assembleCssText","tooltipModel","zrColor","borderName","camelCase","TooltipContent","_x","_y","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","domStyle","setContent","setEnterable","enterable","getSize","viewportRoot","getViewportRoot","offsetLeft","offsetTop","isShow","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","borderRadius","animationEasingUpdate","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","confineTooltipPosition","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","layoutUtil","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","cbTicket","vAlign","viewSize","layoutRect","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","nameRotate","nameTruncate","nameTextStyle","nameGap","inside","splitLine","splitArea","timeAxis","logAxis","logBase","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","coordExtent","dimAxisMapper","_axes","Cartesian","_dimList","_dataCoordConvert","input","dimList","output","axisX","axisY","dataToPoints","containLabel","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetter","existence","_add","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","axisModelCommonMixin","createList","createScale","mixinAxisModelCommonMethods","getSeriesStackId","STACK_PREFIX","getAxisKey","getLayoutOnAxis","axisKey","stackId","widthAndOffsets","doCalBarWidthAndOffset","offsetCenter","calBarWidthAndOffset","barSeries","barGap","barCategoryGap","seriesInfoList","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barGapPercent","autoWidth","column","lastColumn","widthSum","barWidthAndOffset","getSeriesByType","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","valueAxisStart","lastCoord","lastCoordOrigin","maskColor","mask","labelRect","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","cpt","assertSeriesInitialized","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","findComponents","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","getSeriesByName","oneSeries","getSeries","rawSeriesIndex","eachRawSeries","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","platform","progressiveThreshold","useUTC","lineType","getLineDash","dotSize","dashSize","graphicUtil","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","seriesOpt","clockWise","pointerColor","dataRange","visualMap","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","markPoint","markLine","mpData","mlData","samplers","average","nearest","indexSampler","sampler","fixRoundingError","originalVal","roundingErrorFix","intervalScaleProto","mathFloor","mathCeil","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","rank","scaleHelper","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","ONE_SECOND","ONE_MINUTE","ONE_DAY","Component","componentProto","encodeColor","colorAccessPath","defaultSymbolType","itemSymbolType","itemSymbolSize","resolveProps","route","resolveQuery","extraQuery","_parseQuery","parsedQuery","parseQuery","parts","stringifyQuery","val2","createRoute","redirectedFrom","router","stringifyQuery$$1","fullPath","getFullPath","formatMatch","_stringifyQuery","isSameRoute","START","trailingSlashRE","isObjectEqual","aKeys","bKeys","isIncludedRoute","queryIncludes","guardEvent","metaKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","findAnchor","_router","_route","registerInstance","callVal","registerRouteInstance","history","View","Link","beforeRouteEnter","beforeRouteLeave","resolvePath","relative","firstChar","segment","hashIndex","queryIndex","cleanPath","defaultDelimiter","delimiter","PATH_REGEXP","escaped","prefix","asterisk","partial","optional","escapeGroup","escapeString","tokensToFunction","encodeURIComponentPretty","encodeAsterisk","pretty","token","attachKeys","flags","sensitive","regexpToRegexp","groups","arrayToRegexp","pathToRegexp","stringToRegexp","tokensToRegExp","endsWithDelimiter","fillParams","routeMsg","regexpCompileCache","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","normalizedPath","normalizePath","regex","compileRouteRegex","redirect","childMatchAs","aliasRoute","normalizeLocation","_normalized","rawPath","parsedPath","basePath","createMatcher","addRoutes","currentRoute","paramNames","_createRoute","record$1","matchRoute","originalRedirect","resolveRecordPath","aliasedPath","aliasedMatch","aliasedRecord","decodeURIComponent","setupScroll","saveScrollPosition","setStateKey","handleScroll","isPop","app","behavior","scrollBehavior","getScrollPosition","shouldScroll","selector","getElementPosition","isValidPosition","normalizePosition","scrollTo","getStateKey","positionStore","pageXOffset","pageYOffset","docEl","docRect","elRect","isNumber","genKey","Time","now","_key","pushState","runQueue","normalizeBase","baseEl","resolveQueue","activated","deactivated","extractGuards","guards","flatMapComponents","instance","guard","extractGuard","flatten","extractLeaveGuards","bindGuard","extractUpdateHooks","extractEnterGuards","isValid","bindEnterGuard","poll","resolveAsyncComponents","hasAsync","resolvedDef","isError","getLocation","checkFallback","ensureSlash","getHash","replaceHash","pushHash","registerHook","createHref","routerView","$route","_routerViewCache","depth","inactive","routerViewDepth","encodeReserveRE","encodeReserveReplacer","commaRE","toTypes","eventTypes","required","exact","exactActiveClass","$router","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","click","parse_1","compile_1","tokensToFunction_1","tokensToRegExp_1","supportsPushState","History","ready","readyCbs","readyErrorCbs","errorCbs","listen","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","beforeHooks","postEnterCbs","resolveHooks","afterHooks","HTML5History","History$$1","expectScroll","go","fromRoute","getCurrentLocation","HashHistory","setupListeners","AbstractHistory","targetIndex","VueRouter","apps","matcher","setupHashListener","beforeEach","beforeResolve","afterEach","back","forward","getMatchedComponents","normalizedTo","parentId","newStyles","sourceMap","makeEventPacket","eveType","targetInfo","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","Handler","painterRoot","_hovered","_lastTouchMoment","mousemove","lastHovered","hovered","hoveredTarget","lastHoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","toElement","relatedTarget","eventArgs","setCursorStyle","eventHandler","eventPacket","eachOtherLayer","layer","hoverCheckResult","_downel","_upel","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","fillRect","restore","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","clipPaths","prevClipPaths","doClip","createRoot","domRoot","Painter","singleCanvas","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","paintAll","_paintList","refreshHover","_startProgessive","__hoverMir","elMirror","__from","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","originalEl","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","prevDom","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","clearLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","displayList","whIdx","cwh","plt","prb","pathToImage","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","shapeCompareFunc","Storage","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","addRoot","delRoot","_renderList","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_a","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","windingLine","cubic","quadratic","pointPair","center","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","extremity","fromPoints","xDim","yDim","tx","ty","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","handlerDomProxyProto","paths","_updatePathDirty","globalCoord","strokeText","fillText","r1","r2","r3","r4","total","v2Min","v2Max","v2Scale","v2Distance","v2Add","isLoop","constraint","prevPoint","nextPoint","cps","d0","interpolate","segs","w2","w3","maxValue","baseline","textShadowColor","unitX","unitY","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","curveTool","pointAt","tangentAt","roundRectHelper","shadowTemp","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","vMag","pathEls","pathEl","pathBundle","nPoint","mathAtan2","delInstance","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","rendererType","vml","handerProxy","_needsRefresh","oldDelFromStorage","oldAddToStorage","zLevel","_needsRefreshHover","refreshHoverImmediately","clearAnimation","cssWithMappingToString","useSourceMap","cssMapping","btoa","sourceMapping","toComment","sources","sourceRoot","unescape","mediaQuery","alreadyImportedModules","addStylesToDom","stylesInDom","addStyle","createStyleElement","styleElement","isProduction","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","styleSheet","replaceText","cssNode","childNodes","hasDocument","DEBUG","listToStyles","getElementsByTagName","_isProduction","mayRemove","textStore","replacement"],"mappings":"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","file":"static/js/vendor.ba119d3926f7c36c930b.js","sourcesContent":["webpackJsonp([1],[\n/* 0 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 2 */,\n/* 3 */,\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(13);\n\n    var GlobalModel = __webpack_require__(254);\n    var ExtensionAPI = __webpack_require__(214);\n    var CoordinateSystemManager = __webpack_require__(54);\n    var OptionManager = __webpack_require__(255);\n\n    var ComponentModel = __webpack_require__(18);\n    var SeriesModel = __webpack_require__(37);\n\n    var ComponentView = __webpack_require__(268);\n    var ChartView = __webpack_require__(61);\n    var graphic = __webpack_require__(6);\n    var modelUtil = __webpack_require__(10);\n    var throttle = __webpack_require__(92);\n\n    var zrender = __webpack_require__(496);\n    var zrUtil = __webpack_require__(0);\n    var colorTool = __webpack_require__(31);\n    var Eventful = __webpack_require__(30);\n    var timsort = __webpack_require__(66);\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.6.2',\n        dependencies: {\n            zrender: '3.5.2'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(269));\n    echarts.registerPreprocessor(__webpack_require__(262));\n    echarts.registerLoading('default', __webpack_require__(253));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = __webpack_require__(57);\n    echarts.Model = __webpack_require__(14);\n\n    echarts.Axis = __webpack_require__(85);\n\n    echarts.graphic = __webpack_require__(6);\n    echarts.number = __webpack_require__(9);\n    echarts.format = __webpack_require__(15);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(25);\n    echarts.vector = __webpack_require__(12);\n    echarts.color = __webpack_require__(31);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = __webpack_require__(250);\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(65)))\n\n/***/ }),\n/* 5 */,\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var pathTool = __webpack_require__(494);\n    var Path = __webpack_require__(11);\n    var colorTool = __webpack_require__(31);\n    var matrix = __webpack_require__(25);\n    var vector = __webpack_require__(12);\n    var Transformable = __webpack_require__(116);\n    var BoundingRect = __webpack_require__(17);\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(47);\n\n    graphic.Image = __webpack_require__(112);\n\n    graphic.Text = __webpack_require__(478);\n\n    graphic.Circle = __webpack_require__(485);\n\n    graphic.Sector = __webpack_require__(491);\n\n    graphic.Ring = __webpack_require__(490);\n\n    graphic.Polygon = __webpack_require__(487);\n\n    graphic.Polyline = __webpack_require__(488);\n\n    graphic.Rect = __webpack_require__(489);\n\n    graphic.Line = __webpack_require__(486);\n\n    graphic.BezierCurve = __webpack_require__(484);\n\n    graphic.Arc = __webpack_require__(483);\n\n    graphic.CompoundPath = __webpack_require__(475);\n\n    graphic.LinearGradient = __webpack_require__(476);\n\n    graphic.RadialGradient = __webpack_require__(477);\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    graphic.getFont = function (opt, ecModel) {\n        var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n/* 7 */,\n/* 8 */,\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(15);\n    var nubmerUtil = __webpack_require__(9);\n    var Model = __webpack_require__(14);\n    var zrUtil = __webpack_require__(0);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(67);\n    var zrUtil = __webpack_require__(0);\n    var PathProxy = __webpack_require__(48);\n    var pathContain = __webpack_require__(469);\n\n    var Pattern = __webpack_require__(113);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var clazzUtil = __webpack_require__(16);\n    var env = __webpack_require__(13);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(260));\n    mixin(Model, __webpack_require__(257));\n    mixin(Model, __webpack_require__(261));\n    mixin(Model, __webpack_require__(259));\n\n    module.exports = Model;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var numberUtil = __webpack_require__(9);\n    var textContain = __webpack_require__(23);\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(12);\n    var matrix = __webpack_require__(25);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(14);\n    var zrUtil = __webpack_require__(0);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(60);\n    var clazzUtil = __webpack_require__(16);\n    var layout = __webpack_require__(27);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(258));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n/* 19 */,\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(186), __esModule: true };\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    __webpack_require__(88);\n\n    __webpack_require__(215);\n    __webpack_require__(216);\n\n    var barLayoutGrid = __webpack_require__(251);\n    var echarts = __webpack_require__(4);\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    __webpack_require__(84);\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(266);\n    var IntervalScale = __webpack_require__(59);\n    __webpack_require__(267);\n    __webpack_require__(265);\n    var Scale = __webpack_require__(39);\n\n    var numberUtil = __webpack_require__(9);\n    var zrUtil = __webpack_require__(0);\n    var textContain = __webpack_require__(23);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: scale.type === 'interval' ? model.get('minInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = __webpack_require__(0);\n    var BoundingRect = __webpack_require__(17);\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(12);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n/* 26 */,\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(0);\n    var BoundingRect = __webpack_require__(17);\n    var numberUtil = __webpack_require__(9);\n    var formatUtil = __webpack_require__(15);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n/***/ }),\n/* 28 */,\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(30);\n    var env = __webpack_require__(13);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = __webpack_require__(109);\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\nvar core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(51)(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var echarts = __webpack_require__(4);\n    var PRIORITY = echarts.PRIORITY;\n\n    __webpack_require__(228);\n    __webpack_require__(229);\n\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(270), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(252), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        __webpack_require__(264), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    __webpack_require__(84);\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var Model = __webpack_require__(14);\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(\n                    labelOption.textStyle || (labelOption.textStyle = {}),\n                    crossStyle.textStyle\n                );\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(234);\n\n    __webpack_require__(241);\n\n    __webpack_require__(242);\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(4).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(4).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var formatUtil = __webpack_require__(15);\n    var classUtil = __webpack_require__(16);\n    var modelUtil = __webpack_require__(10);\n    var ComponentModel = __webpack_require__(18);\n    var colorPaletteMixin = __webpack_require__(89);\n    var env = __webpack_require__(13);\n    var layout = __webpack_require__(27);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(0);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(16);\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n/* 40 */,\n/* 41 */,\n/* 42 */,\n/* 43 */,\n/* 44 */,\n/* 45 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Store */\n/* unused harmony export mapState */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return mapMutations; });\n/* unused harmony export mapGetters */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return mapActions; });\n/**\n * vuex v2.3.0\n * (c) 2017 Evan You\n * @license MIT\n */\nvar applyMixin = function (Vue) {\n  var version = Number(Vue.version.split('.')[0]);\n\n  if (version >= 2) {\n    var usesInit = Vue.config._lifecycleHooks.indexOf('init') > -1;\n    Vue.mixin(usesInit ? { init: vuexInit } : { beforeCreate: vuexInit });\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      if ( options === void 0 ) options = {};\n\n      options.init = options.init\n        ? [vuexInit].concat(options.init)\n        : vuexInit;\n      _init.call(this, options);\n    };\n  }\n\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n  function vuexInit () {\n    var options = this.$options;\n    // store injection\n    if (options.store) {\n      this.$store = options.store;\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store;\n    }\n  }\n};\n\nvar devtoolHook =\n  typeof window !== 'undefined' &&\n  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nfunction devtoolPlugin (store) {\n  if (!devtoolHook) { return }\n\n  store._devtoolHook = devtoolHook;\n\n  devtoolHook.emit('vuex:init', store);\n\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState);\n  });\n\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state);\n  });\n}\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\n\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime;\n  this._children = Object.create(null);\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors$1 = { namespaced: {} };\n\nprototypeAccessors$1.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors$1 );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  var this$1 = this;\n\n  // register root module (Vuex.Store options)\n  this.root = new Module(rawRootModule, false);\n\n  // register all nested modules\n  if (rawRootModule.modules) {\n    forEachValue(rawRootModule.modules, function (rawModule, key) {\n      this$1.register([key], rawModule, false);\n    });\n  }\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update(this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  var parent = this.get(path.slice(0, -1));\n  var newModule = new Module(rawModule, runtime);\n  parent.addChild(path[path.length - 1], newModule);\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n  if (!parent.getChild(key).runtime) { return }\n\n  parent.removeChild(key);\n};\n\nfunction update (targetModule, newModule) {\n  // update target module\n  targetModule.update(newModule);\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        console.warn(\n          \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n          'manual reload is needed'\n        );\n        return\n      }\n      update(targetModule.getChild(key), newModule.modules[key]);\n    }\n  }\n}\n\nvar Vue; // bind on install\n\nvar Store = function Store (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\");\n  assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n\n  var state = options.state; if ( state === void 0 ) state = {};\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\n  // store internal state\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._watcherVM = new Vue();\n\n  // bind commit and dispatch to self\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n  this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  };\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n  };\n\n  // strict mode\n  this.strict = strict;\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root);\n\n  // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreVM(this, state);\n\n  // apply plugins\n  plugins.concat(devtoolPlugin).forEach(function (plugin) { return plugin(this$1); });\n};\n\nvar prototypeAccessors = { state: {} };\n\nprototypeAccessors.state.get = function () {\n  return this._vm._data.$$state\n};\n\nprototypeAccessors.state.set = function (v) {\n  assert(false, \"Use store.replaceState() to explicit replace store state.\");\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload };\n  var entry = this._mutations[type];\n  if (!entry) {\n    console.error((\"[vuex] unknown mutation type: \" + type));\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload);\n    });\n  });\n  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });\n\n  if (options && options.silent) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    );\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var entry = this._actions[type];\n  if (!entry) {\n    console.error((\"[vuex] unknown action type: \" + type));\n    return\n  }\n  return entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload)\n};\n\nStore.prototype.subscribe = function subscribe (fn) {\n  var subs = this._subscribers;\n  if (subs.indexOf(fn) < 0) {\n    subs.push(fn);\n  }\n  return function () {\n    var i = subs.indexOf(fn);\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  }\n};\n\nStore.prototype.watch = function watch (getter, cb, options) {\n    var this$1 = this;\n\n  assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm._data.$$state = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule) {\n  if (typeof path === 'string') { path = [path]; }\n  assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  this._modules.register(path, rawModule);\n  installModule(this, this.state, path, this._modules.get(path));\n  // reset store to update getters...\n  resetStoreVM(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1 = this;\n\n  if (typeof path === 'string') { path = [path]; }\n  assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  this._modules.unregister(path);\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1));\n    Vue.delete(parentState, path[path.length - 1]);\n  });\n  resetStore(this);\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions);\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors );\n\nfunction resetStore (store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state;\n  // init all modules\n  installModule(store, state, [], store._modules.root, true);\n  // reset vm\n  resetStoreVM(store, state, hot);\n}\n\nfunction resetStoreVM (store, state, hot) {\n  var oldVm = store._vm;\n\n  // bind store public getters\n  store.getters = {};\n  var wrappedGetters = store._wrappedGetters;\n  var computed = {};\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    computed[key] = function () { return fn(store); };\n    Object.defineProperty(store.getters, key, {\n      get: function () { return store._vm[key]; },\n      enumerable: true // for local getters\n    });\n  });\n\n  // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  store._vm = new Vue({\n    data: {\n      $$state: state\n    },\n    computed: computed\n  });\n  Vue.config.silent = silent;\n\n  // enable strict mode for new vm\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldVm) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldVm._data.$$state = null;\n      });\n    }\n    Vue.nextTick(function () { return oldVm.$destroy(); });\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n  var namespace = store._modules.getNamespace(path);\n\n  // register in namespace map\n  if (module.namespaced) {\n    store._modulesNamespaceMap[namespace] = module;\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n    store._withCommit(function () {\n      Vue.set(parentState, moduleName, module.state);\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n\n  module.forEachAction(function (action, key) {\n    var namespacedType = namespace + key;\n    registerAction(store, namespacedType, action, local);\n  });\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace, path) {\n  var noNamespace = namespace === '';\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (!store._actions[type]) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (!store._mutations[type]) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  };\n\n  // getters and state object must be gotten lazily\n  // because they will be changed by vm update\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace\n        ? function () { return store.getters; }\n        : function () { return makeLocalGetters(store, namespace); }\n    },\n    state: {\n      get: function () { return getNestedState(store.state, path); }\n    }\n  });\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  var gettersProxy = {};\n\n  var splitPos = namespace.length;\n  Object.keys(store.getters).forEach(function (type) {\n    // skip if the target getter is not match this namespace\n    if (type.slice(0, splitPos) !== namespace) { return }\n\n    // extract local getter type\n    var localType = type.slice(splitPos);\n\n    // Add a port to the getters proxy.\n    // Define as getter property because\n    // we do not want to evaluate the getters in this time.\n    Object.defineProperty(gettersProxy, localType, {\n      get: function () { return store.getters[type]; },\n      enumerable: true\n    });\n  });\n\n  return gettersProxy\n}\n\nfunction registerMutation (store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler (payload) {\n    handler(local.state, payload);\n  });\n}\n\nfunction registerAction (store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler (payload, cb) {\n    var res = handler({\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload, cb);\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n        throw err\n      })\n    } else {\n      return res\n    }\n  });\n}\n\nfunction registerGetter (store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    console.error((\"[vuex] duplicate getter key: \" + type));\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      local.state, // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  };\n}\n\nfunction enableStrictMode (store) {\n  store._vm.$watch(function () { return this._data.$$state }, function () {\n    assert(store._committing, \"Do not mutate vuex store state outside mutation handlers.\");\n  }, { deep: true, sync: true });\n}\n\nfunction getNestedState (state, path) {\n  return path.length\n    ? path.reduce(function (state, key) { return state[key]; }, state)\n    : state\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  assert(typeof type === 'string', (\"Expects string as the type, but found \" + (typeof type) + \".\"));\n\n  return { type: type, payload: payload, options: options }\n}\n\nfunction install (_Vue) {\n  if (Vue) {\n    console.error(\n      '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n    );\n    return\n  }\n  Vue = _Vue;\n  applyMixin(Vue);\n}\n\n// auto install in dist mode\nif (typeof window !== 'undefined' && window.Vue) {\n  install(window.Vue);\n}\n\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n        if (!module) {\n          return\n        }\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      if (namespace && !getModuleByNamespace(this.$store, 'mapMutations', namespace)) {\n        return\n      }\n      return this.$store.commit.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedGetter () {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return\n      }\n      if (!(val in this.$store.getters)) {\n        console.error((\"[vuex] unknown getter: \" + val));\n        return\n      }\n      return this.$store.getters[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      if (namespace && !getModuleByNamespace(this.$store, 'mapActions', namespace)) {\n        return\n      }\n      return this.$store.dispatch.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nfunction normalizeMap (map) {\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n    return fn(namespace, map)\n  }\n}\n\nfunction getModuleByNamespace (store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n  if (!module) {\n    console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace));\n  }\n  return module\n}\n\nvar index_esm = {\n  Store: Store,\n  install: install,\n  version: '2.3.0',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (index_esm);\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var Element = __webpack_require__(105);\n    var BoundingRect = __webpack_require__(17);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(24);\n    var vec2 = __webpack_require__(12);\n    var bbox = __webpack_require__(473);\n    var BoundingRect = __webpack_require__(17);\n    var dpr = __webpack_require__(46).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.3.4\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nvar _toString = Object.prototype.toString;\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      return JSON.stringify(a) === JSON.stringify(b)\n    } catch (e) {\n      // possible circular reference\n      return a === b\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"production\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName = (null); // work around flow check\n\nif (false) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'string'\n      ? vm\n      : typeof vm === 'function' && vm.options\n        ? vm.options.name\n        : vm._isVue\n          ? vm.$options.name || vm.$options._componentTag\n          : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  var generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (false) {\n      warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    } )); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) {\n        try {\n          cb.call(ctx);\n        } catch (e) {\n          handleError(e, ctx, 'nextTick');\n        }\n      } else if (_resolve) {\n        _resolve(ctx);\n      }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve, reject) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && typeof key === 'number') {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target ).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && typeof key === 'number') {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target ).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      \"production\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (false) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (false) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    valid = typeof value === expectedType.toLowerCase();\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (false) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      for (var i = 0; i < fns.length; i++) {\n        fns[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      \"production\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (false) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        (last).text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      \"production\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                 false\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && isDef(c.componentOptions)) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (false) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      child.data && child.data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // remove reference to DOM nodes (prevents leak)\n    vm.$options._parentElm = vm.$options._refElm = null;\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (false) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (false) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    if (false) {\n      observerState.isSettingProps = true;\n    }\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    if (false) {\n      observerState.isSettingProps = false;\n    }\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (false) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdateHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdateHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"production\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  if (this.user) {\n    try {\n      value = this.getter.call(vm, vm);\n    } catch (e) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    }\n  } else {\n    value = this.getter.call(vm, vm);\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = {\n  key: 1,\n  ref: 1,\n  slot: 1\n};\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (false) {\n      if (isReservedProp[key] || config.isReservedAttr(key)) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"production\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      \"production\" !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(keys[i])) {\n      proxy(vm, \"_data\", keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (false) {\n      if (getter === undefined) {\n        warn(\n          (\"No getter function has been defined for computed property \\\"\" + key + \"\\\".\"),\n          vm\n        );\n        getter = noop;\n      }\n    }\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (false) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (false) {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (false) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (false) {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    // isArray here\n    var isArray = Array.isArray(inject);\n    var result = Object.create(null);\n    var keys = isArray\n      ? inject\n      : hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = isArray ? key : inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || {});\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    data: data,\n    props: props,\n    children: children,\n    parent: context,\n    listeners: data.on || {},\n    injections: resolveInject(Ctor.options.inject, context),\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    vnode.functionalOptions = Ctor.options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (false) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (isUndef(Ctor.cid)) {\n    Ctor = resolveAsyncComponent(Ctor, baseCtor, context);\n    if (Ctor === undefined) {\n      // return nothing if this is indeed an async component\n      // wait for the callback to trigger parent update.\n      return\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    \"production\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && isUndef(child.ns)) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      extend(props, bindObject);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && \"production\" !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      for (var key in value) {\n        if (key === 'class' || key === 'style') {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n        }\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (false) {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (false) {\n      startTag = \"vue-perf-init:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (false) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(((vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (false\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return this\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (false) {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, current, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        if (cachedNode !== current) {\n          pruneCacheEntry(cachedNode);\n        }\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.3.4';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (isUndef(value)) {\n    return ''\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  var res = '';\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (isDef(value[i])) {\n        if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"production\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key &&\n    a.tag === b.tag &&\n    a.isComment === b.isComment &&\n    isDef(a.data) === isDef(b.data) &&\n    sameInputType(a, b)\n  )\n}\n\n// Some browsers do not support dynamically changing type for <input>\n// so they need to be treated as different nodes\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (isDef(parent)) {\n      if (isDef(ref)) {\n        if (ref.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.elm = oldVnode.elm;\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (false) {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (false\n            ) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    false\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return \"var $$exp = \" + (modelRs.exp) + \", $$idx = \" + (modelRs.idx) + \";\" +\n      \"if (!Array.isArray($$exp)){\" +\n        value + \"=\" + assignment + \"}\" +\n      \"else{$$exp.splice($$idx, 1, \" + assignment + \")}\"\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (false) {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (false) {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number || type === 'number') {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  if (once$$1) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if ((isDef(modifiers) && modifiers.number) || elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likley wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text' || el.type === 'password') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"production\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (false) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (false\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\">\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar decoder;\n\nfunction decode (html) {\n  decoder = decoder || document.createElement('div');\n  decoder.innerHTML = html;\n  return decoder.textContent\n}\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          continue\n        }\n      }\n\n      var text = (void 0), rest$1 = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest$1 = html.slice(textEnd);\n        while (\n          !endTag.test(rest$1) &&\n          !startTagOpen.test(rest$1) &&\n          !comment.test(rest$1) &&\n          !conditionalComment.test(rest$1)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest$1.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest$1 = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var endTagLength = 0;\n      var rest = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest.length;\n      html = rest;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (false) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (false\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformIsPreTag = options.isPreTag || no;\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"production\" !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (false) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (false) {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (false) {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (false) {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      \"production\" !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (false) {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (false) {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (false) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (false) {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (false) {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      false\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      walkThroughConditionsBlocks(node.ifConditions, isInFor);\n    }\n  }\n}\n\nfunction walkThroughConditionsBlocks (conditionBlocks, isInFor) {\n  for (var i = 1, len = conditionBlocks.length; i < len; i++) {\n    markStaticRoots(conditionBlocks[i].block, isInFor);\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (false\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n// configurable state\nvar warn$3;\nvar transforms$1;\nvar dataGenFns;\nvar platformDirectives$1;\nvar isPlatformReservedTag$1;\nvar staticRenderFns;\nvar onceCount;\nvar currentOptions;\n\nfunction generate (\n  ast,\n  options\n) {\n  // save previous staticRenderFns so generate calls can be nested\n  var prevStaticRenderFns = staticRenderFns;\n  var currentStaticRenderFns = staticRenderFns = [];\n  var prevOnceCount = onceCount;\n  onceCount = 0;\n  currentOptions = options;\n  warn$3 = options.warn || baseWarn;\n  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');\n  dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  platformDirectives$1 = options.directives || {};\n  isPlatformReservedTag$1 = options.isReservedTag || no;\n  var code = ast ? genElement(ast) : '_c(\"div\")';\n  staticRenderFns = prevStaticRenderFns;\n  onceCount = prevOnceCount;\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: currentStaticRenderFns\n  }\n}\n\nfunction genElement (el) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el);\n    } else {\n      var data = el.plain ? undefined : genData(el);\n\n      var children = el.inlineTemplate ? null : genChildren(el, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < transforms$1.length; i++) {\n      code = transforms$1[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el) {\n  el.staticProcessed = true;\n  staticRenderFns.push((\"with(this){return \" + (genElement(el)) + \"}\"));\n  return (\"_m(\" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      \"production\" !== 'production' && warn$3(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el)\n    }\n    return (\"_o(\" + (genElement(el)) + \",\" + (onceCount++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el)\n  }\n}\n\nfunction genIf (el) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice())\n}\n\nfunction genIfConditions (conditions) {\n  if (!conditions.length) {\n    return '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return el.once ? genOnce(el) : genElement(el)\n  }\n}\n\nfunction genFor (el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (\n    false\n  ) {\n    warn$3(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genElement(el)) +\n    '})'\n}\n\nfunction genData (el) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < dataGenFns.length; i++) {\n    data += dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, warn$3)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, warn$3)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  return data\n}\n\nfunction genDirectives (el) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, warn$3);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el) {\n  var ast = el.children[0];\n  if (false) {\n    warn$3('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, currentOptions);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (slots) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) { return genScopedSlot(key, slots[key]); }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (key, el) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el)\n  }\n  return \"{key:\" + key + \",fn:function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el) || 'void 0'\n      : genElement(el)) + \"}}\"\n}\n\nfunction genForScopedSlot (key, el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el)) +\n    '})'\n}\n\nfunction genChildren (el, checkSkip) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return genElement(el$1)\n    }\n    var normalizationType = checkSkip ? getNormalizationType(children) : 0;\n    return (\"[\" + (children.map(genNode).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (children) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction maybeComponent (el) {\n  return !isPlatformReservedTag$1(el.tag)\n}\n\nfunction genNode (node) {\n  if (node.type === 1) {\n    return genElement(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genSlot (el) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (componentName, el) {\n  var children = el.inlineTemplate ? null : genChildren(el, true);\n  return (\"_c(\" + componentName + \",\" + (genData(el)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n}\n\nfunction makeFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompiler (baseOptions) {\n  var functionCompileCache = Object.create(null);\n\n  function compile (\n    template,\n    options\n  ) {\n    var finalOptions = Object.create(baseOptions);\n    var errors = [];\n    var tips = [];\n    finalOptions.warn = function (msg, tip$$1) {\n      (tip$$1 ? tips : errors).push(msg);\n    };\n\n    if (options) {\n      // merge custom modules\n      if (options.modules) {\n        finalOptions.modules = (baseOptions.modules || []).concat(options.modules);\n      }\n      // merge custom directives\n      if (options.directives) {\n        finalOptions.directives = extend(\n          Object.create(baseOptions.directives),\n          options.directives\n        );\n      }\n      // copy other options\n      for (var key in options) {\n        if (key !== 'modules' && key !== 'directives') {\n          finalOptions[key] = options[key];\n        }\n      }\n    }\n\n    var compiled = baseCompile(template, finalOptions);\n    if (false) {\n      errors.push.apply(errors, detectErrors(compiled.ast));\n    }\n    compiled.errors = errors;\n    compiled.tips = tips;\n    return compiled\n  }\n\n  function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (false) {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (functionCompileCache[key]) {\n      return functionCompileCache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (false) {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = makeFunction(compiled.render, fnGenErrors);\n    var l = compiled.staticRenderFns.length;\n    res.staticRenderFns = new Array(l);\n    for (var i = 0; i < l; i++) {\n      res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i], fnGenErrors);\n    }\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (false) {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (functionCompileCache[key] = res)\n  }\n\n  return {\n    compile: compile,\n    compileToFunctions: compileToFunctions\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (false) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData$1\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (false) {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$2 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$2\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    \"production\" !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (false) {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Vue$3);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(65)))\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _assign = __webpack_require__(183);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports) {\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(4);\n\n    __webpack_require__(220);\n    __webpack_require__(221);\n\n    echarts.registerPreprocessor(\n        __webpack_require__(224)\n    );\n\n    echarts.registerVisual(__webpack_require__(223));\n    echarts.registerLayout(__webpack_require__(222));\n\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(57);\n    var completeDimensions = __webpack_require__(58);\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(10);\n    var CoordinateSystem = __webpack_require__(54);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(14);\n    var DataDiffer = __webpack_require__(249);\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(10);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(65)))\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(10);\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(9);\n    var formatUtil = __webpack_require__(15);\n    var Scale = __webpack_require__(39);\n    var helper = __webpack_require__(90);\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         */\n        niceTicks: function (splitNumber, minInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval);\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval=false]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var clazz = __webpack_require__(16);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(47);\n    var componentUtil = __webpack_require__(60);\n    var clazzUtil = __webpack_require__(16);\n    var modelUtil = __webpack_require__(10);\n    var zrUtil = __webpack_require__(0);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n/* 62 */,\n/* 63 */,\n/* 64 */,\n/* 65 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var Style = __webpack_require__(114);\n\n    var Element = __webpack_require__(105);\n    var RectText = __webpack_require__(482);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n/* 69 */,\n/* 70 */\n/***/ (function(module, exports) {\n\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global    = __webpack_require__(52)\n  , core      = __webpack_require__(32)\n  , ctx       = __webpack_require__(193)\n  , hide      = __webpack_require__(197)\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(192);\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject       = __webpack_require__(190)\n  , IE8_DOM_DEFINE = __webpack_require__(198)\n  , toPrimitive    = __webpack_require__(210)\n  , dP             = Object.defineProperty;\n\nexports.f = __webpack_require__(33) ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports) {\n\n// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__(72)\n  , defined = __webpack_require__(70);\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var symbolUtil = __webpack_require__(91);\n    var graphic = __webpack_require__(6);\n    var numberUtil = __webpack_require__(9);\n    var labelHelper = __webpack_require__(227);\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n        var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n            cursorStyle = itemModel.getShallow('cursor');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        cursorStyle && symbolPath.attr('cursor', cursorStyle);\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        var valueDim = labelHelper.findLabelValueDim(data);\n        labelHelper.setTextToStyle(\n            data, idx, valueDim, elStyle, seriesModel, labelModel, color\n        );\n        labelHelper.setTextToStyle(\n            data, idx, valueDim, hoverItemStyle, seriesModel, hoverLabelModel, color\n        );\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(57);\n    var completeDimensions = __webpack_require__(58);\n    var WhiskerBoxDraw = __webpack_require__(226);\n    var zrUtil = __webpack_require__(0);\n\n    var seriesModelMixin = {\n\n        /**\n         * @private\n         * @type {string}\n         */\n        _baseAxisDim: null,\n\n        /**\n         * @override\n         */\n        getInitialData: function (option, ecModel) {\n            // When both types of xAxis and yAxis are 'value', layout is\n            // needed to be specified by user. Otherwise, layout can be\n            // judged by which axis is category.\n\n            var categories;\n\n            var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n            var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n            var addOrdinal;\n\n            // FIXME\n            // 考虑时间轴\n\n            if (xAxisType === 'category') {\n                option.layout = 'horizontal';\n                categories = xAxisModel.getCategories();\n                addOrdinal = true;\n            }\n            else if (yAxisType  === 'category') {\n                option.layout = 'vertical';\n                categories = yAxisModel.getCategories();\n                addOrdinal = true;\n            }\n            else {\n                option.layout = option.layout || 'horizontal';\n            }\n\n            var coordDims = ['x', 'y'];\n            var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n            var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n            var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n            var data = option.data;\n\n            addOrdinal && zrUtil.each(data, function (item, index) {\n                zrUtil.isArray(item) && item.unshift(index);\n            });\n\n            var dimensions = [{\n                name: baseAxisDim,\n                otherDims: {\n                    tooltip: false\n                },\n                dimsDef: ['base']\n            }, {\n                name: otherAxisDim,\n                dimsDef: this.defaultValueDimensions.slice()\n            }];\n\n            dimensions = completeDimensions(dimensions, data, {\n                encodeDef: this.get('encode'),\n                dimsDef: this.get('dimensions')\n            });\n\n            var list = new List(dimensions, this);\n            list.initData(data, categories ? categories.slice() : null);\n\n            return list;\n        },\n\n        /**\n         * If horizontal, base axis is x, otherwise y.\n         * @override\n         */\n        getBaseAxis: function () {\n            var dim = this._baseAxisDim;\n            return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n        }\n\n    };\n\n    var viewMixin = {\n\n        init: function () {\n            /**\n             * Old data.\n             * @private\n             * @type {module:echarts/chart/helper/WhiskerBoxDraw}\n             */\n            var whiskerBoxDraw = this._whiskerBoxDraw = new WhiskerBoxDraw(\n                this.getStyleUpdater()\n            );\n            this.group.add(whiskerBoxDraw.group);\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            this._whiskerBoxDraw.updateData(seriesModel.getData());\n        },\n\n        remove: function (ecModel) {\n            this._whiskerBoxDraw.remove();\n        }\n    };\n\n    module.exports = {\n        seriesModelMixin: seriesModelMixin,\n        viewMixin: viewMixin\n    };\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var formatUtil = __webpack_require__(15);\n    var graphic = __webpack_require__(6);\n    var Model = __webpack_require__(14);\n    var numberUtil = __webpack_require__(9);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(12);\n    var matrix = __webpack_require__(25);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function'\n                            ? textColor(\n                                // (1) In category axis with data zoom, tick is not the original\n                                // index of axis.data. So tick should not be exposed to user\n                                // in category axis.\n                                // (2) Compatible with previous version, which always returns labelStr.\n                                // But in interval scale labelStr is like '223,445', which maked\n                                // user repalce ','. So we modify it to return original val but remain\n                                // it as 'string' to avoid error in replacing.\n                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                                index\n                            )\n                            : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.textVerticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisPointerModelHelper = __webpack_require__(35);\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = __webpack_require__(4).extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(10);\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(13);\n    var zrUtil = __webpack_require__(0);\n    var get = __webpack_require__(10).makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(6);\n    var textContain = __webpack_require__(23);\n    var formatUtil = __webpack_require__(15);\n    var matrix = __webpack_require__(25);\n    var axisHelper = __webpack_require__(22);\n    var AxisBuilder = __webpack_require__(78);\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var textStyleModel = labelModel.getModel('textStyle');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = textStyleModel.getFont();\n        var textRect = textContain.getBoundingRect(\n            text, font, labelPos.textAlign, labelPos.textBaseline\n        );\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            style: {\n                text: text,\n                textFont: font,\n                textFill: textStyleModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(6);\n    var zrUtil = __webpack_require__(0);\n    var echarts = __webpack_require__(4);\n\n    __webpack_require__(88);\n\n    __webpack_require__(232);\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(9);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(0);\n    var axisHelper = __webpack_require__(22);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getModel('textStyle').getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var axisHelper = __webpack_require__(22);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var ComponentModel = __webpack_require__(18);\n    var zrUtil = __webpack_require__(0);\n    var axisModelCreator = __webpack_require__(244);\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(86));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = __webpack_require__(27);\n    var axisHelper = __webpack_require__(22);\n\n    var zrUtil = __webpack_require__(0);\n    var Cartesian2D = __webpack_require__(247);\n    var Axis2D = __webpack_require__(245);\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    __webpack_require__(248);\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (\n                        axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis)\n                    )) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (!ignoreContainLabel && gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            // dataSampling requires axis extent, so resize\n            // should be performed in create stage.\n            grid.resize(gridModel, api, true);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    __webpack_require__(54).register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(16);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * For testable.\n */\n\n\n    var numberUtil = __webpack_require__(9);\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(6);\n    var BoundingRect = __webpack_require__(17);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n/* 93 */,\n/* 94 */,\n/* 95 */,\n/* 96 */,\n/* 97 */,\n/* 98 */,\n/* 99 */,\n/* 100 */,\n/* 101 */,\n/* 102 */,\n/* 103 */,\n/* 104 */,\n/* 105 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(110);\n    var Eventful = __webpack_require__(30);\n    var Transformable = __webpack_require__(116);\n    var Animatable = __webpack_require__(492);\n    var zrUtil = __webpack_require__(0);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(464);\n    var color = __webpack_require__(31);\n    var util = __webpack_require__(0);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(46);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(67);\n    var BoundingRect = __webpack_require__(17);\n    var zrUtil = __webpack_require__(0);\n\n    var LRU = __webpack_require__(109);\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textPositionRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(481);\n    var smoothBezier = __webpack_require__(480);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(25);\n    var vector = __webpack_require__(12);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n/* 117 */,\n/* 118 */,\n/* 119 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Url */\n/* unused harmony export Http */\n/* unused harmony export Resource */\n/*!\n * vue-resource v1.3.4\n * https://github.com/pagekit/vue-resource\n * Released under the MIT License.\n */\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING  = 2;\n\nfunction Promise$1(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise$1.reject = function (r) {\n    return new Promise$1(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise$1.resolve = function (x) {\n    return new Promise$1(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise$1.all = function all(iterable) {\n    return new Promise$1(function (resolve, reject) {\n        var count = 0, result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$1.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise$1.race = function race(iterable) {\n    return new Promise$1(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$1.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p$1 = Promise$1.prototype;\n\np$1.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np$1.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np$1.notify = function notify() {\n    var promise = this;\n\n    nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np$1.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise$1(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np$1.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\n/**\n * Promise adapter.\n */\n\nif (typeof Promise === 'undefined') {\n    window.Promise = Promise$1;\n}\n\nfunction PromiseObj(executor, context) {\n\n    if (executor instanceof Promise) {\n        this.promise = executor;\n    } else {\n        this.promise = new Promise(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromiseObj.all = function (iterable, context) {\n    return new PromiseObj(Promise.all(iterable), context);\n};\n\nPromiseObj.resolve = function (value, context) {\n    return new PromiseObj(Promise.resolve(value), context);\n};\n\nPromiseObj.reject = function (reason, context) {\n    return new PromiseObj(Promise.reject(reason), context);\n};\n\nPromiseObj.race = function (iterable, context) {\n    return new PromiseObj(Promise.race(iterable), context);\n};\n\nvar p = PromiseObj.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new PromiseObj(this.promise.then(fulfilled, rejected), this.context);\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new PromiseObj(this.promise.catch(rejected), this.context);\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n            callback.call(this);\n            return value;\n        }, function (reason) {\n            callback.call(this);\n            return Promise.reject(reason);\n        }\n    );\n};\n\n/**\n * Utility functions.\n */\n\nvar ref = {};\nvar hasOwnProperty = ref.hasOwnProperty;\n\nvar ref$1 = [];\nvar slice = ref$1.slice;\nvar debug = false;\nvar ntick;\n\nvar inBrowser = typeof window !== 'undefined';\n\nvar Util = function (ref) {\n    var config = ref.config;\n    var nextTick = ref.nextTick;\n\n    ntick = nextTick;\n    debug = config.debug || !config.silent;\n};\n\nfunction warn(msg) {\n    if (typeof console !== 'undefined' && debug) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n}\n\nfunction error(msg) {\n    if (typeof console !== 'undefined') {\n        console.error(msg);\n    }\n}\n\nfunction nextTick(cb, ctx) {\n    return ntick(cb, ctx);\n}\n\nfunction trim(str) {\n    return str ? str.replace(/^\\s*|\\s*$/g, '') : '';\n}\n\nfunction trimEnd(str, chars) {\n\n    if (str && chars === undefined) {\n        return str.replace(/\\s+$/, '');\n    }\n\n    if (!str || !chars) {\n        return str;\n    }\n\n    return str.replace(new RegExp((\"[\" + chars + \"]+$\")), '');\n}\n\nfunction toLower(str) {\n    return str ? str.toLowerCase() : '';\n}\n\nfunction toUpper(str) {\n    return str ? str.toUpperCase() : '';\n}\n\nvar isArray = Array.isArray;\n\nfunction isString(val) {\n    return typeof val === 'string';\n}\n\n\n\nfunction isFunction(val) {\n    return typeof val === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n}\n\nfunction isBlob(obj) {\n    return typeof Blob !== 'undefined' && obj instanceof Blob;\n}\n\nfunction isFormData(obj) {\n    return typeof FormData !== 'undefined' && obj instanceof FormData;\n}\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = PromiseObj.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\nfunction options(fn, obj, opts) {\n\n    opts = opts || {};\n\n    if (isFunction(opts)) {\n        opts = opts.call(obj);\n    }\n\n    return merge(fn.bind({$vm: obj, $options: opts}), fn, {$options: opts});\n}\n\nfunction each(obj, iterator) {\n\n    var i, key;\n\n    if (isArray(obj)) {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (isObject(obj)) {\n        for (key in obj) {\n            if (hasOwnProperty.call(obj, key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n}\n\nvar assign = Object.assign || _assign;\n\nfunction merge(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source, true);\n    });\n\n    return target;\n}\n\nfunction defaults(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n\n        for (var key in source) {\n            if (target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n\n    });\n\n    return target;\n}\n\nfunction _assign(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source);\n    });\n\n    return target;\n}\n\nfunction _merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (isArray(source[key]) && !isArray(target[key])) {\n                target[key] = [];\n            }\n            _merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\n/**\n * Root Prefix Transform.\n */\n\nvar root = function (options$$1, next) {\n\n    var url = next(options$$1);\n\n    if (isString(options$$1.root) && !/^(https?:)?\\//.test(url)) {\n        url = trimEnd(options$$1.root, '/') + '/' + url;\n    }\n\n    return url;\n};\n\n/**\n * Query Parameter Transform.\n */\n\nvar query = function (options$$1, next) {\n\n    var urlParams = Object.keys(Url.options.params), query = {}, url = next(options$$1);\n\n    each(options$$1.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = Url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n};\n\n/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nfunction expand(url, params, variables) {\n\n    var tmpl = parse(url), expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n}\n\nfunction parse(template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'], variables = [];\n\n    return {\n        vars: variables,\n        expand: function expand(context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null, values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n\n                } else {\n                    return encodeReserved(literal);\n                }\n            });\n        }\n    };\n}\n\nfunction getValues(context, operator, key, modifier) {\n\n    var value = context[key], result = [];\n\n    if (isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n\n                if (isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n}\n\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n}\n\nfunction encodeValue(operator, value, key) {\n\n    value = (operator === '+' || operator === '#') ? encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n}\n\nfunction encodeReserved(str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n}\n\n/**\n * URL Template (RFC 6570) Transform.\n */\n\nvar template = function (options) {\n\n    var variables = [], url = expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n};\n\n/**\n * Service for URL templating.\n */\n\nfunction Url(url, params) {\n\n    var self = this || {}, options$$1 = url, transform;\n\n    if (isString(url)) {\n        options$$1 = {url: url, params: params};\n    }\n\n    options$$1 = merge({}, Url.options, self.$options, options$$1);\n\n    Url.transforms.forEach(function (handler) {\n\n        if (isString(handler)) {\n            handler = Url.transform[handler];\n        }\n\n        if (isFunction(handler)) {\n            transform = factory(handler, transform, self.$vm);\n        }\n\n    });\n\n    return transform(options$$1);\n}\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transform = {template: template, query: query, root: root};\nUrl.transforms = ['template', 'query', 'root'];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [], escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    var el = document.createElement('a');\n\n    if (document.documentMode) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options$$1) {\n        return handler.call(vm, options$$1, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = isArray(obj), plain = isPlainObject(obj), hash;\n\n    each(obj, function (value, key) {\n\n        hash = isObject(value) || isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\n/**\n * XDomain client (Internet Explorer).\n */\n\nvar xdrClient = function (request) {\n    return new PromiseObj(function (resolve) {\n\n        var xdr = new XDomainRequest(), handler = function (ref) {\n            var type = ref.type;\n\n\n            var status = 0;\n\n            if (type === 'load') {\n                status = 200;\n            } else if (type === 'error') {\n                status = 500;\n            }\n\n            resolve(request.respondWith(xdr.responseText, {status: status}));\n        };\n\n        request.abort = function () { return xdr.abort(); };\n\n        xdr.open(request.method, request.getUrl());\n\n        if (request.timeout) {\n            xdr.timeout = request.timeout;\n        }\n\n        xdr.onload = handler;\n        xdr.onabort = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = handler;\n        xdr.onprogress = function () {};\n        xdr.send(request.getBody());\n    });\n};\n\n/**\n * CORS Interceptor.\n */\n\nvar SUPPORTS_CORS = inBrowser && 'withCredentials' in new XMLHttpRequest();\n\nvar cors = function (request, next) {\n\n    if (inBrowser) {\n\n        var orgUrl = Url.parse(location.href);\n        var reqUrl = Url.parse(request.getUrl());\n\n        if (reqUrl.protocol !== orgUrl.protocol || reqUrl.host !== orgUrl.host) {\n\n            request.crossOrigin = true;\n            request.emulateHTTP = false;\n\n            if (!SUPPORTS_CORS) {\n                request.client = xdrClient;\n            }\n        }\n    }\n\n    next();\n};\n\n/**\n * Form data Interceptor.\n */\n\nvar form = function (request, next) {\n\n    if (isFormData(request.body)) {\n\n        request.headers.delete('Content-Type');\n\n    } else if (isObject(request.body) && request.emulateJSON) {\n\n        request.body = Url.params(request.body);\n        request.headers.set('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    next();\n};\n\n/**\n * JSON Interceptor.\n */\n\nvar json = function (request, next) {\n\n    var type = request.headers.get('Content-Type') || '';\n\n    if (isObject(request.body) && type.indexOf('application/json') === 0) {\n        request.body = JSON.stringify(request.body);\n    }\n\n    next(function (response) {\n\n        return response.bodyText ? when(response.text(), function (text) {\n\n            type = response.headers.get('Content-Type') || '';\n\n            if (type.indexOf('application/json') === 0 || isJson(text)) {\n\n                try {\n                    response.body = JSON.parse(text);\n                } catch (e) {\n                    response.body = null;\n                }\n\n            } else {\n                response.body = text;\n            }\n\n            return response;\n\n        }) : response;\n\n    });\n};\n\nfunction isJson(str) {\n\n    var start = str.match(/^\\[|^\\{(?!\\{)/), end = {'[': /]$/, '{': /}$/};\n\n    return start && end[start[0]].test(str);\n}\n\n/**\n * JSONP client (Browser).\n */\n\nvar jsonpClient = function (request) {\n    return new PromiseObj(function (resolve) {\n\n        var name = request.jsonp || 'callback', callback = request.jsonpCallback || '_jsonp' + Math.random().toString(36).substr(2), body = null, handler, script;\n\n        handler = function (ref) {\n            var type = ref.type;\n\n\n            var status = 0;\n\n            if (type === 'load' && body !== null) {\n                status = 200;\n            } else if (type === 'error') {\n                status = 500;\n            }\n\n            if (status && window[callback]) {\n                delete window[callback];\n                document.body.removeChild(script);\n            }\n\n            resolve(request.respondWith(body, {status: status}));\n        };\n\n        window[callback] = function (result) {\n            body = JSON.stringify(result);\n        };\n\n        request.abort = function () {\n            handler({type: 'abort'});\n        };\n\n        request.params[name] = callback;\n\n        if (request.timeout) {\n            setTimeout(request.abort, request.timeout);\n        }\n\n        script = document.createElement('script');\n        script.src = request.getUrl();\n        script.type = 'text/javascript';\n        script.async = true;\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n};\n\n/**\n * JSONP Interceptor.\n */\n\nvar jsonp = function (request, next) {\n\n    if (request.method == 'JSONP') {\n        request.client = jsonpClient;\n    }\n\n    next();\n};\n\n/**\n * Before Interceptor.\n */\n\nvar before = function (request, next) {\n\n    if (isFunction(request.before)) {\n        request.before.call(this, request);\n    }\n\n    next();\n};\n\n/**\n * HTTP method override Interceptor.\n */\n\nvar method = function (request, next) {\n\n    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n        request.headers.set('X-HTTP-Method-Override', request.method);\n        request.method = 'POST';\n    }\n\n    next();\n};\n\n/**\n * Header Interceptor.\n */\n\nvar header = function (request, next) {\n\n    var headers = assign({}, Http.headers.common,\n        !request.crossOrigin ? Http.headers.custom : {},\n        Http.headers[toLower(request.method)]\n    );\n\n    each(headers, function (value, name) {\n        if (!request.headers.has(name)) {\n            request.headers.set(name, value);\n        }\n    });\n\n    next();\n};\n\n/**\n * XMLHttp client (Browser).\n */\n\nvar xhrClient = function (request) {\n    return new PromiseObj(function (resolve) {\n\n        var xhr = new XMLHttpRequest(), handler = function (event) {\n\n            var response = request.respondWith(\n                'response' in xhr ? xhr.response : xhr.responseText, {\n                    status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n                    statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText)\n                }\n            );\n\n            each(trim(xhr.getAllResponseHeaders()).split('\\n'), function (row) {\n                response.headers.append(row.slice(0, row.indexOf(':')), row.slice(row.indexOf(':') + 1));\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () { return xhr.abort(); };\n\n        if (request.progress) {\n            if (request.method === 'GET') {\n                xhr.addEventListener('progress', request.progress);\n            } else if (/^(POST|PUT)$/i.test(request.method)) {\n                xhr.upload.addEventListener('progress', request.progress);\n            }\n        }\n\n        xhr.open(request.method, request.getUrl(), true);\n\n        if (request.timeout) {\n            xhr.timeout = request.timeout;\n        }\n\n        if (request.responseType && 'responseType' in xhr) {\n            xhr.responseType = request.responseType;\n        }\n\n        if (request.withCredentials || request.credentials) {\n            xhr.withCredentials = true;\n        }\n\n        if (!request.crossOrigin) {\n            request.headers.set('X-Requested-With', 'XMLHttpRequest');\n        }\n\n        request.headers.forEach(function (value, name) {\n            xhr.setRequestHeader(name, value);\n        });\n\n        xhr.onload = handler;\n        xhr.onabort = handler;\n        xhr.onerror = handler;\n        xhr.ontimeout = handler;\n        xhr.send(request.getBody());\n    });\n};\n\n/**\n * Http client (Node).\n */\n\nvar nodeClient = function (request) {\n\n    var client = __webpack_require__(497);\n\n    return new PromiseObj(function (resolve) {\n\n        var url = request.getUrl();\n        var body = request.getBody();\n        var method = request.method;\n        var headers = {}, handler;\n\n        request.headers.forEach(function (value, name) {\n            headers[name] = value;\n        });\n\n        client(url, {body: body, method: method, headers: headers}).then(handler = function (resp) {\n\n            var response = request.respondWith(resp.body, {\n                    status: resp.statusCode,\n                    statusText: trim(resp.statusMessage)\n                }\n            );\n\n            each(resp.headers, function (value, name) {\n                response.headers.set(name, value);\n            });\n\n            resolve(response);\n\n        }, function (error$$1) { return handler(error$$1.response); });\n    });\n};\n\n/**\n * Base client.\n */\n\nvar Client = function (context) {\n\n    var reqHandlers = [sendRequest], resHandlers = [], handler;\n\n    if (!isObject(context)) {\n        context = null;\n    }\n\n    function Client(request) {\n        return new PromiseObj(function (resolve, reject) {\n\n            function exec() {\n\n                handler = reqHandlers.pop();\n\n                if (isFunction(handler)) {\n                    handler.call(context, request, next);\n                } else {\n                    warn((\"Invalid interceptor of type \" + (typeof handler) + \", must be a function\"));\n                    next();\n                }\n            }\n\n            function next(response) {\n\n                if (isFunction(response)) {\n\n                    resHandlers.unshift(response);\n\n                } else if (isObject(response)) {\n\n                    resHandlers.forEach(function (handler) {\n                        response = when(response, function (response) {\n                            return handler.call(context, response) || response;\n                        }, reject);\n                    });\n\n                    when(response, resolve, reject);\n\n                    return;\n                }\n\n                exec();\n            }\n\n            exec();\n\n        }, context);\n    }\n\n    Client.use = function (handler) {\n        reqHandlers.push(handler);\n    };\n\n    return Client;\n};\n\nfunction sendRequest(request, resolve) {\n\n    var client = request.client || (inBrowser ? xhrClient : nodeClient);\n\n    resolve(client(request));\n}\n\n/**\n * HTTP Headers.\n */\n\nvar Headers = function Headers(headers) {\n    var this$1 = this;\n\n\n    this.map = {};\n\n    each(headers, function (value, name) { return this$1.append(name, value); });\n};\n\nHeaders.prototype.has = function has (name) {\n    return getName(this.map, name) !== null;\n};\n\nHeaders.prototype.get = function get (name) {\n\n    var list = this.map[getName(this.map, name)];\n\n    return list ? list.join() : null;\n};\n\nHeaders.prototype.getAll = function getAll (name) {\n    return this.map[getName(this.map, name)] || [];\n};\n\nHeaders.prototype.set = function set (name, value) {\n    this.map[normalizeName(getName(this.map, name) || name)] = [trim(value)];\n};\n\nHeaders.prototype.append = function append (name, value){\n\n    var list = this.map[getName(this.map, name)];\n\n    if (list) {\n        list.push(trim(value));\n    } else {\n        this.set(name, value);\n    }\n};\n\nHeaders.prototype.delete = function delete$1 (name){\n    delete this.map[getName(this.map, name)];\n};\n\nHeaders.prototype.deleteAll = function deleteAll (){\n    this.map = {};\n};\n\nHeaders.prototype.forEach = function forEach (callback, thisArg) {\n        var this$1 = this;\n\n    each(this.map, function (list, name) {\n        each(list, function (value) { return callback.call(thisArg, value, name, this$1); });\n    });\n};\n\nfunction getName(map, name) {\n    return Object.keys(map).reduce(function (prev, curr) {\n        return toLower(name) === toLower(curr) ? curr : prev;\n    }, null);\n}\n\nfunction normalizeName(name) {\n\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n        throw new TypeError('Invalid character in header field name');\n    }\n\n    return trim(name);\n}\n\n/**\n * HTTP Response.\n */\n\nvar Response = function Response(body, ref) {\n    var url = ref.url;\n    var headers = ref.headers;\n    var status = ref.status;\n    var statusText = ref.statusText;\n\n\n    this.url = url;\n    this.ok = status >= 200 && status < 300;\n    this.status = status || 0;\n    this.statusText = statusText || '';\n    this.headers = new Headers(headers);\n    this.body = body;\n\n    if (isString(body)) {\n\n        this.bodyText = body;\n\n    } else if (isBlob(body)) {\n\n        this.bodyBlob = body;\n\n        if (isBlobText(body)) {\n            this.bodyText = blobText(body);\n        }\n    }\n};\n\nResponse.prototype.blob = function blob () {\n    return when(this.bodyBlob);\n};\n\nResponse.prototype.text = function text () {\n    return when(this.bodyText);\n};\n\nResponse.prototype.json = function json () {\n    return when(this.text(), function (text) { return JSON.parse(text); });\n};\n\nObject.defineProperty(Response.prototype, 'data', {\n\n    get: function get() {\n        return this.body;\n    },\n\n    set: function set(body) {\n        this.body = body;\n    }\n\n});\n\nfunction blobText(body) {\n    return new PromiseObj(function (resolve) {\n\n        var reader = new FileReader();\n\n        reader.readAsText(body);\n        reader.onload = function () {\n            resolve(reader.result);\n        };\n\n    });\n}\n\nfunction isBlobText(body) {\n    return body.type.indexOf('text') === 0 || body.type.indexOf('json') !== -1;\n}\n\n/**\n * HTTP Request.\n */\n\nvar Request = function Request(options$$1) {\n\n    this.body = null;\n    this.params = {};\n\n    assign(this, options$$1, {\n        method: toUpper(options$$1.method || 'GET')\n    });\n\n    if (!(this.headers instanceof Headers)) {\n        this.headers = new Headers(this.headers);\n    }\n};\n\nRequest.prototype.getUrl = function getUrl (){\n    return Url(this);\n};\n\nRequest.prototype.getBody = function getBody (){\n    return this.body;\n};\n\nRequest.prototype.respondWith = function respondWith (body, options$$1) {\n    return new Response(body, assign(options$$1 || {}, {url: this.getUrl()}));\n};\n\n/**\n * Service for sending network requests.\n */\n\nvar COMMON_HEADERS = {'Accept': 'application/json, text/plain, */*'};\nvar JSON_CONTENT_TYPE = {'Content-Type': 'application/json;charset=utf-8'};\n\nfunction Http(options$$1) {\n\n    var self = this || {}, client = Client(self.$vm);\n\n    defaults(options$$1 || {}, self.$options, Http.options);\n\n    Http.interceptors.forEach(function (handler) {\n\n        if (isString(handler)) {\n            handler = Http.interceptor[handler];\n        }\n\n        if (isFunction(handler)) {\n            client.use(handler);\n        }\n\n    });\n\n    return client(new Request(options$$1)).then(function (response) {\n\n        return response.ok ? response : PromiseObj.reject(response);\n\n    }, function (response) {\n\n        if (response instanceof Error) {\n            error(response);\n        }\n\n        return PromiseObj.reject(response);\n    });\n}\n\nHttp.options = {};\n\nHttp.headers = {\n    put: JSON_CONTENT_TYPE,\n    post: JSON_CONTENT_TYPE,\n    patch: JSON_CONTENT_TYPE,\n    delete: JSON_CONTENT_TYPE,\n    common: COMMON_HEADERS,\n    custom: {}\n};\n\nHttp.interceptor = {before: before, method: method, jsonp: jsonp, json: json, form: form, header: header, cors: cors};\nHttp.interceptors = ['before', 'method', 'jsonp', 'json', 'form', 'header', 'cors'];\n\n['get', 'delete', 'head', 'jsonp'].forEach(function (method$$1) {\n\n    Http[method$$1] = function (url, options$$1) {\n        return this(assign(options$$1 || {}, {url: url, method: method$$1}));\n    };\n\n});\n\n['post', 'put', 'patch'].forEach(function (method$$1) {\n\n    Http[method$$1] = function (url, body, options$$1) {\n        return this(assign(options$$1 || {}, {url: url, method: method$$1, body: body}));\n    };\n\n});\n\n/**\n * Service for interacting with RESTful services.\n */\n\nfunction Resource(url, params, actions, options$$1) {\n\n    var self = this || {}, resource = {};\n\n    actions = assign({},\n        Resource.actions,\n        actions\n    );\n\n    each(actions, function (action, name) {\n\n        action = merge({url: url, params: assign({}, params)}, options$$1, action);\n\n        resource[name] = function () {\n            return (self.$http || Http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options$$1 = assign({}, action), params = {}, body;\n\n    switch (args.length) {\n\n        case 2:\n\n            params = args[0];\n            body = args[1];\n\n            break;\n\n        case 1:\n\n            if (/^(POST|PUT|PATCH)$/i.test(options$$1.method)) {\n                body = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 2 arguments [params, body], got ' + args.length + ' arguments';\n    }\n\n    options$$1.body = body;\n    options$$1.params = assign({}, options$$1.params, params);\n\n    return options$$1;\n}\n\nResource.actions = {\n\n    get: {method: 'GET'},\n    save: {method: 'POST'},\n    query: {method: 'GET'},\n    update: {method: 'PUT'},\n    remove: {method: 'DELETE'},\n    delete: {method: 'DELETE'}\n\n};\n\n/**\n * Install plugin.\n */\n\nfunction plugin(Vue) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    Util(Vue);\n\n    Vue.url = Url;\n    Vue.http = Http;\n    Vue.resource = Resource;\n    Vue.Promise = PromiseObj;\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function get() {\n                return options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function get() {\n                return options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function get() {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function get() {\n                var this$1 = this;\n\n                return function (executor) { return new Vue.Promise(executor, this$1); };\n            }\n        }\n\n    });\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (plugin);\n\n\n\n/***/ }),\n/* 120 */,\n/* 121 */,\n/* 122 */,\n/* 123 */,\n/* 124 */,\n/* 125 */,\n/* 126 */,\n/* 127 */,\n/* 128 */,\n/* 129 */,\n/* 130 */,\n/* 131 */,\n/* 132 */,\n/* 133 */,\n/* 134 */,\n/* 135 */,\n/* 136 */,\n/* 137 */,\n/* 138 */,\n/* 139 */,\n/* 140 */,\n/* 141 */,\n/* 142 */,\n/* 143 */,\n/* 144 */,\n/* 145 */,\n/* 146 */,\n/* 147 */,\n/* 148 */,\n/* 149 */,\n/* 150 */,\n/* 151 */,\n/* 152 */,\n/* 153 */,\n/* 154 */,\n/* 155 */,\n/* 156 */,\n/* 157 */,\n/* 158 */,\n/* 159 */,\n/* 160 */,\n/* 161 */,\n/* 162 */,\n/* 163 */,\n/* 164 */,\n/* 165 */,\n/* 166 */,\n/* 167 */,\n/* 168 */,\n/* 169 */,\n/* 170 */,\n/* 171 */,\n/* 172 */,\n/* 173 */,\n/* 174 */,\n/* 175 */,\n/* 176 */,\n/* 177 */,\n/* 178 */,\n/* 179 */,\n/* 180 */,\n/* 181 */,\n/* 182 */,\n/* 183 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(187), __esModule: true };\n\n/***/ }),\n/* 184 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(188), __esModule: true };\n\n/***/ }),\n/* 185 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _defineProperty = __webpack_require__(184);\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\n/***/ }),\n/* 186 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar core  = __webpack_require__(32)\n  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\nmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n/***/ }),\n/* 187 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(212);\nmodule.exports = __webpack_require__(32).Object.assign;\n\n/***/ }),\n/* 188 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(213);\nvar $Object = __webpack_require__(32).Object;\nmodule.exports = function defineProperty(it, key, desc){\n  return $Object.defineProperty(it, key, desc);\n};\n\n/***/ }),\n/* 189 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n/***/ }),\n/* 190 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(53);\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n/***/ }),\n/* 191 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = __webpack_require__(75)\n  , toLength  = __webpack_require__(208)\n  , toIndex   = __webpack_require__(207);\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n/***/ }),\n/* 192 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n\n/***/ }),\n/* 193 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// optional / simple context binding\nvar aFunction = __webpack_require__(189);\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n/***/ }),\n/* 194 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(53)\n  , document = __webpack_require__(52).document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n\n/***/ }),\n/* 195 */\n/***/ (function(module, exports) {\n\n// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n/***/ }),\n/* 196 */\n/***/ (function(module, exports) {\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n\n/***/ }),\n/* 197 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP         = __webpack_require__(73)\n  , createDesc = __webpack_require__(204);\nmodule.exports = __webpack_require__(33) ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n/***/ }),\n/* 198 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = !__webpack_require__(33) && !__webpack_require__(51)(function(){\n  return Object.defineProperty(__webpack_require__(194)('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n/***/ }),\n/* 199 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys  = __webpack_require__(202)\n  , gOPS     = __webpack_require__(200)\n  , pIE      = __webpack_require__(203)\n  , toObject = __webpack_require__(209)\n  , IObject  = __webpack_require__(72)\n  , $assign  = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || __webpack_require__(51)(function(){\n  var A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getSymbols = gOPS.f\n    , isEnum     = pIE.f;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  } return T;\n} : $assign;\n\n/***/ }),\n/* 200 */\n/***/ (function(module, exports) {\n\nexports.f = Object.getOwnPropertySymbols;\n\n/***/ }),\n/* 201 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar has          = __webpack_require__(196)\n  , toIObject    = __webpack_require__(75)\n  , arrayIndexOf = __webpack_require__(191)(false)\n  , IE_PROTO     = __webpack_require__(205)('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n/***/ }),\n/* 202 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = __webpack_require__(201)\n  , enumBugKeys = __webpack_require__(195);\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};\n\n/***/ }),\n/* 203 */\n/***/ (function(module, exports) {\n\nexports.f = {}.propertyIsEnumerable;\n\n/***/ }),\n/* 204 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n/***/ }),\n/* 205 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar shared = __webpack_require__(206)('keys')\n  , uid    = __webpack_require__(211);\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};\n\n/***/ }),\n/* 206 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(52)\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n\n/***/ }),\n/* 207 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toInteger = __webpack_require__(74)\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n/***/ }),\n/* 208 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.15 ToLength\nvar toInteger = __webpack_require__(74)\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n/***/ }),\n/* 209 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.13 ToObject(argument)\nvar defined = __webpack_require__(70);\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n/***/ }),\n/* 210 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(53);\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n/***/ }),\n/* 211 */\n/***/ (function(module, exports) {\n\nvar id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n/***/ }),\n/* 212 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.3.1 Object.assign(target, source)\nvar $export = __webpack_require__(71);\n\n$export($export.S + $export.F, 'Object', {assign: __webpack_require__(199)});\n\n/***/ }),\n/* 213 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $export = __webpack_require__(71);\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !__webpack_require__(33), 'Object', {defineProperty: __webpack_require__(73).f});\n\n/***/ }),\n/* 214 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n/* 215 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(217).extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n/***/ }),\n/* 216 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(6);\n    var helper = __webpack_require__(219);\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(__webpack_require__(14).prototype, __webpack_require__(218));\n\n    var BarView = __webpack_require__(4).extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d'\n                || coordinateSystemType === 'polar'\n            ) {\n                this._render(seriesModel, ecModel, api);\n            }\n            else if (__DEV__) {\n                console.warn('Only cartesian2d and polar supported for bar.');\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _render: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var coord = seriesModel.coordinateSystem;\n            var baseAxis = coord.getBaseAxis();\n            var isHorizontalOrRadial;\n\n            if (coord.type === 'cartesian2d') {\n                isHorizontalOrRadial = baseAxis.isHorizontal();\n            }\n            else if (coord.type === 'polar') {\n                isHorizontalOrRadial = baseAxis.dim === 'angle';\n            }\n\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getLayout[coord.type](data, dataIndex, itemModel);\n                    var el = elementCreator[coord.type](\n                        data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel\n                    );\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, dataIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = elementCreator[coord.type](\n                            data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true\n                        );\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, newIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    if (coord.type === 'cartesian2d') {\n                        el && removeRect(dataIndex, animationModel, el);\n                    }\n                    else {\n                        el && removeSector(dataIndex, animationModel, el);\n                    }\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        if (el.type === 'sector') {\n                            removeSector(el.dataIndex, ecModel, el);\n                        }\n                        else {\n                            removeRect(el.dataIndex, ecModel, el);\n                        }\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    var elementCreator = {\n\n        cartesian2d: function (\n            data, dataIndex, itemModel, layout, isHorizontal,\n            animationModel, isUpdate\n        ) {\n            var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var rectShape = rect.shape;\n                var animateProperty = isHorizontal ? 'height' : 'width';\n                var animateTarget = {};\n                rectShape[animateProperty] = 0;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return rect;\n        },\n\n        polar: function (\n            data, dataIndex, itemModel, layout, isRadial,\n            animationModel, isUpdate\n        ) {\n            var sector = new graphic.Sector({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var sectorShape = sector.shape;\n                var animateProperty = isRadial ? 'r' : 'endAngle';\n                var animateTarget = {};\n                sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return sector;\n        }\n    };\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function removeSector(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                r: el.shape.r0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    var getLayout = {\n        cartesian2d: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            var fixedLineWidth = getLineWidth(itemModel, layout);\n\n            // fix layout with lineWidth\n            var signX = layout.width > 0 ? 1 : -1;\n            var signY = layout.height > 0 ? 1 : -1;\n            return {\n                x: layout.x + signX * fixedLineWidth / 2,\n                y: layout.y + signY * fixedLineWidth / 2,\n                width: layout.width - signX * fixedLineWidth,\n                height: layout.height - signY * fixedLineWidth\n            };\n        },\n\n        polar: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            return {\n                cx: layout.cx,\n                cy: layout.cy,\n                r0: layout.r0,\n                r: layout.r,\n                startAngle: layout.startAngle,\n                endAngle: layout.endAngle\n            };\n        }\n    };\n\n    function updateStyle(\n        el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar\n    ) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        if (!isPolar) {\n            el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n        }\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var cursorStyle = itemModel.getShallow('cursor');\n        cursorStyle && el.attr('cursor', cursorStyle);\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        if (!isPolar) {\n            helper.setLabel(\n                el.style, hoverStyle, itemModel, color,\n                seriesModel, dataIndex, labelPositionOutside\n            );\n        }\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n/***/ }),\n/* 217 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var SeriesModel = __webpack_require__(37);\n    var createListFromArray = __webpack_require__(56);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n            // 最小角度为0，仅对极坐标系下的柱状图有效\n            barMinAngle: 0,\n            // cursor: null,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                normal: {\n                    // color: '各异'\n                },\n                emphasis: {}\n            }\n        }\n    });\n\n\n/***/ }),\n/* 218 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n\n    var getBarItemStyle = __webpack_require__(38)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n/***/ }),\n/* 219 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(6);\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        if (labelModel.get('show')) {\n            setLabel(\n                normalStyle, labelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            normalStyle.text = '';\n        }\n\n        if (hoverLabelModel.get('show')) {\n            setLabel(\n                hoverStyle, hoverLabelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            hoverStyle.text = '';\n        }\n    };\n\n    function setLabel(style, model, color, labelText, labelPositionOutside) {\n        graphic.setText(style, model, color);\n        style.text = labelText;\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 220 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var SeriesModel = __webpack_require__(37);\n    var whiskerBoxCommon = __webpack_require__(77);\n\n    var CandlestickSeries = SeriesModel.extend({\n\n        type: 'series.candlestick',\n\n        dependencies: ['xAxis', 'yAxis', 'grid'],\n\n        /**\n         * @readOnly\n         */\n        defaultValueDimensions: ['open', 'close', 'lowest', 'highest'],\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: null,\n\n        /**\n         * @override\n         */\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            layout: null, // 'horizontal' or 'vertical'\n\n            itemStyle: {\n                normal: {\n                    color: '#c23531', // 阳线 positive\n                    color0: '#314656', // 阴线 negative     '#c23531', '#314656'\n                    borderWidth: 1,\n                    // FIXME\n                    // ec2中使用的是lineStyle.color 和 lineStyle.color0\n                    borderColor: '#c23531',\n                    borderColor0: '#314656'\n                },\n                emphasis: {\n                    borderWidth: 2\n                }\n            },\n\n            barMaxWidth: null,\n            barMinWidth: null,\n            barWidth: null,\n\n            animationUpdate: false,\n            animationEasing: 'linear',\n            animationDuration: 300\n        },\n\n        /**\n         * Get dimension for shadow in dataZoom\n         * @return {string} dimension name\n         */\n        getShadowDim: function () {\n            return 'open';\n        },\n\n        brushSelector: function (dataIndex, data, selectors) {\n            var itemLayout = data.getItemLayout(dataIndex);\n            return selectors.rect(itemLayout.brushRect);\n        }\n\n    });\n\n    zrUtil.mixin(CandlestickSeries, whiskerBoxCommon.seriesModelMixin, true);\n\n    module.exports = CandlestickSeries;\n\n\n\n/***/ }),\n/* 221 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var ChartView = __webpack_require__(61);\n    var graphic = __webpack_require__(6);\n    var whiskerBoxCommon = __webpack_require__(77);\n\n    var CandlestickView = ChartView.extend({\n\n        type: 'candlestick',\n\n        getStyleUpdater: function () {\n            return updateStyle;\n        },\n\n        dispose: zrUtil.noop\n    });\n\n    zrUtil.mixin(CandlestickView, whiskerBoxCommon.viewMixin, true);\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n\n    function updateStyle(itemGroup, data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n        var color = data.getItemVisual(idx, 'color');\n        var borderColor = data.getItemVisual(idx, 'borderColor') || color;\n\n        // Color must be excluded.\n        // Because symbol provide setColor individually to set fill and stroke\n        var itemStyle = normalItemStyleModel.getItemStyle(\n            ['color', 'color0', 'borderColor', 'borderColor0']\n        );\n\n        var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n        whiskerEl.useStyle(itemStyle);\n        whiskerEl.style.stroke = borderColor;\n\n        var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n        bodyEl.useStyle(itemStyle);\n        bodyEl.style.fill = color;\n        bodyEl.style.stroke = borderColor;\n\n        var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n        graphic.setHoverStyle(itemGroup, hoverStyle);\n    }\n\n\n    module.exports = CandlestickView;\n\n\n\n/***/ }),\n/* 222 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var retrieve = __webpack_require__(0).retrieve;\n    var parsePercent = __webpack_require__(9).parsePercent;\n\n    module.exports = function (ecModel) {\n\n        ecModel.eachSeriesByType('candlestick', function (seriesModel) {\n\n            var coordSys = seriesModel.coordinateSystem;\n            var data = seriesModel.getData();\n            var candleWidth = calculateCandleWidth(seriesModel, data);\n            var chartLayout = seriesModel.get('layout');\n            var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n            var constDim = 1 - variableDim;\n            var coordDims = ['x', 'y'];\n            var vDims = [];\n            var cDim;\n\n            zrUtil.each(data.dimensions, function (dimName) {\n                var dimInfo = data.getDimensionInfo(dimName);\n                var coordDim = dimInfo.coordDim;\n                if (coordDim === coordDims[constDim]) {\n                    vDims.push(dimName);\n                }\n                else if (coordDim === coordDims[variableDim]) {\n                    cDim = dimName;\n                }\n            });\n\n            if (cDim == null || vDims.length < 4) {\n                return;\n            }\n\n            data.each([cDim].concat(vDims), function () {\n                var args = arguments;\n                var axisDimVal = args[0];\n                var idx = args[vDims.length + 1];\n\n                var openVal = args[1];\n                var closeVal = args[2];\n                var lowestVal = args[3];\n                var highestVal = args[4];\n\n                var ocLow = Math.min(openVal, closeVal);\n                var ocHigh = Math.max(openVal, closeVal);\n\n                var ocLowPoint = getPoint(ocLow);\n                var ocHighPoint = getPoint(ocHigh);\n                var lowestPoint = getPoint(lowestVal);\n                var highestPoint = getPoint(highestVal);\n\n                var whiskerEnds = [\n                    [highestPoint, ocHighPoint],\n                    [lowestPoint, ocLowPoint]\n                ];\n\n                var bodyEnds = [];\n                addBodyEnd(ocHighPoint, 0);\n                addBodyEnd(ocLowPoint, 1);\n\n                data.setItemLayout(idx, {\n                    chartLayout: chartLayout,\n                    sign: openVal > closeVal ? -1 : openVal < closeVal ? 1 : 0,\n                    initBaseline: openVal > closeVal\n                        ? ocHighPoint[constDim] : ocLowPoint[constDim], // open point.\n                    bodyEnds: bodyEnds,\n                    whiskerEnds: whiskerEnds,\n                    brushRect: makeBrushRect()\n                });\n\n                function getPoint(val) {\n                    var p = [];\n                    p[variableDim] = axisDimVal;\n                    p[constDim] = val;\n                    return (isNaN(axisDimVal) || isNaN(val))\n                        ? [NaN, NaN]\n                        : coordSys.dataToPoint(p);\n                }\n\n                function addBodyEnd(point, start) {\n                    var point1 = point.slice();\n                    var point2 = point.slice();\n                    point1[variableDim] += candleWidth / 2;\n                    point2[variableDim] -= candleWidth / 2;\n                    start\n                        ? bodyEnds.push(point1, point2)\n                        : bodyEnds.push(point2, point1);\n                }\n\n                function makeBrushRect() {\n                    var pmin = getPoint(Math.min(openVal, closeVal, lowestVal, highestVal));\n                    var pmax = getPoint(Math.max(openVal, closeVal, lowestVal, highestVal));\n\n                    pmin[variableDim] -= candleWidth / 2;\n                    pmax[variableDim] -= candleWidth / 2;\n\n                    return {\n                        x: pmin[0],\n                        y: pmin[1],\n                        width: constDim ? candleWidth : pmax[0] - pmin[0],\n                        height: constDim ? pmax[1] - pmin[1] : candleWidth\n                    };\n                }\n\n            }, true);\n        });\n    };\n\n    function calculateCandleWidth(seriesModel, data) {\n        var baseAxis = seriesModel.getBaseAxis();\n        var extent;\n\n        var bandWidth = baseAxis.type === 'category'\n            ? baseAxis.getBandWidth()\n            : (\n                extent = baseAxis.getExtent(),\n                Math.abs(extent[1] - extent[0]) / data.count()\n            );\n\n        var barMaxWidth = parsePercent(\n            retrieve(seriesModel.get('barMaxWidth'), bandWidth),\n            bandWidth\n        );\n        var barMinWidth = parsePercent(\n            retrieve(seriesModel.get('barMinWidth'), 1),\n            bandWidth\n        );\n        var barWidth = seriesModel.get('barWidth');\n        return barWidth != null\n            ? parsePercent(barWidth, bandWidth)\n            // Put max outer to ensure bar visible in spite of overlap.\n            : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n    }\n\n\n\n/***/ }),\n/* 223 */\n/***/ (function(module, exports) {\n\n\n\n    var positiveBorderColorQuery = ['itemStyle', 'normal', 'borderColor'];\n    var negativeBorderColorQuery = ['itemStyle', 'normal', 'borderColor0'];\n    var positiveColorQuery = ['itemStyle', 'normal', 'color'];\n    var negativeColorQuery = ['itemStyle', 'normal', 'color0'];\n\n    module.exports = function (ecModel, api) {\n\n        ecModel.eachRawSeriesByType('candlestick', function (seriesModel) {\n\n            var data = seriesModel.getData();\n\n            data.setVisual({\n                legendSymbol: 'roundRect'\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var sign = data.getItemLayout(idx).sign;\n\n                    data.setItemVisual(\n                        idx,\n                        {\n                            color: itemModel.get(\n                                sign > 0 ? positiveColorQuery : negativeColorQuery\n                            ),\n                            borderColor: itemModel.get(\n                                sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery\n                            )\n                        }\n                    );\n                });\n            }\n        });\n\n    };\n\n\n/***/ }),\n/* 224 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    module.exports = function (option) {\n        if (!option || !zrUtil.isArray(option.series)) {\n            return;\n        }\n\n        // Translate 'k' to 'candlestick'.\n        zrUtil.each(option.series, function (seriesItem) {\n            if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n                seriesItem.type = 'candlestick';\n            }\n        });\n    };\n\n\n\n/***/ }),\n/* 225 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = __webpack_require__(6);\n    var Symbol = __webpack_require__(76);\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis'),\n            cursorStyle: seriesModel.get('cursor')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n/***/ }),\n/* 226 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(6);\n    var Path = __webpack_require__(11);\n\n    var WhiskerPath = Path.extend({\n\n        type: 'whiskerInBox',\n\n        shape: {},\n\n        buildPath: function (ctx, shape) {\n            for (var i in shape) {\n                if (shape.hasOwnProperty(i) && i.indexOf('ends') === 0) {\n                    var pts = shape[i];\n                    ctx.moveTo(pts[0][0], pts[0][1]);\n                    ctx.lineTo(pts[1][0], pts[1][1]);\n                }\n            }\n        }\n    });\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/WhiskerBox}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @param {Function} styleUpdater\n     * @param {boolean} isInit\n     * @extends {module:zrender/graphic/Group}\n     */\n    function WhiskerBox(data, idx, styleUpdater, isInit) {\n        graphic.Group.call(this);\n\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.bodyIndex;\n\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.whiskerIndex;\n\n        /**\n         * @type {Function}\n         */\n        this.styleUpdater = styleUpdater;\n\n        this._createContent(data, idx, isInit);\n\n        this.updateData(data, idx, isInit);\n\n        /**\n         * Last series model.\n         * @type {module:echarts/model/Series}\n         */\n        this._seriesModel;\n    }\n\n    var whiskerBoxProto = WhiskerBox.prototype;\n\n    whiskerBoxProto._createContent = function (data, idx, isInit) {\n        var itemLayout = data.getItemLayout(idx);\n        var constDim = itemLayout.chartLayout === 'horizontal' ? 1 : 0;\n        var count = 0;\n\n        // Whisker element.\n        this.add(new graphic.Polygon({\n            shape: {\n                points: isInit\n                    ? transInit(itemLayout.bodyEnds, constDim, itemLayout)\n                    : itemLayout.bodyEnds\n            },\n            style: {strokeNoScale: true},\n            z2: 100\n        }));\n        this.bodyIndex = count++;\n\n        // Box element.\n        var whiskerEnds = zrUtil.map(itemLayout.whiskerEnds, function (ends) {\n            return isInit ? transInit(ends, constDim, itemLayout) : ends;\n        });\n        this.add(new WhiskerPath({\n            shape: makeWhiskerEndsShape(whiskerEnds),\n            style: {strokeNoScale: true},\n            z2: 100\n        }));\n        this.whiskerIndex = count++;\n    };\n\n    function transInit(points, dim, itemLayout) {\n        return zrUtil.map(points, function (point) {\n            point = point.slice();\n            point[dim] = itemLayout.initBaseline;\n            return point;\n        });\n    }\n\n    function makeWhiskerEndsShape(whiskerEnds) {\n        // zr animation only support 2-dim array.\n        var shape = {};\n        zrUtil.each(whiskerEnds, function (ends, i) {\n            shape['ends' + i] = ends;\n        });\n        return shape;\n    }\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    whiskerBoxProto.updateData = function (data, idx, isInit) {\n        var seriesModel = this._seriesModel = data.hostModel;\n        var itemLayout = data.getItemLayout(idx);\n        var updateMethod = graphic[isInit ? 'initProps' : 'updateProps'];\n        // this.childAt(this.bodyIndex).stopAnimation(true);\n        // this.childAt(this.whiskerIndex).stopAnimation(true);\n        updateMethod(\n            this.childAt(this.bodyIndex),\n            {shape: {points: itemLayout.bodyEnds}},\n            seriesModel, idx\n        );\n        updateMethod(\n            this.childAt(this.whiskerIndex),\n            {shape: makeWhiskerEndsShape(itemLayout.whiskerEnds)},\n            seriesModel, idx\n        );\n\n        this.styleUpdater.call(null, this, data, idx);\n    };\n\n    zrUtil.inherits(WhiskerBox, graphic.Group);\n\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/WhiskerBoxDraw\n     */\n    function WhiskerBoxDraw(styleUpdater) {\n        this.group = new graphic.Group();\n        this.styleUpdater = styleUpdater;\n    }\n\n    var whiskerBoxDrawProto = WhiskerBoxDraw.prototype;\n\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     */\n    whiskerBoxDrawProto.updateData = function (data) {\n        var group = this.group;\n        var oldData = this._data;\n        var styleUpdater = this.styleUpdater;\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                if (data.hasValue(newIdx)) {\n                    var symbolEl = new WhiskerBox(data, newIdx, styleUpdater, true);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n                // Empty data\n                if (!data.hasValue(newIdx)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n\n                if (!symbolEl) {\n                    symbolEl = new WhiskerBox(data, newIdx, styleUpdater);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && group.remove(el);\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    /**\n     * Remove symbols.\n     * @param {module:echarts/data/List} data\n     */\n    whiskerBoxDrawProto.remove = function () {\n        var group = this.group;\n        var data = this._data;\n        this._data = null;\n        data && data.eachItemGraphicEl(function (el) {\n            el && group.remove(el);\n        });\n    };\n\n    module.exports = WhiskerBoxDraw;\n\n\n/***/ }),\n/* 227 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var graphic = __webpack_require__(6);\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(10);\n\n    var helper = {};\n\n    helper.findLabelValueDim = function (data) {\n        var valueDim;\n        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\n\n        if (labelDims.length) {\n            valueDim = labelDims[0];\n        }\n        else {\n            // Get last value dim\n            var dimensions = data.dimensions.slice();\n            var dataType;\n            while (dimensions.length && (\n                valueDim = dimensions.pop(),\n                dataType = data.getDimensionInfo(valueDim).type,\n                dataType === 'ordinal' || dataType === 'time'\n            )) {} // jshint ignore:line\n        }\n\n        return valueDim;\n    };\n\n    helper.setTextToStyle = function (\n        data, dataIndex, valueDim, elStyle, seriesModel, labelModel, color\n    ) {\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                data.get(valueDim, dataIndex)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 228 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var createListFromArray = __webpack_require__(56);\n    var SeriesModel = __webpack_require__(37);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n            // cursor: null,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n/***/ }),\n/* 229 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME step not support polar\n\n\n    var zrUtil = __webpack_require__(0);\n    var SymbolDraw = __webpack_require__(225);\n    var Symbol = __webpack_require__(76);\n    var lineAnimationDiff = __webpack_require__(230);\n    var graphic = __webpack_require__(6);\n    var modelUtil = __webpack_require__(10);\n    var polyHelper = __webpack_require__(231);\n    var ChartView = __webpack_require__(61);\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n/***/ }),\n/* 230 */\n/***/ (function(module, exports) {\n\n\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n/***/ }),\n/* 231 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Poly path support NaN point\n\n\n    var Path = __webpack_require__(11);\n    var vec2 = __webpack_require__(12);\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n/***/ }),\n/* 232 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// TODO boundaryGap\n\n\n    __webpack_require__(87);\n\n    __webpack_require__(233);\n\n\n/***/ }),\n/* 233 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(6);\n    var AxisBuilder = __webpack_require__(78);\n    var AxisView = __webpack_require__(79);\n    var cartesianAxisHelper = __webpack_require__(80);\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n/***/ }),\n/* 234 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(4);\n    var axisPointerModelHelper = __webpack_require__(35);\n    var axisTrigger = __webpack_require__(239);\n    var zrUtil = __webpack_require__(0);\n\n    __webpack_require__(235);\n    __webpack_require__(236);\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    __webpack_require__(238);\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n/***/ }),\n/* 235 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(4);\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                textStyle: {\n                    color: '#fff'\n                },\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n/***/ }),\n/* 236 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var globalListener = __webpack_require__(82);\n\n    var AxisPonterView = __webpack_require__(4).extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n/***/ }),\n/* 237 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var clazzUtil = __webpack_require__(16);\n    var graphic = __webpack_require__(6);\n    var get = __webpack_require__(10).makeGetter();\n    var axisPointerModelHelper = __webpack_require__(35);\n    var eventTool = __webpack_require__(29);\n    var throttle = __webpack_require__(92);\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = createIcon(handleModel, {\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                    drift: bind(this._onHandleDragMove, this),\n                    ondragend: bind(this._onHandleDragEnd, this)\n                });\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals &= propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function createIcon(handleModel, handlers) {\n        var iconStr = handleModel.get('icon');\n        var style = {\n            x: -1, y: -1, width: 2, height: 2\n        };\n        var opt = zrUtil.extend({\n            style: {\n                strokeNoScale: true\n            },\n            rectHover: true,\n            cursor: 'move',\n            draggable: true\n        }, handlers);\n\n        return iconStr.indexOf('image://') === 0\n            ? (\n                style.image = iconStr.slice(8),\n                opt.style = style,\n                new graphic.Image(opt)\n            )\n            : graphic.makePath(\n                iconStr.replace('path://', ''),\n                opt,\n                style,\n                'center'\n            );\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n/***/ }),\n/* 238 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(6);\n    var BaseAxisPointer = __webpack_require__(237);\n    var viewHelper = __webpack_require__(83);\n    var cartesianAxisHelper = __webpack_require__(80);\n    var AxisView = __webpack_require__(79);\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n/***/ }),\n/* 239 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(10);\n    var modelHelper = __webpack_require__(35);\n    var findPointFromSeries = __webpack_require__(81);\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n/***/ }),\n/* 240 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var zrColor = __webpack_require__(31);\n    var eventUtil = __webpack_require__(29);\n    var formatUtil = __webpack_require__(15);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(13);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRoot;\n            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\n                x += viewportRoot.offsetLeft || 0;\n                y += viewportRoot.offsetTop || 0;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n/* 241 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(4).extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n/* 242 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(240);\n    var zrUtil = __webpack_require__(0);\n    var formatUtil = __webpack_require__(15);\n    var numberUtil = __webpack_require__(9);\n    var graphic = __webpack_require__(6);\n    var findPointFromSeries = __webpack_require__(81);\n    var layoutUtil = __webpack_require__(27);\n    var env = __webpack_require__(13);\n    var Model = __webpack_require__(14);\n    var globalListener = __webpack_require__(82);\n    var axisHelper = __webpack_require__(22);\n    var axisPointerViewHelper = __webpack_require__(83);\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    __webpack_require__(4).extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n/***/ }),\n/* 243 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n\n    var logAxis = zrUtil.defaults({\n        scale: true,\n        logBase: 10\n    }, valueAxis);\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n/***/ }),\n/* 244 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisDefault = __webpack_require__(243);\n    var zrUtil = __webpack_require__(0);\n    var ComponentModel = __webpack_require__(18);\n    var layout = __webpack_require__(27);\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n/***/ }),\n/* 245 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var Axis = __webpack_require__(85);\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n/***/ }),\n/* 246 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = __webpack_require__(0);\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n/***/ }),\n/* 247 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var Cartesian = __webpack_require__(246);\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n/***/ }),\n/* 248 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    __webpack_require__(87);\n\n    var ComponentModel = __webpack_require__(18);\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n/***/ }),\n/* 249 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n/* 250 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var createListFromArray = __webpack_require__(56);\n    var symbolUtil = __webpack_require__(91);\n    var axisHelper = __webpack_require__(22);\n    var axisModelCommonMixin = __webpack_require__(86);\n    var Model = __webpack_require__(14);\n    var util = __webpack_require__(0);\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: __webpack_require__(58),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n/***/ }),\n/* 251 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var numberUtil = __webpack_require__(9);\n    var parsePercent = numberUtil.parsePercent;\n\n    var STACK_PREFIX = '__ec_stack_';\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    /**\n     * @param {Object} opt\n     * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n     * @param {number} opt.count Positive interger.\n     * @param {number} [opt.barWidth]\n     * @param {number} [opt.barMaxWidth]\n     * @param {number} [opt.barGap]\n     * @param {number} [opt.barCategoryGap]\n     * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n     */\n    function getLayoutOnAxis(opt, api) {\n        var params = [];\n        var baseAxis = opt.axis;\n        var axisKey = 'axis0';\n\n        if (baseAxis.type !== 'category') {\n            return;\n        }\n        var bandWidth = baseAxis.getBandWidth();\n\n        for (var i = 0; i < opt.count || 0; i++) {\n            params.push(zrUtil.defaults({\n                bandWidth: bandWidth,\n                axisKey: axisKey,\n                stackId: STACK_PREFIX + i\n            }, opt));\n        }\n        var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n\n        var result = [];\n        for (var i = 0; i < opt.count; i++) {\n            var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n            item.offsetCenter = item.offset + item.width / 2;\n            result.push(item);\n        }\n\n        return result;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            return {\n                bandWidth: bandWidth,\n                barWidth: barWidth,\n                barMaxWidth: barMaxWidth,\n                barGap: barGap,\n                barCategoryGap: barCategoryGap,\n                axisKey: getAxisKey(baseAxis),\n                stackId: getSeriesStackId(seriesModel)\n            };\n        });\n\n        return doCalBarWidthAndOffset(seriesInfoList, api);\n    }\n\n    function doCalBarWidthAndOffset(seriesInfoList, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n            var axisKey = seriesInfo.axisKey;\n            var bandWidth = seriesInfo.bandWidth;\n            var columnsOnAxis = columnsMap[axisKey] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[axisKey] = columnsOnAxis;\n\n            var stackId = seriesInfo.stackId;\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            var barWidth = seriesInfo.barWidth;\n            if (barWidth && !stacks[stackId].width) {\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                stacks[stackId].width = barWidth;\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            var barMaxWidth = seriesInfo.barMaxWidth;\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            var barGap = seriesInfo.barGap;\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            var barCategoryGap = seriesInfo.barCategoryGap;\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    if (column.width) {\n                        maxWidth = Math.min(maxWidth, column.width);\n                    }\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            // Check series coordinate, do layout for cartesian2d only\n            if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coords = cartesian.dataToPoints(data, true);\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(valueAxis.dim, function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    barLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\n\n    module.exports = barLayoutGrid;\n\n\n/***/ }),\n/* 252 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (!coordSys) {\n                return;\n            }\n\n            var dims = [];\n            var coordDims = coordSys.dimensions;\n            for (var i = 0; i < coordDims.length; i++) {\n                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n            }\n\n            if (dims.length === 1) {\n                data.each(dims[0], function (x, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                });\n            }\n            else if (dims.length === 2) {\n                data.each(dims, function (x, y, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(\n                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                    );\n                }, true);\n            }\n        });\n    };\n\n\n\n/***/ }),\n/* 253 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(6);\n    var zrUtil = __webpack_require__(0);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n/* 254 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(10);\n    var Model = __webpack_require__(14);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(18);\n\n    var globalDefault = __webpack_require__(256);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(89));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n/* 255 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(10);\n    var ComponentModel = __webpack_require__(18);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n/* 256 */\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n/***/ }),\n/* 257 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(38)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n/* 258 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n/* 259 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(38)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n/* 260 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(38)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n/* 261 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(23);\n    var graphicUtil = __webpack_require__(6);\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n/***/ }),\n/* 262 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(0);\n    var compatStyle = __webpack_require__(263);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 263 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n/***/ }),\n/* 264 */\n/***/ (function(module, exports) {\n\n\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n/***/ }),\n/* 265 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var Scale = __webpack_require__(39);\n    var numberUtil = __webpack_require__(9);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(59);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n/* 266 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(0);\n    var Scale = __webpack_require__(39);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n/* 267 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = __webpack_require__(0);\n    var numberUtil = __webpack_require__(9);\n    var formatUtil = __webpack_require__(15);\n    var scaleHelper = __webpack_require__(90);\n\n    var IntervalScale = __webpack_require__(59);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n/* 268 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(47);\n    var componentUtil = __webpack_require__(60);\n    var clazzUtil = __webpack_require__(16);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n/* 269 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(68);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n/* 270 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 271 */,\n/* 272 */,\n/* 273 */,\n/* 274 */,\n/* 275 */,\n/* 276 */,\n/* 277 */,\n/* 278 */,\n/* 279 */,\n/* 280 */,\n/* 281 */,\n/* 282 */,\n/* 283 */,\n/* 284 */,\n/* 285 */,\n/* 286 */,\n/* 287 */,\n/* 288 */,\n/* 289 */,\n/* 290 */,\n/* 291 */,\n/* 292 */,\n/* 293 */,\n/* 294 */,\n/* 295 */,\n/* 296 */,\n/* 297 */,\n/* 298 */,\n/* 299 */,\n/* 300 */,\n/* 301 */,\n/* 302 */,\n/* 303 */,\n/* 304 */,\n/* 305 */,\n/* 306 */,\n/* 307 */,\n/* 308 */,\n/* 309 */,\n/* 310 */,\n/* 311 */,\n/* 312 */,\n/* 313 */,\n/* 314 */,\n/* 315 */,\n/* 316 */,\n/* 317 */,\n/* 318 */,\n/* 319 */,\n/* 320 */,\n/* 321 */,\n/* 322 */,\n/* 323 */,\n/* 324 */,\n/* 325 */,\n/* 326 */,\n/* 327 */,\n/* 328 */,\n/* 329 */,\n/* 330 */,\n/* 331 */,\n/* 332 */,\n/* 333 */,\n/* 334 */,\n/* 335 */,\n/* 336 */,\n/* 337 */,\n/* 338 */,\n/* 339 */,\n/* 340 */,\n/* 341 */,\n/* 342 */,\n/* 343 */,\n/* 344 */,\n/* 345 */,\n/* 346 */,\n/* 347 */,\n/* 348 */,\n/* 349 */,\n/* 350 */,\n/* 351 */,\n/* 352 */,\n/* 353 */,\n/* 354 */,\n/* 355 */,\n/* 356 */,\n/* 357 */,\n/* 358 */,\n/* 359 */,\n/* 360 */,\n/* 361 */,\n/* 362 */,\n/* 363 */,\n/* 364 */,\n/* 365 */,\n/* 366 */,\n/* 367 */,\n/* 368 */,\n/* 369 */,\n/* 370 */,\n/* 371 */,\n/* 372 */,\n/* 373 */,\n/* 374 */,\n/* 375 */,\n/* 376 */,\n/* 377 */,\n/* 378 */,\n/* 379 */,\n/* 380 */,\n/* 381 */,\n/* 382 */,\n/* 383 */,\n/* 384 */,\n/* 385 */,\n/* 386 */,\n/* 387 */,\n/* 388 */,\n/* 389 */,\n/* 390 */,\n/* 391 */,\n/* 392 */,\n/* 393 */,\n/* 394 */,\n/* 395 */,\n/* 396 */,\n/* 397 */,\n/* 398 */,\n/* 399 */,\n/* 400 */,\n/* 401 */,\n/* 402 */,\n/* 403 */,\n/* 404 */,\n/* 405 */,\n/* 406 */,\n/* 407 */,\n/* 408 */,\n/* 409 */,\n/* 410 */,\n/* 411 */,\n/* 412 */,\n/* 413 */,\n/* 414 */,\n/* 415 */,\n/* 416 */,\n/* 417 */,\n/* 418 */,\n/* 419 */,\n/* 420 */,\n/* 421 */,\n/* 422 */,\n/* 423 */,\n/* 424 */,\n/* 425 */,\n/* 426 */,\n/* 427 */,\n/* 428 */,\n/* 429 */,\n/* 430 */,\n/* 431 */,\n/* 432 */,\n/* 433 */,\n/* 434 */,\n/* 435 */,\n/* 436 */,\n/* 437 */,\n/* 438 */,\n/* 439 */,\n/* 440 */,\n/* 441 */,\n/* 442 */,\n/* 443 */,\n/* 444 */,\n/* 445 */,\n/* 446 */,\n/* 447 */,\n/* 448 */,\n/* 449 */,\n/* 450 */,\n/* 451 */,\n/* 452 */,\n/* 453 */,\n/* 454 */,\n/* 455 */,\n/* 456 */,\n/* 457 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n  * vue-router v2.5.3\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (false) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also regiseter instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    data.props = resolveProps(route, matched.props && matched.props[name]);\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (false) {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    \"production\" !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    var val = extraQuery[key];\n    parsedQuery[key] = Array.isArray(val) ? val.slice() : val;\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.slice().forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: location.query || {},\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) { return String(a[key]) === String(b[key]); })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this.$root._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this.$root._route }\n  });\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar index$1 = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar index = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (index$1(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (index$1(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\nindex.parse = parse_1;\nindex.compile = compile_1;\nindex.tokensToFunction = tokensToFunction_1;\nindex.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = index.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (false) {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  var pathMap = oldPathMap || Object.create(null);\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (false) {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var normalizedPath = normalizePath(path, parent);\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (false) {\n      if (route.name && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    if (Array.isArray(route.alias)) {\n      route.alias.forEach(function (alias) {\n        var aliasRoute = {\n          path: alias,\n          children: route.children\n        };\n        addRouteRecord(pathList, pathMap, nameMap, aliasRoute, parent, record.path);\n      });\n    } else {\n      var aliasRoute = {\n        path: route.alias,\n        children: route.children\n      };\n      addRouteRecord(pathList, pathMap, nameMap, aliasRoute, parent, record.path);\n    }\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (false) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path) {\n  var regex = index(path);\n  if (false) {\n    var keys = {};\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent) {\n  path = path.replace(/\\/$/, '');\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (false) {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (false) {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (false) {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (false) {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (false) {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (false) {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n    if (!shouldScroll) {\n      return\n    }\n    var isObject = typeof shouldScroll === 'object';\n    if (isObject && typeof shouldScroll.selector === 'string') {\n      var el = document.querySelector(shouldScroll.selector);\n      if (el) {\n        position = getElementPosition(el);\n      } else if (isValidPosition(shouldScroll)) {\n        position = normalizePosition(shouldScroll);\n      }\n    } else if (isObject && isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n\n    if (position) {\n      window.scrollTo(position.x, position.y);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left,\n    y: elRect.top - docRect.top\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          \"production\" !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (called) { return }\n    called = true;\n    return fn.apply(this, arguments)\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener('popstate', function (e) {\n      this$1.transitionTo(getLocation(this$1.base), function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, this$1.current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    window.addEventListener('hashchange', function () {\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        replaceHash(route.fullPath);\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction pushHash (path) {\n  window.location.hash = path;\n}\n\nfunction replaceHash (path) {\n  var i = window.location.href.indexOf('#');\n  window.location.replace(\n    window.location.href.slice(0, i >= 0 ? i : 0) + '#' + path\n  );\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (false) {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: {} };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  \"production\" !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '2.5.3';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (VueRouter);\n\n\n/***/ }),\n/* 458 */\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n/* 459 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(0);\n    var Draggable = __webpack_require__(493);\n\n    var Eventful = __webpack_require__(30);\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n/***/ }),\n/* 460 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(0);\n    var config = __webpack_require__(46);\n    var Style = __webpack_require__(114);\n    var Pattern = __webpack_require__(113);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n/* 461 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(46);\n    var util = __webpack_require__(0);\n    var log = __webpack_require__(111);\n    var BoundingRect = __webpack_require__(17);\n    var timsort = __webpack_require__(66);\n\n    var Layer = __webpack_require__(460);\n\n    var requestAnimationFrame = __webpack_require__(107);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(112);\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n/* 462 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(0);\n    var env = __webpack_require__(13);\n\n    var Group = __webpack_require__(47);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(66);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n/* 463 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(0);\n    var Dispatcher = __webpack_require__(29).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(107);\n\n    var Animator = __webpack_require__(106);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n/* 464 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(465);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n/* 465 */\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n/* 466 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(108).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n/* 467 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(24);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 468 */\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 469 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(48).CMD;\n    var line = __webpack_require__(468);\n    var cubic = __webpack_require__(467);\n    var quadratic = __webpack_require__(470);\n    var arc = __webpack_require__(466);\n    var normalizeRadian = __webpack_require__(108).normalizeRadian;\n    var curve = __webpack_require__(24);\n\n    var windingLine = __webpack_require__(471);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n/* 470 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(24);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 471 */\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n/* 472 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(29);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n/* 473 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(12);\n    var curve = __webpack_require__(24);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n/* 474 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(29);\n    var zrUtil = __webpack_require__(0);\n    var Eventful = __webpack_require__(30);\n    var env = __webpack_require__(13);\n    var GestureMgr = __webpack_require__(472);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n/* 475 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(11);\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n/* 476 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var Gradient = __webpack_require__(68);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n/* 477 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var Gradient = __webpack_require__(68);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n/* 478 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(67);\n    var zrUtil = __webpack_require__(0);\n    var textContain = __webpack_require__(23);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n/* 479 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n/* 480 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(12);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n/* 481 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(12);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n/* 482 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = __webpack_require__(23);\n    var BoundingRect = __webpack_require__(17);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n            rect = style.textPositionRect || rect;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n/* 483 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(11).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n/* 484 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(24);\n    var vec2 = __webpack_require__(12);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(11).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n/* 485 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(11).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 486 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(11).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n/* 487 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(115);\n\n    module.exports = __webpack_require__(11).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n/* 488 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(115);\n\n    module.exports = __webpack_require__(11).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n/* 489 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(479);\n\n    module.exports = __webpack_require__(11).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n/* 490 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(11).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 491 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = __webpack_require__(13);\n    var Path = __webpack_require__(11);\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n/* 492 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(106);\n    var util = __webpack_require__(0);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(111);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n/* 493 */\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n/***/ }),\n/* 494 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(11);\n    var PathProxy = __webpack_require__(48);\n    var transformPath = __webpack_require__(495);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n/* 495 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(48).CMD;\n    var vec2 = __webpack_require__(12);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n/* 496 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(110);\n    var env = __webpack_require__(13);\n    var zrUtil = __webpack_require__(0);\n\n    var Handler = __webpack_require__(459);\n    var Storage = __webpack_require__(462);\n    var Animation = __webpack_require__(463);\n    var HandlerProxy = __webpack_require__(474);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(461)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.5.2';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ }),\n/* 497 */,\n/* 498 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n/* 499 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(458)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ })\n]);\n\n\n// WEBPACK FOOTER //\n// static/js/vendor.ba119d3926f7c36c930b.js","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/util.js\n// module id = 0\n// module chunks = 1","/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-loader@12.2.1@vue-loader/lib/component-normalizer.js\n// module id = 1\n// module chunks = 1","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.6.2',\n        dependencies: {\n            zrender: '3.5.2'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.Axis = require('./coord/Axis');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = require('./helper');\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/echarts.js\n// module id = 4\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n    var Transformable = require('zrender/lib/mixin/Transformable');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    graphic.getFont = function (opt, ecModel) {\n        var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/graphic.js\n// module id = 6\n// module chunks = 1","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/number.js\n// module id = 9\n// module chunks = 1","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/model.js\n// module id = 10\n// module chunks = 1","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Path.js\n// module id = 11\n// module chunks = 1","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/vector.js\n// module id = 12\n// module chunks = 1","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/env.js\n// module id = 13\n// module chunks = 1","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/Model.js\n// module id = 14\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/format.js\n// module id = 15\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/clazz.js\n// module id = 16\n// module chunks = 1","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/BoundingRect.js\n// module id = 17\n// module chunks = 1","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/Component.js\n// module id = 18\n// module chunks = 1","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_babel-runtime@6.23.0@babel-runtime/core-js/json/stringify.js\n// module id = 20\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('../coord/cartesian/Grid');\n\n    require('./bar/BarSeries');\n    require('./bar/BarView');\n\n    var barLayoutGrid = require('../layout/barGrid');\n    var echarts = require('../echarts');\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    require('../component/gridSimple');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/bar.js\n// module id = 21\n// module chunks = 1","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: scale.type === 'interval' ? model.get('minInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/axisHelper.js\n// module id = 22\n// module chunks = 1","\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/text.js\n// module id = 23\n// module chunks = 1","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/curve.js\n// module id = 24\n// module chunks = 1","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/matrix.js\n// module id = 25\n// module chunks = 1","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/layout.js\n// module id = 27\n// module chunks = 1","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/event.js\n// module id = 29\n// module chunks = 1","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/mixin/Eventful.js\n// module id = 30\n// module chunks = 1","/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = require('../core/LRU');\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/tool/color.js\n// module id = 31\n// module chunks = 1","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_core.js\n// module id = 32\n// module chunks = 1","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_descriptors.js\n// module id = 33\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n    var PRIORITY = echarts.PRIORITY;\n\n    require('./line/LineSeries');\n    require('./line/LineView');\n\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        require('../layout/points'), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        require('../processor/dataSample'), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    require('../component/gridSimple');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/line.js\n// module id = 34\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(\n                    labelOption.textStyle || (labelOption.textStyle = {}),\n                    crossStyle.textStyle\n                );\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/modelHelper.js\n// module id = 35\n// module chunks = 1","// FIXME Better way to pack data in graphic element\n\n\n    require('./axisPointer');\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/tooltip.js\n// module id = 36\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/Series.js\n// module id = 37\n// module chunks = 1","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 38\n// module chunks = 1","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/scale/Scale.js\n// module id = 39\n// module chunks = 1","/**\n * vuex v2.3.0\n * (c) 2017 Evan You\n * @license MIT\n */\nvar applyMixin = function (Vue) {\n  var version = Number(Vue.version.split('.')[0]);\n\n  if (version >= 2) {\n    var usesInit = Vue.config._lifecycleHooks.indexOf('init') > -1;\n    Vue.mixin(usesInit ? { init: vuexInit } : { beforeCreate: vuexInit });\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      if ( options === void 0 ) options = {};\n\n      options.init = options.init\n        ? [vuexInit].concat(options.init)\n        : vuexInit;\n      _init.call(this, options);\n    };\n  }\n\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n  function vuexInit () {\n    var options = this.$options;\n    // store injection\n    if (options.store) {\n      this.$store = options.store;\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store;\n    }\n  }\n};\n\nvar devtoolHook =\n  typeof window !== 'undefined' &&\n  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nfunction devtoolPlugin (store) {\n  if (!devtoolHook) { return }\n\n  store._devtoolHook = devtoolHook;\n\n  devtoolHook.emit('vuex:init', store);\n\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState);\n  });\n\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state);\n  });\n}\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\n\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime;\n  this._children = Object.create(null);\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors$1 = { namespaced: {} };\n\nprototypeAccessors$1.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors$1 );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  var this$1 = this;\n\n  // register root module (Vuex.Store options)\n  this.root = new Module(rawRootModule, false);\n\n  // register all nested modules\n  if (rawRootModule.modules) {\n    forEachValue(rawRootModule.modules, function (rawModule, key) {\n      this$1.register([key], rawModule, false);\n    });\n  }\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update(this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  var parent = this.get(path.slice(0, -1));\n  var newModule = new Module(rawModule, runtime);\n  parent.addChild(path[path.length - 1], newModule);\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n  if (!parent.getChild(key).runtime) { return }\n\n  parent.removeChild(key);\n};\n\nfunction update (targetModule, newModule) {\n  // update target module\n  targetModule.update(newModule);\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        console.warn(\n          \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n          'manual reload is needed'\n        );\n        return\n      }\n      update(targetModule.getChild(key), newModule.modules[key]);\n    }\n  }\n}\n\nvar Vue; // bind on install\n\nvar Store = function Store (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\");\n  assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n\n  var state = options.state; if ( state === void 0 ) state = {};\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\n  // store internal state\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._watcherVM = new Vue();\n\n  // bind commit and dispatch to self\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n  this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  };\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n  };\n\n  // strict mode\n  this.strict = strict;\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root);\n\n  // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreVM(this, state);\n\n  // apply plugins\n  plugins.concat(devtoolPlugin).forEach(function (plugin) { return plugin(this$1); });\n};\n\nvar prototypeAccessors = { state: {} };\n\nprototypeAccessors.state.get = function () {\n  return this._vm._data.$$state\n};\n\nprototypeAccessors.state.set = function (v) {\n  assert(false, \"Use store.replaceState() to explicit replace store state.\");\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload };\n  var entry = this._mutations[type];\n  if (!entry) {\n    console.error((\"[vuex] unknown mutation type: \" + type));\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload);\n    });\n  });\n  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });\n\n  if (options && options.silent) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    );\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var entry = this._actions[type];\n  if (!entry) {\n    console.error((\"[vuex] unknown action type: \" + type));\n    return\n  }\n  return entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload)\n};\n\nStore.prototype.subscribe = function subscribe (fn) {\n  var subs = this._subscribers;\n  if (subs.indexOf(fn) < 0) {\n    subs.push(fn);\n  }\n  return function () {\n    var i = subs.indexOf(fn);\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  }\n};\n\nStore.prototype.watch = function watch (getter, cb, options) {\n    var this$1 = this;\n\n  assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm._data.$$state = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule) {\n  if (typeof path === 'string') { path = [path]; }\n  assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  this._modules.register(path, rawModule);\n  installModule(this, this.state, path, this._modules.get(path));\n  // reset store to update getters...\n  resetStoreVM(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1 = this;\n\n  if (typeof path === 'string') { path = [path]; }\n  assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  this._modules.unregister(path);\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1));\n    Vue.delete(parentState, path[path.length - 1]);\n  });\n  resetStore(this);\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions);\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors );\n\nfunction resetStore (store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state;\n  // init all modules\n  installModule(store, state, [], store._modules.root, true);\n  // reset vm\n  resetStoreVM(store, state, hot);\n}\n\nfunction resetStoreVM (store, state, hot) {\n  var oldVm = store._vm;\n\n  // bind store public getters\n  store.getters = {};\n  var wrappedGetters = store._wrappedGetters;\n  var computed = {};\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    computed[key] = function () { return fn(store); };\n    Object.defineProperty(store.getters, key, {\n      get: function () { return store._vm[key]; },\n      enumerable: true // for local getters\n    });\n  });\n\n  // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  store._vm = new Vue({\n    data: {\n      $$state: state\n    },\n    computed: computed\n  });\n  Vue.config.silent = silent;\n\n  // enable strict mode for new vm\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldVm) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldVm._data.$$state = null;\n      });\n    }\n    Vue.nextTick(function () { return oldVm.$destroy(); });\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n  var namespace = store._modules.getNamespace(path);\n\n  // register in namespace map\n  if (module.namespaced) {\n    store._modulesNamespaceMap[namespace] = module;\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n    store._withCommit(function () {\n      Vue.set(parentState, moduleName, module.state);\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n\n  module.forEachAction(function (action, key) {\n    var namespacedType = namespace + key;\n    registerAction(store, namespacedType, action, local);\n  });\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace, path) {\n  var noNamespace = namespace === '';\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (!store._actions[type]) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (!store._mutations[type]) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  };\n\n  // getters and state object must be gotten lazily\n  // because they will be changed by vm update\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace\n        ? function () { return store.getters; }\n        : function () { return makeLocalGetters(store, namespace); }\n    },\n    state: {\n      get: function () { return getNestedState(store.state, path); }\n    }\n  });\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  var gettersProxy = {};\n\n  var splitPos = namespace.length;\n  Object.keys(store.getters).forEach(function (type) {\n    // skip if the target getter is not match this namespace\n    if (type.slice(0, splitPos) !== namespace) { return }\n\n    // extract local getter type\n    var localType = type.slice(splitPos);\n\n    // Add a port to the getters proxy.\n    // Define as getter property because\n    // we do not want to evaluate the getters in this time.\n    Object.defineProperty(gettersProxy, localType, {\n      get: function () { return store.getters[type]; },\n      enumerable: true\n    });\n  });\n\n  return gettersProxy\n}\n\nfunction registerMutation (store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler (payload) {\n    handler(local.state, payload);\n  });\n}\n\nfunction registerAction (store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler (payload, cb) {\n    var res = handler({\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload, cb);\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n        throw err\n      })\n    } else {\n      return res\n    }\n  });\n}\n\nfunction registerGetter (store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    console.error((\"[vuex] duplicate getter key: \" + type));\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      local.state, // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  };\n}\n\nfunction enableStrictMode (store) {\n  store._vm.$watch(function () { return this._data.$$state }, function () {\n    assert(store._committing, \"Do not mutate vuex store state outside mutation handlers.\");\n  }, { deep: true, sync: true });\n}\n\nfunction getNestedState (state, path) {\n  return path.length\n    ? path.reduce(function (state, key) { return state[key]; }, state)\n    : state\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  assert(typeof type === 'string', (\"Expects string as the type, but found \" + (typeof type) + \".\"));\n\n  return { type: type, payload: payload, options: options }\n}\n\nfunction install (_Vue) {\n  if (Vue) {\n    console.error(\n      '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n    );\n    return\n  }\n  Vue = _Vue;\n  applyMixin(Vue);\n}\n\n// auto install in dist mode\nif (typeof window !== 'undefined' && window.Vue) {\n  install(window.Vue);\n}\n\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n        if (!module) {\n          return\n        }\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      if (namespace && !getModuleByNamespace(this.$store, 'mapMutations', namespace)) {\n        return\n      }\n      return this.$store.commit.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedGetter () {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return\n      }\n      if (!(val in this.$store.getters)) {\n        console.error((\"[vuex] unknown getter: \" + val));\n        return\n      }\n      return this.$store.getters[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      if (namespace && !getModuleByNamespace(this.$store, 'mapActions', namespace)) {\n        return\n      }\n      return this.$store.dispatch.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nfunction normalizeMap (map) {\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n    return fn(namespace, map)\n  }\n}\n\nfunction getModuleByNamespace (store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n  if (!module) {\n    console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace));\n  }\n  return module\n}\n\nvar index_esm = {\n  Store: Store,\n  install: install,\n  version: '2.3.0',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions\n};\n\nexport { Store, mapState, mapMutations, mapGetters, mapActions };export default index_esm;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vuex@2.3.1@vuex/dist/vuex.esm.js\n// module id = 45\n// module chunks = 1","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/config.js\n// module id = 46\n// module chunks = 1","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/container/Group.js\n// module id = 47\n// module chunks = 1","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/PathProxy.js\n// module id = 48\n// module chunks = 1","/*!\n * Vue.js v2.3.4\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nvar _toString = Object.prototype.toString;\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      return JSON.stringify(a) === JSON.stringify(b)\n    } catch (e) {\n      // possible circular reference\n      return a === b\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName = (null); // work around flow check\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'string'\n      ? vm\n      : typeof vm === 'function' && vm.options\n        ? vm.options.name\n        : vm._isVue\n          ? vm.$options.name || vm.$options._componentTag\n          : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  var generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    } )); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) {\n        try {\n          cb.call(ctx);\n        } catch (e) {\n          handleError(e, ctx, 'nextTick');\n        }\n      } else if (_resolve) {\n        _resolve(ctx);\n      }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve, reject) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && typeof key === 'number') {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target ).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && typeof key === 'number') {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target ).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    valid = typeof value === expectedType.toLowerCase();\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      for (var i = 0; i < fns.length; i++) {\n        fns[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        (last).text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && isDef(c.componentOptions)) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      child.data && child.data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // remove reference to DOM nodes (prevents leak)\n    vm.$options._parentElm = vm.$options._refElm = null;\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    if (process.env.NODE_ENV !== 'production') {\n      observerState.isSettingProps = true;\n    }\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    if (process.env.NODE_ENV !== 'production') {\n      observerState.isSettingProps = false;\n    }\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdateHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdateHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  if (this.user) {\n    try {\n      value = this.getter.call(vm, vm);\n    } catch (e) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    }\n  } else {\n    value = this.getter.call(vm, vm);\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = {\n  key: 1,\n  ref: 1,\n  slot: 1\n};\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      if (isReservedProp[key] || config.isReservedAttr(key)) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(keys[i])) {\n      proxy(vm, \"_data\", keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production') {\n      if (getter === undefined) {\n        warn(\n          (\"No getter function has been defined for computed property \\\"\" + key + \"\\\".\"),\n          vm\n        );\n        getter = noop;\n      }\n    }\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    // isArray here\n    var isArray = Array.isArray(inject);\n    var result = Object.create(null);\n    var keys = isArray\n      ? inject\n      : hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = isArray ? key : inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || {});\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    data: data,\n    props: props,\n    children: children,\n    parent: context,\n    listeners: data.on || {},\n    injections: resolveInject(Ctor.options.inject, context),\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    vnode.functionalOptions = Ctor.options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (isUndef(Ctor.cid)) {\n    Ctor = resolveAsyncComponent(Ctor, baseCtor, context);\n    if (Ctor === undefined) {\n      // return nothing if this is indeed an async component\n      // wait for the callback to trigger parent update.\n      return\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && isUndef(child.ns)) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      extend(props, bindObject);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && process.env.NODE_ENV !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      for (var key in value) {\n        if (key === 'class' || key === 'style') {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n        }\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-init:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(((vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue$3)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return this\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, current, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        if (cachedNode !== current) {\n          pruneCacheEntry(cachedNode);\n        }\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.3.4';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (isUndef(value)) {\n    return ''\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  var res = '';\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (isDef(value[i])) {\n        if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key &&\n    a.tag === b.tag &&\n    a.isComment === b.isComment &&\n    isDef(a.data) === isDef(b.data) &&\n    sameInputType(a, b)\n  )\n}\n\n// Some browsers do not support dynamically changing type for <input>\n// so they need to be treated as different nodes\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (isDef(parent)) {\n      if (isDef(ref)) {\n        if (ref.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !elmToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.elm = oldVnode.elm;\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (process.env.NODE_ENV !== 'production' &&\n              typeof console !== 'undefined' &&\n              !bailed\n            ) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers && modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return \"var $$exp = \" + (modelRs.exp) + \", $$idx = \" + (modelRs.idx) + \";\" +\n      \"if (!Array.isArray($$exp)){\" +\n        value + \"=\" + assignment + \"}\" +\n      \"else{$$exp.splice($$idx, 1, \" + assignment + \")}\"\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number || type === 'number') {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  if (once$$1) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if ((isDef(modifiers) && modifiers.number) || elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likley wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text' || el.type === 'password') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (process.env.NODE_ENV !== 'production' && isChrome) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n    config.productionTip !== false &&\n    inBrowser && typeof console !== 'undefined'\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\">\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar decoder;\n\nfunction decode (html) {\n  decoder = decoder || document.createElement('div');\n  decoder.innerHTML = html;\n  return decoder.textContent\n}\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          continue\n        }\n      }\n\n      var text = (void 0), rest$1 = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest$1 = html.slice(textEnd);\n        while (\n          !endTag.test(rest$1) &&\n          !startTagOpen.test(rest$1) &&\n          !comment.test(rest$1) &&\n          !conditionalComment.test(rest$1)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest$1.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest$1 = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var endTagLength = 0;\n      var rest = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest.length;\n      html = rest;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformIsPreTag = options.isPreTag || no;\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      process.env.NODE_ENV !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      walkThroughConditionsBlocks(node.ifConditions, isInFor);\n    }\n  }\n}\n\nfunction walkThroughConditionsBlocks (conditionBlocks, isInFor) {\n  for (var i = 1, len = conditionBlocks.length; i < len; i++) {\n    markStaticRoots(conditionBlocks[i].block, isInFor);\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (process.env.NODE_ENV !== 'production' &&\n      name === 'click' &&\n      handler && handler.modifiers && handler.modifiers.right\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n// configurable state\nvar warn$3;\nvar transforms$1;\nvar dataGenFns;\nvar platformDirectives$1;\nvar isPlatformReservedTag$1;\nvar staticRenderFns;\nvar onceCount;\nvar currentOptions;\n\nfunction generate (\n  ast,\n  options\n) {\n  // save previous staticRenderFns so generate calls can be nested\n  var prevStaticRenderFns = staticRenderFns;\n  var currentStaticRenderFns = staticRenderFns = [];\n  var prevOnceCount = onceCount;\n  onceCount = 0;\n  currentOptions = options;\n  warn$3 = options.warn || baseWarn;\n  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');\n  dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  platformDirectives$1 = options.directives || {};\n  isPlatformReservedTag$1 = options.isReservedTag || no;\n  var code = ast ? genElement(ast) : '_c(\"div\")';\n  staticRenderFns = prevStaticRenderFns;\n  onceCount = prevOnceCount;\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: currentStaticRenderFns\n  }\n}\n\nfunction genElement (el) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el);\n    } else {\n      var data = el.plain ? undefined : genData(el);\n\n      var children = el.inlineTemplate ? null : genChildren(el, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < transforms$1.length; i++) {\n      code = transforms$1[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el) {\n  el.staticProcessed = true;\n  staticRenderFns.push((\"with(this){return \" + (genElement(el)) + \"}\"));\n  return (\"_m(\" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && warn$3(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el)\n    }\n    return (\"_o(\" + (genElement(el)) + \",\" + (onceCount++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el)\n  }\n}\n\nfunction genIf (el) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice())\n}\n\nfunction genIfConditions (conditions) {\n  if (!conditions.length) {\n    return '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return el.once ? genOnce(el) : genElement(el)\n  }\n}\n\nfunction genFor (el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    maybeComponent(el) && el.tag !== 'slot' && el.tag !== 'template' && !el.key\n  ) {\n    warn$3(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genElement(el)) +\n    '})'\n}\n\nfunction genData (el) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < dataGenFns.length; i++) {\n    data += dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, warn$3)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, warn$3)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  return data\n}\n\nfunction genDirectives (el) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, warn$3);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length > 1 || ast.type !== 1\n  )) {\n    warn$3('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, currentOptions);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (slots) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) { return genScopedSlot(key, slots[key]); }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (key, el) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el)\n  }\n  return \"{key:\" + key + \",fn:function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el) || 'void 0'\n      : genElement(el)) + \"}}\"\n}\n\nfunction genForScopedSlot (key, el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el)) +\n    '})'\n}\n\nfunction genChildren (el, checkSkip) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return genElement(el$1)\n    }\n    var normalizationType = checkSkip ? getNormalizationType(children) : 0;\n    return (\"[\" + (children.map(genNode).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (children) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction maybeComponent (el) {\n  return !isPlatformReservedTag$1(el.tag)\n}\n\nfunction genNode (node) {\n  if (node.type === 1) {\n    return genElement(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genSlot (el) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (componentName, el) {\n  var children = el.inlineTemplate ? null : genChildren(el, true);\n  return (\"_c(\" + componentName + \",\" + (genData(el)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n}\n\nfunction makeFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompiler (baseOptions) {\n  var functionCompileCache = Object.create(null);\n\n  function compile (\n    template,\n    options\n  ) {\n    var finalOptions = Object.create(baseOptions);\n    var errors = [];\n    var tips = [];\n    finalOptions.warn = function (msg, tip$$1) {\n      (tip$$1 ? tips : errors).push(msg);\n    };\n\n    if (options) {\n      // merge custom modules\n      if (options.modules) {\n        finalOptions.modules = (baseOptions.modules || []).concat(options.modules);\n      }\n      // merge custom directives\n      if (options.directives) {\n        finalOptions.directives = extend(\n          Object.create(baseOptions.directives),\n          options.directives\n        );\n      }\n      // copy other options\n      for (var key in options) {\n        if (key !== 'modules' && key !== 'directives') {\n          finalOptions[key] = options[key];\n        }\n      }\n    }\n\n    var compiled = baseCompile(template, finalOptions);\n    if (process.env.NODE_ENV !== 'production') {\n      errors.push.apply(errors, detectErrors(compiled.ast));\n    }\n    compiled.errors = errors;\n    compiled.tips = tips;\n    return compiled\n  }\n\n  function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (functionCompileCache[key]) {\n      return functionCompileCache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = makeFunction(compiled.render, fnGenErrors);\n    var l = compiled.staticRenderFns.length;\n    res.staticRenderFns = new Array(l);\n    for (var i = 0; i < l; i++) {\n      res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i], fnGenErrors);\n    }\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (functionCompileCache[key] = res)\n  }\n\n  return {\n    compile: compile,\n    compileToFunctions: compileToFunctions\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData$1\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$2 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$2\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\nexport default Vue$3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue@2.3.4@vue/dist/vue.esm.js\n// module id = 49\n// module chunks = 1","\"use strict\";\n\nexports.__esModule = true;\n\nvar _assign = require(\"../core-js/object/assign\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_babel-runtime@6.23.0@babel-runtime/helpers/extends.js\n// module id = 50\n// module chunks = 1","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_fails.js\n// module id = 51\n// module chunks = 1","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_global.js\n// module id = 52\n// module chunks = 1","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_is-object.js\n// module id = 53\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/CoordinateSystem.js\n// module id = 54\n// module chunks = 1","\n\n    var echarts = require('../echarts');\n\n    require('./candlestick/CandlestickSeries');\n    require('./candlestick/CandlestickView');\n\n    echarts.registerPreprocessor(\n        require('./candlestick/preprocessor')\n    );\n\n    echarts.registerVisual(require('./candlestick/candlestickVisual'));\n    echarts.registerLayout(require('./candlestick/candlestickLayout'));\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/candlestick.js\n// module id = 55\n// module chunks = 1","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/helper/createListFromArray.js\n// module id = 56\n// module chunks = 1","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/data/List.js\n// module id = 57\n// module chunks = 1","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/data/helper/completeDimensions.js\n// module id = 58\n// module chunks = 1","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n    var helper = require('./helper');\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         */\n        niceTicks: function (splitNumber, minInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval);\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval=false]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/scale/Interval.js\n// module id = 59\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/component.js\n// module id = 60\n// module chunks = 1","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/view/Chart.js\n// module id = 61\n// module chunks = 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 65\n// module chunks = 1","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/timsort.js\n// module id = 66\n// module chunks = 1","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Displayable.js\n// module id = 67\n// module chunks = 1","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Gradient.js\n// module id = 68\n// module chunks = 1","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_defined.js\n// module id = 70\n// module chunks = 1","var global    = require('./_global')\n  , core      = require('./_core')\n  , ctx       = require('./_ctx')\n  , hide      = require('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_export.js\n// module id = 71\n// module chunks = 1","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_iobject.js\n// module id = 72\n// module chunks = 1","var anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_object-dp.js\n// module id = 73\n// module chunks = 1","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_to-integer.js\n// module id = 74\n// module chunks = 1","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_to-iobject.js\n// module id = 75\n// module chunks = 1","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n    var labelHelper = require('./labelHelper');\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n        var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n            cursorStyle = itemModel.getShallow('cursor');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        cursorStyle && symbolPath.attr('cursor', cursorStyle);\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        var valueDim = labelHelper.findLabelValueDim(data);\n        labelHelper.setTextToStyle(\n            data, idx, valueDim, elStyle, seriesModel, labelModel, color\n        );\n        labelHelper.setTextToStyle(\n            data, idx, valueDim, hoverItemStyle, seriesModel, hoverLabelModel, color\n        );\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/helper/Symbol.js\n// module id = 76\n// module chunks = 1","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var WhiskerBoxDraw = require('../helper/WhiskerBoxDraw');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var seriesModelMixin = {\n\n        /**\n         * @private\n         * @type {string}\n         */\n        _baseAxisDim: null,\n\n        /**\n         * @override\n         */\n        getInitialData: function (option, ecModel) {\n            // When both types of xAxis and yAxis are 'value', layout is\n            // needed to be specified by user. Otherwise, layout can be\n            // judged by which axis is category.\n\n            var categories;\n\n            var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n            var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n            var addOrdinal;\n\n            // FIXME\n            // 考虑时间轴\n\n            if (xAxisType === 'category') {\n                option.layout = 'horizontal';\n                categories = xAxisModel.getCategories();\n                addOrdinal = true;\n            }\n            else if (yAxisType  === 'category') {\n                option.layout = 'vertical';\n                categories = yAxisModel.getCategories();\n                addOrdinal = true;\n            }\n            else {\n                option.layout = option.layout || 'horizontal';\n            }\n\n            var coordDims = ['x', 'y'];\n            var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n            var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n            var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n            var data = option.data;\n\n            addOrdinal && zrUtil.each(data, function (item, index) {\n                zrUtil.isArray(item) && item.unshift(index);\n            });\n\n            var dimensions = [{\n                name: baseAxisDim,\n                otherDims: {\n                    tooltip: false\n                },\n                dimsDef: ['base']\n            }, {\n                name: otherAxisDim,\n                dimsDef: this.defaultValueDimensions.slice()\n            }];\n\n            dimensions = completeDimensions(dimensions, data, {\n                encodeDef: this.get('encode'),\n                dimsDef: this.get('dimensions')\n            });\n\n            var list = new List(dimensions, this);\n            list.initData(data, categories ? categories.slice() : null);\n\n            return list;\n        },\n\n        /**\n         * If horizontal, base axis is x, otherwise y.\n         * @override\n         */\n        getBaseAxis: function () {\n            var dim = this._baseAxisDim;\n            return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n        }\n\n    };\n\n    var viewMixin = {\n\n        init: function () {\n            /**\n             * Old data.\n             * @private\n             * @type {module:echarts/chart/helper/WhiskerBoxDraw}\n             */\n            var whiskerBoxDraw = this._whiskerBoxDraw = new WhiskerBoxDraw(\n                this.getStyleUpdater()\n            );\n            this.group.add(whiskerBoxDraw.group);\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            this._whiskerBoxDraw.updateData(seriesModel.getData());\n        },\n\n        remove: function (ecModel) {\n            this._whiskerBoxDraw.remove();\n        }\n    };\n\n    module.exports = {\n        seriesModelMixin: seriesModelMixin,\n        viewMixin: viewMixin\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/helper/whiskerBoxCommon.js\n// module id = 77\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var matrix = require('zrender/lib/core/matrix');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function'\n                            ? textColor(\n                                // (1) In category axis with data zoom, tick is not the original\n                                // index of axis.data. So tick should not be exposed to user\n                                // in category axis.\n                                // (2) Compatible with previous version, which always returns labelStr.\n                                // But in interval scale labelStr is like '223,445', which maked\n                                // user repalce ','. So we modify it to return original val but remain\n                                // it as 'string' to avoid error in replacing.\n                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                                index\n                            )\n                            : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.textVerticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axis/AxisBuilder.js\n// module id = 78\n// module chunks = 1","\n\n    var axisPointerModelHelper = require('../axisPointer/modelHelper');\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axis/AxisView.js\n// module id = 79\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 80\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 81\n// module chunks = 1","\n\n    var env = require('zrender/lib/core/env');\n    var zrUtil = require('zrender/lib/core/util');\n    var get = require('../../util/model').makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/globalListener.js\n// module id = 82\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var textContain = require('zrender/lib/contain/text');\n    var formatUtil = require('../../util/format');\n    var matrix = require('zrender/lib/core/matrix');\n    var axisHelper = require('../../coord/axisHelper');\n    var AxisBuilder = require('../axis/AxisBuilder');\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var textStyleModel = labelModel.getModel('textStyle');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = textStyleModel.getFont();\n        var textRect = textContain.getBoundingRect(\n            text, font, labelPos.textAlign, labelPos.textBaseline\n        );\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            style: {\n                text: text,\n                textFont: font,\n                textFill: textStyleModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/viewHelper.js\n// module id = 83\n// module chunks = 1","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/gridSimple.js\n// module id = 84\n// module chunks = 1","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getModel('textStyle').getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/Axis.js\n// module id = 85\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/axisModelCommonMixin.js\n// module id = 86\n// module chunks = 1","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/cartesian/AxisModel.js\n// module id = 87\n// module chunks = 1","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (\n                        axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis)\n                    )) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (!ignoreContainLabel && gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            // dataSampling requires axis extent, so resize\n            // should be performed in create stage.\n            grid.resize(gridModel, api, true);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Grid.js\n// module id = 88\n// module chunks = 1","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/mixin/colorPalette.js\n// module id = 89\n// module chunks = 1","/**\n * For testable.\n */\n\n\n    var numberUtil = require('../util/number');\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/scale/helper.js\n// module id = 90\n// module chunks = 1","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/symbol.js\n// module id = 91\n// module chunks = 1","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/throttle.js\n// module id = 92\n// module chunks = 1","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/Element.js\n// module id = 105\n// module chunks = 1","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/animation/Animator.js\n// module id = 106\n// module chunks = 1","\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/animation/requestAnimationFrame.js\n// module id = 107\n// module chunks = 1","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/util.js\n// module id = 108\n// module chunks = 1","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/LRU.js\n// module id = 109\n// module chunks = 1","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/guid.js\n// module id = 110\n// module chunks = 1","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/log.js\n// module id = 111\n// module chunks = 1","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n\n    var LRU = require('../core/LRU');\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Image.js\n// module id = 112\n// module chunks = 1","\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Pattern.js\n// module id = 113\n// module chunks = 1","/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textPositionRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Style.js\n// module id = 114\n// module chunks = 1","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/helper/poly.js\n// module id = 115\n// module chunks = 1","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/mixin/Transformable.js\n// module id = 116\n// module chunks = 1","/*!\n * vue-resource v1.3.4\n * https://github.com/pagekit/vue-resource\n * Released under the MIT License.\n */\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING  = 2;\n\nfunction Promise$1(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise$1.reject = function (r) {\n    return new Promise$1(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise$1.resolve = function (x) {\n    return new Promise$1(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise$1.all = function all(iterable) {\n    return new Promise$1(function (resolve, reject) {\n        var count = 0, result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$1.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise$1.race = function race(iterable) {\n    return new Promise$1(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$1.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p$1 = Promise$1.prototype;\n\np$1.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np$1.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np$1.notify = function notify() {\n    var promise = this;\n\n    nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np$1.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise$1(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np$1.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\n/**\n * Promise adapter.\n */\n\nif (typeof Promise === 'undefined') {\n    window.Promise = Promise$1;\n}\n\nfunction PromiseObj(executor, context) {\n\n    if (executor instanceof Promise) {\n        this.promise = executor;\n    } else {\n        this.promise = new Promise(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromiseObj.all = function (iterable, context) {\n    return new PromiseObj(Promise.all(iterable), context);\n};\n\nPromiseObj.resolve = function (value, context) {\n    return new PromiseObj(Promise.resolve(value), context);\n};\n\nPromiseObj.reject = function (reason, context) {\n    return new PromiseObj(Promise.reject(reason), context);\n};\n\nPromiseObj.race = function (iterable, context) {\n    return new PromiseObj(Promise.race(iterable), context);\n};\n\nvar p = PromiseObj.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new PromiseObj(this.promise.then(fulfilled, rejected), this.context);\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new PromiseObj(this.promise.catch(rejected), this.context);\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n            callback.call(this);\n            return value;\n        }, function (reason) {\n            callback.call(this);\n            return Promise.reject(reason);\n        }\n    );\n};\n\n/**\n * Utility functions.\n */\n\nvar ref = {};\nvar hasOwnProperty = ref.hasOwnProperty;\n\nvar ref$1 = [];\nvar slice = ref$1.slice;\nvar debug = false;\nvar ntick;\n\nvar inBrowser = typeof window !== 'undefined';\n\nvar Util = function (ref) {\n    var config = ref.config;\n    var nextTick = ref.nextTick;\n\n    ntick = nextTick;\n    debug = config.debug || !config.silent;\n};\n\nfunction warn(msg) {\n    if (typeof console !== 'undefined' && debug) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n}\n\nfunction error(msg) {\n    if (typeof console !== 'undefined') {\n        console.error(msg);\n    }\n}\n\nfunction nextTick(cb, ctx) {\n    return ntick(cb, ctx);\n}\n\nfunction trim(str) {\n    return str ? str.replace(/^\\s*|\\s*$/g, '') : '';\n}\n\nfunction trimEnd(str, chars) {\n\n    if (str && chars === undefined) {\n        return str.replace(/\\s+$/, '');\n    }\n\n    if (!str || !chars) {\n        return str;\n    }\n\n    return str.replace(new RegExp((\"[\" + chars + \"]+$\")), '');\n}\n\nfunction toLower(str) {\n    return str ? str.toLowerCase() : '';\n}\n\nfunction toUpper(str) {\n    return str ? str.toUpperCase() : '';\n}\n\nvar isArray = Array.isArray;\n\nfunction isString(val) {\n    return typeof val === 'string';\n}\n\n\n\nfunction isFunction(val) {\n    return typeof val === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n}\n\nfunction isBlob(obj) {\n    return typeof Blob !== 'undefined' && obj instanceof Blob;\n}\n\nfunction isFormData(obj) {\n    return typeof FormData !== 'undefined' && obj instanceof FormData;\n}\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = PromiseObj.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\nfunction options(fn, obj, opts) {\n\n    opts = opts || {};\n\n    if (isFunction(opts)) {\n        opts = opts.call(obj);\n    }\n\n    return merge(fn.bind({$vm: obj, $options: opts}), fn, {$options: opts});\n}\n\nfunction each(obj, iterator) {\n\n    var i, key;\n\n    if (isArray(obj)) {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (isObject(obj)) {\n        for (key in obj) {\n            if (hasOwnProperty.call(obj, key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n}\n\nvar assign = Object.assign || _assign;\n\nfunction merge(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source, true);\n    });\n\n    return target;\n}\n\nfunction defaults(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n\n        for (var key in source) {\n            if (target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n\n    });\n\n    return target;\n}\n\nfunction _assign(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source);\n    });\n\n    return target;\n}\n\nfunction _merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (isArray(source[key]) && !isArray(target[key])) {\n                target[key] = [];\n            }\n            _merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\n/**\n * Root Prefix Transform.\n */\n\nvar root = function (options$$1, next) {\n\n    var url = next(options$$1);\n\n    if (isString(options$$1.root) && !/^(https?:)?\\//.test(url)) {\n        url = trimEnd(options$$1.root, '/') + '/' + url;\n    }\n\n    return url;\n};\n\n/**\n * Query Parameter Transform.\n */\n\nvar query = function (options$$1, next) {\n\n    var urlParams = Object.keys(Url.options.params), query = {}, url = next(options$$1);\n\n    each(options$$1.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = Url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n};\n\n/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nfunction expand(url, params, variables) {\n\n    var tmpl = parse(url), expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n}\n\nfunction parse(template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'], variables = [];\n\n    return {\n        vars: variables,\n        expand: function expand(context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null, values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n\n                } else {\n                    return encodeReserved(literal);\n                }\n            });\n        }\n    };\n}\n\nfunction getValues(context, operator, key, modifier) {\n\n    var value = context[key], result = [];\n\n    if (isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n\n                if (isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n}\n\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n}\n\nfunction encodeValue(operator, value, key) {\n\n    value = (operator === '+' || operator === '#') ? encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n}\n\nfunction encodeReserved(str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n}\n\n/**\n * URL Template (RFC 6570) Transform.\n */\n\nvar template = function (options) {\n\n    var variables = [], url = expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n};\n\n/**\n * Service for URL templating.\n */\n\nfunction Url(url, params) {\n\n    var self = this || {}, options$$1 = url, transform;\n\n    if (isString(url)) {\n        options$$1 = {url: url, params: params};\n    }\n\n    options$$1 = merge({}, Url.options, self.$options, options$$1);\n\n    Url.transforms.forEach(function (handler) {\n\n        if (isString(handler)) {\n            handler = Url.transform[handler];\n        }\n\n        if (isFunction(handler)) {\n            transform = factory(handler, transform, self.$vm);\n        }\n\n    });\n\n    return transform(options$$1);\n}\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transform = {template: template, query: query, root: root};\nUrl.transforms = ['template', 'query', 'root'];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [], escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    var el = document.createElement('a');\n\n    if (document.documentMode) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options$$1) {\n        return handler.call(vm, options$$1, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = isArray(obj), plain = isPlainObject(obj), hash;\n\n    each(obj, function (value, key) {\n\n        hash = isObject(value) || isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\n/**\n * XDomain client (Internet Explorer).\n */\n\nvar xdrClient = function (request) {\n    return new PromiseObj(function (resolve) {\n\n        var xdr = new XDomainRequest(), handler = function (ref) {\n            var type = ref.type;\n\n\n            var status = 0;\n\n            if (type === 'load') {\n                status = 200;\n            } else if (type === 'error') {\n                status = 500;\n            }\n\n            resolve(request.respondWith(xdr.responseText, {status: status}));\n        };\n\n        request.abort = function () { return xdr.abort(); };\n\n        xdr.open(request.method, request.getUrl());\n\n        if (request.timeout) {\n            xdr.timeout = request.timeout;\n        }\n\n        xdr.onload = handler;\n        xdr.onabort = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = handler;\n        xdr.onprogress = function () {};\n        xdr.send(request.getBody());\n    });\n};\n\n/**\n * CORS Interceptor.\n */\n\nvar SUPPORTS_CORS = inBrowser && 'withCredentials' in new XMLHttpRequest();\n\nvar cors = function (request, next) {\n\n    if (inBrowser) {\n\n        var orgUrl = Url.parse(location.href);\n        var reqUrl = Url.parse(request.getUrl());\n\n        if (reqUrl.protocol !== orgUrl.protocol || reqUrl.host !== orgUrl.host) {\n\n            request.crossOrigin = true;\n            request.emulateHTTP = false;\n\n            if (!SUPPORTS_CORS) {\n                request.client = xdrClient;\n            }\n        }\n    }\n\n    next();\n};\n\n/**\n * Form data Interceptor.\n */\n\nvar form = function (request, next) {\n\n    if (isFormData(request.body)) {\n\n        request.headers.delete('Content-Type');\n\n    } else if (isObject(request.body) && request.emulateJSON) {\n\n        request.body = Url.params(request.body);\n        request.headers.set('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    next();\n};\n\n/**\n * JSON Interceptor.\n */\n\nvar json = function (request, next) {\n\n    var type = request.headers.get('Content-Type') || '';\n\n    if (isObject(request.body) && type.indexOf('application/json') === 0) {\n        request.body = JSON.stringify(request.body);\n    }\n\n    next(function (response) {\n\n        return response.bodyText ? when(response.text(), function (text) {\n\n            type = response.headers.get('Content-Type') || '';\n\n            if (type.indexOf('application/json') === 0 || isJson(text)) {\n\n                try {\n                    response.body = JSON.parse(text);\n                } catch (e) {\n                    response.body = null;\n                }\n\n            } else {\n                response.body = text;\n            }\n\n            return response;\n\n        }) : response;\n\n    });\n};\n\nfunction isJson(str) {\n\n    var start = str.match(/^\\[|^\\{(?!\\{)/), end = {'[': /]$/, '{': /}$/};\n\n    return start && end[start[0]].test(str);\n}\n\n/**\n * JSONP client (Browser).\n */\n\nvar jsonpClient = function (request) {\n    return new PromiseObj(function (resolve) {\n\n        var name = request.jsonp || 'callback', callback = request.jsonpCallback || '_jsonp' + Math.random().toString(36).substr(2), body = null, handler, script;\n\n        handler = function (ref) {\n            var type = ref.type;\n\n\n            var status = 0;\n\n            if (type === 'load' && body !== null) {\n                status = 200;\n            } else if (type === 'error') {\n                status = 500;\n            }\n\n            if (status && window[callback]) {\n                delete window[callback];\n                document.body.removeChild(script);\n            }\n\n            resolve(request.respondWith(body, {status: status}));\n        };\n\n        window[callback] = function (result) {\n            body = JSON.stringify(result);\n        };\n\n        request.abort = function () {\n            handler({type: 'abort'});\n        };\n\n        request.params[name] = callback;\n\n        if (request.timeout) {\n            setTimeout(request.abort, request.timeout);\n        }\n\n        script = document.createElement('script');\n        script.src = request.getUrl();\n        script.type = 'text/javascript';\n        script.async = true;\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n};\n\n/**\n * JSONP Interceptor.\n */\n\nvar jsonp = function (request, next) {\n\n    if (request.method == 'JSONP') {\n        request.client = jsonpClient;\n    }\n\n    next();\n};\n\n/**\n * Before Interceptor.\n */\n\nvar before = function (request, next) {\n\n    if (isFunction(request.before)) {\n        request.before.call(this, request);\n    }\n\n    next();\n};\n\n/**\n * HTTP method override Interceptor.\n */\n\nvar method = function (request, next) {\n\n    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n        request.headers.set('X-HTTP-Method-Override', request.method);\n        request.method = 'POST';\n    }\n\n    next();\n};\n\n/**\n * Header Interceptor.\n */\n\nvar header = function (request, next) {\n\n    var headers = assign({}, Http.headers.common,\n        !request.crossOrigin ? Http.headers.custom : {},\n        Http.headers[toLower(request.method)]\n    );\n\n    each(headers, function (value, name) {\n        if (!request.headers.has(name)) {\n            request.headers.set(name, value);\n        }\n    });\n\n    next();\n};\n\n/**\n * XMLHttp client (Browser).\n */\n\nvar xhrClient = function (request) {\n    return new PromiseObj(function (resolve) {\n\n        var xhr = new XMLHttpRequest(), handler = function (event) {\n\n            var response = request.respondWith(\n                'response' in xhr ? xhr.response : xhr.responseText, {\n                    status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n                    statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText)\n                }\n            );\n\n            each(trim(xhr.getAllResponseHeaders()).split('\\n'), function (row) {\n                response.headers.append(row.slice(0, row.indexOf(':')), row.slice(row.indexOf(':') + 1));\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () { return xhr.abort(); };\n\n        if (request.progress) {\n            if (request.method === 'GET') {\n                xhr.addEventListener('progress', request.progress);\n            } else if (/^(POST|PUT)$/i.test(request.method)) {\n                xhr.upload.addEventListener('progress', request.progress);\n            }\n        }\n\n        xhr.open(request.method, request.getUrl(), true);\n\n        if (request.timeout) {\n            xhr.timeout = request.timeout;\n        }\n\n        if (request.responseType && 'responseType' in xhr) {\n            xhr.responseType = request.responseType;\n        }\n\n        if (request.withCredentials || request.credentials) {\n            xhr.withCredentials = true;\n        }\n\n        if (!request.crossOrigin) {\n            request.headers.set('X-Requested-With', 'XMLHttpRequest');\n        }\n\n        request.headers.forEach(function (value, name) {\n            xhr.setRequestHeader(name, value);\n        });\n\n        xhr.onload = handler;\n        xhr.onabort = handler;\n        xhr.onerror = handler;\n        xhr.ontimeout = handler;\n        xhr.send(request.getBody());\n    });\n};\n\n/**\n * Http client (Node).\n */\n\nvar nodeClient = function (request) {\n\n    var client = require('got');\n\n    return new PromiseObj(function (resolve) {\n\n        var url = request.getUrl();\n        var body = request.getBody();\n        var method = request.method;\n        var headers = {}, handler;\n\n        request.headers.forEach(function (value, name) {\n            headers[name] = value;\n        });\n\n        client(url, {body: body, method: method, headers: headers}).then(handler = function (resp) {\n\n            var response = request.respondWith(resp.body, {\n                    status: resp.statusCode,\n                    statusText: trim(resp.statusMessage)\n                }\n            );\n\n            each(resp.headers, function (value, name) {\n                response.headers.set(name, value);\n            });\n\n            resolve(response);\n\n        }, function (error$$1) { return handler(error$$1.response); });\n    });\n};\n\n/**\n * Base client.\n */\n\nvar Client = function (context) {\n\n    var reqHandlers = [sendRequest], resHandlers = [], handler;\n\n    if (!isObject(context)) {\n        context = null;\n    }\n\n    function Client(request) {\n        return new PromiseObj(function (resolve, reject) {\n\n            function exec() {\n\n                handler = reqHandlers.pop();\n\n                if (isFunction(handler)) {\n                    handler.call(context, request, next);\n                } else {\n                    warn((\"Invalid interceptor of type \" + (typeof handler) + \", must be a function\"));\n                    next();\n                }\n            }\n\n            function next(response) {\n\n                if (isFunction(response)) {\n\n                    resHandlers.unshift(response);\n\n                } else if (isObject(response)) {\n\n                    resHandlers.forEach(function (handler) {\n                        response = when(response, function (response) {\n                            return handler.call(context, response) || response;\n                        }, reject);\n                    });\n\n                    when(response, resolve, reject);\n\n                    return;\n                }\n\n                exec();\n            }\n\n            exec();\n\n        }, context);\n    }\n\n    Client.use = function (handler) {\n        reqHandlers.push(handler);\n    };\n\n    return Client;\n};\n\nfunction sendRequest(request, resolve) {\n\n    var client = request.client || (inBrowser ? xhrClient : nodeClient);\n\n    resolve(client(request));\n}\n\n/**\n * HTTP Headers.\n */\n\nvar Headers = function Headers(headers) {\n    var this$1 = this;\n\n\n    this.map = {};\n\n    each(headers, function (value, name) { return this$1.append(name, value); });\n};\n\nHeaders.prototype.has = function has (name) {\n    return getName(this.map, name) !== null;\n};\n\nHeaders.prototype.get = function get (name) {\n\n    var list = this.map[getName(this.map, name)];\n\n    return list ? list.join() : null;\n};\n\nHeaders.prototype.getAll = function getAll (name) {\n    return this.map[getName(this.map, name)] || [];\n};\n\nHeaders.prototype.set = function set (name, value) {\n    this.map[normalizeName(getName(this.map, name) || name)] = [trim(value)];\n};\n\nHeaders.prototype.append = function append (name, value){\n\n    var list = this.map[getName(this.map, name)];\n\n    if (list) {\n        list.push(trim(value));\n    } else {\n        this.set(name, value);\n    }\n};\n\nHeaders.prototype.delete = function delete$1 (name){\n    delete this.map[getName(this.map, name)];\n};\n\nHeaders.prototype.deleteAll = function deleteAll (){\n    this.map = {};\n};\n\nHeaders.prototype.forEach = function forEach (callback, thisArg) {\n        var this$1 = this;\n\n    each(this.map, function (list, name) {\n        each(list, function (value) { return callback.call(thisArg, value, name, this$1); });\n    });\n};\n\nfunction getName(map, name) {\n    return Object.keys(map).reduce(function (prev, curr) {\n        return toLower(name) === toLower(curr) ? curr : prev;\n    }, null);\n}\n\nfunction normalizeName(name) {\n\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n        throw new TypeError('Invalid character in header field name');\n    }\n\n    return trim(name);\n}\n\n/**\n * HTTP Response.\n */\n\nvar Response = function Response(body, ref) {\n    var url = ref.url;\n    var headers = ref.headers;\n    var status = ref.status;\n    var statusText = ref.statusText;\n\n\n    this.url = url;\n    this.ok = status >= 200 && status < 300;\n    this.status = status || 0;\n    this.statusText = statusText || '';\n    this.headers = new Headers(headers);\n    this.body = body;\n\n    if (isString(body)) {\n\n        this.bodyText = body;\n\n    } else if (isBlob(body)) {\n\n        this.bodyBlob = body;\n\n        if (isBlobText(body)) {\n            this.bodyText = blobText(body);\n        }\n    }\n};\n\nResponse.prototype.blob = function blob () {\n    return when(this.bodyBlob);\n};\n\nResponse.prototype.text = function text () {\n    return when(this.bodyText);\n};\n\nResponse.prototype.json = function json () {\n    return when(this.text(), function (text) { return JSON.parse(text); });\n};\n\nObject.defineProperty(Response.prototype, 'data', {\n\n    get: function get() {\n        return this.body;\n    },\n\n    set: function set(body) {\n        this.body = body;\n    }\n\n});\n\nfunction blobText(body) {\n    return new PromiseObj(function (resolve) {\n\n        var reader = new FileReader();\n\n        reader.readAsText(body);\n        reader.onload = function () {\n            resolve(reader.result);\n        };\n\n    });\n}\n\nfunction isBlobText(body) {\n    return body.type.indexOf('text') === 0 || body.type.indexOf('json') !== -1;\n}\n\n/**\n * HTTP Request.\n */\n\nvar Request = function Request(options$$1) {\n\n    this.body = null;\n    this.params = {};\n\n    assign(this, options$$1, {\n        method: toUpper(options$$1.method || 'GET')\n    });\n\n    if (!(this.headers instanceof Headers)) {\n        this.headers = new Headers(this.headers);\n    }\n};\n\nRequest.prototype.getUrl = function getUrl (){\n    return Url(this);\n};\n\nRequest.prototype.getBody = function getBody (){\n    return this.body;\n};\n\nRequest.prototype.respondWith = function respondWith (body, options$$1) {\n    return new Response(body, assign(options$$1 || {}, {url: this.getUrl()}));\n};\n\n/**\n * Service for sending network requests.\n */\n\nvar COMMON_HEADERS = {'Accept': 'application/json, text/plain, */*'};\nvar JSON_CONTENT_TYPE = {'Content-Type': 'application/json;charset=utf-8'};\n\nfunction Http(options$$1) {\n\n    var self = this || {}, client = Client(self.$vm);\n\n    defaults(options$$1 || {}, self.$options, Http.options);\n\n    Http.interceptors.forEach(function (handler) {\n\n        if (isString(handler)) {\n            handler = Http.interceptor[handler];\n        }\n\n        if (isFunction(handler)) {\n            client.use(handler);\n        }\n\n    });\n\n    return client(new Request(options$$1)).then(function (response) {\n\n        return response.ok ? response : PromiseObj.reject(response);\n\n    }, function (response) {\n\n        if (response instanceof Error) {\n            error(response);\n        }\n\n        return PromiseObj.reject(response);\n    });\n}\n\nHttp.options = {};\n\nHttp.headers = {\n    put: JSON_CONTENT_TYPE,\n    post: JSON_CONTENT_TYPE,\n    patch: JSON_CONTENT_TYPE,\n    delete: JSON_CONTENT_TYPE,\n    common: COMMON_HEADERS,\n    custom: {}\n};\n\nHttp.interceptor = {before: before, method: method, jsonp: jsonp, json: json, form: form, header: header, cors: cors};\nHttp.interceptors = ['before', 'method', 'jsonp', 'json', 'form', 'header', 'cors'];\n\n['get', 'delete', 'head', 'jsonp'].forEach(function (method$$1) {\n\n    Http[method$$1] = function (url, options$$1) {\n        return this(assign(options$$1 || {}, {url: url, method: method$$1}));\n    };\n\n});\n\n['post', 'put', 'patch'].forEach(function (method$$1) {\n\n    Http[method$$1] = function (url, body, options$$1) {\n        return this(assign(options$$1 || {}, {url: url, method: method$$1, body: body}));\n    };\n\n});\n\n/**\n * Service for interacting with RESTful services.\n */\n\nfunction Resource(url, params, actions, options$$1) {\n\n    var self = this || {}, resource = {};\n\n    actions = assign({},\n        Resource.actions,\n        actions\n    );\n\n    each(actions, function (action, name) {\n\n        action = merge({url: url, params: assign({}, params)}, options$$1, action);\n\n        resource[name] = function () {\n            return (self.$http || Http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options$$1 = assign({}, action), params = {}, body;\n\n    switch (args.length) {\n\n        case 2:\n\n            params = args[0];\n            body = args[1];\n\n            break;\n\n        case 1:\n\n            if (/^(POST|PUT|PATCH)$/i.test(options$$1.method)) {\n                body = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 2 arguments [params, body], got ' + args.length + ' arguments';\n    }\n\n    options$$1.body = body;\n    options$$1.params = assign({}, options$$1.params, params);\n\n    return options$$1;\n}\n\nResource.actions = {\n\n    get: {method: 'GET'},\n    save: {method: 'POST'},\n    query: {method: 'GET'},\n    update: {method: 'PUT'},\n    remove: {method: 'DELETE'},\n    delete: {method: 'DELETE'}\n\n};\n\n/**\n * Install plugin.\n */\n\nfunction plugin(Vue) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    Util(Vue);\n\n    Vue.url = Url;\n    Vue.http = Http;\n    Vue.resource = Resource;\n    Vue.Promise = PromiseObj;\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function get() {\n                return options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function get() {\n                return options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function get() {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function get() {\n                var this$1 = this;\n\n                return function (executor) { return new Vue.Promise(executor, this$1); };\n            }\n        }\n\n    });\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin);\n}\n\nexport default plugin;\nexport { Url, Http, Resource };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-resource@1.3.4@vue-resource/dist/vue-resource.es2015.js\n// module id = 119\n// module chunks = 1","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_babel-runtime@6.23.0@babel-runtime/core-js/object/assign.js\n// module id = 183\n// module chunks = 1","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_babel-runtime@6.23.0@babel-runtime/core-js/object/define-property.js\n// module id = 184\n// module chunks = 1","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_babel-runtime@6.23.0@babel-runtime/helpers/defineProperty.js\n// module id = 185\n// module chunks = 1","var core  = require('../../modules/_core')\n  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\nmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/fn/json/stringify.js\n// module id = 186\n// module chunks = 1","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/fn/object/assign.js\n// module id = 187\n// module chunks = 1","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc){\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/fn/object/define-property.js\n// module id = 188\n// module chunks = 1","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_a-function.js\n// module id = 189\n// module chunks = 1","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_an-object.js\n// module id = 190\n// module chunks = 1","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length')\n  , toIndex   = require('./_to-index');\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_array-includes.js\n// module id = 191\n// module chunks = 1","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_cof.js\n// module id = 192\n// module chunks = 1","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_ctx.js\n// module id = 193\n// module chunks = 1","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_dom-create.js\n// module id = 194\n// module chunks = 1","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_enum-bug-keys.js\n// module id = 195\n// module chunks = 1","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_has.js\n// module id = 196\n// module chunks = 1","var dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_hide.js\n// module id = 197\n// module chunks = 1","module.exports = !require('./_descriptors') && !require('./_fails')(function(){\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_ie8-dom-define.js\n// module id = 198\n// module chunks = 1","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys  = require('./_object-keys')\n  , gOPS     = require('./_object-gops')\n  , pIE      = require('./_object-pie')\n  , toObject = require('./_to-object')\n  , IObject  = require('./_iobject')\n  , $assign  = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function(){\n  var A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getSymbols = gOPS.f\n    , isEnum     = pIE.f;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  } return T;\n} : $assign;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_object-assign.js\n// module id = 199\n// module chunks = 1","exports.f = Object.getOwnPropertySymbols;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_object-gops.js\n// module id = 200\n// module chunks = 1","var has          = require('./_has')\n  , toIObject    = require('./_to-iobject')\n  , arrayIndexOf = require('./_array-includes')(false)\n  , IE_PROTO     = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_object-keys-internal.js\n// module id = 201\n// module chunks = 1","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = require('./_object-keys-internal')\n  , enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_object-keys.js\n// module id = 202\n// module chunks = 1","exports.f = {}.propertyIsEnumerable;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_object-pie.js\n// module id = 203\n// module chunks = 1","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_property-desc.js\n// module id = 204\n// module chunks = 1","var shared = require('./_shared')('keys')\n  , uid    = require('./_uid');\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_shared-key.js\n// module id = 205\n// module chunks = 1","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_shared.js\n// module id = 206\n// module chunks = 1","var toInteger = require('./_to-integer')\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_to-index.js\n// module id = 207\n// module chunks = 1","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_to-length.js\n// module id = 208\n// module chunks = 1","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_to-object.js\n// module id = 209\n// module chunks = 1","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_to-primitive.js\n// module id = 210\n// module chunks = 1","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_uid.js\n// module id = 211\n// module chunks = 1","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', {assign: require('./_object-assign')});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/es6.object.assign.js\n// module id = 212\n// module chunks = 1","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', {defineProperty: require('./_object-dp').f});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/es6.object.define-property.js\n// module id = 213\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/ExtensionAPI.js\n// module id = 214\n// module chunks = 1","\n\n    module.exports = require('./BaseBarSeries').extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/bar/BarSeries.js\n// module id = 215\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var helper = require('./helper');\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(require('../../model/Model').prototype, require('./barItemStyle'));\n\n    var BarView = require('../../echarts').extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d'\n                || coordinateSystemType === 'polar'\n            ) {\n                this._render(seriesModel, ecModel, api);\n            }\n            else if (__DEV__) {\n                console.warn('Only cartesian2d and polar supported for bar.');\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _render: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var coord = seriesModel.coordinateSystem;\n            var baseAxis = coord.getBaseAxis();\n            var isHorizontalOrRadial;\n\n            if (coord.type === 'cartesian2d') {\n                isHorizontalOrRadial = baseAxis.isHorizontal();\n            }\n            else if (coord.type === 'polar') {\n                isHorizontalOrRadial = baseAxis.dim === 'angle';\n            }\n\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getLayout[coord.type](data, dataIndex, itemModel);\n                    var el = elementCreator[coord.type](\n                        data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel\n                    );\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, dataIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = elementCreator[coord.type](\n                            data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true\n                        );\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, newIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    if (coord.type === 'cartesian2d') {\n                        el && removeRect(dataIndex, animationModel, el);\n                    }\n                    else {\n                        el && removeSector(dataIndex, animationModel, el);\n                    }\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        if (el.type === 'sector') {\n                            removeSector(el.dataIndex, ecModel, el);\n                        }\n                        else {\n                            removeRect(el.dataIndex, ecModel, el);\n                        }\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    var elementCreator = {\n\n        cartesian2d: function (\n            data, dataIndex, itemModel, layout, isHorizontal,\n            animationModel, isUpdate\n        ) {\n            var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var rectShape = rect.shape;\n                var animateProperty = isHorizontal ? 'height' : 'width';\n                var animateTarget = {};\n                rectShape[animateProperty] = 0;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return rect;\n        },\n\n        polar: function (\n            data, dataIndex, itemModel, layout, isRadial,\n            animationModel, isUpdate\n        ) {\n            var sector = new graphic.Sector({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var sectorShape = sector.shape;\n                var animateProperty = isRadial ? 'r' : 'endAngle';\n                var animateTarget = {};\n                sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return sector;\n        }\n    };\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function removeSector(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                r: el.shape.r0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    var getLayout = {\n        cartesian2d: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            var fixedLineWidth = getLineWidth(itemModel, layout);\n\n            // fix layout with lineWidth\n            var signX = layout.width > 0 ? 1 : -1;\n            var signY = layout.height > 0 ? 1 : -1;\n            return {\n                x: layout.x + signX * fixedLineWidth / 2,\n                y: layout.y + signY * fixedLineWidth / 2,\n                width: layout.width - signX * fixedLineWidth,\n                height: layout.height - signY * fixedLineWidth\n            };\n        },\n\n        polar: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            return {\n                cx: layout.cx,\n                cy: layout.cy,\n                r0: layout.r0,\n                r: layout.r,\n                startAngle: layout.startAngle,\n                endAngle: layout.endAngle\n            };\n        }\n    };\n\n    function updateStyle(\n        el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar\n    ) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        if (!isPolar) {\n            el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n        }\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var cursorStyle = itemModel.getShallow('cursor');\n        cursorStyle && el.attr('cursor', cursorStyle);\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        if (!isPolar) {\n            helper.setLabel(\n                el.style, hoverStyle, itemModel, color,\n                seriesModel, dataIndex, labelPositionOutside\n            );\n        }\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/bar/BarView.js\n// module id = 216\n// module chunks = 1","'use strict';\n\n\n    var SeriesModel = require('../../model/Series');\n    var createListFromArray = require('../helper/createListFromArray');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n            // 最小角度为0，仅对极坐标系下的柱状图有效\n            barMinAngle: 0,\n            // cursor: null,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                normal: {\n                    // color: '各异'\n                },\n                emphasis: {}\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/bar/BaseBarSeries.js\n// module id = 217\n// module chunks = 1","\n\n\n    var getBarItemStyle = require('../../model/mixin/makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/bar/barItemStyle.js\n// module id = 218\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        if (labelModel.get('show')) {\n            setLabel(\n                normalStyle, labelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            normalStyle.text = '';\n        }\n\n        if (hoverLabelModel.get('show')) {\n            setLabel(\n                hoverStyle, hoverLabelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            hoverStyle.text = '';\n        }\n    };\n\n    function setLabel(style, model, color, labelText, labelPositionOutside) {\n        graphic.setText(style, model, color);\n        style.text = labelText;\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/bar/helper.js\n// module id = 219\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SeriesModel = require('../../model/Series');\n    var whiskerBoxCommon = require('../helper/whiskerBoxCommon');\n\n    var CandlestickSeries = SeriesModel.extend({\n\n        type: 'series.candlestick',\n\n        dependencies: ['xAxis', 'yAxis', 'grid'],\n\n        /**\n         * @readOnly\n         */\n        defaultValueDimensions: ['open', 'close', 'lowest', 'highest'],\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: null,\n\n        /**\n         * @override\n         */\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            layout: null, // 'horizontal' or 'vertical'\n\n            itemStyle: {\n                normal: {\n                    color: '#c23531', // 阳线 positive\n                    color0: '#314656', // 阴线 negative     '#c23531', '#314656'\n                    borderWidth: 1,\n                    // FIXME\n                    // ec2中使用的是lineStyle.color 和 lineStyle.color0\n                    borderColor: '#c23531',\n                    borderColor0: '#314656'\n                },\n                emphasis: {\n                    borderWidth: 2\n                }\n            },\n\n            barMaxWidth: null,\n            barMinWidth: null,\n            barWidth: null,\n\n            animationUpdate: false,\n            animationEasing: 'linear',\n            animationDuration: 300\n        },\n\n        /**\n         * Get dimension for shadow in dataZoom\n         * @return {string} dimension name\n         */\n        getShadowDim: function () {\n            return 'open';\n        },\n\n        brushSelector: function (dataIndex, data, selectors) {\n            var itemLayout = data.getItemLayout(dataIndex);\n            return selectors.rect(itemLayout.brushRect);\n        }\n\n    });\n\n    zrUtil.mixin(CandlestickSeries, whiskerBoxCommon.seriesModelMixin, true);\n\n    module.exports = CandlestickSeries;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/candlestick/CandlestickSeries.js\n// module id = 220\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var ChartView = require('../../view/Chart');\n    var graphic = require('../../util/graphic');\n    var whiskerBoxCommon = require('../helper/whiskerBoxCommon');\n\n    var CandlestickView = ChartView.extend({\n\n        type: 'candlestick',\n\n        getStyleUpdater: function () {\n            return updateStyle;\n        },\n\n        dispose: zrUtil.noop\n    });\n\n    zrUtil.mixin(CandlestickView, whiskerBoxCommon.viewMixin, true);\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n\n    function updateStyle(itemGroup, data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n        var color = data.getItemVisual(idx, 'color');\n        var borderColor = data.getItemVisual(idx, 'borderColor') || color;\n\n        // Color must be excluded.\n        // Because symbol provide setColor individually to set fill and stroke\n        var itemStyle = normalItemStyleModel.getItemStyle(\n            ['color', 'color0', 'borderColor', 'borderColor0']\n        );\n\n        var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n        whiskerEl.useStyle(itemStyle);\n        whiskerEl.style.stroke = borderColor;\n\n        var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n        bodyEl.useStyle(itemStyle);\n        bodyEl.style.fill = color;\n        bodyEl.style.stroke = borderColor;\n\n        var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n        graphic.setHoverStyle(itemGroup, hoverStyle);\n    }\n\n\n    module.exports = CandlestickView;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/candlestick/CandlestickView.js\n// module id = 221\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var retrieve = require('zrender/lib/core/util').retrieve;\n    var parsePercent = require('../../util/number').parsePercent;\n\n    module.exports = function (ecModel) {\n\n        ecModel.eachSeriesByType('candlestick', function (seriesModel) {\n\n            var coordSys = seriesModel.coordinateSystem;\n            var data = seriesModel.getData();\n            var candleWidth = calculateCandleWidth(seriesModel, data);\n            var chartLayout = seriesModel.get('layout');\n            var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n            var constDim = 1 - variableDim;\n            var coordDims = ['x', 'y'];\n            var vDims = [];\n            var cDim;\n\n            zrUtil.each(data.dimensions, function (dimName) {\n                var dimInfo = data.getDimensionInfo(dimName);\n                var coordDim = dimInfo.coordDim;\n                if (coordDim === coordDims[constDim]) {\n                    vDims.push(dimName);\n                }\n                else if (coordDim === coordDims[variableDim]) {\n                    cDim = dimName;\n                }\n            });\n\n            if (cDim == null || vDims.length < 4) {\n                return;\n            }\n\n            data.each([cDim].concat(vDims), function () {\n                var args = arguments;\n                var axisDimVal = args[0];\n                var idx = args[vDims.length + 1];\n\n                var openVal = args[1];\n                var closeVal = args[2];\n                var lowestVal = args[3];\n                var highestVal = args[4];\n\n                var ocLow = Math.min(openVal, closeVal);\n                var ocHigh = Math.max(openVal, closeVal);\n\n                var ocLowPoint = getPoint(ocLow);\n                var ocHighPoint = getPoint(ocHigh);\n                var lowestPoint = getPoint(lowestVal);\n                var highestPoint = getPoint(highestVal);\n\n                var whiskerEnds = [\n                    [highestPoint, ocHighPoint],\n                    [lowestPoint, ocLowPoint]\n                ];\n\n                var bodyEnds = [];\n                addBodyEnd(ocHighPoint, 0);\n                addBodyEnd(ocLowPoint, 1);\n\n                data.setItemLayout(idx, {\n                    chartLayout: chartLayout,\n                    sign: openVal > closeVal ? -1 : openVal < closeVal ? 1 : 0,\n                    initBaseline: openVal > closeVal\n                        ? ocHighPoint[constDim] : ocLowPoint[constDim], // open point.\n                    bodyEnds: bodyEnds,\n                    whiskerEnds: whiskerEnds,\n                    brushRect: makeBrushRect()\n                });\n\n                function getPoint(val) {\n                    var p = [];\n                    p[variableDim] = axisDimVal;\n                    p[constDim] = val;\n                    return (isNaN(axisDimVal) || isNaN(val))\n                        ? [NaN, NaN]\n                        : coordSys.dataToPoint(p);\n                }\n\n                function addBodyEnd(point, start) {\n                    var point1 = point.slice();\n                    var point2 = point.slice();\n                    point1[variableDim] += candleWidth / 2;\n                    point2[variableDim] -= candleWidth / 2;\n                    start\n                        ? bodyEnds.push(point1, point2)\n                        : bodyEnds.push(point2, point1);\n                }\n\n                function makeBrushRect() {\n                    var pmin = getPoint(Math.min(openVal, closeVal, lowestVal, highestVal));\n                    var pmax = getPoint(Math.max(openVal, closeVal, lowestVal, highestVal));\n\n                    pmin[variableDim] -= candleWidth / 2;\n                    pmax[variableDim] -= candleWidth / 2;\n\n                    return {\n                        x: pmin[0],\n                        y: pmin[1],\n                        width: constDim ? candleWidth : pmax[0] - pmin[0],\n                        height: constDim ? pmax[1] - pmin[1] : candleWidth\n                    };\n                }\n\n            }, true);\n        });\n    };\n\n    function calculateCandleWidth(seriesModel, data) {\n        var baseAxis = seriesModel.getBaseAxis();\n        var extent;\n\n        var bandWidth = baseAxis.type === 'category'\n            ? baseAxis.getBandWidth()\n            : (\n                extent = baseAxis.getExtent(),\n                Math.abs(extent[1] - extent[0]) / data.count()\n            );\n\n        var barMaxWidth = parsePercent(\n            retrieve(seriesModel.get('barMaxWidth'), bandWidth),\n            bandWidth\n        );\n        var barMinWidth = parsePercent(\n            retrieve(seriesModel.get('barMinWidth'), 1),\n            bandWidth\n        );\n        var barWidth = seriesModel.get('barWidth');\n        return barWidth != null\n            ? parsePercent(barWidth, bandWidth)\n            // Put max outer to ensure bar visible in spite of overlap.\n            : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/candlestick/candlestickLayout.js\n// module id = 222\n// module chunks = 1","\n\n    var positiveBorderColorQuery = ['itemStyle', 'normal', 'borderColor'];\n    var negativeBorderColorQuery = ['itemStyle', 'normal', 'borderColor0'];\n    var positiveColorQuery = ['itemStyle', 'normal', 'color'];\n    var negativeColorQuery = ['itemStyle', 'normal', 'color0'];\n\n    module.exports = function (ecModel, api) {\n\n        ecModel.eachRawSeriesByType('candlestick', function (seriesModel) {\n\n            var data = seriesModel.getData();\n\n            data.setVisual({\n                legendSymbol: 'roundRect'\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var sign = data.getItemLayout(idx).sign;\n\n                    data.setItemVisual(\n                        idx,\n                        {\n                            color: itemModel.get(\n                                sign > 0 ? positiveColorQuery : negativeColorQuery\n                            ),\n                            borderColor: itemModel.get(\n                                sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery\n                            )\n                        }\n                    );\n                });\n            }\n        });\n\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/candlestick/candlestickVisual.js\n// module id = 223\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (option) {\n        if (!option || !zrUtil.isArray(option.series)) {\n            return;\n        }\n\n        // Translate 'k' to 'candlestick'.\n        zrUtil.each(option.series, function (seriesItem) {\n            if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n                seriesItem.type = 'candlestick';\n            }\n        });\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/candlestick/preprocessor.js\n// module id = 224\n// module chunks = 1","/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var Symbol = require('./Symbol');\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis'),\n            cursorStyle: seriesModel.get('cursor')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/helper/SymbolDraw.js\n// module id = 225\n// module chunks = 1","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var Path = require('zrender/lib/graphic/Path');\n\n    var WhiskerPath = Path.extend({\n\n        type: 'whiskerInBox',\n\n        shape: {},\n\n        buildPath: function (ctx, shape) {\n            for (var i in shape) {\n                if (shape.hasOwnProperty(i) && i.indexOf('ends') === 0) {\n                    var pts = shape[i];\n                    ctx.moveTo(pts[0][0], pts[0][1]);\n                    ctx.lineTo(pts[1][0], pts[1][1]);\n                }\n            }\n        }\n    });\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/WhiskerBox}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @param {Function} styleUpdater\n     * @param {boolean} isInit\n     * @extends {module:zrender/graphic/Group}\n     */\n    function WhiskerBox(data, idx, styleUpdater, isInit) {\n        graphic.Group.call(this);\n\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.bodyIndex;\n\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.whiskerIndex;\n\n        /**\n         * @type {Function}\n         */\n        this.styleUpdater = styleUpdater;\n\n        this._createContent(data, idx, isInit);\n\n        this.updateData(data, idx, isInit);\n\n        /**\n         * Last series model.\n         * @type {module:echarts/model/Series}\n         */\n        this._seriesModel;\n    }\n\n    var whiskerBoxProto = WhiskerBox.prototype;\n\n    whiskerBoxProto._createContent = function (data, idx, isInit) {\n        var itemLayout = data.getItemLayout(idx);\n        var constDim = itemLayout.chartLayout === 'horizontal' ? 1 : 0;\n        var count = 0;\n\n        // Whisker element.\n        this.add(new graphic.Polygon({\n            shape: {\n                points: isInit\n                    ? transInit(itemLayout.bodyEnds, constDim, itemLayout)\n                    : itemLayout.bodyEnds\n            },\n            style: {strokeNoScale: true},\n            z2: 100\n        }));\n        this.bodyIndex = count++;\n\n        // Box element.\n        var whiskerEnds = zrUtil.map(itemLayout.whiskerEnds, function (ends) {\n            return isInit ? transInit(ends, constDim, itemLayout) : ends;\n        });\n        this.add(new WhiskerPath({\n            shape: makeWhiskerEndsShape(whiskerEnds),\n            style: {strokeNoScale: true},\n            z2: 100\n        }));\n        this.whiskerIndex = count++;\n    };\n\n    function transInit(points, dim, itemLayout) {\n        return zrUtil.map(points, function (point) {\n            point = point.slice();\n            point[dim] = itemLayout.initBaseline;\n            return point;\n        });\n    }\n\n    function makeWhiskerEndsShape(whiskerEnds) {\n        // zr animation only support 2-dim array.\n        var shape = {};\n        zrUtil.each(whiskerEnds, function (ends, i) {\n            shape['ends' + i] = ends;\n        });\n        return shape;\n    }\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    whiskerBoxProto.updateData = function (data, idx, isInit) {\n        var seriesModel = this._seriesModel = data.hostModel;\n        var itemLayout = data.getItemLayout(idx);\n        var updateMethod = graphic[isInit ? 'initProps' : 'updateProps'];\n        // this.childAt(this.bodyIndex).stopAnimation(true);\n        // this.childAt(this.whiskerIndex).stopAnimation(true);\n        updateMethod(\n            this.childAt(this.bodyIndex),\n            {shape: {points: itemLayout.bodyEnds}},\n            seriesModel, idx\n        );\n        updateMethod(\n            this.childAt(this.whiskerIndex),\n            {shape: makeWhiskerEndsShape(itemLayout.whiskerEnds)},\n            seriesModel, idx\n        );\n\n        this.styleUpdater.call(null, this, data, idx);\n    };\n\n    zrUtil.inherits(WhiskerBox, graphic.Group);\n\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/WhiskerBoxDraw\n     */\n    function WhiskerBoxDraw(styleUpdater) {\n        this.group = new graphic.Group();\n        this.styleUpdater = styleUpdater;\n    }\n\n    var whiskerBoxDrawProto = WhiskerBoxDraw.prototype;\n\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     */\n    whiskerBoxDrawProto.updateData = function (data) {\n        var group = this.group;\n        var oldData = this._data;\n        var styleUpdater = this.styleUpdater;\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                if (data.hasValue(newIdx)) {\n                    var symbolEl = new WhiskerBox(data, newIdx, styleUpdater, true);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n                // Empty data\n                if (!data.hasValue(newIdx)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n\n                if (!symbolEl) {\n                    symbolEl = new WhiskerBox(data, newIdx, styleUpdater);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && group.remove(el);\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    /**\n     * Remove symbols.\n     * @param {module:echarts/data/List} data\n     */\n    whiskerBoxDrawProto.remove = function () {\n        var group = this.group;\n        var data = this._data;\n        this._data = null;\n        data && data.eachItemGraphicEl(function (el) {\n            el && group.remove(el);\n        });\n    };\n\n    module.exports = WhiskerBoxDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/helper/WhiskerBoxDraw.js\n// module id = 226\n// module chunks = 1","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    var helper = {};\n\n    helper.findLabelValueDim = function (data) {\n        var valueDim;\n        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\n\n        if (labelDims.length) {\n            valueDim = labelDims[0];\n        }\n        else {\n            // Get last value dim\n            var dimensions = data.dimensions.slice();\n            var dataType;\n            while (dimensions.length && (\n                valueDim = dimensions.pop(),\n                dataType = data.getDimensionInfo(valueDim).type,\n                dataType === 'ordinal' || dataType === 'time'\n            )) {} // jshint ignore:line\n        }\n\n        return valueDim;\n    };\n\n    helper.setTextToStyle = function (\n        data, dataIndex, valueDim, elStyle, seriesModel, labelModel, color\n    ) {\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                data.get(valueDim, dataIndex)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/helper/labelHelper.js\n// module id = 227\n// module chunks = 1","'use strict';\n\n\n    var createListFromArray = require('../helper/createListFromArray');\n    var SeriesModel = require('../../model/Series');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n            // cursor: null,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/line/LineSeries.js\n// module id = 228\n// module chunks = 1","'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SymbolDraw = require('../helper/SymbolDraw');\n    var Symbol = require('../helper/Symbol');\n    var lineAnimationDiff = require('./lineAnimationDiff');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var polyHelper = require('./poly');\n    var ChartView = require('../../view/Chart');\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/line/LineView.js\n// module id = 229\n// module chunks = 1","\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 230\n// module chunks = 1","// Poly path support NaN point\n\n\n    var Path = require('zrender/lib/graphic/Path');\n    var vec2 = require('zrender/lib/core/vector');\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/line/poly.js\n// module id = 231\n// module chunks = 1","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/CartesianAxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axis.js\n// module id = 232\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var AxisView = require('./AxisView');\n    var cartesianAxisHelper = require('./cartesianAxisHelper');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axis/CartesianAxisView.js\n// module id = 233\n// module chunks = 1","\n\n    var echarts = require('../echarts');\n    var axisPointerModelHelper = require('./axisPointer/modelHelper');\n    var axisTrigger = require('./axisPointer/axisTrigger');\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('./axisPointer/AxisPointerModel');\n    require('./axisPointer/AxisPointerView');\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    require('./axisPointer/CartesianAxisPointer');\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer.js\n// module id = 234\n// module chunks = 1","\n\n    var echarts = require('../../echarts');\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                textStyle: {\n                    color: '#fff'\n                },\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 235\n// module chunks = 1","\n\n    var globalListener = require('./globalListener');\n\n    var AxisPonterView = require('../../echarts').extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 236\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../../util/clazz');\n    var graphic = require('../../util/graphic');\n    var get = require('../../util/model').makeGetter();\n    var axisPointerModelHelper = require('./modelHelper');\n    var eventTool = require('zrender/lib/core/event');\n    var throttle = require('../../util/throttle');\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = createIcon(handleModel, {\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                    drift: bind(this._onHandleDragMove, this),\n                    ondragend: bind(this._onHandleDragEnd, this)\n                });\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals &= propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function createIcon(handleModel, handlers) {\n        var iconStr = handleModel.get('icon');\n        var style = {\n            x: -1, y: -1, width: 2, height: 2\n        };\n        var opt = zrUtil.extend({\n            style: {\n                strokeNoScale: true\n            },\n            rectHover: true,\n            cursor: 'move',\n            draggable: true\n        }, handlers);\n\n        return iconStr.indexOf('image://') === 0\n            ? (\n                style.image = iconStr.slice(8),\n                opt.style = style,\n                new graphic.Image(opt)\n            )\n            : graphic.makePath(\n                iconStr.replace('path://', ''),\n                opt,\n                style,\n                'center'\n            );\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 237\n// module chunks = 1","'use strict';\n\n\n    var graphic = require('../../util/graphic');\n    var BaseAxisPointer = require('./BaseAxisPointer');\n    var viewHelper = require('./viewHelper');\n    var cartesianAxisHelper = require('../axis/cartesianAxisHelper');\n    var AxisView = require('../axis/AxisView');\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 238\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var modelHelper = require('./modelHelper');\n    var findPointFromSeries = require('./findPointFromSeries');\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 239\n// module chunks = 1","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRoot;\n            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\n                x += viewportRoot.offsetLeft || 0;\n                y += viewportRoot.offsetTop || 0;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/tooltip/TooltipContent.js\n// module id = 240\n// module chunks = 1","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/tooltip/TooltipModel.js\n// module id = 241\n// module chunks = 1","\n\n    var TooltipContent = require('./TooltipContent');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var graphic = require('../../util/graphic');\n    var findPointFromSeries = require('../axisPointer/findPointFromSeries');\n    var layoutUtil = require('../../util/layout');\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n    var globalListener = require('../axisPointer/globalListener');\n    var axisHelper = require('../../coord/axisHelper');\n    var axisPointerViewHelper = require('../axisPointer/viewHelper');\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/tooltip/TooltipView.js\n// module id = 242\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n\n    var logAxis = zrUtil.defaults({\n        scale: true,\n        logBase: 10\n    }, valueAxis);\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/axisDefault.js\n// module id = 243\n// module chunks = 1","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/axisModelCreator.js\n// module id = 244\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Axis2D.js\n// module id = 245\n// module chunks = 1","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Cartesian.js\n// module id = 246\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 247\n// module chunks = 1","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/cartesian/GridModel.js\n// module id = 248\n// module chunks = 1","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/data/DataDiffer.js\n// module id = 249\n// module chunks = 1","\n\n    var createListFromArray = require('./chart/helper/createListFromArray');\n    var symbolUtil = require('./util/symbol');\n    var axisHelper = require('./coord/axisHelper');\n    var axisModelCommonMixin = require('./coord/axisModelCommonMixin');\n    var Model = require('./model/Model');\n    var util = require('zrender/lib/core/util');\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: require('./data/helper/completeDimensions'),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/helper.js\n// module id = 250\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var parsePercent = numberUtil.parsePercent;\n\n    var STACK_PREFIX = '__ec_stack_';\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    /**\n     * @param {Object} opt\n     * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n     * @param {number} opt.count Positive interger.\n     * @param {number} [opt.barWidth]\n     * @param {number} [opt.barMaxWidth]\n     * @param {number} [opt.barGap]\n     * @param {number} [opt.barCategoryGap]\n     * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n     */\n    function getLayoutOnAxis(opt, api) {\n        var params = [];\n        var baseAxis = opt.axis;\n        var axisKey = 'axis0';\n\n        if (baseAxis.type !== 'category') {\n            return;\n        }\n        var bandWidth = baseAxis.getBandWidth();\n\n        for (var i = 0; i < opt.count || 0; i++) {\n            params.push(zrUtil.defaults({\n                bandWidth: bandWidth,\n                axisKey: axisKey,\n                stackId: STACK_PREFIX + i\n            }, opt));\n        }\n        var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n\n        var result = [];\n        for (var i = 0; i < opt.count; i++) {\n            var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n            item.offsetCenter = item.offset + item.width / 2;\n            result.push(item);\n        }\n\n        return result;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            return {\n                bandWidth: bandWidth,\n                barWidth: barWidth,\n                barMaxWidth: barMaxWidth,\n                barGap: barGap,\n                barCategoryGap: barCategoryGap,\n                axisKey: getAxisKey(baseAxis),\n                stackId: getSeriesStackId(seriesModel)\n            };\n        });\n\n        return doCalBarWidthAndOffset(seriesInfoList, api);\n    }\n\n    function doCalBarWidthAndOffset(seriesInfoList, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n            var axisKey = seriesInfo.axisKey;\n            var bandWidth = seriesInfo.bandWidth;\n            var columnsOnAxis = columnsMap[axisKey] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[axisKey] = columnsOnAxis;\n\n            var stackId = seriesInfo.stackId;\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            var barWidth = seriesInfo.barWidth;\n            if (barWidth && !stacks[stackId].width) {\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                stacks[stackId].width = barWidth;\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            var barMaxWidth = seriesInfo.barMaxWidth;\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            var barGap = seriesInfo.barGap;\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            var barCategoryGap = seriesInfo.barCategoryGap;\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    if (column.width) {\n                        maxWidth = Math.min(maxWidth, column.width);\n                    }\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            // Check series coordinate, do layout for cartesian2d only\n            if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coords = cartesian.dataToPoints(data, true);\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(valueAxis.dim, function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    barLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\n\n    module.exports = barLayoutGrid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/layout/barGrid.js\n// module id = 251\n// module chunks = 1","\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (!coordSys) {\n                return;\n            }\n\n            var dims = [];\n            var coordDims = coordSys.dimensions;\n            for (var i = 0; i < coordDims.length; i++) {\n                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n            }\n\n            if (dims.length === 1) {\n                data.each(dims[0], function (x, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                });\n            }\n            else if (dims.length === 2) {\n                data.each(dims, function (x, y, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(\n                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                    );\n                }, true);\n            }\n        });\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/layout/points.js\n// module id = 252\n// module chunks = 1","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/loading/default.js\n// module id = 253\n// module chunks = 1","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/Global.js\n// module id = 254\n// module chunks = 1","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/OptionManager.js\n// module id = 255\n// module chunks = 1","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/globalDefault.js\n// module id = 256\n// module chunks = 1","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/mixin/areaStyle.js\n// module id = 257\n// module chunks = 1","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/mixin/boxLayout.js\n// module id = 258\n// module chunks = 1","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/mixin/itemStyle.js\n// module id = 259\n// module chunks = 1","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/mixin/lineStyle.js\n// module id = 260\n// module chunks = 1","\n\n    var textContain = require('zrender/lib/contain/text');\n    var graphicUtil = require('../../util/graphic');\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/mixin/textStyle.js\n// module id = 261\n// module chunks = 1","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/preprocessor/backwardCompat.js\n// module id = 262\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 263\n// module chunks = 1","\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/processor/dataSample.js\n// module id = 264\n// module chunks = 1","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/scale/Log.js\n// module id = 265\n// module chunks = 1","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/scale/Ordinal.js\n// module id = 266\n// module chunks = 1","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var scaleHelper = require('./helper');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/scale/Time.js\n// module id = 267\n// module chunks = 1","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/view/Component.js\n// module id = 268\n// module chunks = 1","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/visual/seriesColor.js\n// module id = 269\n// module chunks = 1","\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/visual/symbol.js\n// module id = 270\n// module chunks = 1","/**\n  * vue-router v2.5.3\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also regiseter instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    data.props = resolveProps(route, matched.props && matched.props[name]);\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    var val = extraQuery[key];\n    parsedQuery[key] = Array.isArray(val) ? val.slice() : val;\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.slice().forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: location.query || {},\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) { return String(a[key]) === String(b[key]); })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this.$root._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this.$root._route }\n  });\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar index$1 = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar index = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (index$1(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (index$1(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\nindex.parse = parse_1;\nindex.compile = compile_1;\nindex.tokensToFunction = tokensToFunction_1;\nindex.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = index.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  var pathMap = oldPathMap || Object.create(null);\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var normalizedPath = normalizePath(path, parent);\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    if (Array.isArray(route.alias)) {\n      route.alias.forEach(function (alias) {\n        var aliasRoute = {\n          path: alias,\n          children: route.children\n        };\n        addRouteRecord(pathList, pathMap, nameMap, aliasRoute, parent, record.path);\n      });\n    } else {\n      var aliasRoute = {\n        path: route.alias,\n        children: route.children\n      };\n      addRouteRecord(pathList, pathMap, nameMap, aliasRoute, parent, record.path);\n    }\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path) {\n  var regex = index(path);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = {};\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent) {\n  path = path.replace(/\\/$/, '');\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n    if (!shouldScroll) {\n      return\n    }\n    var isObject = typeof shouldScroll === 'object';\n    if (isObject && typeof shouldScroll.selector === 'string') {\n      var el = document.querySelector(shouldScroll.selector);\n      if (el) {\n        position = getElementPosition(el);\n      } else if (isValidPosition(shouldScroll)) {\n        position = normalizePosition(shouldScroll);\n      }\n    } else if (isObject && isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n\n    if (position) {\n      window.scrollTo(position.x, position.y);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left,\n    y: elRect.top - docRect.top\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (called) { return }\n    called = true;\n    return fn.apply(this, arguments)\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener('popstate', function (e) {\n      this$1.transitionTo(getLocation(this$1.base), function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, this$1.current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    window.addEventListener('hashchange', function () {\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        replaceHash(route.fullPath);\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction pushHash (path) {\n  window.location.hash = path;\n}\n\nfunction replaceHash (path) {\n  var i = window.location.href.indexOf('#');\n  window.location.replace(\n    window.location.href.slice(0, i >= 0 ? i : 0) + '#' + path\n  );\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: {} };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '2.5.3';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-router@2.5.3@vue-router/dist/vue-router.esm.js\n// module id = 457\n// module chunks = 1","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-style-loader@3.0.1@vue-style-loader/lib/listToStyles.js\n// module id = 458\n// module chunks = 1","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/Handler.js\n// module id = 459\n// module chunks = 1","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/Layer.js\n// module id = 460\n// module chunks = 1","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/Painter.js\n// module id = 461\n// module chunks = 1","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/Storage.js\n// module id = 462\n// module chunks = 1","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/animation/Animation.js\n// module id = 463\n// module chunks = 1","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/animation/Clip.js\n// module id = 464\n// module chunks = 1","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/animation/easing.js\n// module id = 465\n// module chunks = 1","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/arc.js\n// module id = 466\n// module chunks = 1","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/cubic.js\n// module id = 467\n// module chunks = 1","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/line.js\n// module id = 468\n// module chunks = 1","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/path.js\n// module id = 469\n// module chunks = 1","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/quadratic.js\n// module id = 470\n// module chunks = 1","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/windingLine.js\n// module id = 471\n// module chunks = 1","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/GestureMgr.js\n// module id = 472\n// module chunks = 1","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/bbox.js\n// module id = 473\n// module chunks = 1","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/dom/HandlerProxy.js\n// module id = 474\n// module chunks = 1","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/CompoundPath.js\n// module id = 475\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/LinearGradient.js\n// module id = 476\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/RadialGradient.js\n// module id = 477\n// module chunks = 1","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Text.js\n// module id = 478\n// module chunks = 1","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/helper/roundRect.js\n// module id = 479\n// module chunks = 1","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/helper/smoothBezier.js\n// module id = 480\n// module chunks = 1","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/helper/smoothSpline.js\n// module id = 481\n// module chunks = 1","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = require('../../contain/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n            rect = style.textPositionRect || rect;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/mixin/RectText.js\n// module id = 482\n// module chunks = 1","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Arc.js\n// module id = 483\n// module chunks = 1","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/BezierCurve.js\n// module id = 484\n// module chunks = 1","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Circle.js\n// module id = 485\n// module chunks = 1","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Line.js\n// module id = 486\n// module chunks = 1","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Polygon.js\n// module id = 487\n// module chunks = 1","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Polyline.js\n// module id = 488\n// module chunks = 1","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Rect.js\n// module id = 489\n// module chunks = 1","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Ring.js\n// module id = 490\n// module chunks = 1","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = require('../../core/env');\n    var Path = require('../Path');\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Sector.js\n// module id = 491\n// module chunks = 1","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/mixin/Animatable.js\n// module id = 492\n// module chunks = 1","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/mixin/Draggable.js\n// module id = 493\n// module chunks = 1","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/tool/path.js\n// module id = 494\n// module chunks = 1","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/tool/transformPath.js\n// module id = 495\n// module chunks = 1","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.5.2';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/zrender.js\n// module id = 496\n// module chunks = 1","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_css-loader@0.28.4@css-loader/lib/css-base.js\n// module id = 498\n// module chunks = 1","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-style-loader@3.0.1@vue-style-loader/lib/addStylesClient.js\n// module id = 499\n// module chunks = 1"],"sourceRoot":""}