{"version":3,"sources":["webpack:///static/js/vendor.7f2b26f6bef2ffa9a782.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/util.js","webpack:///./~/_vue-loader@12.2.2@vue-loader/lib/component-normalizer.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/graphic.js","webpack:///./~/_echarts@3.6.2@echarts/lib/echarts.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/number.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/model.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Path.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/vector.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/env.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/Model.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/format.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/clazz.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/BoundingRect.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/Component.js","webpack:///./~/_vuex@2.3.1@vuex/dist/vuex.esm.js","webpack:///./~/_babel-runtime@6.23.0@babel-runtime/core-js/json/stringify.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/axisHelper.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/text.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/curve.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/matrix.js","webpack:///./~/_babel-runtime@6.23.0@babel-runtime/helpers/extends.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/layout.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/event.js","webpack:///./~/_zrender@3.5.2@zrender/lib/mixin/Eventful.js","webpack:///./~/_zrender@3.5.2@zrender/lib/tool/color.js","webpack:///./~/_vue@2.4.1@vue/dist/vue.esm.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_core.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_descriptors.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/bar.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/modelHelper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/Series.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/scale/Scale.js","webpack:///./~/_zrender@3.5.2@zrender/lib/config.js","webpack:///./~/_zrender@3.5.2@zrender/lib/container/Group.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/PathProxy.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_fails.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_global.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_is-object.js","webpack:///./~/_echarts@3.6.2@echarts/lib/CoordinateSystem.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/helper/createListFromArray.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/line.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/tooltip.js","webpack:///./~/_echarts@3.6.2@echarts/lib/data/List.js","webpack:///./~/_echarts@3.6.2@echarts/lib/data/helper/completeDimensions.js","webpack:///./~/_echarts@3.6.2@echarts/lib/scale/Interval.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/component.js","webpack:///./~/_echarts@3.6.2@echarts/lib/view/Chart.js","webpack:///(webpack)/buildin/global.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/timsort.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Displayable.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Gradient.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_defined.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_export.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_iobject.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_object-dp.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_to-integer.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_to-iobject.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/candlestick.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/helper/Symbol.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/helper/whiskerBoxCommon.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/globalListener.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/viewHelper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axis/AxisBuilder.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axis/AxisView.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axis/cartesianAxisHelper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/gridSimple.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/Axis.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/axisModelCommonMixin.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/cartesian/AxisModel.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Grid.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/mixin/colorPalette.js","webpack:///./~/_echarts@3.6.2@echarts/lib/scale/helper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/symbol.js","webpack:///./~/_echarts@3.6.2@echarts/lib/util/throttle.js","webpack:///./~/_zrender@3.5.2@zrender/lib/Element.js","webpack:///./~/_zrender@3.5.2@zrender/lib/animation/Animator.js","webpack:///./~/_zrender@3.5.2@zrender/lib/animation/requestAnimationFrame.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/util.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/LRU.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/guid.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/log.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Image.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Pattern.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Style.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/helper/poly.js","webpack:///./~/_zrender@3.5.2@zrender/lib/mixin/Transformable.js","webpack:///./~/_vue-resource@1.3.4@vue-resource/dist/vue-resource.es2015.js","webpack:///./~/_babel-runtime@6.23.0@babel-runtime/core-js/object/assign.js","webpack:///./~/_babel-runtime@6.23.0@babel-runtime/core-js/object/define-property.js","webpack:///./~/_babel-runtime@6.23.0@babel-runtime/helpers/defineProperty.js","webpack:///./~/_core-js@2.4.1@core-js/library/fn/json/stringify.js","webpack:///./~/_core-js@2.4.1@core-js/library/fn/object/assign.js","webpack:///./~/_core-js@2.4.1@core-js/library/fn/object/define-property.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_a-function.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_an-object.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_array-includes.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_cof.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_ctx.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_dom-create.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_enum-bug-keys.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_has.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_hide.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_ie8-dom-define.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_object-assign.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_object-gops.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_object-keys-internal.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_object-keys.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_object-pie.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_property-desc.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_shared-key.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_shared.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_to-index.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_to-length.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_to-object.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_to-primitive.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/_uid.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/es6.object.assign.js","webpack:///./~/_core-js@2.4.1@core-js/library/modules/es6.object.define-property.js","webpack:///./~/_echarts@3.6.2@echarts/lib/ExtensionAPI.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/bar/BarSeries.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/bar/BarView.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/bar/barItemStyle.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/bar/helper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/candlestick/CandlestickSeries.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/candlestick/CandlestickView.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/candlestick/candlestickLayout.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/candlestick/candlestickVisual.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/candlestick/preprocessor.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/helper/SymbolDraw.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/helper/WhiskerBoxDraw.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/helper/labelHelper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/line/LineSeries.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/line/LineView.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./~/_echarts@3.6.2@echarts/lib/chart/line/poly.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axis.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/axis/CartesianAxisView.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/tooltip/TooltipContent.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/tooltip/TooltipModel.js","webpack:///./~/_echarts@3.6.2@echarts/lib/component/tooltip/TooltipView.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/axisDefault.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/axisModelCreator.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Axis2D.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Cartesian.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./~/_echarts@3.6.2@echarts/lib/coord/cartesian/GridModel.js","webpack:///./~/_echarts@3.6.2@echarts/lib/data/DataDiffer.js","webpack:///./~/_echarts@3.6.2@echarts/lib/helper.js","webpack:///./~/_echarts@3.6.2@echarts/lib/layout/barGrid.js","webpack:///./~/_echarts@3.6.2@echarts/lib/layout/points.js","webpack:///./~/_echarts@3.6.2@echarts/lib/loading/default.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/Global.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/OptionManager.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/globalDefault.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/mixin/areaStyle.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/mixin/boxLayout.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/mixin/itemStyle.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/mixin/lineStyle.js","webpack:///./~/_echarts@3.6.2@echarts/lib/model/mixin/textStyle.js","webpack:///./~/_echarts@3.6.2@echarts/lib/preprocessor/backwardCompat.js","webpack:///./~/_echarts@3.6.2@echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./~/_echarts@3.6.2@echarts/lib/processor/dataSample.js","webpack:///./~/_echarts@3.6.2@echarts/lib/scale/Log.js","webpack:///./~/_echarts@3.6.2@echarts/lib/scale/Ordinal.js","webpack:///./~/_echarts@3.6.2@echarts/lib/scale/Time.js","webpack:///./~/_echarts@3.6.2@echarts/lib/view/Component.js","webpack:///./~/_echarts@3.6.2@echarts/lib/visual/seriesColor.js","webpack:///./~/_echarts@3.6.2@echarts/lib/visual/symbol.js","webpack:///./~/_vue-native-websocket@2.0.1@vue-native-websocket/dist/build.js","webpack:///./~/_vue-router@2.7.0@vue-router/dist/vue-router.esm.js","webpack:///./~/_vue-style-loader@3.0.1@vue-style-loader/lib/listToStyles.js","webpack:///./~/_zrender@3.5.2@zrender/lib/Handler.js","webpack:///./~/_zrender@3.5.2@zrender/lib/Layer.js","webpack:///./~/_zrender@3.5.2@zrender/lib/Painter.js","webpack:///./~/_zrender@3.5.2@zrender/lib/Storage.js","webpack:///./~/_zrender@3.5.2@zrender/lib/animation/Animation.js","webpack:///./~/_zrender@3.5.2@zrender/lib/animation/Clip.js","webpack:///./~/_zrender@3.5.2@zrender/lib/animation/easing.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/arc.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/cubic.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/line.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/path.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/quadratic.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/windingLine.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/GestureMgr.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/bbox.js","webpack:///./~/_zrender@3.5.2@zrender/lib/dom/HandlerProxy.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/CompoundPath.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/LinearGradient.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/RadialGradient.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Text.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/helper/roundRect.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/helper/smoothBezier.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/helper/smoothSpline.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/mixin/RectText.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Arc.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/BezierCurve.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Circle.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Line.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Polygon.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Polyline.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Rect.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Ring.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Sector.js","webpack:///./~/_zrender@3.5.2@zrender/lib/mixin/Animatable.js","webpack:///./~/_zrender@3.5.2@zrender/lib/mixin/Draggable.js","webpack:///./~/_zrender@3.5.2@zrender/lib/tool/path.js","webpack:///./~/_zrender@3.5.2@zrender/lib/tool/transformPath.js","webpack:///./~/_zrender@3.5.2@zrender/lib/zrender.js","webpack:///./~/_css-loader@0.28.4@css-loader/lib/css-base.js","webpack:///./~/_vue-style-loader@3.0.1@vue-style-loader/lib/addStylesClient.js"],"names":["webpackJsonp","module","exports","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","createCanvas","document","createElement","getContext","_ctx","util","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","concat","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","slice","Function","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","set","createHashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","Array","get","prefixedKey","removeKey","noop","rawScriptExports","compiledTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","default","options","render","staticRenderFns","_scopeId","hook","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","functional","existing","beforeCreate","h","__webpack_require__","hasFillOrStroke","fillOrStroke","liftColor","color","colorTool","lift","cacheElementStl","el","__hoverStlDirty","stroke","style","fill","hoverStyle","__hoverStl","normalStyle","name","__normalStl","doSingleEnterHover","__isHover","useHoverLayer","__zr","addHover","setStyle","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","traverse","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","e","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","animateOrSetProps","isUpdate","props","animatableModel","dataIndex","isAnimationEnabled","postfix","duration","getShallow","animationEasing","animationDelay","getAnimationDelayParams","animateTo","stopAnimation","attr","zrUtil","pathTool","Path","matrix","vector","Transformable","BoundingRect","round","Math","mathMax","max","mathMin","min","graphic","Group","Image","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","extendShape","opts","extendPath","pathData","extendFromString","makePath","rect","layout","path","createFromString","boundingRect","getBoundingRect","aspect","width","height","cx","x","cy","y","resizePath","mergePath","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","shape","lineWidth","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","setHoverStyle","opt","hoverSilentOnTouch","on","setText","textStyle","labelModel","labelPosition","labelOffset","labelColor","textStyleModel","getModel","textDistance","textFont","getFont","textPosition","textOffset","textFill","getTextColor","ecModel","gTextStyleModel","fontStyle","fontWeight","fontSize","fontFamily","join","updateProps","initProps","getTransform","ancestor","mat","identity","mul","getLocalTransform","transform","invert","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","isGroup","anid","oldEl","newProp","clipPointsByRect","points","point","clipRectByRect","targetRect","global","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","prioritySortFunc","a","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","_throttledZrFlush","throttle","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","createExtensionAPI","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","_onframe","doConvertPixel","methodName","finder","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","updateDirectly","ecIns","payload","mainType","subType","callView","view","__alive","__model","query","eachComponent","model","index","__viewId","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","__id","__ecComponentInfo","componentIndex","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","chartView","storage","elCount","env","node","ignore","frameDrawNum","needProgressive","progressive","floor","blendMode","canvasSupported","z","zlevel","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","window","GlobalModel","OptionManager","ComponentModel","SeriesModel","ACTION_REG","off","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","log","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","pixelRatio","backgroundColor","list","getDisplayList","getDataURL","excludeComponents","excludesComponentViews","self","url","toDataURL","getConnectedDataURL","groupId","left","Infinity","top","right","bottom","canvasList","canvas","getBoundingClientRect","targetCanvas","img","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","getItemVisual","getViewOfComponentModel","getViewOfSeriesModel","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","cfg","hideLoading","loadingEffects","browser","weChat","MOUSE_EVENT_NAMES","eveName","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","clear","idBase","Date","groupIdBase","echarts","version","dependencies","replace","existInstance","getInstanceByDom","nodeName","toUpperCase","clientWidth","clientHeight","setAttribute","connect","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","isNaN","registerPostUpdate","postUpdateFunc","registerAction","test","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","Axis","number","format","helper","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","_trim","str","quantityExponent","val","LN10","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","match","parseFloat","NaN","precision","returnStr","toFixed","asc","arr","sort","getPrecision","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","dataQuantity","sizeQuantity","isFinite","getPercentWithPrecision","valueList","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","radian","pi2","PI","isRadianAroundZero","TIME_REG","getTimezoneOffset","parseDate","exec","timezoneOffset","timeOffset","quantity","nice","nf","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","has","formatUtil","nubmerUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","LABEL_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","createDataFormatModel","dataFormatMixin","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","seriesId","seriesName","marker","getTooltipMarker","$vars","getFormattedLabel","dimIndex","labelProp","itemModel","getItemModel","formatter","formatTpl","formatTooltip","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","makeGetter","hostObj","parsedKey","queryType","includeMainTypes","queryParam","queryComponents","dataDimToCoordDim","dataDim","getDimension","dimItem","getDimensionInfo","coordDim","coordDimToDataDim","dimName","coordDimIndex","otherDimToDataDim","otherDim","otherDims","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","scale","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","text","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","copy","w","lineScale","strokeNoScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirty","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","sqrt","Sub","extendFrom","defaultShape","thisShape","ArrayCtor","Float32Array","out","v1","v2","scaleAndAdd","lenSquare","div","dot","s","normalize","d","distance","distanceSquare","negate","lerp","t","lengthSquare","dist","distSquare","navigator","os","ua","firefox","ie","edge","touchEventsSupported","pointerEventsSupported","userAgent","parentModel","doGet","pathArr","getParent","getParentMethod","clazzUtil","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","Ctor","setReadOnly","properties","customizeGetParent","enableClassExtend","numberUtil","textContain","addCommas","toCamelCase","upperCaseFirst","group1","charAt","normalizeCssArray","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","tpl","paramsList","encode","seriesLen","alias","k","formatTplSimple","extraCssText","s2d","formatTime","isUTC","date","utc","M","capitalFirst","substr","truncateText","checkClassType","superCall","superApply","IS_CONTAINER","host","hasOwn","ret","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","enableClassManagement","entity","makeContainer","container","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","o","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","getDependencies","deps","arrayPush","componentUtil","defaultOption","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","__webpack_exports__","devtoolPlugin","store","devtoolHook","_devtoolHook","emit","targetState","replaceState","subscribe","mutation","state","forEachValue","fn","keys","isPromise","then","msg","targetModule","newModule","modules","getChild","resetStore","hot","_actions","_mutations","_wrappedGetters","_modulesNamespaceMap","installModule","_modules","root","resetStoreVM","oldVm","_vm","getters","wrappedGetters","computed","defineProperty","enumerable","Vue","config","$$state","strict","enableStrictMode","_withCommit","_data","nextTick","$destroy","rootState","isRoot","namespace","getNamespace","namespaced","parentState","getNestedState","moduleName","local","makeLocalContext","forEachMutation","registerMutation","forEachAction","forEachGetter","getter","registerGetter","forEachChild","noNamespace","dispatch","_type","_payload","_options","unifyObjectStyle","error","commit","defineProperties","makeLocalGetters","gettersProxy","splitPos","localType","res","rootGetters","Promise","resolve","catch","err","rawGetter","$watch","_committing","deep","sync","install","_Vue","applyMixin","normalizeMap","normalizeNamespace","getModuleByNamespace","mapMutations","mapActions","vuexInit","$options","$store","usesInit","_lifecycleHooks","_init","__VUE_DEVTOOLS_GLOBAL_HOOK__","Module","rawModule","runtime","_children","_rawModule","rawState","prototypeAccessors$1","addChild","removeChild","mutations","ModuleCollection","rawRootModule","this$1","rawChildModule","unregister","Store","plugins","_subscribers","_watcherVM","ref","plugin","prototypeAccessors","entry","subs","watch","registerModule","unregisterModule","delete","hotUpdate","newOptions","committing","mapState","states","vuex","mapGetters","index_esm","__esModule","OrdinalScale","IntervalScale","Scale","axisHelper","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","setBlank","getNeedCrossZero","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","axis","getAxisLabelInterval","tickCoords","labels","font","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","getTextWidth","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getTextRect","textAlign","textBaseline","textLineLen","lineHeight","adjustTextPositionOnRect","textRect","textHeight","halfHeight","containerWidth","ellipsis","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","cos","THREE_SQRT","sin","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","_assign","_assign2","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","HV_NAMES","box","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","copyLayoutParams","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","stop","preventDefault","stopPropagation","cancelBubble","returnValue","Dispatcher","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseInt","parseCssFloat","cssHueToRgb","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastMapToColor","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","mapToColor","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","isUndef","undefined","isDef","isTrue","isFalse","isPlainObject","_toString","isRegExp","isValidArrayIndex","JSON","toNumber","expectsLowerCase","cache","boundFn","_length","toArray","start","to","_from","toObject","looseEqual","isObjectA","isObjectB","looseIndexOf","once","called","isReserved","def","writable","configurable","bailRE","segments","handleError","vm","info","errorHandler","inBrowser","isNative","pushTarget","_target","Dep","targetStack","popTarget","protoAugment","src","__proto__","copyAugment","observe","asRootData","ob","__ob__","Observer","observerState","shouldConvert","isServerRendering","isExtensible","_isVue","vmCount","defineReactive$$1","customSetter","shallow","dep","property","getOwnPropertyDescriptor","setter","childOb","depend","dependArray","newVal","notify","del","mergeData","toVal","fromVal","mergeDataOrFn","parentVal","childVal","instanceData","defaultData","mergeHook","mergeAssets","normalizeProps","camelize","normalizeInject","inject","normalized","normalizeDirectives","dirs","directives","mergeOptions","mergeField","strat","strats","defaultStrat","extendsFrom","extends","mixins","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","capitalize","validateProp","propOptions","propsData","absent","isType","Boolean","hyphenate","getPropDefaultValue","prevShouldConvert","_props","getType","createTextVNode","VNode","cloneVNode","vnode","cloned","tag","children","elm","componentOptions","asyncFactory","ns","isStatic","isComment","isCloned","cloneVNodes","vnodes","createFnInvoker","fns","invoker","arguments$1","updateListeners","oldOn","remove$$1","cur","old","capture","passive","mergeVNodeHook","hookKey","wrappedHook","oldHook","extractPropsFromVNodeData","attrs","altKey","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","last","_isVList","ensureCtor","comp","createAsyncPlaceholder","factory","createEmptyVNode","asyncMeta","resolveAsyncComponent","baseCtor","errorComp","resolved","loading","loadingComp","contexts","forceRender","$forceUpdate","reject","reason","delay","setTimeout","timeout","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","once$$1","$once","$on","remove$1","$off","oldListeners","resolveSlots","slots","defaultSlot","functionalContext","slot","every","isWhitespace","resolveScopedSlots","initLifecycle","abstract","$parent","$children","$root","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","mountComponent","hydrating","$el","callHook","updateComponent","_update","_render","Watcher","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","emptyObject","_parentVnode","_vnode","$attrs","$listeners","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","$emit","resetSchedulerState","queue","activatedChildren","waiting","flushing","flushSchedulerQueue","watcher","run","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","devtools","queueActivatedComponent","queueWatcher","seenObjects","_traverse","seen","isA","depId","proxy","sourceKey","sharedPropertyDefinition","initState","_watchers","methods","initMethods","initData","initComputed","nativeWatch","initWatch","propsOptions","watchers","_computedWatchers","userDef","computedWatcherOptions","defineComputed","createComputedGetter","evaluate","createWatcher","keyOrFn","initProvide","provide","_provided","initInjections","resolveInject","hasSymbol","Reflect","ownKeys","provideKey","createFunctionalComponent","mergeProps","_context","injections","functionalOptions","createComponent","_base","cid","resolveConstructorOptions","transformModel","mergeHooks","createComponentInstanceForVnode","parentElm","refElm","vnodeComponentOptions","_isComponent","_componentTag","_parentElm","_refElm","inlineTemplate","hooksToMerge","fromParent","ours","componentVNodeHooks","mergeHook$1","two","callback","normalizationType","alwaysNormalize","ALWAYS_NORMALIZE","_createElement","is","SIMPLE_NORMALIZE","getTagNamespace","isReservedTag","parsePlatformTagName","applyNS","renderList","renderSlot","fallback","bindObject","scopedSlotFn","slotNodes","resolveFilter","checkKeyCodes","eventKeyCode","builtInAlias","keyCodes","bindObjectProps","asProp","isSync","isReservedAttribute","mustUseProp","domProps","$event","renderStatic","isInFor","tree","_staticTrees","_renderProxy","markStatic","markOnce","isOnce","markStaticNode","bindObjectListeners","initRender","renderContext","_c","$createElement","parentData","initInternalComponent","super","superOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","extended","sealed","sealedOptions","dedupe","Vue$3","initUse","use","installedPlugins","_installedPlugins","unshift","initMixin$1","initExtend","Super","SuperId","cachedCtors","_Ctor","initProps$1","initComputed$1","ASSET_TYPES","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","current","cachedNode","pruneCacheEntry","componentInstance","genClassForVnode","parentNode","childNode","mergeClassData","renderClass","staticClass","class","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","isSVG","isUnknownElement","unknownElementCache","HTMLUnknownElement","HTMLElement","selected","querySelector","createElement$1","tagName","multiple","createElementNS","namespaceMap","createTextNode","createComment","insertBefore","newNode","referenceNode","appendChild","nextSibling","setTextContent","textContent","registerRef","isRemoval","refs","refInFor","sameVnode","sameInputType","isAsyncPlaceholder","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldVnode","oldDir","dir","isCreate","emptyNode","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","updateAttrs","inheritAttrs","oldAttrs","setAttr","isIE9","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","removeAttribute","isBooleanAttr","isFalsyAttrValue","setAttributeNS","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","parseFilters","exp","pushFilter","filters","lastFilterIndex","trim","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","validDivisionCharRE","wrapFilter","baseWarn","pluckModuleFunction","_","addProp","addAttr","addDirective","arg","addHandler","important","events","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","attrsMap","attrsList","genComponentModel","valueExpression","assignment","genAssignmentCode","modelRs","parseModel","index$1","expressionPos","expressionEndPos","lastIndexOf","eof","chr","isStringStart","parseString","parseBracket","substring","inBracket","stringQuote","_warn","warn$1","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","trueValueBinding","falseValueBinding","CHECKBOX_RADIO_TOKEN","selectedVal","code","lazy","needCompositionGuard","RANGE_TOKEN","normalizeEvents","isIE","isChrome","add$1","oldHandler","target$1","ev","remove$2","supportsPassive","updateDOMListeners","isComponentRoot","nativeOn","updateDOMProps","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","isDirty","isInputChanged","activeElement","_vModifiers","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","getStyle","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","setProp","addClass","classList","removeClass","tar","resolveTransition","def$$1","css","autoCssTransition","nextFrame","raf","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","end","onEnd","styles","getComputedStyle","transitionDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","enter","toggleDisplay","_leaveCb","cancelled","transition","_enterCb","enterClass","enterToClass","enterActiveClass","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","activeInstance","transitionNode","isAppear","isRootInsert","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","rm","performLeave","beforeLeave","leaveClass","leaveActiveClass","leaveToClass","explicitLeaveDuration","afterLeave","leaveCancelled","delayLeave","invokerFns","_enter","setSelected","binding","isMultiple","getValue","selectedIndex","hasNoMatchingOption","onCompositionStart","onCompositionEnd","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","key$1","rawChild","hasParentTransition","isSameChild","oldChild","callPendingCbs","_moveCb","recordPosition","newPos","applyTranslation","oldPos","pos","moved","WebkitTransform","transitionDuration","parseText","delimiters","tagRE","buildRegex","defaultTagRE","tokens","lastIndex","transformNode","classBinding","genData","transformNode$1","styleBinding","genData$1","html","decodeAttr","shouldDecodeNewlines","re","encodedAttrWithNewLines","encodedAttr","decodingMap","parseHTML","advance","parseEndTag","lowerCasedTagName","lowerCasedTag","lastTag","expectHTML","isUnaryTag$$1","isUnaryTag","no","canBeLeftOpenTag$$1","canBeLeftOpenTag","isPlainTextElement","endTagLength","stackedTag","reStackedTag","reCache","RegExp","rest$1","endTag","shouldIgnoreFirstNewline","chars","textEnd","comment","commentEnd","shouldKeepComment","conditionalComment","conditionalEnd","doctypeMatch","doctype","endTagMatch","curIndex","startTagMatch","startTagOpen","startTagClose","attribute","unarySlash","isNonPhrasingTag","unary","IS_REGEX_CAPTURING_BROKEN","rest","template","endPre","element","pre","inVPre","platformIsPreTag","inPre","warn$2","isPreTag","platformMustUseProp","platformGetTagNamespace","transforms","preTransforms","postTransforms","currentParent","preserveWhitespace","comments","guardIESVGBug","makeAttrsMap","isForbiddenTag","forbidden","processPre","processRawAttrs","processFor","processIf","processOnce","processKey","processRef","processSlot","processComponent","i$1","processAttrs","if","elseif","else","addIfCondition","block","processIfConditions","slotScope","slotTarget","i$2","lastNode","isTextTag","decodeHTMLCached","checkInFor","inMatch","forAliasRE","for","iteratorMatch","forIteratorRE","iterator1","iterator2","findPrevElement","ifConditions","slotName","isProp","dirRE","hasBindings","parseModifiers","modifierRE","bindRE","camel","onRE","argMatch","argRE","ieNSBug","ieNSPrefix","optimize","isStaticKey","genStaticKeysCached","staticKeys","isPlatformReservedTag","markStatic$1","markStaticRoots","genStaticKeys$1","static","l$1","staticInFor","staticRoot","isBuiltInTag","isDirectChildOfTemplateFor","genHandlers","genHandler","isMethodPath","simplePathRE","isFunctionExpression","fnExpRE","genModifierCode","modifierCode","genKeyFilter","genFilterCode","keyVal","wrapListeners","bind$1","wrapData","generate","ast","CodegenState","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genSlot","genComponent","genData$2","genChildren","onceId","altGen","altEmpty","genIfConditions","conditions","genTernaryExp","altHelper","genDirectives","dataGenFns","genProps","genScopedSlots","genInlineTemplate","needRuntime","hasRuntime","gen","inlineRenderFns","genScopedSlot","genForScopedSlot","scope","checkSkip","altGenElement","altGenNode","el$1","getNormalizationType","maybeComponent","genNode","needsNormalization","some","genComment","genText","transformSpecialNewlines","bind$$1","componentName","createFunction","errors","createCompileToFunctionFn","compile","compiled","fnGenErrors","getOuterHTML","outerHTML","cloneNode","innerHTML","camelizeRE","hyphenateRE","SSR_ATTR","LIFECYCLE_HOOKS","optionMergeStrategies","productionTip","performance","warnHandler","ignoredElements","isReservedAttr","freeze","hasProto","UA","isEdge","isAndroid","isIOS","_isServer","_Set","VUE_ENV","Symbol","nextTickHandler","pending","copies","callbacks","timerFunc","logError","MutationObserver","counter","observer","textNode","characterData","_resolve","Set","addSub","removeSub","addDep","arrayMethods","original","observeArray","arrayKeys","getOwnPropertyNames","walk","items","raw","uid$2","expOrFn","user","active","newDeps","depIds","newDepIds","cleanupDeps","teardown","$mount","keepAlive","mountedNode","prepatch","insert","destroy","uid$1","_uid","_self","dataDef","propsDef","$set","$delete","immediate","hookRE","cbs","prevVnode","prevActiveInstance","__patch__","__vue__","$nextTick","_o","_n","_s","_l","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","patternTypes","KeepAlive","include","exclude","created","destroyed","builtInComponents","configDef","defineReactive","emptyStyle","acceptValue","svg","math","isHTMLTag","nodeOps","hooks","baseModules","klass","cssText","listDelimiter","propertyDelimiter","cssVarRE","importantRE","setProperty","normalizedName","vendorNames","capName","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","requestAnimationFrame","activate","platformModules","patch","backend","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","ref$$1","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","hydrate","postpatch","invokeInsertHook","initial","hasChildNodes","childrenMatch","firstChild","isRenderedModule","isInitialPatch","isRealElement","hasAttribute","oldElm","parentElm$1","isTextInputType","vmodel","model$1","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","body","offsetHeight","propertyName","_hasMove","platformComponents","decoder","content","encoded","regexEscapeRE","open","klass$1","style$1","modules$1","directives$1","baseOptions","he","decode","singleAttrIdentifier","singleAttrAssign","singleAttrValues","ncname","qnameCapture","&lt;","&gt;","&quot;","&amp;","&#10;","isIgnoreNewlineTag","esc","tab","space","up","down","genGuard","prevent","ctrl","alt","meta","middle","baseDirectives","cloak","createCompiler","baseCompile","finalOptions","tips","tip","compileToFunctions","ref$1","idToTemplate","mount","documentElement","core","__e","barLayoutGrid","eachSeriesByType","setVisual","collectAxesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","axesInfo","useHandle","seriesModels","axesInfoInCoordSys","seriesInvolved","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysAxesInfo","coordSysMap","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","label","crossStyle","lineStyle","collectSeriesInfo","seriesTooltipTrigger","seriesTooltipShow","getAxis","dim","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","collect","fixValue","getAxisInfo","reverse","isBlank","getAxisPointerModel","classUtil","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","fillDataTextStyle","newSeriesOption","cloneShallow","getLinkedData","setData","getRawData","getBaseAxis","multipleSeries","formattedValue","setEachItem","dimIdx","tooltip","valStr","vertially","tooltipName","tooltipDims","colorEl","animationEnabled","getColorFromPalette","getAxisTooltipData","getTooltipPosition","excludes","includes","propName","setting","_setting","_extent","_interval","scaleProto","getSetting","unionExtent","unionExtentFromData","getDataExtent","thisExtent","_isBlank","debugMode","Element","__storage","childOfName","childCount","_doAdd","addBefore","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","offset","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","__g","it","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","completeDimOpt","encodeDef","dimsDef","completeDimensions","categoryIndex","nameList","createNameList","categories","dimValueGetter","hasItemOption","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","stackable","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","angle","geo","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","DefaultDataProvider","dataArray","_array","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","hostModel","_storage","originalStorage","dimStore","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","time","DataDiffer","pure","getItem","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","isDataArray","nameDimIdx","dimensionInfoMap","size","idList","nameRepeatCount","itemName","DataCtor","stackedValue","getValues","dimData","dimExtent","getSum","rawIndex","mid","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","dimensionInfoList","wrapMethod","injectFunction","originalMethod","TRANSFERABLE_METHODS","CHANGABLE_METHODS","sysDims","applyDim","resultItem","OTHER_DIMS","coordDimNameMap","genName","fromZero","dataDimNameMap","dimCount","value0","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","dataDims","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","extra","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","roundNumber","_intervalPrecision","getInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","topologicalTravel","targetNameList","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","Chart","elSetState","toggleHighlight","dataIdx","highlight","downplay","chartProto","eval","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","rectHover","beforeBrush","afterBrush","rectContain","coord","animateStyle","useStyle","Gradient","addColorStop","TypeError","hide","$export","own","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","P","IS_BIND","IS_WRAP","W","expProto","virtual","U","cof","propertyIsEnumerable","anObject","IE8_DOM_DEFINE","toPrimitive","dP","O","Attributes","IObject","defined","getSymbolSize","symbolSize","getScale","seriesScope","updateData","driftSymbol","drift","symbolUtil","labelHelper","symbolProto","_createSymbol","symbolType","symbolPath","createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","setZ","setDraggable","_updateCommon","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","cursorStyle","getItemStyle","elStyle","setColor","opacity","valueDim","findLabelValueDim","setTextToStyle","onEmphasis","ratio","onNormal","fadeOut","WhiskerBoxDraw","seriesModelMixin","_baseAxisDim","addOrdinal","coordDims","baseAxisDimIndex","baseAxisDim","otherAxisDim","defaultValueDimensions","viewMixin","whiskerBoxDraw","_whiskerBoxDraw","getStyleUpdater","dataToPoint","initGlobalListeners","useHandler","dis","makeDispatchAction","records","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","pendingList","globalListener","confineInContainer","viewWidth","viewHeight","AxisBuilder","buildElStyle","axisPointerType","styleModel","getLineStyle","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","align","verticalAlign","bgColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","dataToCoord","labelDirection","labelMargin","buildCartesianSingleLabelElOption","textLayout","innerTextLayout","textVerticalAlign","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","inverse","onLeft","tooltipOpt","fixMinMaxLabelShow","textEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","isTwoLabelOverlapped","labelLayout","firstRect","nextRect","mRotationBack","nameDirection","tickDirection","dumbGroup","updateTransform","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","lineCap","axisTick","tickModel","lineStyleModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","ifIgnoreOnTick","axisLabel","axisLabelShow","labelRotation","labelRotate","categoryData","triggerEvent","tickVal","itemTextStyleModel","textColor","labelStr","textEl","targetType","decomposeTransform","axisName","nameLocation","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","axisRotation","textRotation","rawTick","updateAxisPointer","axisView","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","axisPointerClazz","registerAxisPointerClass","gridModel","getZero","theAxis","grid","toGlobalCoord","rawAxisPosition","axisPosition","onZero","axisDim","getRect","rectBound","axisOffset","posMap","dirMap","labelInside","getLabelInterval","xAxis","yAxis","fixExtentWithBands","nTick","normalizedExtent","onBand","_labelInterval","containData","coordToData","pointToData","alignWithLabel","bands","getBands","coords","getLabelsCoords","getBandWidth","axisExtent","isHorizontal","origin","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","getAxisType","axisModelCreator","AxisModel","gridIndex","gridId","extraOption","isAxisUsedInTheGrid","getLabelUnionRect","labelCount","isLabelIgnored","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","updateAxisTransfrom","coordBase","axisExtentSum","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","gridProto","ifAxisCanNotOnZero","axes","axesMap","_updateScale","ignoreContainLabel","adjustAxes","axesList","gridRect","getBoxLayoutParams","labelUnionRect","axisIndex","axesMapOnDim","getCartesian","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","cartesian","coordsList","createAxisCreator","axisPositionUsed","axesCount","addAxis","baseAxis","otherAxis","getOtherAxis","grids","colorIdx","colorNameMap","colorPalette","fixExtent","Triangle","Diamond","Pin","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","line","roundRect","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","lib","ORIGIN_METHOD","RATE","debounce","lastExec","getTime","timer","currCall","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","guid","Animatable","clipPath","afterUpdate","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","_getter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","PI2","normalizeRadian","LinkedList","head","tail","linkedListProto","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","leastUsedEntry","idStart","ZImage","globalImageCache","_image","cachedImgObj","onload","sWidth","sHeight","drawImage","repeat","createPattern","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","textStroke","textPositionRect","textShadowBlur","textShadowOffsetX","textShadowOffsetY","textTransform","blend","prevStyle","firstDraw","styleName","globalAlpha","globalCompositeOperation","otherStyle","canvasGradient","styleProto","smoothSpline","smoothBezier","smooth","controlPoints","smoothConstraint","cp1","cp2","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","Promise$1","executor","PENDING","deferred","promise","PromiseObj","debug","ntick","trimEnd","toLower","toUpper","getPrototypeOf","isBlob","Blob","isFormData","FormData","fulfilled","rejected","$vm","iterator","_merge","expand","variables","tmpl","expanded","vars","operators","literal","operator","variable","separator","encodeReserved","modifier","isDefined","encodeValue","isKeyOperator","encodeURIComponent","part","encodeURI","Url","options$$1","serialize","isJson","[","{","sendRequest","request","client","xhrClient","nodeClient","normalizeName","blobText","reader","FileReader","readAsText","isBlobText","Http","Client","interceptors","interceptor","Request","response","ok","Resource","resource","assign","$http","installed","Util","http","$url","$resource","$promise","iterable","race","p$1","onResolved","onRejected","finally","urlParams","escape","documentMode","href","protocol","port","hostname","pathname","search","xdrClient","xdr","XDomainRequest","respondWith","responseText","abort","getUrl","onabort","onerror","ontimeout","onprogress","send","getBody","SUPPORTS_CORS","XMLHttpRequest","cors","orgUrl","location","reqUrl","crossOrigin","emulateHTTP","form","headers","emulateJSON","json","bodyText","jsonpClient","script","jsonp","jsonpCallback","async","before","header","common","custom","xhr","statusText","getAllResponseHeaders","row","append","progress","upload","responseType","withCredentials","credentials","setRequestHeader","resp","statusCode","statusMessage","error$$1","reqHandlers","resHandlers","Headers","getAll","deleteAll","thisArg","Response","bodyBlob","blob","COMMON_HEADERS","Accept","JSON_CONTENT_TYPE","Content-Type","post","method$$1","save","_defineProperty","_defineProperty2","$JSON","$Object","desc","toIObject","toLength","toIndex","IS_INCLUDES","$this","fromIndex","aFunction","that","createDesc","object","getKeys","gOPS","pIE","$assign","aLen","getSymbols","isEnum","getOwnPropertySymbols","arrayIndexOf","IE_PROTO","$keys","enumBugKeys","bitmap","shared","toInteger","valueOf","px","chartInstance","echartsAPIList","brushSelector","removeRect","animationModel","removeSector","isPolar","itemStyleModel","getBarItemStyle","labelPositionOutside","setLabel","getLineWidth","rawLayout","BAR_BORDER_WIDTH_QUERY","BarView","coordinateSystemType","isHorizontalOrRadial","elementCreator","newIndex","oldIndex","execute","rectShape","animateProperty","animateTarget","isRadial","sector","sectorShape","fixedLineWidth","signX","signY","getMarkerPosition","pt","legendHoverLink","barMinHeight","barMinAngle","getBorderLineDash","labelText","whiskerBoxCommon","CandlestickSeries","color0","borderWidth","borderColor","borderColor0","barMaxWidth","barMinWidth","barWidth","animationUpdate","animationDuration","getShadowDim","selectors","itemLayout","brushRect","itemGroup","normalItemStyleModel","whiskerEl","whiskerIndex","bodyEl","bodyIndex","CandlestickView","calculateCandleWidth","bandWidth","cDim","candleWidth","chartLayout","variableDim","constDim","vDims","getPoint","axisDimVal","addBodyEnd","point1","point2","bodyEnds","openVal","closeVal","lowestVal","highestVal","ocLow","ocHigh","ocLowPoint","ocHighPoint","lowestPoint","highestPoint","whiskerEnds","sign","initBaseline","pmin","pmax","positiveBorderColorQuery","negativeBorderColorQuery","positiveColorQuery","negativeColorQuery","eachRawSeriesByType","legendSymbol","isSeriesFiltered","seriesItem","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","SymbolCtor","newIdx","symbolEl","oldIdx","enableAnimation","WhiskerBox","styleUpdater","_createContent","transInit","makeWhiskerEndsShape","ends","WhiskerPath","pts","whiskerBoxProto","whiskerBoxDrawProto","labelDims","clipOverflow","smoothMonotone","symbol","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","getGlobalExtent","halfBandWidth","getStackedOnPoints","valueAxis","valueStart","baseDataOffset","stackedOnSameSign","stackedData","createGridClipShape","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","stepPt","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","gradient","lineAnimationDiff","polyHelper","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnSmooth","categoryAxis","getAxesByScale","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","vec2Min","vec2Max","getBoundingBox","ptMin","ptMax","stackedOnBBox","axisTrigger","link","AxisPointerModel","triggerOn","animationDurationUpdate","shadowStyle","padding","handle","icon","AxisPonterView","disopse","BaseAxisPointer","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","createIcon","handleModel","iconStr","updateMandatoryProps","eventTool","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","doClear","buildLabel","getAxisDimIndex","viewHelper","cartesianAxisHelper","CartesianAxisPointer","otherExtent","pixelValue","pointerShapeBuilder","currPosition","cursorOtherValue","tooltipOptions","targetShape","shadow","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisId","valueLabelOpt","outputAxesInfo","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","axisBuilder","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","areaStyle","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","assembleCssText","tooltipModel","zrColor","borderName","camelCase","TooltipContent","_x","_y","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","domStyle","setContent","setEnterable","enterable","getSize","viewportRoot","getViewportRoot","offsetLeft","offsetTop","isShow","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","borderRadius","animationEasingUpdate","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","confineTooltipPosition","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","layoutUtil","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","cbTicket","vAlign","viewSize","layoutRect","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","nameRotate","nameTruncate","nameTextStyle","nameGap","inside","splitLine","splitArea","timeAxis","logAxis","logBase","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","coordExtent","dimAxisMapper","_axes","Cartesian","_dimList","_dataCoordConvert","input","dimList","output","axisX","axisY","dataToPoints","containLabel","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetter","existence","_add","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","axisModelCommonMixin","createList","createScale","mixinAxisModelCommonMethods","getSeriesStackId","STACK_PREFIX","getAxisKey","getLayoutOnAxis","axisKey","stackId","widthAndOffsets","doCalBarWidthAndOffset","offsetCenter","calBarWidthAndOffset","barSeries","barGap","barCategoryGap","seriesInfoList","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barGapPercent","autoWidth","column","lastColumn","widthSum","barWidthAndOffset","getSeriesByType","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","valueAxisStart","lastCoord","lastCoordOrigin","maskColor","mask","labelRect","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","cpt","assertSeriesInitialized","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","findComponents","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","getSeriesByName","oneSeries","getSeries","rawSeriesIndex","eachRawSeries","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","platform","progressiveThreshold","useUTC","lineType","getLineDash","dotSize","dashSize","graphicUtil","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","seriesOpt","clockWise","pointerColor","dataRange","visualMap","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","markPoint","markLine","mpData","mlData","samplers","average","nearest","indexSampler","sampler","fixRoundingError","originalVal","roundingErrorFix","intervalScaleProto","mathFloor","mathCeil","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","rank","scaleHelper","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","ONE_SECOND","ONE_MINUTE","ONE_DAY","Component","componentProto","encodeColor","colorAccessPath","defaultSymbolType","itemSymbolType","itemSymbolSize","Map","$socket","WebSocket","sockets","Proxy","addListener","deleteProperty","removeListener","beforeDestroy","onEvent","sendObj","passToStore","startsWith","isError","resolveProps","route","resolveQuery","extraQuery","_parseQuery","parsedQuery","parseQuery","parts","stringifyQuery","val2","createRoute","redirectedFrom","router","stringifyQuery$$1","fullPath","getFullPath","formatMatch","_stringifyQuery","isSameRoute","START","trailingSlashRE","isObjectEqual","aKeys","bKeys","aVal","bVal","isIncludedRoute","queryIncludes","guardEvent","metaKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","findAnchor","registerInstance","callVal","registerRouteInstance","_routerRoot","_router","history","_route","View","Link","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","resolvePath","relative","firstChar","segment","hashIndex","queryIndex","cleanPath","defaultDelimiter","delimiter","PATH_REGEXP","escaped","prefix","asterisk","partial","optional","escapeGroup","escapeString","tokensToFunction","encodeURIComponentPretty","encodeAsterisk","pretty","token","attachKeys","flags","sensitive","regexpToRegexp","groups","arrayToRegexp","pathToRegexp","stringToRegexp","tokensToRegExp","endsWithDelimiter","fillParams","routeMsg","regexpCompileCache","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","normalizedPath","normalizePath","pathToRegexpOptions","caseSensitive","regex","compileRouteRegex","redirect","childMatchAs","aliasRoute","normalizeLocation","_normalized","rawPath","parsedPath","basePath","createMatcher","addRoutes","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","resolveRecordPath","aliasedPath","aliasedMatch","aliasedRecord","decodeURIComponent","setupScroll","saveScrollPosition","setStateKey","handleScroll","isPop","app","behavior","scrollBehavior","getScrollPosition","shouldScroll","selector","normalizeOffset","getElementPosition","isValidPosition","normalizePosition","scrollTo","getStateKey","positionStore","pageXOffset","pageYOffset","docEl","docRect","elRect","isNumber","genKey","Time","now","_key","pushState","runQueue","resolveAsyncComponents","hasAsync","flatMapComponents","resolvedDef","flatten","normalizeBase","baseEl","resolveQueue","activated","deactivated","extractGuards","guards","instance","guard","extractGuard","extractLeaveGuards","bindGuard","extractUpdateHooks","extractEnterGuards","isValid","bindEnterGuard","poll","getLocation","checkFallback","ensureSlash","getHash","replaceHash","pushHash","registerHook","createHref","routerView","$route","_routerViewCache","depth","inactive","routerViewDepth","encodeReserveRE","encodeReserveReplacer","commaRE","toTypes","eventTypes","required","exact","exactActiveClass","$router","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","click","parse_1","compile_1","tokensToFunction_1","tokensToRegExp_1","supportsPushState","History","ready","readyCbs","readyErrorCbs","errorCbs","listen","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","beforeHooks","postEnterCbs","resolveHooks","afterHooks","HTML5History","History$$1","expectScroll","go","fromRoute","getCurrentLocation","HashHistory","setupListeners","AbstractHistory","targetIndex","VueRouter","apps","matcher","setupHashListener","beforeEach","beforeResolve","afterEach","back","forward","getMatchedComponents","normalizedTo","parentId","newStyles","sourceMap","makeEventPacket","eveType","targetInfo","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","Handler","painterRoot","_hovered","_lastTouchMoment","mousemove","lastHovered","hovered","hoveredTarget","lastHoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","toElement","relatedTarget","eventArgs","setCursorStyle","eventHandler","eventPacket","eachOtherLayer","layer","hoverCheckResult","_downel","_upel","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","fillRect","restore","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","clipPaths","prevClipPaths","doClip","createRoot","domRoot","Painter","singleCanvas","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","paintAll","_paintList","refreshHover","_startProgessive","__hoverMir","elMirror","__from","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","originalEl","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","prevDom","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","clearLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","displayList","whIdx","cwh","plt","prb","pathToImage","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","shapeCompareFunc","Storage","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","addRoot","delRoot","_renderList","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_a","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","windingLine","cubic","quadratic","pointPair","center","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","extremity","fromPoints","xDim","yDim","tx","ty","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","handlerDomProxyProto","paths","_updatePathDirty","globalCoord","strokeText","fillText","r1","r2","r3","r4","total","v2Min","v2Max","v2Scale","v2Distance","v2Add","isLoop","constraint","prevPoint","nextPoint","cps","d0","interpolate","segs","w2","w3","maxValue","baseline","textShadowColor","unitX","unitY","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","curveTool","pointAt","tangentAt","roundRectHelper","shadowTemp","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","vMag","pathEls","pathEl","pathBundle","nPoint","mathAtan2","delInstance","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","rendererType","vml","handerProxy","_needsRefresh","oldDelFromStorage","oldAddToStorage","zLevel","_needsRefreshHover","refreshHoverImmediately","clearAnimation","cssWithMappingToString","useSourceMap","cssMapping","btoa","sourceMapping","toComment","sources","sourceRoot","unescape","mediaQuery","alreadyImportedModules","addStylesToDom","stylesInDom","addStyle","createStyleElement","styleElement","isProduction","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","styleSheet","replaceText","cssNode","childNodes","hasDocument","DEBUG","listToStyles","getElementsByTagName","_isProduction","mayRemove","textStore","replacement"],"mappings":"AAAAA,cAAc,IAER,SAAUC,EAAQC,GCqDxB,QAAAC,GAAAC,GACA,SAAAA,GAAA,gBAAAA,GACA,MAAAA,EAGA,IAAAC,GAAAD,EACAE,EAAAC,EAAAC,KAAAJ,EAEA,uBAAAE,EAAA,CACAD,IACA,QAAAI,GAAA,EAAAC,EAAAN,EAAAO,OAAgDF,EAAAC,EAASD,IACzDJ,EAAAI,GAAAN,EAAAC,EAAAK,QAGA,IAAAG,EAAAN,GACAD,EAAAD,EAAAS,YAAAC,KAAAV,OAEA,KAAAW,EAAAT,KAAAU,EAAAZ,KAAAa,EAAAb,GAAA,CACAC,IACA,QAAAa,KAAAd,GACAA,EAAAe,eAAAD,KACAb,EAAAa,GAAAf,EAAAC,EAAAc,KAKA,MAAAb,GASA,QAAAe,GAAAC,EAAAjB,EAAAkB,GAGA,IAAAC,EAAAnB,KAAAmB,EAAAF,GACA,MAAAC,GAAAnB,EAAAC,GAAAiB,CAGA,QAAAH,KAAAd,GACA,GAAAA,EAAAe,eAAAD,GAAA,CACA,GAAAM,GAAAH,EAAAH,GACAO,EAAArB,EAAAc,IAEAK,EAAAE,KACAF,EAAAC,IACAE,EAAAD,IACAC,EAAAF,IACAP,EAAAQ,IACAR,EAAAO,IACAG,EAAAF,IACAE,EAAAH,IACAR,EAAAS,IACAT,EAAAQ,IAKAF,GAAAJ,IAAAG,KAGAA,EAAAH,GAAAf,EAAAC,EAAAc,IAAA,IALAE,EAAAI,EAAAC,EAAAH,GAUA,MAAAD,GAQA,QAAAO,GAAAC,EAAAP,GAEA,OADAjB,GAAAwB,EAAA,GACApB,EAAA,EAAAC,EAAAmB,EAAAlB,OAAsDF,EAAAC,EAASD,IAC/DJ,EAAAe,EAAAf,EAAAwB,EAAApB,GAAAa,EAEA,OAAAjB,GAQA,QAAAyB,GAAAT,EAAAjB,GACA,OAAAc,KAAAd,GACAA,EAAAe,eAAAD,KACAG,EAAAH,GAAAd,EAAAc,GAGA,OAAAG,GASA,QAAAU,GAAAV,EAAAjB,EAAA4B,GACA,OAAAd,KAAAd,GACAA,EAAAe,eAAAD,KACAc,EAAA,MAAA5B,EAAAc,GAAA,MAAAG,EAAAH,MAEAG,EAAAH,GAAAd,EAAAc,GAGA,OAAAG,GAGA,QAAAY,KACA,MAAAC,UAAAC,cAAA,UAIA,QAAAC,KAMA,MALAC,KAGAA,EAAAC,EAAAL,eAAAG,WAAA,OAEAC,EAOA,QAAAE,GAAAC,EAAAC,GACA,GAAAD,EAAA,CACA,GAAAA,EAAAD,QACA,MAAAC,GAAAD,QAAAE,EAEA,QAAAhC,GAAA,EAAAC,EAAA8B,EAAA7B,OAA+CF,EAAAC,EAASD,IACxD,GAAA+B,EAAA/B,KAAAgC,EACA,MAAAhC,GAIA,SAUA,QAAAiC,GAAAC,EAAAC,GAEA,QAAAC,MADA,GAAAC,GAAAH,EAAAI,SAEAF,GAAAE,UAAAH,EAAAG,UACAJ,EAAAI,UAAA,GAAAF,EAEA,QAAAG,KAAAF,GACAH,EAAAI,UAAAC,GAAAF,EAAAE,EAEAL,GAAAI,UAAAlC,YAAA8B,EACAA,EAAAM,WAAAL,EASA,QAAAM,GAAA7B,EAAAjB,EAAA4B,GACAX,EAAA,aAAAA,KAAA0B,UAAA1B,EACAjB,EAAA,aAAAA,KAAA2C,UAAA3C,EAEA2B,EAAAV,EAAAjB,EAAA4B,GAOA,QAAAmB,GAAAC,GACA,GAAAA,EAGA,sBAAAA,IAGA,gBAAAA,GAAAzC,OAUA,QAAA0C,GAAAC,EAAAC,EAAAC,GACA,GAAAF,GAAAC,EAGA,GAAAD,EAAAG,SAAAH,EAAAG,UAAAC,EACAJ,EAAAG,QAAAF,EAAAC,OAEA,IAAAF,EAAA3C,UAAA2C,EAAA3C,OACA,OAAAF,GAAA,EAAAC,EAAA4C,EAAA3C,OAA6CF,EAAAC,EAASD,IACtD8C,EAAA/C,KAAAgD,EAAAF,EAAA7C,KAAA6C,OAIA,QAAApC,KAAAoC,GACAA,EAAAnC,eAAAD,IACAqC,EAAA/C,KAAAgD,EAAAF,EAAApC,KAAAoC,GAcA,QAAAK,GAAAL,EAAAC,EAAAC,GACA,GAAAF,GAAAC,EAAA,CAGA,GAAAD,EAAAK,KAAAL,EAAAK,MAAAC,EACA,MAAAN,GAAAK,IAAAJ,EAAAC,EAIA,QADAnD,MACAI,EAAA,EAAAC,EAAA4C,EAAA3C,OAA6CF,EAAAC,EAASD,IACtDJ,EAAAwD,KAAAN,EAAA/C,KAAAgD,EAAAF,EAAA7C,KAAA6C,GAEA,OAAAjD,IAYA,QAAAyD,GAAAR,EAAAC,EAAAQ,EAAAP,GACA,GAAAF,GAAAC,EAAA,CAGA,GAAAD,EAAAQ,QAAAR,EAAAQ,SAAAE,EACA,MAAAV,GAAAQ,OAAAP,EAAAQ,EAAAP,EAGA,QAAA/C,GAAA,EAAAC,EAAA4C,EAAA3C,OAA6CF,EAAAC,EAASD,IACtDsD,EAAAR,EAAA/C,KAAAgD,EAAAO,EAAAT,EAAA7C,KAAA6C,EAEA,OAAAS,IAYA,QAAAE,GAAAX,EAAAC,EAAAC,GACA,GAAAF,GAAAC,EAAA,CAGA,GAAAD,EAAAW,QAAAX,EAAAW,SAAAC,EACA,MAAAZ,GAAAW,OAAAV,EAAAC,EAIA,QADAnD,MACAI,EAAA,EAAAC,EAAA4C,EAAA3C,OAA6CF,EAAAC,EAASD,IACtD8C,EAAA/C,KAAAgD,EAAAF,EAAA7C,KAAA6C,IACAjD,EAAAwD,KAAAP,EAAA7C,GAGA,OAAAJ,IAYA,QAAA8D,GAAAb,EAAAC,EAAAC,GACA,GAAAF,GAAAC,EAGA,OAAA9C,GAAA,EAAAC,EAAA4C,EAAA3C,OAAyCF,EAAAC,EAASD,IAClD,GAAA8C,EAAA/C,KAAAgD,EAAAF,EAAA7C,KAAA6C,GACA,MAAAA,GAAA7C,GAWA,QAAA2D,GAAAC,EAAAb,GACA,GAAAc,GAAAC,EAAA/D,KAAAgE,UAAA,EACA,mBACA,MAAAH,GAAAI,MAAAjB,EAAAc,EAAAI,OAAAH,EAAA/D,KAAAgE,cASA,QAAAG,GAAAN,GACA,GAAAC,GAAAC,EAAA/D,KAAAgE,UAAA,EACA,mBACA,MAAAH,GAAAI,MAAAG,KAAAN,EAAAI,OAAAH,EAAA/D,KAAAgE,cASA,QAAA9C,GAAAe,GACA,yBAAAlC,EAAAC,KAAAiC,GAQA,QAAAoC,GAAApC,GACA,wBAAAA,GAQA,QAAAqC,GAAArC,GACA,0BAAAlC,EAAAC,KAAAiC,GAQA,QAAAlB,GAAAkB,GAGA,GAAAsC,SAAAtC,EACA,oBAAAsC,KAAAtC,GAAA,UAAAsC,EAQA,QAAApD,GAAAc,GACA,QAAA1B,EAAAR,EAAAC,KAAAiC,IAQA,QAAAxB,GAAAwB,GACA,sBAAAA,IACA,gBAAAA,GAAAuC,UACA,gBAAAvC,GAAAwC,cAQA,QAAAC,GAAAzC,GACA,MAAAA,OAQA,QAAA0C,GAAAC,GACA,OAAA3E,GAAA,EAAAC,EAAA8D,UAAA7D,OAA+CF,EAAAC,EAASD,IACxD,SAAA+D,UAAA/D,GACA,MAAA+D,WAAA/D,GAYA,QAAA4E,KACA,MAAAC,UAAA9E,KAAAiE,MAAAF,EAAAC,WAQA,QAAAe,GAAAC,EAAAC,GACA,IAAAD,EACA,SAAAE,OAAAD,GAQA,QAAAE,GAAArC,GACAA,EAAAsC,IAAA,EAGA,QAAA5E,GAAAsC,GACA,MAAAA,GAAAsC,GAOA,QAAAC,GAAAvC,GACAA,GAAAD,EAAAC,EAAA,SAAAb,EAAAvB,GACA0D,KAAAkB,IAAA5E,EAAAuB,IACSmC,MAoCT,QAAAmB,GAAAzC,GACA,UAAAuC,GAAAvC,GApiBA,GAyKAjB,GAzKAtB,GACAiF,oBAAA,EACAC,kBAAA,EACAC,gBAAA,EACAC,iBAAA,EACAC,0BAAA,EACAC,yBAAA,EAEAC,iBAAA,EACAC,kBAAA,GAGA3F,GACA4F,qBAAA,EACAC,sBAAA,EACAC,6BAAA,EACAC,sBAAA,EACAC,uBAAA,EACAC,sBAAA,EACAC,uBAAA,EACAC,wBAAA,EACAC,wBAAA,GAGAzG,EAAA0G,OAAAlE,UAAAmE,SAEAC,EAAAC,MAAArE,UACAW,EAAAyD,EAAA1D,QACAS,EAAAiD,EAAAlD,OACAM,EAAA4C,EAAA9B,MACAzB,EAAAuD,EAAAxD,IACAK,EAAAmD,EAAArD,OA6cA8B,EAAA,kBA0BAC,GAAA9C,WACAlC,YAAAgF,EAIAwB,IAAA,SAAAnG,GACA,MAAA0D,MATA,OASA1D,IAEA4E,IAAA,SAAA5E,EAAAuB,GAIA,MAHAmC,MAZA,OAYA1D,GAAAuB,EAGAA,GAIAY,KAAA,SAAAE,EAAAC,OACA,KAAAA,IAAAD,EAAAa,EAAAb,EAAAC,GACA,QAAA8D,KAAA1C,MACAA,KAAAzD,eAAAmG,IACA/D,EAAAqB,KAAA0C,KAAAjC,MAtBA,KA0BAkC,UAAA,SAAArG,SACA0D,MAAA1D,IAQA,IAAAoB,IACAI,WACAQ,QACA/C,QACAiB,QACAQ,WACAE,SACAC,WACAK,aACAH,eACAM,UACA8C,QACAlB,OACAhB,cACAE,OACAM,MACAG,SACAG,SACAG,OACAO,QACAjD,UACAoD,WACAvD,WACAsD,aACAlD,kBACAV,QACAiE,QACAC,WACAI,SACAI,iBACAI,gBACAyB,KAAA,aAEAvH,GAAAC,QAAAoC,GDUM,SAAUrC,EAAQC,GEnlBxBD,EAAAC,QAAA,SACAuH,EACAC,EACAC,EACAC,EACAC,GAEA,GAAAC,GACAC,EAAAN,QAGA1C,QAAA0C,GAAAO,OACA,YAAAjD,GAAA,aAAAA,IACA+C,EAAAL,EACAM,EAAAN,EAAAO,QAIA,IAAAC,GAAA,kBAAAF,GACAA,EAAAE,QACAF,CAGAL,KACAO,EAAAC,OAAAR,EAAAQ,OACAD,EAAAE,gBAAAT,EAAAS,iBAIAP,IACAK,EAAAG,SAAAR,EAGA,IAAAS,EA4BA,IA3BAR,GACAQ,EAAA,SAAA7E,GAEAA,EACAA,GACAoB,KAAA0D,QAAA1D,KAAA0D,OAAAC,YACA3D,KAAA4D,QAAA5D,KAAA4D,OAAAF,QAAA1D,KAAA4D,OAAAF,OAAAC,WAEA/E,GAAA,mBAAAiF,uBACAjF,EAAAiF,qBAGAd,GACAA,EAAAnH,KAAAoE,KAAApB,GAGAA,KAAAkF,uBACAlF,EAAAkF,sBAAAC,IAAAd,IAKAI,EAAAW,aAAAP,GACGV,IACHU,EAAAV,GAGAU,EAAA,CACA,GAAAQ,GAAAZ,EAAAY,WACAC,EAAAD,EACAZ,EAAAC,OACAD,EAAAc,YACAF,GAOAZ,EAAAC,OAAA,SAAAc,EAAAxF,GAEA,MADA6E,GAAA7H,KAAAgD,GACAsF,EAAAE,EAAAxF,IAPAyE,EAAAc,aAAAD,KACApE,OAAAoE,EAAAT,IACAA,GAUA,OACAP,WACA5H,QAAA6H,EACAE,aFgmBO,CACA,CACA,CAED,SAAUhI,EAAQC,EAAS+I,GAEjC,YGtfA,SAAAC,GAAAC,GACA,aAAAA,GAAA,QAAAA,EAGA,QAAAC,GAAAC,GACA,sBAAAA,GAAAC,EAAAC,KAAAF,GAAA,IAAAA,EAMA,QAAAG,GAAAC,GACA,GAAAA,EAAAC,gBAAA,CACA,GAAAC,GAAAF,EAAAG,MAAAD,OACAE,EAAAJ,EAAAG,MAAAC,KAGAC,EAAAL,EAAAM,UACAD,GAAAD,KAAAC,EAAAD,OACAX,EAAAW,GAAAT,EAAAS,GAAA,MACAC,EAAAH,OAAAG,EAAAH,SACAT,EAAAS,GAAAP,EAAAO,GAAA,KAEA,IAAAK,KACA,QAAAC,KAAAH,GACAA,EAAA3I,eAAA8I,KACAD,EAAAC,GAAAR,EAAAG,MAAAK,GAIAR,GAAAS,YAAAF,EAEAP,EAAAC,iBAAA,GAOA,QAAAS,GAAAV,GACAA,EAAAW,YAIAZ,EAAAC,GAEAA,EAAAY,cACAZ,EAAAa,MAAAb,EAAAa,KAAAC,SAAAd,IAAAM,aAGAN,EAAAe,SAAAf,EAAAM,YACAN,EAAAgB,IAAA,GAGAhB,EAAAW,WAAA,GAMA,QAAAM,GAAAjB,GACA,GAAAA,EAAAW,UAAA,CAIA,GAAAO,GAAAlB,EAAAS,WACAT,GAAAY,cACAZ,EAAAa,MAAAb,EAAAa,KAAAM,YAAAnB,IAGAkB,GAAAlB,EAAAe,SAAAG,GACAlB,EAAAgB,IAAA,GAGAhB,EAAAW,WAAA,GAMA,QAAAS,GAAApB,GACA,UAAAA,EAAA1E,KACA0E,EAAAqB,SAAA,SAAAC,GACA,UAAAA,EAAAhG,MACAoF,EAAAY,KAGAZ,EAAAV,GAGA,QAAAuB,GAAAvB,GACA,UAAAA,EAAA1E,KACA0E,EAAAqB,SAAA,SAAAC,GACA,UAAAA,EAAAhG,MACA2F,EAAAK,KAGAL,EAAAjB,GAMA,QAAAwB,GAAAxB,EAAAyB,GAGAzB,EAAAM,WAAAN,EAAAK,YAAAoB,MACAzB,EAAAC,iBAAA,EAEAD,EAAAW,WACAZ,EAAAC,GAOA,QAAA0B,GAAAC,GACAxG,KAAAyG,sBAAAD,EAAAE,YAKA1G,KAAA2G,cAAAV,EAAAjG,MAMA,QAAA4G,GAAAJ,GACAxG,KAAAyG,sBAAAD,EAAAE,YAKA1G,KAAA2G,cAAAP,EAAApG,MAMA,QAAA6G,KACA7G,KAAA2G,cAAA,EACAV,EAAAjG,MAMA,QAAA8G,KACA9G,KAAA2G,cAAA,EACAP,EAAApG,MAuEA,QAAA+G,GAAAC,EAAAnC,EAAAoC,EAAAC,EAAAC,EAAAxI,GAUA,GATA,kBAAAwI,KACAxI,EAAAwI,EACAA,EAAA,MAKAD,KAAAE,qBAEA,CACA,GAAAC,GAAAL,EAAA,YACAM,EAAAJ,EAAAK,WAAA,oBAAAF,GACAG,EAAAN,EAAAK,WAAA,kBAAAF,GACAI,EAAAP,EAAAK,WAAA,iBAAAF,EACA,mBAAAI,KACAA,IACAN,EACAD,EAAAQ,wBACAR,EAAAQ,wBAAA7C,EAAAsC,GACA,OAGA,kBAAAG,KACAA,IAAAH,IAGAG,EAAA,EACAzC,EAAA8C,UAAAV,EAAAK,EAAAG,GAAA,EAAAD,EAAA7I,IACAkG,EAAA+C,gBAAA/C,EAAAgD,KAAAZ,GAAAtI,YAGAkG,GAAA+C,gBACA/C,EAAAgD,KAAAZ,GACAtI,OArcA,GAAAmJ,GAAAzD,EAAA,GAEA0D,EAAA1D,EAAA,KACA2D,EAAA3D,EAAA,IACAK,EAAAL,EAAA,IACA4D,EAAA5D,EAAA,IACA6D,EAAA7D,EAAA,IACA8D,EAAA9D,EAAA,KACA+D,EAAA/D,EAAA,IAEAgE,EAAAC,KAAAD,MACAE,EAAAD,KAAAE,IACAC,EAAAH,KAAAI,IAEAC,IAEAA,GAAAC,MAAAvE,EAAA,IAEAsE,EAAAE,MAAAxE,EAAA,KAEAsE,EAAAG,KAAAzE,EAAA,KAEAsE,EAAAI,OAAA1E,EAAA,KAEAsE,EAAAK,OAAA3E,EAAA,KAEAsE,EAAAM,KAAA5E,EAAA,KAEAsE,EAAAO,QAAA7E,EAAA,KAEAsE,EAAAQ,SAAA9E,EAAA,KAEAsE,EAAAS,KAAA/E,EAAA,KAEAsE,EAAAU,KAAAhF,EAAA,KAEAsE,EAAAW,YAAAjF,EAAA,KAEAsE,EAAAY,IAAAlF,EAAA,KAEAsE,EAAAa,aAAAnF,EAAA,KAEAsE,EAAAc,eAAApF,EAAA,KAEAsE,EAAAe,eAAArF,EAAA,KAEAsE,EAAAP,eAKAO,EAAAgB,YAAA,SAAAC,GACA,MAAA5B,GAAA9K,OAAA0M,IAMAjB,EAAAkB,WAAA,SAAAC,EAAAF,GACA,MAAA7B,GAAAgC,iBAAAD,EAAAF,IAUAjB,EAAAqB,SAAA,SAAAF,EAAAF,EAAAK,EAAAC,GACA,GAAAC,GAAApC,EAAAqC,iBAAAN,EAAAF,GACAS,EAAAF,EAAAG,iBACA,IAAAL,EAAA,CACA,GAAAM,GAAAF,EAAAG,MAAAH,EAAAI,MAEA,eAAAP,EAAA,CAEA,GACAO,GADAD,EAAAP,EAAAQ,OAAAF,CAEAC,IAAAP,EAAAO,MACAC,EAAAR,EAAAQ,QAGAD,EAAAP,EAAAO,MACAC,EAAAD,EAAAD,EAEA,IAAAG,GAAAT,EAAAU,EAAAV,EAAAO,MAAA,EACAI,EAAAX,EAAAY,EAAAZ,EAAAQ,OAAA,CAEAR,GAAAU,EAAAD,EAAAF,EAAA,EACAP,EAAAY,EAAAD,EAAAH,EAAA,EACAR,EAAAO,QACAP,EAAAQ,SAGA9B,EAAAmC,WAAAX,EAAAF,GAEA,MAAAE,IAGAxB,EAAAoC,UAAAhD,EAAAgD,UAOApC,EAAAmC,WAAA,SAAAX,EAAAF,GACA,GAAAE,EAAAa,eAAA,CAIA,GAAAC,GAAAd,EAAAG,kBAEAY,EAAAD,EAAAE,mBAAAlB,EAEAE,GAAAa,eAAAE,KAgBAvC,EAAAyC,qBAAA,SAAAC,GACA,GAAAC,GAAA3C,EAAA2C,iBACAC,EAAAF,EAAAE,MACAC,EAAAH,EAAArG,MAAAwG,SAQA,OANAnD,GAAA,EAAAkD,EAAAE,MAAApD,EAAA,EAAAkD,EAAAG,MACAH,EAAAE,GAAAF,EAAAG,GAAAJ,EAAAC,EAAAE,GAAAD,GAAA,IAEAnD,EAAA,EAAAkD,EAAAI,MAAAtD,EAAA,EAAAkD,EAAAK,MACAL,EAAAI,GAAAJ,EAAAK,GAAAN,EAAAC,EAAAI,GAAAH,GAAA,IAEAH,GAgBA1C,EAAAkD,qBAAA,SAAAR,GACA,GAAAC,GAAA3C,EAAA2C,iBACAC,EAAAF,EAAAE,MACAC,EAAAH,EAAArG,MAAAwG,UACAM,EAAAP,EAAAZ,EACAoB,EAAAR,EAAAV,EACAmB,EAAAT,EAAAf,MACAyB,EAAAV,EAAAd,MAWA,OAVAc,GAAAZ,EAAAW,EAAAC,EAAAZ,EAAAa,GAAA,GACAD,EAAAV,EAAAS,EAAAC,EAAAV,EAAAW,GAAA,GACAD,EAAAf,MAAAlC,KAAAE,IACA8C,EAAAQ,EAAAE,EAAAR,GAAA,GAAAD,EAAAZ,EACA,IAAAqB,EAAA,KAEAT,EAAAd,OAAAnC,KAAAE,IACA8C,EAAAS,EAAAE,EAAAT,GAAA,GAAAD,EAAAV,EACA,IAAAoB,EAAA,KAEAZ,GAWA1C,EAAA2C,iBAAA,SAAAY,EAAAV,EAAAW,GAGA,GAAAC,GAAA/D,EAAA,EAAA6D,EACA,QAAAE,EAAA/D,EAAAmD,IAAA,KACAY,EAAA,GACAA,GAAAD,EAAA,UA8KAxD,EAAA0D,cAAA,SAAAxH,EAAAK,EAAAoH,GACAzH,EAAA4B,qBAAA6F,KAAAC,mBAEA,UAAA1H,EAAA1E,KACA0E,EAAAqB,SAAA,SAAAC,GACA,UAAAA,EAAAhG,MACAkG,EAAAF,EAAAjB,KAGAmB,EAAAxB,EAAAK,GAGAL,EAAA2H,GAAA,YAAAjG,GACAiG,GAAA,WAAA5F,GAGA/B,EAAA2H,GAAA,WAAA3F,GACA2F,GAAA,SAAA1F,IASA6B,EAAA8D,QAAA,SAAAC,EAAAC,EAAAlI,GACA,GAAAmI,GAAAD,EAAApF,WAAA,sBACAsF,EAAAF,EAAApF,WAAA,UACAuF,EAAAF,EAAAjP,QAAA,qBAAA8G,EACAsI,EAAAJ,EAAAK,SAAA,YACAlF,GAAA5K,OAAAwP,GACAO,aAAAN,EAAApF,WAAA,eACA2F,SAAAH,EAAAI,UACAC,aAAAR,EACAS,WAAAR,EACAS,SAAAP,EAAAQ,gBAAAT,KAIAnE,EAAAwE,QAAA,SAAAb,EAAAkB,GACA,GAAAC,GAAAD,KAAAR,SAAA,YACA,QAEAV,EAAAoB,WAAAD,KAAAlG,WAAA,iBACA+E,EAAAqB,YAAAF,KAAAlG,WAAA,mBACA+E,EAAAsB,UAAAH,KAAAlG,WAAA,sBACA+E,EAAAuB,YAAAJ,KAAAlG,WAAA,6BACAuG,KAAA,MAyDAnF,EAAAoF,YAAA,SAAAlJ,EAAAoC,EAAAC,EAAAC,EAAAxI,GACAoI,GAAA,EAAAlC,EAAAoC,EAAAC,EAAAC,EAAAxI,IAWAgK,EAAAqF,UAAA,SAAAnJ,EAAAoC,EAAAC,EAAAC,EAAAxI,GACAoI,GAAA,EAAAlC,EAAAoC,EAAAC,EAAAC,EAAAxI,IAUAgK,EAAAsF,aAAA,SAAAxR,EAAAyR,GAGA,IAFA,GAAAC,GAAAlG,EAAAmG,aAEA3R,OAAAyR,GACAjG,EAAAoG,IAAAF,EAAA1R,EAAA6R,oBAAAH,GACA1R,IAAAmH,MAGA,OAAAuK,IAYAxF,EAAAqC,eAAA,SAAAvO,EAAA8R,EAAAC,GAQA,MAPAD,KAAAzG,EAAAvJ,YAAAgQ,KACAA,EAAApG,EAAAmG,kBAAAC,IAGAC,IACAD,EAAAtG,EAAAuG,UAAAD,IAEArG,EAAA8C,kBAAAvO,EAAA8R,IASA5F,EAAA8F,mBAAA,SAAAC,EAAAH,EAAAC,GAGA,GAAAG,GAAA,IAAAJ,EAAA,QAAAA,EAAA,QAAAA,EAAA,GACA,EAAAjG,KAAAsG,IAAA,EAAAL,EAAA,GAAAA,EAAA,IACAM,EAAA,IAAAN,EAAA,QAAAA,EAAA,QAAAA,EAAA,GACA,EAAAjG,KAAAsG,IAAA,EAAAL,EAAA,GAAAA,EAAA,IAEAO,GACA,SAAAJ,GAAAC,EAAA,UAAAD,EAAAC,EAAA,EACA,QAAAD,GAAAG,EAAA,WAAAH,EAAAG,EAAA,EAKA,OAFAC,GAAAnG,EAAAqC,eAAA8D,EAAAP,EAAAC,GAEAlG,KAAAsG,IAAAE,EAAA,IAAAxG,KAAAsG,IAAAE,EAAA,IACAA,EAAA,oBACAA,EAAA,qBAOAnG,EAAAoG,gBAAA,SAAAC,EAAAC,EAAA/H,EAAAvI,GAcA,QAAAuQ,GAAArK,GACA,GAAAnG,IACAwN,SAAAhE,EAAA3M,MAAAsJ,EAAAqH,UACAiD,SAAAtK,EAAAsK,SAKA,OAHAtK,GAAA0G,QACA7M,EAAA6M,MAAAzD,EAAA5K,UAA4C2H,EAAA0G,QAE5C7M,EArBA,GAAAsQ,GAAAC,EAAA,CAuBA,GAAAG,GAnBA,SAAAC,GACA,GAAAC,KAMA,OALAD,GAAAnJ,SAAA,SAAArB,IACAA,EAAA0K,SAAA1K,EAAA2K,OACAF,EAAAzK,EAAA2K,MAAA3K,KAGAyK,GAYAN,EAEAC,GAAA/I,SAAA,SAAArB,GACA,IAAAA,EAAA0K,SAAA1K,EAAA2K,KAAA,CACA,GAAAC,GAAAL,EAAAvK,EAAA2K,KACA,IAAAC,EAAA,CACA,GAAAC,GAAAR,EAAArK,EACAA,GAAAgD,KAAAqH,EAAAO,IACA9G,EAAAoF,YAAAlJ,EAAA6K,EAAAxI,EAAArC,EAAAsC,iBAgBAwB,EAAAgH,iBAAA,SAAAC,EAAA3F,GACA,MAAAnC,GAAA/I,IAAA6Q,EAAA,SAAAC,GACA,GAAAlF,GAAAkF,EAAA,EACAlF,GAAApC,EAAAoC,EAAAV,EAAAU,GACAA,EAAAlC,EAAAkC,EAAAV,EAAAU,EAAAV,EAAAO,MACA,IAAAK,GAAAgF,EAAA,EAGA,OAFAhF,GAAAtC,EAAAsC,EAAAZ,EAAAY,GACAA,EAAApC,EAAAoC,EAAAZ,EAAAY,EAAAZ,EAAAQ,SACAE,EAAAE,MASAlC,EAAAmH,eAAA,SAAAC,EAAA9F,GACA,GAAAU,GAAApC,EAAAwH,EAAApF,EAAAV,EAAAU,GACAe,EAAAjD,EAAAsH,EAAApF,EAAAoF,EAAAvF,MAAAP,EAAAU,EAAAV,EAAAO,OACAK,EAAAtC,EAAAwH,EAAAlF,EAAAZ,EAAAY,GACAe,EAAAnD,EAAAsH,EAAAlF,EAAAkF,EAAAtF,OAAAR,EAAAY,EAAAZ,EAAAQ,OAEA,IAAAiB,GAAAf,GAAAiB,GAAAf,EACA,OACAF,IACAE,IACAL,MAAAkB,EAAAf,EACAF,OAAAmB,EAAAf,IAKAxP,EAAAC,QAAAqN,GHqsBM,SAAUtN,EAAQC,EAAS+I,IIt0CjC,SAAA2L,GA4EA,QAAAC,GAAAC,GACA,gBAAAC,EAAAC,EAAAxR,GAEAuR,OAAAE,cACAC,EAAAnS,UAAA+R,GAAAtU,KAAAoE,KAAAmQ,EAAAC,EAAAxR,IAOA,QAAA2R,KACAD,EAAA1U,KAAAoE,MAUA,QAAAwQ,GAAAC,EAAAC,EAAA9G,GAmGA,QAAA+G,GAAAC,EAAAC,GACA,MAAAD,GAAAE,KAAAD,EAAAC,KAnGAlH,QAGA,gBAAA8G,KACAA,EAAAK,GAAAL,IAMA1Q,KAAAgR,GAKAhR,KAAAiR,MAKAjR,KAAAkR,KAAAT,CAKA,IAAAU,GAAAnR,KAAAoR,IAAAC,EAAAC,KAAAb,GACAc,SAAA3H,EAAA2H,UAAA,SACAC,iBAAA5H,EAAA4H,iBACAhH,MAAAZ,EAAAY,MACAC,OAAAb,EAAAa,QAQAzK,MAAAyR,kBAAAC,WAAA5J,EAAAtI,KAAA2R,EAAAQ,MAAAR,GAAA,IAMAnR,KAAA4R,OAAA9J,EAAAvM,MAAAmV,GAMA1Q,KAAA6R,gBAMA7R,KAAA8R,cAMA9R,KAAA+R,oBAMA/R,KAAAgS,kBAMAhS,KAAAiS,aAAA,GAAAC,GAMAlS,KAAAmS,KAAAC,EAAApS,MAEAsQ,EAAA1U,KAAAoE,MAMAA,KAAAqS,eAAA,GAAA9B,GAGAvQ,KAAAsS,cAGAtS,KAAAuS,OAAAzK,EAAAtI,KAAAQ,KAAAuS,OAAAvS,MAGAA,KAAAwS,mBAKAC,EAAAC,EAAA/B,GACA8B,EAAAE,EAAAhC,GAEAQ,EAAAyB,UAAApG,GAAA,QAAAxM,KAAA6S,SAAA7S,MAGA8H,EAAA/G,eAAAf,MAgTA,QAAA8S,GAAAC,EAAAC,EAAAnV,GACA,GAEApC,GAFA+R,EAAAxN,KAAAiT,OACAC,EAAAlT,KAAAiS,aAAAkB,sBAGAH,GAAAI,EAAAC,YAAA7F,EAAAwF,EAEA,QAAAnX,GAAA,EAAuBA,EAAAqX,EAAAnX,OAAyBF,IAAA,CAChD,GAAAyX,GAAAJ,EAAArX,EACA,IAAAyX,EAAAP,IACA,OAAAtX,EAAA6X,EAAAP,GAAAvF,EAAAwF,EAAAnV,IAEA,MAAApC,GAIA8X,SACAC,QAAAC,KACA,sCAAAV,EAAA,+BA2RA,QAAAW,GAAAC,EAAAzD,EAAA0D,EAAAC,EAAAC,GAwBA,QAAAC,GAAAC,GACAA,KAAAC,SAAAD,EAAA9D,IAAA8D,EAAA9D,GACA8D,EAAAE,QAAA1G,EAAAmG,EAAAxB,KAAAyB,GAzBA,GAAApG,GAAAmG,EAAAV,MAGA,KAAAY,EAEA,WADApV,GAAAkV,EAAA5B,iBAAAjS,OAAA6T,EAAA9B,cAAAkC,EAIA,IAAAI,KACAA,GAAAN,EAAA,MAAAD,EAAAC,EAAA,MACAM,EAAAN,EAAA,SAAAD,EAAAC,EAAA,SACAM,EAAAN,EAAA,QAAAD,EAAAC,EAAA,OAEA,IAAAjT,IAAyBiT,WAAAM,QACzBL,KAAAlT,EAAAkT,WAGAtG,KAAA4G,cAAAxT,EAAA,SAAAyT,EAAAC,GACAP,EAAAJ,EACA,WAAAE,EAAA,+BACAQ,EAAAE,YACSZ,GAoIT,QAAAa,GAAAZ,EAAAa,GACA,GAAAC,GAAAd,EAAAzT,KACAwU,EAAAf,EAAAe,cACAC,EAAAC,EAAAH,GACAI,EAAAF,EAAAE,WAEAC,GAAAD,EAAAE,QAAA,UAAAC,MAAA,KACAC,EAAAH,EAAAI,KACAJ,GAAA,MAAAA,EAAA,IAAAK,EAAAL,EAAA,IAEA/U,KAAAqV,IAAA,CAEA,IAAAC,IAAA1B,GACA2B,GAAA,CAEA3B,GAAA4B,QACAD,GAAA,EACAD,EAAAxN,EAAA/I,IAAA6U,EAAA4B,MAAA,SAAAC,GAGA,MAFAA,GAAA3N,EAAA3K,SAAA2K,EAAA5K,UAAuDuY,GAAA7B,GACvD6B,EAAAD,MAAA,KACAC,IAIA,IACAC,GADAC,KAEAC,EAAA,cAAAlB,GAAA,aAAAA,CAEAjW,GAAA6W,EAAA,SAAAO,GAEAH,EAAAd,EAAAkB,OAAAD,EAAA7V,KAAAiT,OAAAjT,KAAAmS,MAEAuD,KAAA5N,EAAA5K,UAAmD2Y,GAEnDH,EAAAvV,KAAA2U,EAAAiB,OAAAL,EAAAvV,KACAwV,EAAA1W,KAAAyW,GAGAE,EAEAlC,EAAA1T,KAAAkV,EAAAW,EAAA,UAEAd,GACArB,EAAA1T,KAAAkV,EAAAW,EAAAd,EAAAiB,KAAAjB,EAAAkB,MAESjW,MAET,SAAAkV,GAAAU,GAAAb,IAEA/U,KAAAkW,IAEAC,EAAAC,iBAAAxa,KAAAoE,KAAA4T,GACA5T,KAAAkW,IAAA,GAGAC,EAAAjB,GAAAtZ,KAAAoE,KAAA4T,IAMA8B,EADAH,GAEApV,KAAA2U,EAAAiB,OAAArB,EACAC,gBACAa,MAAAG,GAIAA,EAAA,GAGA3V,KAAAqV,IAAA,GAEAZ,GAAAzU,KAAAqS,eAAAgE,QAAAX,EAAAvV,KAAAuV,GAGA,QAAAY,GAAA7B,GAEA,IADA,GAAA8B,GAAAvW,KAAAwS,gBACA+D,EAAAxa,QAAA,CACA,GAAA6X,GAAA2C,EAAAC,OACAhC,GAAA5Y,KAAAoE,KAAA4T,EAAAa,IAIA,QAAAgC,GAAAhC,IACAA,GAAAzU,KAAAqW,QAAA,WAeA,QAAAK,GAAA3D,EAAAvF,EAAAoG,GACA,GAAA+C,GAAA3W,KAAAmS,IAGA1T,GAAAuB,KAAA+R,iBAAA,SAAA6E,GACA,GAAAC,GAAAD,EAAA1C,OACA0C,GAAA7D,GAAA8D,EAAArJ,EAAAmJ,EAAA/C,GAEAkD,EAAAD,EAAAD,IACS5W,MAGTwN,EAAAuJ,WAAA,SAAAC,EAAAC,GACA,GAAAC,GAAAlX,KAAA8R,WAAAkF,EAAAzC,SACA2C,GAAAnE,GAAAiE,EAAAxJ,EAAAmJ,EAAA/C,GAEAkD,EAAAE,EAAAE,GAEAC,EAAAH,EAAAE,IACSlX,MAGToX,EAAApX,KAAAoR,IAAA5D,GAGA/O,EAAA4Y,EAAA,SAAA5X,GACAA,EAAA+N,EAAAmJ,KASA,QAAAW,GAAAnX,EAAAqN,GAMA,OALA+J,GAAA,cAAApX,EACAqX,EAAAD,EAAAvX,KAAA+R,iBAAA/R,KAAA6R,aACA4F,EAAAF,EAAAvX,KAAAgS,eAAAhS,KAAA8R,WACAX,EAAAnR,KAAAoR,IAEAvV,EAAA,EAAuBA,EAAA2b,EAAAzb,OAAqBF,IAC5C2b,EAAA3b,GAAAoY,SAAA,CAGAzG,GAAA+J,EAAA,uCAAAG,EAAArD,GACA,GAAAkD,GACA,cAAAG,EACA,WAIArD,GAAAqD,CAIA,IAAAC,GAAA,OAAAtD,EAAArD,GAAA,IAAAqD,EAAAlU,KACA6T,EAAAyD,EAAAE,EACA,KAAA3D,EAAA,CACA,GAAA4D,GAAAxC,EAAAf,EAAAlU,MACA0X,EAAAN,EACAO,EAAAC,SAAAH,EAAA5B,KAAA4B,EAAA3B,KACA+B,EAAAD,SAAAH,EAAA3B,IACA,KAAA4B,EASA,MARA7D,GAAA,GAAA6D,GACA7D,EAAA1C,KAAA9D,EAAAxN,KAAAmS,MACAsF,EAAAE,GAAA3D,EACAwD,EAAAvY,KAAA+U,GACA7C,EAAApN,IAAAiQ,EAAA/C,OAQAoD,EAAAE,SAAAP,EAAAiE,KAAAN,EACA3D,EAAAC,SAAA,EACAD,EAAAE,QAAAG,EACAL,EAAA/C,MAAAiH,mBACArE,SAAAQ,EAAAR,SACAS,MAAAD,EAAA8D,iBAESnY,KAET,QAAAnE,GAAA,EAAuBA,EAAA2b,EAAAzb,QAAqB,CAC5C,GAAAiY,GAAAwD,EAAA3b,EACAmY,GAAAC,QAQApY,KAPAsV,EAAAiH,OAAApE,EAAA/C,OACA+C,EAAAqE,QAAA7K,EAAAxN,KAAAmS,MACAqF,EAAAc,OAAAzc,EAAA,SACA4b,GAAAzD,EAAAiE,MACAjE,EAAAiE,KAAAjE,EAAA/C,MAAAiH,kBAAA,OAcA,QAAAK,GAAA/K,EAAAmJ,GACAlY,EAAAkU,EAAA,SAAA6F,GACAA,EAAA/Y,KAAA+N,EAAAmJ,KAOA,QAAA8B,GAAAjL,GACA,GAAAkL,KACAlL,GAAAuJ,WAAA,SAAA4B,GACA,GAAAC,GAAAD,EAAAlW,IAAA,SACAjE,EAAAma,EAAAE,SACA,IAAAD,GAAA,SAAApa,EAAA2B,KAAA,CACA,GAAA2Y,GAAAJ,EAAAE,EAEAF,GAAAnc,eAAAqc,IAAAE,IACAta,EAAAua,UAAAD,GAEAJ,EAAAE,GAAApa,KAWA,QAAAwa,GAAAxL,EAAAoG,GACA,GAAA+C,GAAA3W,KAAAmS,IACA1T,GAAAiU,EAAA,SAAAuG,GACAA,EAAAC,UACAD,EAAAxZ,KAAA+N,EAAAmJ,EAAA/C,KAaA,QAAAuF,GAAA3L,EAAAoG,EAAAwF,GACA,GAAAzC,GAAA3W,KAAAmS,IACA3E,GAAA6L,oBACA7L,EAAAuJ,WAAA,SAAAC,GACAA,EAAAqC,sBAEA5a,EAAAiU,EAAA,SAAAuG,KACAG,IAAAH,EAAAC,WACAD,EAAAxZ,KAAA+N,EAAAmJ,EAAA/C,KAQA,QAAA0F,GAAA9L,EAAAoG,GACA,GAAA+C,GAAA3W,KAAAmS,IAEA1T,GAAAuB,KAAA+R,iBAAA,SAAAwH,GACA,GAAA1C,GAAA0C,EAAArF,OACAqF,GAAAjW,OAAAuT,EAAArJ,EAAAmJ,EAAA/C,GAEAkD,EAAAD,EAAA0C,IACSvZ,MAETvB,EAAAuB,KAAA6R,aAAA,SAAAqF,GACAA,EAAAjD,SAAA,GACSjU,MAGTwN,EAAAuJ,WAAA,SAAAC,EAAAC,GACA,GAAAuC,GAAAxZ,KAAA8R,WAAAkF,EAAAzC,SACAiF,GAAAvF,SAAA,EACAuF,EAAAlW,OAAA0T,EAAAxJ,EAAAmJ,EAAA/C,GAEA4F,EAAAvI,MAAAwD,SAAAuC,EAAAvU,IAAA,UAEAqU,EAAAE,EAAAwC,GAEArC,EAAAH,EAAAwC,IAESxZ,MAGToX,EAAApX,KAAAoR,IAAA5D,GAGA/O,EAAAuB,KAAA6R,aAAA,SAAAqF,GACAA,EAAAjD,SACAiD,EAAAkB,OAAA5K,EAAAmJ,IAES3W,MA0FT,QAAAoX,GAAAjG,EAAA3D,GACA,GAAAiM,GAAAtI,EAAAsI,QACAC,EAAA,CACAD,GAAAvT,SAAA,SAAArB,GACAA,EAAA0K,SACAmK,MAGAA,EAAAlM,EAAA/K,IAAA,yBAAAkX,EAAAC,MACAH,EAAAvT,SAAA,SAAArB,GACAA,EAAA0K,UACA1K,EAAAY,eAAA,KAWA,QAAA0R,GAAAH,EAAAwC,GAEA,GAAAE,GAAA,CACAF,GAAAvI,MAAA/K,SAAA,SAAArB,GACA,UAAAA,EAAA1E,MAAA0E,EAAAgV,QACAH,KAGA,IAAAI,IAAA9C,EAAAvU,IAAA,eACAsX,EAAAL,EAAA1C,EAAAvU,IAAA,yBAAAqX,IAAAH,EAAAC,IACAG,IACAP,EAAAvI,MAAA/K,SAAA,SAAArB,GAEAA,EAAA0K,UACA1K,EAAAmV,YAAAD,EACAzR,KAAA2R,MAAAP,IAAAI,IAAA,EACAC,GACAlV,EAAA+C,eAAA,KAOA,IAAAsS,GAAAlD,EAAAvU,IAAA,kBACA8Q,WACAoG,EAAAQ,iBAAAD,GAAA,gBAAAA,GACA1G,QAAAC,KAAA,iCAGA+F,EAAAvI,MAAA/K,SAAA,SAAArB,GAEAA,EAAA0K,SACA1K,EAAAe,SAAA,QAAAsU,KASA,QAAApD,GAAAzC,EAAAL,GACA,GAAAoG,GAAA/F,EAAA5R,IAAA,KACA4X,EAAAhG,EAAA5R,IAAA,SAEAuR,GAAA/C,MAAA/K,SAAA,SAAArB,GACA,UAAAA,EAAA1E,OACA,MAAAia,IAAAvV,EAAAuV,KACA,MAAAC,IAAAxV,EAAAwV,aAKA,QAAAjI,GAAAkI,GACA,GAAAC,GAAAD,EAAArI,YACA,OAAAnK,GAAA5K,OAAA,GAAAsd,GAAAF,IAEAnH,qBAAArL,EAAAtI,KACA+a,EAAApH,qBAAAoH,GAEAE,sBAAA,SAAA5V,GACA,KAAAA,GAAA,CACA,GAAA6V,GAAA7V,EAAAqT,iBACA,UAAAwC,EACA,MAAAJ,GAAArH,OAAA0H,aAAAD,EAAA7G,SAAA6G,EAAApG,MAEAzP,KAAAjB,WA0EA,QAAAgX,GAAA1D,GAMA,QAAA2D,GAAAC,EAAAC,GACA,OAAAlf,GAAA,EAA2BA,EAAAif,EAAA/e,OAAmBF,IAAA,CAC9Cif,EAAAjf,GACAmf,GAAAD,GARA,GAGAC,GAAA,uBASAlT,GAAArJ,KAAAwc,EAAA,SAAAC,EAAAC,GACAjE,EAAA7E,eAAA7F,GAAA2O,EAAA,SAAApF,GACA,GAAAqF,GAAAlE,EAAAjG,QAdA,IAcAiG,EAAA8D,GAAA,CACA,GAAAjF,KAAApB,cACA,MAGA,IAAAmB,GAAAoB,EAAAmE,oBAAAtF,GACAuF,IAEAxT,GAAArJ,KAAA8c,GAAA,SAAAC,GACAA,IAAAtE,GAAAsE,EAAAvK,QAAAiG,EAAAjG,OACAqK,EAAArc,KAAAuc,KAIAX,EAAAS,EA5BA,GA6BA7c,EAAA6c,EAAA,SAAAE,GA5BA,IA6BAA,EAAAR,IACAQ,EAAAC,eAAA3F,KAGA+E,EAAAS,EAhCA,QAp/CA,mBAAA/H,WAEA,mBAAAmI,QACAA,OAAAnI,SAAA,MAGA,KAAAvD,IACAA,EAAAuD,SAAA;;;;;;;;;AAmBA,GAAAoG,GAAAtV,EAAA,IAEAsX,EAAAtX,EAAA,KACAmW,EAAAnW,EAAA,KACA6N,EAAA7N,EAAA,IACAuX,EAAAvX,EAAA,KAEAwX,EAAAxX,EAAA,IACAyX,EAAAzX,EAAA,IAEAyT,EAAAzT,EAAA,KACA2T,EAAA3T,EAAA,IACAsE,EAAAtE,EAAA,GACA+O,EAAA/O,EAAA,IACAqN,EAAArN,EAAA,IAEAgN,EAAAhN,EAAA,KACAyD,EAAAzD,EAAA,GACAK,EAAAL,EAAA,IACAiM,EAAAjM,EAAA,IACAoO,EAAApO,EAAA,IAEA5F,EAAAqJ,EAAArJ,KACA2W,EAAAyG,EAAAzG,eAmBAC,EAAA,sBAEAa,EAAA,kBACA6F,EAAA,iBAgBAxL,GAAApS,UAAAqO,GAAAyD,EAAA,MACAM,EAAApS,UAAA6d,IAAA/L,EAAA,OACAM,EAAApS,UAAA8d,IAAAhM,EAAA,OACAnI,EAAAxJ,MAAAiS,EAAAD,EAoHA,IAAA4L,GAAA1L,EAAArS,SAEA+d,GAAArJ,SAAA,WAEA,GAAA7S,KAAAkW,GAAA,CACA,GAAAzB,GAAAzU,KAAAkW,GAAAzB,MAEAzU,MAAAqV,IAAA,EAEAc,EAAAC,iBAAAxa,KAAAoE,MAEAA,KAAAqV,IAAA,EAEArV,KAAAkW,IAAA,EAEAI,EAAA1a,KAAAoE,KAAAyU,GAEAgC,EAAA7a,KAAAoE,KAAAyU,KAMAyH,EAAAC,OAAA,WACA,MAAAnc,MAAAkR,MAMAgL,EAAAE,MAAA,WACA,MAAApc,MAAAoR,KAiBA8K,EAAAG,UAAA,SAAAC,EAAAC,EAAAC,GACAjJ,SACAzL,EAAAnH,QAAAX,KAAAqV,GAAA,wDAGA,IAAAZ,EASA,IARA3M,EAAAnL,SAAA4f,KACAC,EAAAD,EAAAC,WACA/H,EAAA8H,EAAA9H,OACA8H,cAGAvc,KAAAqV,IAAA,GAEArV,KAAAiT,QAAAsJ,EAAA,CACA,GAAAE,GAAA,GAAAb,GAAA5b,KAAAmS,MACAzB,EAAA1Q,KAAA4R,QACA5R,KAAAiT,OAAA,GAAA0I,GAAA,UAAAjL,EAAA+L,IACAnL,KAAA,UAAAZ,EAAA+L,GAGAzc,KAAAiT,OAAAoJ,UAAAC,EAAAI,GAEAF,GACAxc,KAAAkW,IAAoCzB,UACpCzU,KAAAqV,IAAA,IAGAc,EAAAC,iBAAAxa,KAAAoE,MAGAA,KAAAoR,IAAAO,QAEA3R,KAAAkW,IAAA,EACAlW,KAAAqV,IAAA,EAEAiB,EAAA1a,KAAAoE,KAAAyU,GACAgC,EAAA7a,KAAAoE,KAAAyU,KAOAyH,EAAAS,SAAA,WACAnJ,QAAAoJ,IAAA,oDAMAV,EAAAlP,SAAA,WACA,MAAAhN,MAAAiT,QAMAiJ,EAAAW,UAAA,WACA,MAAA7c,MAAAiT,QAAAjT,KAAAiT,OAAA4J,aAMAX,EAAAY,SAAA,WACA,MAAA9c,MAAAoR,IAAA0L,YAMAZ,EAAAa,UAAA,WACA,MAAA/c,MAAAoR,IAAA2L,aAMAb,EAAAc,oBAAA,WACA,MAAAhd,MAAAoR,IAAA6L,QAAAC,KAAAxB,OAAAlK,kBAAA,GAQA0K,EAAAiB,kBAAA,SAAAvT,GACA,GAAA+P,EAAAQ,gBAAA,CAGAvQ,QACAA,EAAAwT,WAAAxT,EAAAwT,YAAA,EACAxT,EAAAyT,gBAAAzT,EAAAyT,iBACArd,KAAAiT,OAAAxQ,IAAA,kBACA,IAAA0O,GAAAnR,KAAAoR,IACAkM,EAAAnM,EAAAsI,QAAA8D,gBAKA,OAHAzV,GAAArJ,KAAA6e,EAAA,SAAAzY,GACAA,EAAA+C,eAAA,KAEAuJ,EAAA8L,QAAAE,kBAAAvT,KAUAsS,EAAAsB,WAAA,SAAA5T,GACAA,OACA,IAAA6T,GAAA7T,EAAA6T,kBACAjQ,EAAAxN,KAAAiT,OACAyK,KACAC,EAAA3d,IAEAvB,GAAAgf,EAAA,SAAA/F,GACAlK,EAAA4G,eACAP,SAAA6D,GACa,SAAAd,GACb,GAAA5C,GAAA2J,EAAA3L,eAAA4E,EAAArC,SACAP,GAAA/C,MAAA4I,SACA6D,EAAAze,KAAA+U,GACAA,EAAA/C,MAAA4I,QAAA,MAKA,IAAA+D,GAAA5d,KAAAmd,kBAAAvT,GAAAiU,UACA,UAAAjU,KAAAzJ,MAAA,OAMA,OAHA1B,GAAAif,EAAA,SAAA1J,GACAA,EAAA/C,MAAA4I,QAAA,IAEA+D,GAWA1B,EAAA4B,oBAAA,SAAAlU,GACA,GAAA+P,EAAAQ,gBAAA,CAGA,GAAA4D,GAAA/d,KAAAiR,MACAxI,EAAAH,KAAAI,IACAH,EAAAD,KAAAE,GAEA,IAAA4S,GAAA2C,GAAA,CACA,GAAAC,GAFAC,IAGAC,EAHAD,IAIAE,GAJAF,IAKAG,GALAH,IAMAI,KACAnB,EAAAtT,KAAAwT,YAAA,CAEAtV,GAAArJ,KAAA8c,GAAA,SAAArE,EAAAlG,GACA,GAAAkG,EAAAjG,QAAA8M,EAAA,CACA,GAAAO,GAAApH,EAAAiG,kBACArV,EAAAvM,MAAAqO,IAEAS,EAAA6M,EAAAiF,SAAAoC,uBACAP,GAAAvV,EAAA4B,EAAA2T,QACAE,EAAAzV,EAAA4B,EAAA6T,OACAC,EAAA5V,EAAA8B,EAAA8T,SACAC,EAAA7V,EAAA8B,EAAA+T,UACAC,EAAApf,MACAwR,IAAA6N,EACAN,KAAA3T,EAAA2T,KACAE,IAAA7T,EAAA6T,SAKAF,GAAAd,EACAgB,GAAAhB,EACAiB,GAAAjB,EACAkB,GAAAlB,CACA,IAAA1S,GAAA2T,EAAAH,EACAvT,EAAA2T,EAAAF,EACAM,EAAA1W,EAAAzK,cACAmhB,GAAAhU,QACAgU,EAAA/T,QACA,IAAA0G,GAAAE,EAAAC,KAAAkN,EAcA,OAZA/f,GAAA4f,EAAA,SAAA5I,GACA,GAAAgJ,GAAA,GAAA9V,GAAAE,OACA7D,OACA2F,EAAA8K,EAAAuI,KAAAd,EAAAc,EACAnT,EAAA4K,EAAAyI,IAAAhB,EAAAgB,EACAQ,MAAAjJ,EAAAhF,MAGAU,GAAApN,IAAA0a,KAEAtN,EAAAwN,qBAEAH,EAAAX,UAAA,UAAAjU,KAAAzJ,MAAA,QAGA,MAAAH,MAAAwd,WAAA5T,KAsBAsS,EAAA0C,eAAA9W,EAAA/H,MAAA+S,EAAA,kBAoBAoJ,EAAA2C,iBAAA/W,EAAA/H,MAAA+S,EAAA,oBA0CAoJ,EAAA4C,aAAA,SAAA9L,EAAAnV,GACA,GACApC,GADA+R,EAAAxN,KAAAiT,MAiCA,OA9BAD,GAAAI,EAAAC,YAAA7F,EAAAwF,GAEAlL,EAAArJ,KAAAuU,EAAA,SAAA+L,EAAAziB,GACAA,EAAAqB,QAAA,cAAAmK,EAAArJ,KAAAsgB,EAAA,SAAA1K,GACA,GAAAf,GAAAe,EAAA2K,gBACA,IAAA1L,KAAA2L,aACAxjB,KAAA6X,EAAA2L,aAAAphB,OAEA,qBAAAvB,EAAA,CACA,GAAA0X,GAAAhU,KAAA8R,WAAAuC,EAAAE,SACAP,MAAAiL,aACAxjB,GAAAuY,EAAAiL,aAAAphB,EAAAwW,GAGAd,SACAC,QAAAC,KAAAnX,EAAA,MAAA0X,EACA,mDACA,gDAMAT,UACAC,QAAAC,KAAAnX,EAAA,oCAGa0D,OACJA,QAETvE,GAkBAygB,EAAAgD,UAAA,SAAAlM,EAAAmM,GACA,GAAA3R,GAAAxN,KAAAiT,MAEAD,GAAAI,EAAAC,YAAA7F,EAAAwF,GAAyDoM,gBAAA,UAEzD,IAAApI,GAAAhE,EAAAgE,WAEAzD,WACAyD,GACAxD,QAAAC,KAAA,sCAIA,IAAAjV,GAAAwY,EAAA6B,UAEAwG,EAAArM,EAAAzW,eAAA,mBACAyW,EAAAqM,gBACArM,EAAAzW,eAAA,aACAiC,EAAA8gB,gBAAAtM,EAAA7L,WACA,IAEA,cAAAkY,EACA7gB,EAAA+gB,cAAAF,EAAAF,GACA3gB,EAAA0gB,UAAAC,IAQAjD,EAAAsD,wBAAA,SAAA3I,GACA,MAAA7W,MAAAgS,eAAA6E,EAAAtC,WAQA2H,EAAAuD,qBAAA,SAAAzI,GACA,MAAAhX,MAAA8R,WAAAkF,EAAAzC,UAIA,IAAA4B,IAMAnB,OAAA,SAAApB,GAGA,GAAApG,GAAAxN,KAAAiT,OACA0D,EAAA3W,KAAAmS,KACAoI,EAAAva,KAAAiS,aACAd,EAAAnR,KAAAoR,GAEA,IAAA5D,EAAA,CAKAA,EAAAkS,cAQAnF,EAAAoF,OAAA3f,KAAAiT,OAAAjT,KAAAmS,MAEAoG,EAAA3c,KAAAoE,KAAAwN,EAAAmJ,GAEA8B,EAAA7c,KAAAoE,KAAAwN,GAEA+M,EAAAvF,OAAAxH,EAAAmJ,GAEAwC,EAAAvd,KAAAoE,KAAAwN,EAAAoG,GAEA0F,EAAA1d,KAAAoE,KAAAwN,EAAAoG,EAGA,IAAAyJ,GAAA7P,EAAA/K,IAAA,kCAEAwa,EAAA9L,EAAA8L,OAEA,IAAAA,EAAA2C,gBAAA3C,EAAA2C,iBACAzO,EAAA0O,YAAA,GACAC,WAAAzC,QAGA,CAEA,IAAA1D,EAAAQ,gBAAA,CACA,GAAA4F,GAAArb,EAAAsb,MAAA3C,EACAA,GAAA3Y,EAAAub,UAAAF,EAAA,OACA,IAAAA,EAAA,KACA1C,EAAA,eAGAA,EAAA6C,YAAA7C,EAAAqB,OAGAvN,EAAA0O,YAAA,GACAC,WAAAzC,IAEArd,KAAA,4BAEAA,KAAAkR,KAAAlM,MAAAmb,WAAA,gBAGAngB,KAAA,0BACAmR,EAAA0O,YAAA,GACAC,WAAA,OAGA9f,KAAA,4BAEAA,KAAAkR,KAAAlM,MAAAmb,WAAA9C,GAIA5e,EAAA4Y,EAAA,SAAA5X,GACAA,EAAA+N,EAAAmJ,OAUAyJ,WAAA,SAAAxM,GACA,GAAApG,GAAAxN,KAAAiT,MAGAzF,KAIAA,EAAAuJ,WAAA,SAAAC,GACAA,EAAA6B,UAAAwH,mBAGAlH,EAAAvd,KAAAoE,KAAAwN,EAAAoG,GAEA8C,EAAA9a,KAAAoE,KAAA,aAAAwN,EAAAoG,KAOA0M,aAAA,SAAA1M,GACA,GAAApG,GAAAxN,KAAAiT,MAGAzF,KAIAA,EAAAuJ,WAAA,SAAAC,GACAA,EAAA6B,UAAAwH,mBAGAlH,EAAAvd,KAAAoE,KAAAwN,EAAAoG,GAAA,GAEA8C,EAAA9a,KAAAoE,KAAA,eAAAwN,EAAAoG,KAOA2M,aAAA,SAAA3M,GACA,GAAApG,GAAAxN,KAAAiT,MAGAzF,KAIAwL,EAAApd,KAAAoE,KAAAwN,EAAAoG,GAEA8C,EAAA9a,KAAAoE,KAAA,eAAAwN,EAAAoG,KAOAwC,iBAAA,SAAAxC,GACA,GAAApG,GAAAxN,KAAAiT,MAEAqE,GAAA1b,KAAAoE,KAAA,YAAAwN,GAEA8J,EAAA1b,KAAAoE,KAAA,QAAAwN,GAEA2I,EAAAnB,OAAApZ,KAAAoE,KAAA4T,IA6CAsI,GAAA3J,OAAA,SAAA3I,GACA2J,SACAzL,EAAAnH,QAAAX,KAAAqV,GAAA,sDAGArV,KAAAqV,IAAA,EAEArV,KAAAoR,IAAAmB,OAAA3I,EAEA,IAAA4W,GAAAxgB,KAAAiT,QAAAjT,KAAAiT,OAAAwN,YAAA,QAGAtK,GAFAqK,EAAA,6BAEA5kB,KAAAoE,MAGAA,KAAA0gB,YAAA1gB,KAAA0gB,WAAAnO,SAEAvS,KAAAqV,IAAA,CAEA,IAAAZ,GAAA7K,KAAA6K,MAEA6B,GAAA1a,KAAAoE,KAAAyU,GAEAgC,EAAA7a,KAAAoE,KAAAyU,IAQAyH,EAAAyE,YAAA,SAAAtb,EAAAub,GAQA,GAPA9Y,EAAAnL,SAAA0I,KACAub,EAAAvb,EACAA,EAAA,IAEAA,KAAA,UAEArF,KAAA6gB,eACAC,GAAAzb,GAIA,YAHAkO,SACAC,QAAAC,KAAA,mBAAApO,EAAA,gBAIA,IAAAR,GAAAic,GAAAzb,GAAArF,KAAAmS,KAAAyO,GACAzP,EAAAnR,KAAAoR,GACApR,MAAA0gB,WAAA7b,EAEAsM,EAAApN,IAAAc,IAMAqX,EAAA2E,YAAA,WACA7gB,KAAA0gB,YAAA1gB,KAAAoR,IAAAgH,OAAApY,KAAA0gB,YACA1gB,KAAA0gB,WAAA,MAOAxE,EAAAb,oBAAA,SAAA3F,GACA,GAAA9B,GAAA9L,EAAA5K,UAAsCwY,EAEtC,OADA9B,GAAAzT,KAAA8a,EAAAvF,EAAAvV,MACAyT,GAeAsI,EAAAT,eAAA,SAAA7H,EAAAtH,GAKA,GAJAxE,EAAAnL,SAAA2P,KACAA,GAAmBmI,SAAAnI,IAGnBuI,EAAAjB,EAAAzT,MAAA,CAKA,GAAAH,KAAAqV,GAEA,WADArV,MAAAwS,gBAAAvT,KAAA2U,EAIAY,GAAA5Y,KAAAoE,KAAA4T,EAAAtH,EAAAmI,QAEAnI,EAAAqF,MACA3R,KAAAoR,IAAAO,OAAA,IAEA,IAAArF,EAAAqF,OAAAgI,EAAAoH,QAAAC,QAMAhhB,KAAAyR,oBAGA6E,EAAA1a,KAAAoE,KAAAsM,EAAAmI,QAEAgC,EAAA7a,KAAAoE,KAAAsM,EAAAmI,UA+FAyH,EAAA1P,GAAAyD,EAAA,MACAiM,EAAAF,IAAA/L,EAAA,OACAiM,EAAAD,IAAAhM,EAAA,MAuNA,IAAAgR,IACA,sDACA,gDAKA/E,GAAA5J,YAAA,WACA7T,EAAAwiB,EAAA,SAAAC,GACAlhB,KAAAoR,IAAA5E,GAAA0U,EAAA,SAAA1a,GACA,GAEA2a,GAFA3T,EAAAxN,KAAAgN,WACAnI,EAAA2B,EAAA/J,MAIA,kBAAAykB,EACAC,SAEA,IAAAtc,GAAA,MAAAA,EAAAsC,UAAA,CACA,GAAAia,GAAAvc,EAAAuc,WAAA5T,EAAA6T,iBAAAxc,EAAAyc,YACAH,GAAAC,KAAAG,cAAA1c,EAAAsC,UAAAtC,EAAA2c,kBAGA3c,MAAA4c,YACAN,EAAArZ,EAAA5K,UAA6C2H,EAAA4c,WAG7CN,KACAA,EAAApL,MAAAvP,EACA2a,EAAAhhB,KAAA+gB,EACAlhB,KAAAqW,QAAA6K,EAAAC,KAGanhB,OACJA,MAETvB,EAAAwc,EAAA,SAAAC,EAAAC,GACAnb,KAAAqS,eAAA7F,GAAA2O,EAAA,SAAApF,GACA/V,KAAAqW,QAAA8E,EAAApF,IACa/V,OACJA,OAMTkc,EAAAwF,WAAA,WACA,MAAA1hB,MAAA2hB,WAMAzF,EAAA0F,MAAA,WACA5hB,KAAAqc,WAAwB1D,YAAa,IAMrCuD,EAAA7D,QAAA,WACA,GAAArY,KAAA2hB,UAIA,YAHApO,SACAC,QAAAC,KAAA,YAAAzT,KAAAgR,GAAA,sBAIAhR,MAAA2hB,WAAA,CAEA,IAAAhL,GAAA3W,KAAAmS,KACA3E,EAAAxN,KAAAiT,MAEAxU,GAAAuB,KAAA+R,iBAAA,SAAA6E,GACAA,EAAAyB,QAAA7K,EAAAmJ,KAEAlY,EAAAuB,KAAA6R,aAAA,SAAAqF,GACAA,EAAAmB,QAAA7K,EAAAmJ,KAIA3W,KAAAoR,IAAAiH,gBAEAkD,IAAAvb,KAAAgR,KAGAlJ,EAAAxJ,MAAAkS,EAAAF,EAqGA,IAAAuE,MAMAoG,KAOAtI,KAMA+J,KAMArF,KAOA3E,KAKA3B,MAIA+P,MAGAvF,MACAH,MAEAyG,GAAA,GAAAC,MAAA,EACAC,GAAA,GAAAD,MAAA,EAMAE,IAIAC,QAAA,QACAC,cACA7Q,QAAA,SAwDA2Q,IAAA1Q,KAAA,SAAAb,EAAAC,EAAA9G,GACA,GAAA2J,QAAA,CAEA,GAAAlC,EAAA4Q,QAAAE,QAAA,UAAAH,GAAAE,aAAA7Q,QAAA8Q,QAAA,UACA,SAAArhB,OACA,WAAAuQ,EAAA4Q,QACA,2BAAAD,GAAAC,QACA,kCACAD,GAAAE,aAAA7Q,QAAA,IAIA,KAAAZ,EACA,SAAA3P,OAAA,mCAIA,GAAAshB,GAAAJ,GAAAK,iBAAA5R,EACA,IAAA2R,EAIA,MAHA7O,UACAC,QAAAC,KAAA,6DAEA2O,CAGA7O,YACAzL,EAAAzL,MAAAoU,IACA,WAAAA,EAAA6R,SAAAC,gBAEA9R,EAAA+R,aAAA5Y,GAAA,MAAAA,EAAAY,SACAiG,EAAAgS,cAAA7Y,GAAA,MAAAA,EAAAa,SAGA+I,QAAAC,KAAA,iCAIA,IAAAyD,GAAA,GAAA1G,GAAAC,EAAAC,EAAA9G,EAaA,OAZAsN,GAAAlG,GAAA,MAAA6Q,KACAtG,GAAArE,EAAAlG,IAAAkG,EAEAzG,EAAAiS,aACAjS,EAAAiS,aA7GA,qBA6GAxL,EAAAlG,IAGAP,EAAA,mBAAAyG,EAAAlG,GAGA4J,EAAA1D,GAEAA,GAMA8K,GAAAW,QAAA,SAAA5E,GAEA,GAAAjW,EAAAhL,QAAAihB,GAAA,CACA,GAAAjD,GAAAiD,CACAA,GAAA,KAEAjW,EAAArJ,KAAAqc,EAAA,SAAA5D,GACA,MAAAA,EAAAjG,QACA8M,EAAA7G,EAAAjG,SAGA8M,KAAA,KAAAgE,KACAja,EAAArJ,KAAAqc,EAAA,SAAA5D,GACAA,EAAAjG,MAAA8M,IAIA,MADA3C,IAAA2C,IAAA,EACAA,GAOAiE,GAAAY,WAAA,SAAA7E,GACA3C,GAAA2C,IAAA,GAMAiE,GAAAa,WAAAb,GAAAY,WAMAZ,GAAA3J,QAAA,SAAAnB,GACA,gBAAAA,GACAA,EAAAqE,GAAArE,GAEAA,YAAA1G,KAEA0G,EAAA8K,GAAAK,iBAAAnL,IAEAA,YAAA1G,KAAA0G,EAAAwK,cACAxK,EAAAmB,WAQA2J,GAAAK,iBAAA,SAAA5R,GACA,GAAAnU,EAOA,OALAA,GADAmU,EAAAqS,aACArS,EAAAqS,aApLA,sBAuLArS,EAAA,mBAEA8K,GAAAjf,IAOA0lB,GAAAe,gBAAA,SAAAzmB,GACA,MAAAif,IAAAjf,IAMA0lB,GAAAgB,cAAA,SAAA3d,EAAAqL,GACAK,GAAA1L,GAAAqL,GAOAsR,GAAAiB,qBAAA,SAAAC,GACAxG,EAAAzd,KAAAikB,IAOAlB,GAAAmB,kBAAA,SAAAC,EAAAC,GAKA,GAJA,kBAAAD,KACAC,EAAAD,EACAA,EAzoDA,KA2oDA7P,SACA+P,MAAAF,GACA,SAAAtiB,OAAA,4BAGA6R,GAAA1T,MACA6R,KAAAsS,EACA3jB,KAAA4jB,KAQArB,GAAAuB,mBAAA,SAAAC,GACAnM,EAAApY,KAAAukB,IAmBAxB,GAAAyB,eAAA,SAAA3O,EAAA3E,EAAA2F,GACA,kBAAA3F,KACA2F,EAAA3F,EACAA,EAAA,GAEA,IAAA+K,GAAApT,EAAAnL,SAAAmY,GACAA,EAAA3U,MACA2U,KACAiB,MAAA5F,IACa,EAGb2E,GAAAiB,OAAAjB,EAAAiB,OAAAmF,GAAA7K,cACAF,EAAA2E,EAAAiB,MAGAjO,EAAAnH,OAAAob,EAAA2H,KAAAxI,IAAAa,EAAA2H,KAAAvT,IAEA0E,EAAAqG,KACArG,EAAAqG,IAAmCpF,SAAAhB,eAEnCmG,EAAA9K,GAAA+K,GAOA8G,GAAA2B,yBAAA,SAAAxjB,EAAAyjB,GACA1R,EAAA2R,SAAA1jB,EAAAyjB,IAQA5B,GAAA8B,8BAAA,SAAA3jB,GACA,GAAA4jB,GAAA7R,EAAAzP,IAAAtC,EACA,IAAA4jB,EACA,MAAAA,GAAAC,kBACAD,EAAAC,oBACAD,EAAAE,WAAAxjB,SAYAuhB,GAAAkC,eAAA,SAAAd,EAAAe,GAKA,GAJA,kBAAAf,KACAe,EAAAf,EACAA,EAnuDA,KAquDA7P,SACA+P,MAAAF,GACA,SAAAtiB,OAAA,yBAGA4R,GAAAzT,MACA6R,KAAAsS,EACA3jB,KAAA0kB,EACAjL,UAAA,KAQA8I,GAAAoC,eAAA,SAAAhB,EAAAiB,GAKA,GAJA,kBAAAjB,KACAiB,EAAAjB,EACAA,EAtvDA,KAwvDA7P,SACA+P,MAAAF,GACA,SAAAtiB,OAAA,yBAGA4R,GAAAzT,MACA6R,KAAAsS,EACA3jB,KAAA4kB,KAOArC,GAAAsC,gBAAA,SAAAjf,EAAAkf,GACAzD,GAAAzb,GAAAkf,GAOAvC,GAAAwC,qBAAA,SAAA5a,GAMA,MAAAiS,GAAA3e,OAAA0M,IAOAoY,GAAAyC,oBAAA,SAAA7a,GAMA,MAAAkO,GAAA5a,OAAA0M,IAOAoY,GAAA0C,kBAAA,SAAA9a,GAOA,MAAAkS,GAAA5e,OAAA0M,IAOAoY,GAAA2C,gBAAA,SAAA/a,GAOA,MAAAoO,GAAA9a,OAAA0M,IAmBAoY,GAAA4C,iBAAA,SAAAC,GACA/c,EAAAzK,aAAAwnB,GAGA7C,GAAAoC,eAr1DA,IAq1DA/f,EAAA,MACA2d,GAAAiB,qBAAA5e,EAAA,MACA2d,GAAAsC,gBAAA,UAAAjgB,EAAA,MAGA2d,GAAAyB,gBACAtjB,KAAA,YACA4V,MAAA,YACAf,OAAA,aACKlN,EAAAlF,MACLof,GAAAyB,gBACAtjB,KAAA,WACA4V,MAAA,WACAf,OAAA,YACKlN,EAAAlF,MAMLof,GAAA3Q,UAEA2Q,GAAA8C,KAAAzgB,EAAA,IACA2d,GAAA+C,MAAA1gB,EAAA,IAEA2d,GAAAgD,KAAA3gB,EAAA,IAEA2d,GAAArZ,QAAAtE,EAAA,GACA2d,GAAAiD,OAAA5gB,EAAA,GACA2d,GAAAkD,OAAA7gB,EAAA,IACA2d,GAAAtQ,oBACAsQ,GAAA/Z,OAAA5D,EAAA,IACA2d,GAAA9Z,OAAA7D,EAAA,IACA2d,GAAAvd,MAAAJ,EAAA,IAEA2d,GAAAtkB,QACAe,GACA,6DACA,4DACA,qCAEA,SAAA4G,GACA2c,GAAAtkB,KAAA2H,GAAAyC,EAAAzC,KAIA2c,GAAAmD,OAAA9gB,EAAA,KAIA2d,GAAAoD,UACAC,WACAC,OA94DA,IA+4DAC,UA94DA,KAg5DAC,QACAC,OA94DA,IA+4DAC,OA94DA,IA+4DAC,MA94DA,IA+4DAC,UA94DA,IA+4DAC,MA54DA,MAg5DAxqB,EAAAC,QAAA0mB,KJ00C6BpmB,KAAKN,EAAS+I,EAAoB,MAGxD,CACA,CAED,SAAUhJ,EAAQC,EAAS+I,GKnxGjC,QAAAyhB,GAAAC,GACA,MAAAA,GAAA5D,QAAA,WAAAA,QAAA,WA+UA,QAAA6D,GAAAC,GACA,MAAA3d,MAAA2R,MAAA3R,KAAAsU,IAAAqJ,GAAA3d,KAAA4d,MAvVA,GAAApe,GAAAzD,EAAA,GAEA4gB,IAiBAA,GAAAkB,UAAA,SAAAF,EAAAG,EAAAC,EAAAC,GACA,GAAAC,GAAAH,EAAA,GAAAA,EAAA,GACAI,EAAAH,EAAA,GAAAA,EAAA,EAEA,QAAAE,EACA,WAAAC,EACAH,EAAA,IACAA,EAAA,GAAAA,EAAA,KAQA,IAAAC,EACA,GAAAC,EAAA,GACA,GAAAN,GAAAG,EAAA,GACA,MAAAC,GAAA,EAEA,IAAAJ,GAAAG,EAAA,GACA,MAAAC,GAAA,OAGA,CACA,GAAAJ,GAAAG,EAAA,GACA,MAAAC,GAAA,EAEA,IAAAJ,GAAAG,EAAA,GACA,MAAAC,GAAA,OAIA,CACA,GAAAJ,IAAAG,EAAA,GACA,MAAAC,GAAA,EAEA,IAAAJ,IAAAG,EAAA,GACA,MAAAC,GAAA,GAIA,OAAAJ,EAAAG,EAAA,IAAAG,EAAAC,EAAAH,EAAA,IAWApB,EAAAwB,aAAA,SAAAC,EAAAC,GACA,OAAAD,GACA,aACA,aACAA,EAAA,KACA,MACA,YACA,UACAA,EAAA,IACA,MACA,aACA,aACAA,EAAA,OAGA,sBAAAA,GACAZ,EAAAY,GAAAE,MAAA,MACAC,WAAAH,GAAA,IAAAC,EAGAE,WAAAH,GAGA,MAAAA,EAAAI,KAAAJ,GAYAzB,EAAA5c,MAAA,SAAAsC,EAAAoc,EAAAC,GAOA,MANA,OAAAD,IACAA,EAAA,IAGAA,EAAAze,KAAAI,IAAAJ,KAAAE,IAAA,EAAAue,GAAA,IACApc,OAAAsc,QAAAF,GACAC,EAAArc,MAGAsa,EAAAiC,IAAA,SAAAC,GAIA,MAHAA,GAAAC,KAAA,SAAAxW,EAAAC,GACA,MAAAD,GAAAC,IAEAsW,GAOAlC,EAAAoC,aAAA,SAAApB,GAEA,GADAA,KACA3C,MAAA2C,GACA,QAQA,KAFA,GAAAzf,GAAA,EACA8gB,EAAA,EACAhf,KAAAD,MAAA4d,EAAAzf,OAAAyf,GACAzf,GAAA,GACA8gB,GAEA,OAAAA,IAOArC,EAAAsC,iBAAA,SAAAtB,GACA,GAAAF,GAAAE,EAAA3jB,WAGAklB,EAAAzB,EAAApoB,QAAA,IACA,IAAA6pB,EAAA,GACA,GAAAT,IAAAhB,EAAAtlB,MAAA+mB,EAAA,EACA,OAAAT,GAAA,GAAAA,EAAA,EAGA,GAAAU,GAAA1B,EAAApoB,QAAA,IACA,OAAA8pB,GAAA,IAAA1B,EAAAhqB,OAAA,EAAA0rB,GAWAxC,EAAAyC,kBAAA,SAAAC,EAAAC,GACA,GAAAhL,GAAAtU,KAAAsU,IACAsJ,EAAA5d,KAAA4d,KACA2B,EAAAvf,KAAA2R,MAAA2C,EAAA+K,EAAA,GAAAA,EAAA,IAAAzB,GACA4B,EAAAxf,KAAAD,MAAAuU,EAAAtU,KAAAsG,IAAAgZ,EAAA,GAAAA,EAAA,KAAA1B,GAEAa,EAAAze,KAAAI,IAAAJ,KAAAE,KAAAqf,EAAAC,EAAA,MACA,OAAAC,UAAAhB,KAAA,IAcA9B,EAAA+C,wBAAA,SAAAC,EAAAhR,EAAA8P,GACA,IAAAkB,EAAAhR,GACA,QAGA,IAAAiR,GAAApgB,EAAA5I,OAAA+oB,EAAA,SAAAE,EAAAlC,GACA,MAAAkC,IAAA7E,MAAA2C,GAAA,EAAAA,IACS,EACT,QAAAiC,EACA,QAsBA,KAnBA,GAAAE,GAAA9f,KAAA+f,IAAA,GAAAtB,GACAuB,EAAAxgB,EAAA/I,IAAAkpB,EAAA,SAAAhC,GACA,OAAA3C,MAAA2C,GAAA,EAAAA,GAAAiC,EAAAE,EAAA,MAEAG,EAAA,IAAAH,EAEAI,EAAA1gB,EAAA/I,IAAAupB,EAAA,SAAAG,GAEA,MAAAngB,MAAA2R,MAAAwO,KAEAC,EAAA5gB,EAAA5I,OAAAspB,EAAA,SAAAL,EAAAlC,GACA,MAAAkC,GAAAlC,GACS,GAET0C,EAAA7gB,EAAA/I,IAAAupB,EAAA,SAAAG,EAAAxR,GACA,MAAAwR,GAAAD,EAAAvR,KAIAyR,EAAAH,GAAA,CAIA,OAFA/f,GAAAogB,OAAAC,kBACAC,EAAA,KACAjtB,EAAA,EAAAC,EAAA6sB,EAAA5sB,OAAmDF,EAAAC,IAASD,EAC5D8sB,EAAA9sB,GAAA2M,IACAA,EAAAmgB,EAAA9sB,GACAitB,EAAAjtB,KAKA2sB,EAAAM,GACAH,EAAAG,GAAA,IACAJ,EAGA,MAAAF,GAAAvR,GAAAmR,GAIAnD,EAAA8D,iBAAA,iBAOA9D,EAAA+D,UAAA,SAAAC,GACA,GAAAC,GAAA,EAAA5gB,KAAA6gB,EACA,QAAAF,EAAAC,QAOAjE,EAAAmE,mBAAA,SAAAnD,GACA,MAAAA,IAlQA,MAkQAA,EAlQA,KAqQA,IAAAoD,GAAA,mIAKApE,GAAAqE,kBAAA,WACA,UAAAxH,OAAAwH,qBAkBArE,EAAAsE,UAAA,SAAA1rB,GACA,GAAAA,YAAAikB,MACA,MAAAjkB,EAEA,oBAAAA,GAAA,CAMA,GAAA+oB,GAAAyC,EAAAG,KAAA3rB,EAEA,KAAA+oB,EAEA,UAAA9E,MAAAgF,IAGA,IAAA2C,GAAAxE,EAAAqE,oBACAI,EAAA9C,EAAA,GAEA,MAAAA,EAAA,GAAArE,cACAkH,EACA,IAAA7C,EAAA,GAAAnmB,MAAA,KAAAgpB,EAHA,CAOA,WAAA3H,OACA8E,EAAA,KACAA,EAAA,UACAA,EAAA,OACAA,EAAA,QACAA,EAAA,OAAA8C,GACA9C,EAAA,OACAA,EAAA,OAGA,aAAA/oB,EACA,GAAAikB,MAAAgF,KAGA,GAAAhF,MAAAxZ,KAAAD,MAAAxK,KASAonB,EAAA0E,SAAA,SAAA1D,GACA,MAAA3d,MAAA+f,IAAA,GAAArC,EAAAC,KAkBAhB,EAAA2E,KAAA,SAAA3D,EAAA5d,GACA,GAGAwhB,GAHAC,EAAA9D,EAAAC,GACA8D,EAAAzhB,KAAA+f,IAAA,GAAAyB,GACAE,EAAA/D,EAAA8D,CAoBA,OAjB0BF,GAD1BxhB,EACA2hB,EAAA,IAA0B,EAC1BA,EAAA,IAA+B,EAC/BA,EAAA,EAA6B,EAC7BA,EAAA,EAA6B,EACX,GAGlBA,EAAA,EAAwB,EACxBA,EAAA,EAA6B,EAC7BA,EAAA,EAA6B,EAC7BA,EAAA,EAA6B,EACX,GAElB/D,EAAA4D,EAAAE,EAIAD,IAAA,IAAA7D,EAAAgB,QAAA6C,EAAA,GAAAA,EAAA,GAAA7D,GAyBAhB,EAAAgF,gBAAA,SAAA3M,GA8BA,QAAA4M,GAAAtZ,EAAAC,EAAAsZ,GACA,MAAAvZ,GAAAwZ,SAAAD,GAAAtZ,EAAAuZ,SAAAD,IAEAvZ,EAAAwZ,SAAAD,KAAAtZ,EAAAuZ,SAAAD,KAEAvZ,EAAAyZ,MAAAF,GAAAtZ,EAAAwZ,MAAAF,QAAA,OACAA,GAAAD,EAAAtZ,EAAAC,EAAA,IAnCAyM,EAAA8J,KAAA,SAAAxW,EAAAC,GACA,MAAAqZ,GAAAtZ,EAAAC,EAAA,SAKA,QAFAyZ,IAAArM,IACAsM,EAAA,EACA1uB,EAAA,EAAuBA,EAAAyhB,EAAAvhB,QAAiB,CAIxC,OAHAquB,GAAA9M,EAAAzhB,GAAAuuB,SACAC,EAAA/M,EAAAzhB,GAAAwuB,MAEAF,EAAA,EAA4BA,EAAA,EAAQA,IACpCC,EAAAD,IAAAG,IACAF,EAAAD,GAAAG,EACAD,EAAAF,KAAA,IAAAI,GAEAD,EAAAF,EAAAD,GACAI,EAAAF,EAAAF,EAGAC,GAAA,KAAAA,EAAA,IAAAC,EAAA,GAAAA,EAAA,MACA/M,EAAAhF,OAAAzc,EAAA,GAGAA,IAIA,MAAAyhB,IAsBA2H,EAAAuF,UAAA,SAAAC,GACA,MAAAA,GAAA5D,WAAA4D,IAAA,GAGApvB,EAAAC,QAAA2pB,GLuyGM,SAAU5pB,EAAQC,EAAS+I,GMzmGjC,QAAAqmB,GAAAhsB,EAAAN,GACA,MAAAM,MAAAnC,eAAA6B,GA/oBA,GAAAusB,GAAAtmB,EAAA,IACAumB,EAAAvmB,EAAA,GACA0gB,EAAA1gB,EAAA,IACAyD,EAAAzD,EAAA,GACA5F,EAAAqJ,EAAArJ,KACA9B,EAAAmL,EAAAnL,SAEAyW,IAOAA,GAAAyX,iBAAA,SAAAhtB,GACA,MAAAA,aAAA2E,OACA3E,EACA,MAAAA,MAEAA,IAqBAuV,EAAA0X,gBAAA,SAAAxe,EAAAye,GACA,GAAAze,EAAA,CACA,GAAA0e,GAAA1e,EAAA2e,SAAA3e,EAAA2e,aACAC,EAAA5e,EAAA6e,OAAA7e,EAAA6e,UAGA1sB,GAAAssB,EAAA,SAAAK,GACA,GAAAnF,GAAAne,EAAAvH,SAAAyqB,EAAAI,GAAAF,EAAAE,GACA,OAAAnF,IACA+E,EAAAI,GAAAnF,OAMA7S,EAAAiY,eAAA,+DAQAjY,EAAAkY,iBAAA,SAAAC,GAEA,MAAAA,KAAA,MAAAA,EAAA1tB,MAAA0tB,IAAA1tB,QAQAuV,EAAAoY,iBAAA,SAAAD,GACA,MAAA5uB,GAAA4uB,MACAA,YAAA/oB,SAUA4Q,EAAAqY,gBAAA,SAAA5tB,EAAA6tB,GAEA,GAAAC,GAAAD,KAAAvrB,IACA,mBAAAwrB,EACA9tB,GAGA,SAAA8tB,GAEA,gBAAA9tB,IACA,MAAAA,GACA,MAAAA,IAEAA,GAAA+sB,EAAArB,UAAA1rB,IAMA,MAAAA,GAAA,KAAAA,EACAipB,KAAAjpB,IAYAuV,EAAAwY,sBAAA,SAAAptB,EAAA8N,GACA,GAAA+H,GAAA,GAAA0Q,EAUA,OATAjd,GAAAxJ,MAAA+V,EAAAjB,EAAAyY,iBACAxX,EAAAiN,YAAAhV,EAAAgV,YACAjN,EAAAhP,KAAAiH,EAAAjH,MAAA,GACAgP,EAAAR,SAAAvH,EAAAuH,SACAQ,EAAAP,QAAAxH,EAAAwH,QAEAO,EAAAwE,QAAA,WACA,MAAAra,IAEA6V,GAIAjB,EAAAyY,iBAOAtK,cAAA,SAAApa,EAAAqa,GACA,GAAAhjB,GAAAwB,KAAA6Y,QAAA2I,GACAsK,EAAA9rB,KAAA+rB,YAAA5kB,EAAAqa,GACAwK,EAAAxtB,EAAAytB,YAAA9kB,GACA9B,EAAA7G,EAAA0tB,QAAA/kB,GAAA,GACAglB,EAAA3tB,EAAA4tB,eAAAjlB,GACA1C,EAAAjG,EAAA+gB,cAAApY,EAAA,QAEA,QACAuQ,cAAA1X,KAAA6T,SACAwY,iBAAArsB,KAAA8T,QACAwY,WAAA,WAAAtsB,KAAA6T,SAAA7T,KAAA8T,QAAA,KACAwN,YAAAthB,KAAAshB,YACAiL,SAAAvsB,KAAAgR,GACAwb,WAAAxsB,KAAAqF,KACAA,OACA8B,UAAA6kB,EACAxtB,KAAA2tB,EACA3K,WACA3jB,MAAAiuB,EACArnB,QACAgoB,OAAA9B,EAAA+B,iBAAAjoB,GAGAkoB,OAAA,+BAaAC,kBAAA,SAAAzlB,EAAA4T,EAAAyG,EAAAqL,EAAAC,GACA/R,KAAA,QACA,IAAAvc,GAAAwB,KAAA6Y,QAAA2I,GACAuL,EAAAvuB,EAAAwuB,aAAA7lB,GAEAga,EAAAnhB,KAAAuhB,cAAApa,EAAAqa,EACA,OAAAqL,GAAA1L,EAAAtjB,gBAAA2E,SACA2e,EAAAtjB,MAAAsjB,EAAAtjB,MAAAgvB,GAGA,IAAAI,GAAAF,EAAAtqB,KAAAqqB,GAAA,QAAA/R,EAAA,aAEA,yBAAAkS,IACA9L,EAAApG,SACAkS,EAAA9L,IAEA,gBAAA8L,GACAtC,EAAAuC,UAAAD,EAAA9L,OADA,IAWA4K,YAAA,SAAA9U,EAAAuK,GACA,GAAAhjB,GAAAwB,KAAA6Y,QAAA2I,GACA+J,EAAA/sB,EAAA4tB,eAAAnV,EACA,UAAAsU,EACA,OAAA5uB,EAAA4uB,gBAAA/oB,OACA+oB,IAAA1tB,OAWAsvB,cAAArlB,EAAAlF,MAYAwQ,EAAAga,gBAAA,SAAAC,EAAAC,GAOAA,UAAA7sB,OAEA,IAAAhF,GAAAqM,EAAA/I,IAAAsuB,MAAA,SAAA3uB,EAAA4V,GACA,OAAoBiZ,MAAA7uB,IAsEpB,OAlEAD,GAAA6uB,EAAA,SAAAE,EAAAlZ,GACA,GAAA3X,EAAA6wB,GAAA,CAKA,OAAA3xB,GAAA,EAA2BA,EAAAJ,EAAAM,OAAmBF,IAC9C,IAAAJ,EAAAI,GAAAygB,QACA,MAAAkR,EAAAxc,IACAvV,EAAAI,GAAA0xB,MAAAvc,KAAAwc,EAAAxc,GAAA,GAIA,MAFAvV,GAAAI,GAAAygB,OAAAkR,OACAF,EAAAhZ,GAAA,KAKA,QAAAzY,GAAA,EAA2BA,EAAAJ,EAAAM,OAAmBF,IAAA,CAC9C,GAAA0xB,GAAA9xB,EAAAI,GAAA0xB,KACA,MAAA9xB,EAAAI,GAAAygB,QAEA,MAAAiR,EAAAvc,IAAA,MAAAwc,EAAAxc,IACA,MAAAwc,EAAAnoB,MACA+N,EAAAqa,UAAAD,IACApa,EAAAqa,UAAAF,IACAA,EAAAloB,OAAAmoB,EAAAnoB,KAAA,IAIA,MAFA5J,GAAAI,GAAAygB,OAAAkR,OACAF,EAAAhZ,GAAA,UAOA7V,EAAA6uB,EAAA,SAAAE,EAAAlZ,GACA,GAAA3X,EAAA6wB,GAAA,CAKA,IADA,GAAA3xB,GAAA,EACkBA,EAAAJ,EAAAM,OAAmBF,IAAA,CACrC,GAAA0xB,GAAA9xB,EAAAI,GAAA0xB,KACA,KAAA9xB,EAAAI,GAAAygB,SAKAlJ,EAAAqa,UAAAF,IAMA,MAAAC,EAAAxc,GACA,CACAvV,EAAAI,GAAAygB,OAAAkR,CACA,QAIA3xB,GAAAJ,EAAAM,QACAN,EAAAwD,MAA6Bqd,OAAAkR,OAI7B/xB,GAYA2X,EAAAsa,cAAA,SAAAC,GAaA,GAAAC,GAAA9lB,EAAA3G,eAEA1C,GAAAkvB,EAAA,SAAAlY,EAAAnB,GACA,GAAAuZ,GAAApY,EAAA8X,KACAM,IAAAD,EAAA1sB,IAAA2sB,EAAA7c,GAAAyE,KAGAhX,EAAAkvB,EAAA,SAAAlY,EAAAnB,GACA,GAAAhI,GAAAmJ,EAAA6G,MAEAxU,GAAAnH,QACA2L,GAAA,MAAAA,EAAA0E,KAAA4c,EAAAnrB,IAAA6J,EAAA0E,KAAA4c,EAAAnrB,IAAA6J,EAAA0E,MAAAyE,EACA,mBAAAnJ,KAAA0E,KAGA1E,GAAA,MAAAA,EAAA0E,IAAA4c,EAAA1sB,IAAAoL,EAAA0E,GAAAyE,IACAA,EAAAqY,UAAArY,EAAAqY,cAIArvB,EAAAkvB,EAAA,SAAAlY,EAAAnB,GACA,GAAAuZ,GAAApY,EAAA8X,MACAjhB,EAAAmJ,EAAA6G,OACAwR,EAAArY,EAAAqY,OAEA,IAAAnxB,EAAA2P,GAAA,CAcA,GANAwhB,EAAAzoB,KAAA,MAAAiH,EAAAjH,KACAiH,EAAAjH,KAAA,GACAwoB,EACAA,EAAAxoB,KACA,MAEAwoB,EACAC,EAAA9c,GAAA6c,EAAA7c,OAEA,UAAA1E,EAAA0E,GACA8c,EAAA9c,GAAA1E,EAAA0E,GAAA,OAEA,CAMA,GAAA+c,GAAA,CACA,IACAD,EAAA9c,GAAA,KAAA8c,EAAAzoB,KAAA,KAAA0oB,UAEAH,EAAAnrB,IAAAqrB,EAAA9c,KAGA4c,EAAA1sB,IAAA4sB,EAAA9c,GAAAyE,OASArC,EAAAqa,UAAA,SAAAD,GACA,MAAA7wB,GAAA6wB,IACAA,EAAAxc,IACA,KAAAwc,EAAAxc,GAAA,IAAArT,QAAA,aAWAyV,EAAA4a,gBAAA,SAAAC,EAAAC,GASA,QAAAC,GAAAC,EAAArvB,EAAAsvB,GACA,OAAAxyB,GAAA,EAAAC,EAAAsyB,EAAAryB,OAAqDF,EAAAC,EAASD,IAK9D,OAJA0wB,GAAA6B,EAAAvyB,GAAA0wB,SACA+B,EAAAlb,EAAAyX,iBAAAuD,EAAAvyB,GAAAsL,WACAonB,EAAAF,KAAA9B,GAEAiC,EAAA,EAAAC,EAAAH,EAAAvyB,OAA0DyyB,EAAAC,EAAUD,IAAA,CACpE,GAAArnB,GAAAmnB,EAAAE,EAEAD,MAAApnB,GACAonB,EAAApnB,GAAA,MAGApI,EAAAwtB,KAAAxtB,EAAAwtB,QAA6DplB,GAAA,GAM7D,QAAAunB,GAAA3vB,EAAA4vB,GACA,GAAAlzB,KACA,QAAAI,KAAAkD,GACA,GAAAA,EAAAxC,eAAAV,IAAA,MAAAkD,EAAAlD,GACA,GAAA8yB,EACAlzB,EAAAwD,MAAApD,OAEA,CACA,GAAAyyB,GAAAI,EAAA3vB,EAAAlD,IAAA,EACAyyB,GAAAvyB,QAAAN,EAAAwD,MAA2DstB,SAAA1wB,EAAAsL,UAAAmnB,IAI3D,MAAA7yB,GAxCA,GAAAmzB,MACAC,IAKA,OAHAV,GAAAF,MAAAW,GACAT,EAAAD,MAAAW,EAAAD,IAEAF,EAAAE,GAAAF,EAAAG,KA4CAzb,EAAA0b,eAAA,SAAAtwB,EAAAoV,GACA,aAAAA,EAAAyL,gBACAzL,EAAAyL,gBAEA,MAAAzL,EAAAzM,UACAW,EAAAhL,QAAA8W,EAAAzM,WACAW,EAAA/I,IAAA6U,EAAAzM,UAAA,SAAAtJ,GACA,MAAAW,GAAA8gB,gBAAAzhB,KAEAW,EAAA8gB,gBAAA1L,EAAAzM,WAEA,MAAAyM,EAAAvO,KACAyC,EAAAhL,QAAA8W,EAAAvO,MACAyC,EAAA/I,IAAA6U,EAAAvO,KAAA,SAAAxH,GACA,MAAAW,GAAAuwB,YAAAlxB,KAEAW,EAAAuwB,YAAAnb,EAAAvO,UALA,IAuBA+N,EAAA4b,WAAA,WACA,GAAA1a,GAAA,CACA,mBACA,GAAAhY,GAAA,sBAAAgY,GACA,iBAAA2a,GACA,MAAAA,GAAA3yB,KAAA2yB,EAAA3yB,YAwCA8W,EAAAC,YAAA,SAAA7F,EAAAwF,EAAA1G,GACA,GAAAxE,EAAA5H,SAAA8S,GAAA,CACA,GAAAtU,KACAA,GAAAsU,EAAA,WACAA,EAAAtU,EAGA,GAAA0gB,GAAA9S,KAAA8S,iBACAA,GACAsL,EAAA1X,EAAAoM,EAAA,UACAsL,EAAA1X,EAAAoM,EAAA,OACAsL,EAAA1X,EAAAoM,EAAA,UAEApM,EAAAoM,EAAA,WAGA,IAAA3jB,KAkCA,OAhCAgD,GAAAuU,EAAA,SAAAnV,EAAAvB,GACA,GAAAuB,GAAAmV,EAAA1W,EAGA,kBAAAA,GAAA,oBAAAA,EAEA,YADAb,EAAAa,GAAAuB,EAIA,IAAAqxB,GAAA5yB,EAAAsqB,MAAA,8BACA/S,EAAAqb,EAAA,GACAC,GAAAD,EAAA,QAAA7e,aAEA,OAAAwD,IACAsb,GACA,MAAAtxB,GACA,UAAAsxB,GAAA,SAAAtxB,GACAyO,KAAA8iB,kBAAAtnB,EAAAnK,QAAA2O,EAAA8iB,iBAAAvb,GAAA,GAJA,CASA,GAAAwb,IAA8Bxb,WAC9B,WAAAsb,GAAA,QAAAtxB,IACAwxB,EAAAF,GAAAtxB,EAGA,IAAAkhB,GAAAvR,EAAA8hB,gBAAAD,EACA5zB,GAAAoY,EAAA,UAAAkL,EACAtjB,EAAAoY,EAAA,SAAAkL,EAAA,MAGAtjB,GASA2X,EAAAmc,kBAAA,SAAA/wB,EAAAgxB,GACA,GAAAvL,GAAAzlB,EAAAylB,UACAuL,GAAAhxB,EAAAixB,aAAAD,EACA,QAAA3zB,GAAA,EAAuBA,EAAAooB,EAAAloB,OAAuBF,IAAA,CAC9C,GAAA6zB,GAAAlxB,EAAAmxB,iBAAA1L,EAAApoB,GACA,IAAA6zB,EAAArqB,OAAAmqB,EACA,MAAAE,GAAAE,WAWAxc,EAAAyc,kBAAA,SAAArxB,EAAAoxB,GACA,GAAAJ,KAOA,OANA/wB,GAAAD,EAAAylB,WAAA,SAAA6L,GACA,GAAAJ,GAAAlxB,EAAAmxB,iBAAAG,EACAJ,GAAAE,eACAJ,EAAAE,EAAAK,eAAAL,EAAArqB,QAGAmqB,GAUApc,EAAA4c,kBAAA,SAAAxxB,EAAAyxB,GACA,GAAAT,KASA,OARA/wB,GAAAD,EAAAylB,WAAA,SAAA6L,GACA,GAAAJ,GAAAlxB,EAAAmxB,iBAAAG,GACAI,EAAAR,EAAAQ,UACArD,EAAAqD,EAAAD,EACA,OAAApD,IAAA,IAAAA,IACA2C,EAAA3C,GAAA6C,EAAArqB,QAGAmqB,GAOAn0B,EAAAC,QAAA8X,GNiwHM,SAAU/X,EAAQC,EAAS+I,GO73IjC,QAAA2D,GAAA4B,GACAumB,EAAAv0B,KAAAoE,KAAA4J,GAMA5J,KAAAmK,KAAA,KAxBA,GAAAgmB,GAAA9rB,EAAA,IACAyD,EAAAzD,EAAA,GACA+rB,EAAA/rB,EAAA,IACAgsB,EAAAhsB,EAAA,KAEAisB,EAAAjsB,EAAA,KACAksB,EAAAD,EAAAnyB,UAAAoyB,iBAEA3hB,EAAAtG,KAAAsG,IAEA4hB,EAAA,GAAAJ,IAAA,EAiBApoB,GAAA7J,WAEAlC,YAAA+L,EAEA7H,KAAA,OAEAswB,aAAA,EAEAC,uBAAA,EAEAC,MAAA,SAAAC,EAAAC,GACA,GAAA7rB,GAAAhF,KAAAgF,MACAmF,EAAAnK,KAAAmK,MAAAqmB,EACAM,EAAA9rB,EAAA8rB,YACAC,EAAA/rB,EAAA+rB,UACA9rB,EAAAD,EAAAC,KACAF,EAAAC,EAAAD,OACAisB,EAAAD,KAAA9rB,EAAA,WACAgsB,EAAAH,KAAA/rB,EAAA,WACAmsB,EAAAH,KAAA9rB,EAAA,MACAksB,EAAAL,KAAA/rB,EAAA,KAKA,IAHAC,EAAAxF,KAAAoxB,EAAA5wB,KAAA6wB,GACA7wB,KAAAoxB,aAAAR,GAEA5wB,KAAAqxB,QAAA,CACA,GAAApnB,EAEA+mB,KACA/mB,KAAAjK,KAAAsK,kBACAtK,KAAAsxB,cAAAtsB,EAAAusB,YAAAX,EAAA3rB,EAAAgF,IAEAgnB,IACAhnB,KAAAjK,KAAAsK,kBACAtK,KAAAwxB,gBAAAxsB,EAAAusB,YAAAX,EAAA7rB,EAAAkF,IAIA+mB,EAEAJ,EAAAa,UAAAzxB,KAAAsxB,cAEAJ,IACAN,EAAAa,UAAAlB,EAAA30B,KAAAqJ,EAAA2rB,IAEAK,EACAL,EAAAc,YAAA1xB,KAAAwxB,gBAEAL,IACAP,EAAAc,YAAAnB,EAAA30B,KAAAmJ,EAAA6rB,GAGA,IAAAe,GAAA3sB,EAAA2sB,SACAC,EAAA5sB,EAAA4sB,eAEAC,IAAAjB,EAAAkB,YAGAC,EAAA/xB,KAAAgyB,gBACA7nB,GAAA8nB,SAAAF,EAAA,GAAAA,EAAA,IAOA/xB,KAAAywB,aACAkB,IAAAE,GAAAf,GAEA3mB,EAAA+nB,UAAAtB,GAGAe,IAAAE,IACA1nB,EAAA2nB,YAAAH,GACAxnB,EAAAgoB,kBAAAP,IAGA5xB,KAAAoyB,UAAAjoB,EAAAnK,KAAAuL,OAAA,GAGAvL,KAAAmK,OACAnK,KAAAywB,aAAA,KAKAG,EAAAsB,YACAlyB,KAAAmK,KAAAkoB,YAAAzB,IAGAG,GAAA5mB,EAAAlF,KAAA2rB,GAEAe,GAAAE,IACAjB,EAAAkB,YAAAH,GACAf,EAAAgB,kBAGAd,GAAA3mB,EAAApF,OAAA6rB,GAEAe,GAAAE,GAGAjB,EAAAkB,gBAIA9xB,KAAAsyB,iBAAA1B,GAGA,MAAA5rB,EAAAutB,MACAvyB,KAAAwyB,aAAA5B,EAAA5wB,KAAAsK,oBAMA8nB,UAAA,SAAAxB,EAAA6B,EAAAC,KAEAC,gBAAA,WACA3yB,KAAAmK,KAAA,GAAAimB,IAGA9lB,gBAAA,WACA,GAAAL,GAAAjK,KAAA4yB,MACA5tB,EAAAhF,KAAAgF,MACA6tB,GAAA5oB,CACA,IAAA4oB,EAAA,CACA,GAAA1oB,GAAAnK,KAAAmK,IACAA,KAEAA,EAAAnK,KAAAmK,KAAA,GAAAimB,IAEApwB,KAAAywB,cACAtmB,EAAA+nB,YACAlyB,KAAAoyB,UAAAjoB,EAAAnK,KAAAuL,OAAA,IAEAtB,EAAAE,EAAAG,kBAIA,GAFAtK,KAAA4yB,MAAA3oB,EAEAjF,EAAA8rB,YAAA,CAIA,GAAAgC,GAAA9yB,KAAA+yB,kBAAA/yB,KAAA+yB,gBAAA9oB,EAAA1O,QACA,IAAAyE,KAAAqxB,SAAAwB,EAAA,CACAC,EAAAE,KAAA/oB,EAEA,IAAAgpB,GAAAjuB,EAAAwG,UAEA0nB,EAAAluB,EAAAmuB,cAAAnzB,KAAAozB,eAAA,CAGApuB,GAAA+rB,YACAkC,EAAA3qB,KAAAE,IAAAyqB,EAAAjzB,KAAA0wB,wBAAA,IAIAwC,EAAA,QACAJ,EAAAtoB,OAAAyoB,EAAAC,EACAJ,EAAAroB,QAAAwoB,EAAAC,EACAJ,EAAAnoB,GAAAsoB,EAAAC,EAAA,EACAJ,EAAAjoB,GAAAooB,EAAAC,EAAA,GAKA,MAAAJ,GAGA,MAAA7oB,IAGAopB,QAAA,SAAA1oB,EAAAE,GACA,GAAAyoB,GAAAtzB,KAAAuzB,sBAAA5oB,EAAAE,GACAZ,EAAAjK,KAAAsK,kBACAtF,EAAAhF,KAAAgF,KAIA,IAHA2F,EAAA2oB,EAAA,GACAzoB,EAAAyoB,EAAA,GAEArpB,EAAAopB,QAAA1oB,EAAAE,GAAA,CACA,GAAAf,GAAA9J,KAAAmK,KAAA3L,IACA,IAAAwG,EAAA8rB,YAAA,CACA,GAAAtlB,GAAAxG,EAAAwG,UACA0nB,EAAAluB,EAAAmuB,cAAAnzB,KAAAozB,eAAA,CAEA,IAAAF,EAAA,QAEAluB,EAAA+rB,YACAvlB,EAAAlD,KAAAE,IAAAgD,EAAAxL,KAAA0wB,yBAEAL,EAAAmD,cACA1pB,EAAA0B,EAAA0nB,EAAAvoB,EAAAE,IAEA,SAIA,GAAA7F,EAAA+rB,UACA,MAAAV,GAAAgD,QAAAvpB,EAAAa,EAAAE,GAGA,UAMA4oB,MAAA,SAAAC,GACA,MAAAA,IACAA,GAAA,GAGAA,IACA1zB,KAAAywB,YAAAiD,EACA1zB,KAAA4yB,MAAA,MAGA5yB,KAAAqxB,SAAA,EAEArxB,KAAA0F,MAAA1F,KAAA0F,KAAAiuB,UAGA3zB,KAAA4zB,cACA5zB,KAAA4zB,aAAAH,SAQAI,aAAA,SAAAC,GACA,MAAA9zB,MAAA+zB,QAAA,QAAAD,IAIAE,OAAA,SAAA13B,EAAAuB,GAEA,UAAAvB,GACA0D,KAAAi0B,SAAAp2B,GACAmC,KAAAywB,aAAA,EACAzwB,KAAA4yB,MAAA,MAGAzC,EAAAhyB,UAAA61B,OAAAp4B,KAAAoE,KAAA1D,EAAAuB,IAQAo2B,SAAA,SAAA33B,EAAAuB,GACA,GAAA0N,GAAAvL,KAAAuL,KAEA,IAAAA,EAAA,CACA,GAAAzD,EAAAnL,SAAAL,GACA,OAAA+I,KAAA/I,GACAA,EAAAC,eAAA8I,KACAkG,EAAAlG,GAAA/I,EAAA+I,QAKAkG,GAAAjP,GAAAuB,CAEAmC,MAAAyzB,OAAA,GAEA,MAAAzzB,OAGAozB,aAAA,WACA,GAAAloB,GAAAlL,KAAAuO,SAKA,OAAArD,IAAA0D,EAAA1D,EAAA,aAAA0D,EAAA1D,EAAA,YACA5C,KAAA4rB,KAAAtlB,EAAA1D,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACA,IAcAlD,EAAA9K,OAAA,SAAAC,GACA,GAAAg3B,GAAA,SAAAvqB,GACA5B,EAAApM,KAAAoE,KAAA4J,GAEAzM,EAAA6H,OAEAhF,KAAAgF,MAAAovB,WAAAj3B,EAAA6H,OAAA,EAIA,IAAAqvB,GAAAl3B,EAAAoO,KACA,IAAA8oB,EAAA,CACAr0B,KAAAuL,MAAAvL,KAAAuL,SACA,IAAA+oB,GAAAt0B,KAAAuL,KACA,QAAAlG,KAAAgvB,IAEAC,EAAA/3B,eAAA8I,IACAgvB,EAAA93B,eAAA8I,KAEAivB,EAAAjvB,GAAAgvB,EAAAhvB,IAKAlI,EAAAmU,MAAAnU,EAAAmU,KAAA1V,KAAAoE,KAAA4J,GAGA9B,GAAAhK,SAAAq2B,EAAAnsB,EAGA,QAAA3C,KAAAlI,GAEA,UAAAkI,GAAA,UAAAA,IACA8uB,EAAAh2B,UAAAkH,GAAAlI,EAAAkI,GAIA,OAAA8uB,IAGArsB,EAAAhK,SAAAkK,EAAAmoB,GAEA90B,EAAAC,QAAA0M,GP45IM,SAAU3M,EAAQC,GQ7wJxB,GAAAi5B,GAAA,mBAAAC,cACAhyB,MACAgyB,aASAtsB,GAOAyX,OAAA,SAAAhV,EAAAE,GACA,GAAA4pB,GAAA,GAAAF,GAAA,EASA,OARA,OAAA5pB,IACAA,EAAA,GAEA,MAAAE,IACAA,EAAA,GAEA4pB,EAAA,GAAA9pB,EACA8pB,EAAA,GAAA5pB,EACA4pB,GASAzB,KAAA,SAAAyB,EAAAhK,GAGA,MAFAgK,GAAA,GAAAhK,EAAA,GACAgK,EAAA,GAAAhK,EAAA,GACAgK,GAQAl5B,MAAA,SAAAkvB,GACA,GAAAgK,GAAA,GAAAF,GAAA,EAGA,OAFAE,GAAA,GAAAhK,EAAA,GACAgK,EAAA,GAAAhK,EAAA,GACAgK,GAUAvzB,IAAA,SAAAuzB,EAAA7jB,EAAAC,GAGA,MAFA4jB,GAAA,GAAA7jB,EACA6jB,EAAA,GAAA5jB,EACA4jB,GASA1wB,IAAA,SAAA0wB,EAAAC,EAAAC,GAGA,MAFAF,GAAA,GAAAC,EAAA,GAAAC,EAAA,GACAF,EAAA,GAAAC,EAAA,GAAAC,EAAA,GACAF,GAUAG,YAAA,SAAAH,EAAAC,EAAAC,EAAA/jB,GAGA,MAFA6jB,GAAA,GAAAC,EAAA,GAAAC,EAAA,GAAA/jB,EACA6jB,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAA/jB,EACA6jB,GASAxe,IAAA,SAAAwe,EAAAC,EAAAC,GAGA,MAFAF,GAAA,GAAAC,EAAA,GAAAC,EAAA,GACAF,EAAA,GAAAC,EAAA,GAAAC,EAAA,GACAF,GAQA34B,IAAA,SAAA2uB,GACA,MAAAniB,MAAA4rB,KAAAl0B,KAAA60B,UAAApK,KAQAoK,UAAA,SAAApK,GACA,MAAAA,GAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IASApc,IAAA,SAAAomB,EAAAC,EAAAC,GAGA,MAFAF,GAAA,GAAAC,EAAA,GAAAC,EAAA,GACAF,EAAA,GAAAC,EAAA,GAAAC,EAAA,GACAF,GASAK,IAAA,SAAAL,EAAAC,EAAAC,GAGA,MAFAF,GAAA,GAAAC,EAAA,GAAAC,EAAA,GACAF,EAAA,GAAAC,EAAA,GAAAC,EAAA,GACAF,GASAM,IAAA,SAAAL,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IASA5C,MAAA,SAAA0C,EAAAhK,EAAAuK,GAGA,MAFAP,GAAA,GAAAhK,EAAA,GAAAuK,EACAP,EAAA,GAAAhK,EAAA,GAAAuK,EACAP,GAQAQ,UAAA,SAAAR,EAAAhK,GACA,GAAAyK,GAAAhtB,EAAApM,IAAA2uB,EASA,OARA,KAAAyK,GACAT,EAAA,KACAA,EAAA,OAGAA,EAAA,GAAAhK,EAAA,GAAAyK,EACAT,EAAA,GAAAhK,EAAA,GAAAyK,GAEAT,GASAU,SAAA,SAAAT,EAAAC,GACA,MAAArsB,MAAA4rB,MACAQ,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KACAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,MAUAS,eAAA,SAAAV,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KACAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KAQAU,OAAA,SAAAZ,EAAAhK,GAGA,MAFAgK,GAAA,IAAAhK,EAAA,GACAgK,EAAA,IAAAhK,EAAA,GACAgK,GAUAa,KAAA,SAAAb,EAAAC,EAAAC,EAAAY,GAGA,MAFAd,GAAA,GAAAC,EAAA,GAAAa,GAAAZ,EAAA,GAAAD,EAAA,IACAD,EAAA,GAAAC,EAAA,GAAAa,GAAAZ,EAAA,GAAAD,EAAA,IACAD,GASAzpB,eAAA,SAAAypB,EAAAhK,EAAAvf,GACA,GAAAP,GAAA8f,EAAA,GACA5f,EAAA4f,EAAA,EAGA,OAFAgK,GAAA,GAAAvpB,EAAA,GAAAP,EAAAO,EAAA,GAAAL,EAAAK,EAAA,GACAupB,EAAA,GAAAvpB,EAAA,GAAAP,EAAAO,EAAA,GAAAL,EAAAK,EAAA,GACAupB,GAQA/rB,IAAA,SAAA+rB,EAAAC,EAAAC,GAGA,MAFAF,GAAA,GAAAnsB,KAAAI,IAAAgsB,EAAA,GAAAC,EAAA,IACAF,EAAA,GAAAnsB,KAAAI,IAAAgsB,EAAA,GAAAC,EAAA,IACAF,GAQAjsB,IAAA,SAAAisB,EAAAC,EAAAC,GAGA,MAFAF,GAAA,GAAAnsB,KAAAE,IAAAksB,EAAA,GAAAC,EAAA,IACAF,EAAA,GAAAnsB,KAAAE,IAAAksB,EAAA,GAAAC,EAAA,IACAF,GAIAvsB,GAAAnM,OAAAmM,EAAApM,IACAoM,EAAAstB,aAAAttB,EAAA2sB,UACA3sB,EAAAutB,KAAAvtB,EAAAitB,SACAjtB,EAAAwtB,WAAAxtB,EAAAktB,eAEA/5B,EAAAC,QAAA4M,GRsxJM,SAAU7M,EAAQC,GSpiKxB,GAAAqe,KAGAA,GAFA,mBAAAgc,YAGA5U,WACA6U,MACAhc,MAAA,EAEAO,iBAAA,GAaA,SAAA0b,GACA,GAAAD,MACA7U,KAeA+U,EAAAD,EAAAjP,MAAA,qBAGAmP,EAAAF,EAAAjP,MAAA,mBAEAiP,EAAAjP,MAAA,6BACAoP,EAAAH,EAAAjP,MAAA,kBAEA5F,EAAA,kBAAA0C,KAAAmS,EAqDA,OA7BAC,KACA/U,EAAA+U,SAAA,EACA/U,EAAAkB,QAAA6T,EAAA,IAKAC,IACAhV,EAAAgV,IAAA,EACAhV,EAAAkB,QAAA8T,EAAA,IAGAC,IACAjV,EAAAiV,MAAA,EACAjV,EAAAkB,QAAA+T,EAAA,IAKAhV,IACAD,EAAAC,QAAA,IAUAD,UACA6U,KACAhc,MAAA,EAGAO,kBAAA7c,SAAAC,cAAA,UAAAC,WAKAy4B,qBAAA,gBAAAva,UAAAqF,EAAAgV,KAAAhV,EAAAiV,KAEAE,uBAAA,iBAAAxa,UAKAqF,EAAAiV,MAAAjV,EAAAgV,IAAAhV,EAAAkB,SAAA,MAzGA0T,UAAAQ,WAGA96B,EAAAC,QAAAqe,GT2pKM,SAAUte,EAAQC,EAAS+I,GUlqKjC,QAAA0gB,GAAAzI,EAAA8Z,EAAA5oB,GAKAxN,KAAAo2B,cAMAp2B,KAAAwN,UAMAxN,KAAAsc,SAkIA,QAAA+Z,GAAA33B,EAAA43B,EAAAF,GACA,OAAAv6B,GAAA,EAAuBA,EAAAy6B,EAAAv6B,UAEvBu6B,EAAAz6B,IAKA,OADA6C,KAAA,gBAAAA,KAAA43B,EAAAz6B,IAAA,OAN2CA,KAc3C,MAHA,OAAA6C,GAAA03B,IACA13B,EAAA03B,EAAA3zB,IAAA6zB,IAEA53B,EAIA,QAAA63B,GAAAliB,EAAAlK,GACA,GAAAqsB,GAAAC,EAAAh0B,IAAA4R,EAAA,YACA,OAAAmiB,KAAA56B,KAAAyY,EAAAlK,GAAAkK,EAAA+hB,YAnLA,GAAAtuB,GAAAzD,EAAA,GACAoyB,EAAApyB,EAAA,IACAsV,EAAAtV,EAAA,GAuCA0gB,GAAA5mB,WAEAlC,YAAA8oB,EAMAzT,KAAA,KAKAolB,YAAA,SAAApa,GACAxU,EAAAtL,MAAAwD,KAAAsc,UAAA,IAQA7Z,IAAA,SAAA0H,EAAAwsB,GACA,aAAAxsB,EACAnK,KAAAsc,OAGA+Z,EACAr2B,KAAAsc,OACAtc,KAAA42B,UAAAzsB,IACAwsB,GAAAJ,EAAAv2B,KAAAmK,KASA5C,WAAA,SAAAjL,EAAAq6B,GACA,GAAAra,GAAAtc,KAAAsc,OAEA2J,EAAA,MAAA3J,MAAAhgB,GACA85B,GAAAO,GAAAJ,EAAAv2B,KAAA1D,EAIA,OAHA,OAAA2pB,GAAAmQ,IACAnQ,EAAAmQ,EAAA7uB,WAAAjL,IAEA2pB,GAQAjZ,SAAA,SAAA7C,EAAAisB,GACA,GAIAS,GAJAn4B,EAAA,MAAAyL,EACAnK,KAAAsc,OACA+Z,EAAAr2B,KAAAsc,OAAAnS,EAAAnK,KAAA42B,UAAAzsB,GAQA,OALAisB,OACAS,EAAAN,EAAAv2B,KAAAmK,KACA0sB,EAAA7pB,SAAA7C,GAGA,GAAA4a,GAAArmB,EAAA03B,EAAAp2B,KAAAwN,UAMAspB,QAAA,WACA,aAAA92B,KAAAsc,QAGAoD,YAAA,aAGAnkB,MAAA,WAEA,WAAAw7B,EADA/2B,KAAA/D,aACA6L,EAAAvM,MAAAyE,KAAAsc,UAGA0a,YAAA,SAAAC,GACAR,EAAAO,YAAAh3B,KAAAi3B,IAIAL,UAAA,SAAAzsB,GAIA,MAHA,gBAAAA,KACAA,IAAA8K,MAAA,MAEA9K,GAQA+sB,mBAAA,SAAAV,GACAC,EAAAv1B,IAAAlB,KAAA,YAAAw2B,IAGApvB,mBAAA,WACA,IAAAuS,EAAAC,KAAA,CACA,SAAA5Z,KAAAsc,OAAA1J,UACA,QAAA5S,KAAAsc,OAAA1J,SAEA,IAAA5S,KAAAo2B,YACA,MAAAp2B,MAAAo2B,YAAAhvB,wBA+BAqvB,EAAAU,kBAAApS,EAEA,IAAAzmB,GAAAwJ,EAAAxJ,KACAA,GAAAymB,EAAA1gB,EAAA,MACA/F,EAAAymB,EAAA1gB,EAAA,MACA/F,EAAAymB,EAAA1gB,EAAA,MACA/F,EAAAymB,EAAA1gB,EAAA,MAEAhJ,EAAAC,QAAAypB,GVyrKM,SAAU1pB,EAAQC,EAAS+I,GW33KjC,GAAAyD,GAAAzD,EAAA,GACA+yB,EAAA/yB,EAAA,GACAgzB,EAAAhzB,EAAA,IAEAsmB,IAOAA,GAAA2M,UAAA,SAAA3sB,GACA,MAAA2Y,OAAA3Y,GACA,KAEAA,KAAA,IAAAsK,MAAA,KACAtK,EAAA,GAAAwX,QAAA,iCAAiD,QACjDxX,EAAA5O,OAAA,MAAA4O,EAAA,SAQAggB,EAAA4M,YAAA,SAAAxR,EAAAyR,GASA,MARAzR,OAAA,IAAA1V,cAAA8R,QAAA,iBAAAyE,EAAA6Q,GACA,MAAAA,GAAAlV,gBAGAiV,GAAAzR,IACAA,IAAA2R,OAAA,GAAAnV,cAAAwD,EAAAtlB,MAAA,IAGAslB,GAWA4E,EAAAgN,kBAAA,SAAA1R,GACA,GAAAnqB,GAAAmqB,EAAAlqB,MACA,2BACAkqB,SAEA,IAAAnqB,GAEAmqB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,IAAAnqB,GAEAmqB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEAA,EAGA,IAAA2R,GAAAjN,EAAAiN,WAAA,SAAAp8B,GACA,MAAAq8B,QAAAr8B,GACA2mB,QAAA,cACAA,QAAA,aACAA,QAAA,aACAA,QAAA,eACAA,QAAA,eAGA2V,GAAA,6BAEAC,EAAA,SAAAC,EAAAC,GACA,UAAiBD,GAAA,MAAAC,EAAA,GAAAA,GAAA,IAUjBtN,GAAAuC,UAAA,SAAAgL,EAAAC,EAAAC,GACAtwB,EAAAhL,QAAAq7B,KACAA,MAEA,IAAAE,GAAAF,EAAAp8B,MACA,KAAAs8B,EACA,QAIA,QADA1L,GAAAwL,EAAA,GAAAxL,UACA9wB,EAAA,EAAuBA,EAAA8wB,EAAA5wB,OAAkBF,IAAA,CACzC,GAAAy8B,GAAAR,EAAAj8B,GACAoqB,EAAA8R,EAAAO,EAAA,EACAJ,KAAA/V,QAAA4V,EAAAO,GAAAF,EAAAR,EAAA3R,MAEA,OAAAgS,GAAA,EAA+BA,EAAAI,EAAuBJ,IACtD,OAAAM,GAAA,EAA2BA,EAAA5L,EAAA5wB,OAAkBw8B,IAAA,CAC7C,GAAAtS,GAAAkS,EAAAF,GAAAtL,EAAA4L,GACAL,KAAA/V,QACA4V,EAAAD,EAAAS,GAAAN,GACAG,EAAAR,EAAA3R,MAKA,MAAAiS,IAWAvN,EAAA6N,gBAAA,SAAAN,EAAA7sB,EAAA+sB,GAOA,MANAtwB,GAAArJ,KAAA4M,EAAA,SAAAxN,EAAAvB,GACA47B,IAAA/V,QACA,IAAkB7lB,EAAA,IAClB87B,EAAAR,EAAA/5B,QAGAq6B,GAQAvN,EAAA+B,iBAAA,SAAAjoB,EAAAg0B,GACA,MAAAh0B,GACA,+GAEAkmB,EAAAiN,WAAAnzB,GAAA,KAAmDg0B,GAAA,gBACnD,GAQA,IAAAC,GAAA,SAAA3S,GACA,MAAAA,GAAA,OAAAA,IAYA4E,GAAAgO,WAAA,SAAAT,EAAAr6B,EAAA+6B,GACA,SAAAV,GACA,UAAAA,GACA,YAAAA,GACA,cAAAA,GACA,SAAAA,IAEAA,EAAA,cAGA,IAAAW,GAAAzB,EAAA7N,UAAA1rB,GACAi7B,EAAAF,EAAA,SACA/tB,EAAAguB,EAAA,MAAAC,EAAA,cACAC,EAAAF,EAAA,MAAAC,EAAA,aACA5D,EAAA2D,EAAA,MAAAC,EAAA,UACA10B,EAAAy0B,EAAA,MAAAC,EAAA,WACA5tB,EAAA2tB,EAAA,MAAAC,EAAA,aACA9D,EAAA6D,EAAA,MAAAC,EAAA,YAeA,OAbAZ,KAAA/V,QAAA,KAAAuW,EAAAK,IACA1oB,cACA8R,QAAA,OAAAtX,GACAsX,QAAA,KAAAtX,EAAA,KACAsX,QAAA,KAAAuW,EAAAxD,IACA/S,QAAA,IAAA+S,GACA/S,QAAA,KAAAuW,EAAAt0B,IACA+d,QAAA,IAAA/d,GACA+d,QAAA,KAAAuW,EAAAxtB,IACAiX,QAAA,IAAAjX,GACAiX,QAAA,KAAAuW,EAAA1D,IACA7S,QAAA,IAAA6S,IAUArK,EAAAqO,aAAA,SAAAjT,GACA,MAAAA,KAAA2R,OAAA,GAAAnV,cAAAwD,EAAAkT,OAAA,GAAAlT,GAGA4E,EAAAuO,aAAA7B,EAAA6B,aAEA79B,EAAAC,QAAAqvB,GXq4KM,SAAUtvB,EAAQC,EAAS+I,GY/hLjC,QAAA80B,GAAAzhB,GACA5P,EAAAnH,OACA,qCAAA+iB,KAAAhM,GACA,kBAAAA,EAAA,aAmDA,QAAA0hB,GAAAx6B,EAAAmU,GACA,GAAArT,GAAAoI,EAAArH,MAAAb,UAAA,EACA,OAAAI,MAAA3B,WAAAF,UAAA4U,GAAAlT,MAAAjB,EAAAc,GAGA,QAAA25B,GAAAz6B,EAAAmU,EAAArT,GACA,MAAAM,MAAA3B,WAAAF,UAAA4U,GAAAlT,MAAAjB,EAAAc,GAhHA,GAAAoI,GAAAzD,EAAA,GAEAtG,KAGAu7B,EAAA,gCAQAv7B,GAAAmD,IAAA,SAAAq4B,EAAAl0B,EAAAxH,GACA,MAAA07B,GARA,UAQAl0B,GAAAxH,GAQAE,EAAA0E,IAAA,SAAA82B,EAAAl0B,GACA,MAAAk0B,GAjBA,UAiBAl0B,IAQAtH,EAAAy7B,OAAA,SAAAD,EAAAl0B,GACA,MAAAk0B,GAAAh9B,eA1BA,UA0BA8I,GAOA,IAAA+P,GAAArX,EAAAqX,eAAA,SAAAsC,GACA,GAAA+hB,IAAmBzjB,KAAA,GAAAC,IAAA,GAMnB,OALAyB,KACAA,IAAAzC,MAtCA,KAuCAwkB,EAAAzjB,KAAA0B,EAAA,OACA+hB,EAAAxjB,IAAAyB,EAAA,QAEA+hB,EAgBA17B,GAAAo5B,kBAAA,SAAAuC,EAAAC,GAEAD,EAAAE,aAAAF,EACAA,EAAAx8B,OAAA,SAAA28B,GAEAtmB,SACAzL,EAAArJ,KAAAk7B,EAAA,SAAAzpB,GACA2pB,EAAA3pB,IACAsD,QAAAC,KACA,WAAAvD,EAAA,2BACA2pB,EAAA15B,KAAA,OAAA05B,EAAA15B,KAAA,UAMA,IAAA9B,GAAA2B,KACA85B,EAAA,WACAD,EAAAD,aAIAC,EAAAD,aAAA/5B,MAAAG,KAAAJ,WAHAvB,EAAAwB,MAAAG,KAAAJ,WAeA,OARAkI,GAAA5K,OAAA48B,EAAA37B,UAAA07B,GAEAC,EAAA58B,OAAA8C,KAAA9C,OACA48B,EAAAV,YACAU,EAAAT,aACAvxB,EAAAhK,SAAAg8B,EAAA95B,MACA85B,EAAAz7B,aAEAy7B,IAyBA/7B,EAAAg8B,sBAAA,SAAAC,EAAA32B,GAoGA,QAAA42B,GAAAviB,GACA,GAAAwiB,GAAAzgB,EAAA/B,EAAA1B,KAKA,OAJAkkB,MAAAZ,KACAY,EAAAzgB,EAAA/B,EAAA1B,SACAkkB,EAAAZ,IAAA,GAEAY,EAzGA72B,OAUA,IAAAoW,KAkGA,IAhGAugB,EAAAG,cAAA,SAAAtiB,EAAAH,GACA,GAAAA,EAIA,GAHAyhB,EAAAzhB,GACAA,EAAAtC,EAAAsC,GAEAA,EAAAzB,KAQA,GAAAyB,EAAAzB,MAAAqjB,EAAA,CACA,GAAAY,GAAAD,EAAAviB,EACAwiB,GAAAxiB,EAAAzB,KAAA4B,OATAtE,UACAkG,EAAA/B,EAAA1B,OACAxC,QAAAC,KAAAiE,EAAA1B,KAAA,YAGAyD,EAAA/B,EAAA1B,MAAA6B,CAOA,OAAAA,IAGAmiB,EAAAjiB,SAAA,SAAAqiB,EAAAtmB,EAAAumB,GACA,GAAAxiB,GAAA4B,EAAA2gB,EAMA,IAJAviB,KAAAyhB,KACAzhB,EAAA/D,EAAA+D,EAAA/D,GAAA,MAGAumB,IAAAxiB,EACA,SAAA/W,OACAgT,EAEA,aAAAsmB,EAAA,KAAAtmB,GAAA,kCADAsmB,EAAA,6BAKA,OAAAviB,IAGAmiB,EAAAM,qBAAA,SAAA5iB,GACAA,EAAAtC,EAAAsC,EAEA,IAAAjc,MACAiD,EAAA+a,EAAA/B,EAAA1B,KAWA,OATAtX,MAAA46B,GACAxxB,EAAArJ,KAAAC,EAAA,SAAA67B,EAAAp6B,GACAA,IAAAm5B,GAAA79B,EAAAwD,KAAAs7B,KAIA9+B,EAAAwD,KAAAP,GAGAjD,GAGAu+B,EAAAQ,SAAA,SAAA9iB,GAGA,MADAA,GAAAtC,EAAAsC,KACA+B,EAAA/B,EAAA1B,OAMAgkB,EAAAS,qBAAA,WACA,GAAAC,KAIA,OAHA5yB,GAAArJ,KAAAgb,EAAA,SAAA/a,EAAAyB,GACAu6B,EAAAz7B,KAAAkB,KAEAu6B,GAQAV,EAAAW,YAAA,SAAAjjB,GACAA,EAAAtC,EAAAsC,EACA,IAAAhZ,GAAA+a,EAAA/B,EAAA1B,KACA,OAAAtX,MAAA46B,IAGAU,EAAA5kB,iBAWA/R,EAAAu3B,mBAAA,CACA,GAAAC,GAAAb,EAAA98B,MACA29B,KACAb,EAAA98B,OAAA,SAAA28B,GACA,GAAAC,GAAAe,EAAAj/B,KAAAoE,KAAA65B,EACA,OAAAG,GAAAG,cAAAL,EAAAD,EAAA15B,QAKA,MAAA65B,IAMAj8B,EAAAi5B,YAAA,SAAAt4B,EAAAu4B,KAkBA57B,EAAAC,QAAAyC,GZ4lLM,SAAU1C,EAAQC,EAAS+I,GAEjC,Yaz1LA,SAAA+D,GAAAuC,EAAAE,EAAAL,EAAAC,GAEAD,EAAA,IACAG,GAAAH,EACAA,MAEAC,EAAA,IACAI,GAAAJ,EACAA,MAMAzK,KAAA2K,IAIA3K,KAAA6K,IAIA7K,KAAAwK,QAIAxK,KAAAyK,SAnCA,GAAAqwB,GAAAz2B,EAAA,IACA4D,EAAA5D,EAAA,IAEA02B,EAAAD,EAAA9vB,eACAvC,EAAAH,KAAAI,IACAH,EAAAD,KAAAE,GAiCAJ,GAAAjK,WAEAlC,YAAAmM,EAKA4yB,MAAA,SAAAC,GACA,GAAAtwB,GAAAlC,EAAAwyB,EAAAtwB,EAAA3K,KAAA2K,GACAE,EAAApC,EAAAwyB,EAAApwB,EAAA7K,KAAA6K,EAEA7K,MAAAwK,MAAAjC,EACA0yB,EAAAtwB,EAAAswB,EAAAzwB,MACAxK,KAAA2K,EAAA3K,KAAAwK,OACAG,EACA3K,KAAAyK,OAAAlC,EACA0yB,EAAApwB,EAAAowB,EAAAxwB,OACAzK,KAAA6K,EAAA7K,KAAAyK,QACAI,EACA7K,KAAA2K,IACA3K,KAAA6K,KAOAG,eAAA,WACA,GAAAkwB,MACAC,KACAC,KACAC,IACA,iBAAAnwB,GAIA,GAAAA,EAAA,CAGAgwB,EAAA,GAAAE,EAAA,GAAAp7B,KAAA2K,EACAuwB,EAAA,GAAAG,EAAA,GAAAr7B,KAAA6K,EACAswB,EAAA,GAAAE,EAAA,GAAAr7B,KAAA2K,EAAA3K,KAAAwK,MACA2wB,EAAA,GAAAC,EAAA,GAAAp7B,KAAA6K,EAAA7K,KAAAyK,OAEAswB,EAAAG,IAAAhwB,GACA6vB,EAAAI,IAAAjwB,GACA6vB,EAAAK,IAAAlwB,GACA6vB,EAAAM,IAAAnwB,GAEAlL,KAAA2K,EAAAlC,EAAAyyB,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAr7B,KAAA6K,EAAApC,EAAAyyB,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GACA,IAAAC,GAAA/yB,EAAA2yB,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAE,EAAAhzB,EAAA2yB,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GACAr7B,MAAAwK,MAAA8wB,EAAAt7B,KAAA2K,EACA3K,KAAAyK,OAAA8wB,EAAAv7B,KAAA6K,OASAM,mBAAA,SAAA0F,GACA,GAAAD,GAAA5Q,KACAw7B,EAAA3qB,EAAArG,MAAAoG,EAAApG,MACAixB,EAAA5qB,EAAApG,OAAAmG,EAAAnG,OAEAS,EAAAjD,EAAA0X,QAOA,OAJA1X,GAAAyzB,UAAAxwB,MAAA0F,EAAAjG,GAAAiG,EAAA/F,IACA5C,EAAA8pB,MAAA7mB,KAAAswB,EAAAC,IACAxzB,EAAAyzB,UAAAxwB,KAAA2F,EAAAlG,EAAAkG,EAAAhG,IAEAK,GAOAywB,UAAA,SAAA9qB,GACA,IAAAA,EACA,QAGAA,aAAAzI,KAEAyI,EAAAzI,EAAAuX,OAAA9O,GAGA,IAAAD,GAAA5Q,KACA47B,EAAAhrB,EAAAjG,EACAkxB,EAAAjrB,EAAAjG,EAAAiG,EAAApG,MACAsxB,EAAAlrB,EAAA/F,EACAkxB,EAAAnrB,EAAA/F,EAAA+F,EAAAnG,OAEAuxB,EAAAnrB,EAAAlG,EACAsxB,EAAAprB,EAAAlG,EAAAkG,EAAArG,MACA0xB,EAAArrB,EAAAhG,EACAsxB,EAAAtrB,EAAAhG,EAAAgG,EAAApG,MAEA,SAAAoxB,EAAAG,GAAAC,EAAAL,GAAAG,EAAAG,GAAAC,EAAAL,IAGAzI,QAAA,SAAA1oB,EAAAE,GACA,GAAAZ,GAAAjK,IACA,OAAA2K,IAAAV,EAAAU,GACAA,GAAAV,EAAAU,EAAAV,EAAAO,OACAK,GAAAZ,EAAAY,GACAA,GAAAZ,EAAAY,EAAAZ,EAAAQ,QAMAlP,MAAA,WACA,UAAA6M,GAAApI,KAAA2K,EAAA3K,KAAA6K,EAAA7K,KAAAwK,MAAAxK,KAAAyK,SAMAuoB,KAAA,SAAAiI,GACAj7B,KAAA2K,EAAAswB,EAAAtwB,EACA3K,KAAA6K,EAAAowB,EAAApwB,EACA7K,KAAAwK,MAAAywB,EAAAzwB,MACAxK,KAAAyK,OAAAwwB,EAAAxwB,QAGA2xB,MAAA,WACA,OACAzxB,EAAA3K,KAAA2K,EACAE,EAAA7K,KAAA6K,EACAL,MAAAxK,KAAAwK,MACAC,OAAAzK,KAAAyK,UAaArC,EAAAuX,OAAA,SAAA1V,GACA,UAAA7B,GAAA6B,EAAAU,EAAAV,EAAAY,EAAAZ,EAAAO,MAAAP,EAAAQ,SAGApP,EAAAC,QAAA8M,Gb82LM,SAAU/M,EAAQC,EAAS+I,Gch4LjC,QAAAg4B,GAAA3kB,GACA,GAAA4kB,KAKA,OAJAx0B,GAAArJ,KAAAod,EAAAye,qBAAA5iB,GAAA,SAAAG,GACA0kB,EAAA18B,MAAAy8B,EAAAzkB,EAAA1Z,UAAA+jB,oBAGApa,EAAA/I,IAAAu9B,EAAA,SAAAn8B,GACA,MAAAs2B,GAAArhB,eAAAjV,GAAA6V,OAnLA,GAAA+O,GAAA1gB,EAAA,IACAyD,EAAAzD,EAAA,GACAk4B,EAAA/5B,MAAArE,UAAAc,KACAu9B,EAAAn4B,EAAA,IACAoyB,EAAApyB,EAAA,IACA6F,EAAA7F,EAAA,IASAwX,EAAAkJ,EAAA7nB,QAEAiD,KAAA,YAMA6Q,GAAA,GAKA3L,KAAA,GAMAwO,SAAA,GAMAC,QAAA,GAMAqE,eAAA,EAMAskB,cAAA,KAMAjvB,QAAA,KAQAkvB,mBAMAC,IAAA,KAQAC,WAAA,KAEAhD,aAAA,SAAAtd,EAAA8Z,EAAA5oB,EAAAqvB,GACA9X,EAAAnpB,KAAAoE,KAAAsc,EAAA8Z,EAAA5oB,EAAAqvB,GAEA78B,KAAA28B,IAAAH,EAAAM,OAAA,mBAIAxrB,KAAA,SAAAgL,EAAA8Z,EAAA5oB,EAAAqvB,GACA78B,KAAA+8B,qBAAAzgB,EAAA9O,IAGAuvB,qBAAA,SAAAzgB,EAAA9O,GACA,GAAAovB,GAAA58B,KAAA48B,WACAI,EAAAJ,EACA1yB,EAAA+yB,gBAAA3gB,MAEA4gB,EAAA1vB,EAAA2vB,UACAr1B,GAAAtL,MAAA8f,EAAA4gB,EAAAz6B,IAAAzC,KAAA6T,WACA/L,EAAAtL,MAAA8f,EAAAtc,KAAAo9B,oBAEAR,GACA1yB,EAAAmzB,iBAAA/gB,EAAA0gB,EAAAJ,IAIAlG,YAAA,SAAApa,EAAAugB,GACA/0B,EAAAtL,MAAAwD,KAAAsc,UAAA,EAEA,IAAAsgB,GAAA58B,KAAA48B,UACAA,IACA1yB,EAAAmzB,iBAAAr9B,KAAAsc,SAAAsgB,IAKAU,cAAA,SAAAC,EAAAC,KAEAJ,iBAAA,WACA,IAAA3G,EAAA+C,OAAAx5B,KAAA,oBAGA,IAFA,GAAAy9B,MACAC,EAAA19B,KAAA/D,YACAyhC,GAAA,CACA,GAAApxB,GAAAoxB,EAAAv/B,UAAAs+B,aACAnwB,IAAAmxB,EAAAx+B,KAAAqN,GACAoxB,IAAAr/B,WAIA,OADAo+B,MACA5gC,EAAA4hC,EAAA1hC,OAAA,EAAgDF,GAAA,EAAQA,IACxD4gC,EAAA30B,EAAAtL,MAAAigC,EAAAgB,EAAA5hC,IAAA,EAEA46B,GAAAv1B,IAAAlB,KAAA,kBAAAy8B,GAEA,MAAAhG,GAAAh0B,IAAAzC,KAAA,oBAGA29B,uBAAA,SAAA9pB,GACA,MAAA7T,MAAAwN,QAAA8hB,iBACAzb,WACAS,MAAAtU,KAAAyC,IAAAoR,EAAA,YACA7C,GAAAhR,KAAAyC,IAAAoR,EAAA,aAuBA4iB,GAAAsD,sBACAle,GAAyB+e,oBAAA,IAEzB4B,EAAAoB,uBAAA/hB,GAGA2gB,EAAAqB,wBAAAhiB,EAAAwgB,GAaAv0B,EAAAxJ,MAAAud,EAAAxX,EAAA,MAEAhJ,EAAAC,QAAAugB,GdyjMQ,CAEF,SAAUxgB,EAAQyiC,EAAqBz5B,GAE7C,YejtMA,SAAA05B,GAAAC,GACAC,IAEAD,EAAAE,aAAAD,EAEAA,EAAAE,KAAA,YAAAH,GAEAC,EAAAzxB,GAAA,gCAAA4xB,GACAJ,EAAAK,aAAAD,KAGAJ,EAAAM,UAAA,SAAAC,EAAAC,GACAP,EAAAE,KAAA,gBAAAI,EAAAC,MA0BA,QAAAC,GAAA//B,EAAAggC,GACAr8B,OAAAs8B,KAAAjgC,GAAAG,QAAA,SAAAvC,GAA2C,MAAAoiC,GAAAhgC,EAAApC,QAG3C,QAAAK,GAAA+B,GACA,cAAAA,GAAA,gBAAAA,GAGA,QAAAkgC,GAAA3Y,GACA,MAAAA,IAAA,kBAAAA,GAAA4Y,KAGA,QAAAl+B,GAAAC,EAAAk+B,GACA,IAAAl+B,EAAmB,SAAAE,OAAA,UAAAg+B,GA0HnB,QAAA9pB,GAAA+pB,EAAAC,GAKA,GAHAD,EAAA/pB,OAAAgqB,GAGAA,EAAAC,QACA,OAAA3iC,KAAA0iC,GAAAC,QAAA,CACA,IAAAF,EAAAG,SAAA5iC,GAKA,WAJAkX,SAAAC,KACA,sCAAAnX,EAAA,8CAKA0Y,GAAA+pB,EAAAG,SAAA5iC,GAAA0iC,EAAAC,QAAA3iC,KAgLA,QAAA6iC,GAAAnB,EAAAoB,GACApB,EAAAqB,SAAAh9B,OAAAsd,OAAA,MACAqe,EAAAsB,WAAAj9B,OAAAsd,OAAA,MACAqe,EAAAuB,gBAAAl9B,OAAAsd,OAAA,MACAqe,EAAAwB,qBAAAn9B,OAAAsd,OAAA,KACA,IAAA6e,GAAAR,EAAAQ,KAEAiB,GAAAzB,EAAAQ,KAAAR,EAAA0B,SAAAC,MAAA,GAEAC,EAAA5B,EAAAQ,EAAAY,GAGA,QAAAQ,GAAA5B,EAAAQ,EAAAY,GACA,GAAAS,GAAA7B,EAAA8B,GAGA9B,GAAA+B,UACA,IAAAC,GAAAhC,EAAAuB,gBACAU,IACAxB,GAAAuB,EAAA,SAAAtB,EAAApiC,GAEA2jC,EAAA3jC,GAAA,WAAiC,MAAAoiC,GAAAV,IACjC37B,OAAA69B,eAAAlC,EAAA+B,QAAAzjC,GACAmG,IAAA,WAAwB,MAAAu7B,GAAA8B,IAAAxjC,IACxB6jC,YAAA,KAOA,IAAA1rB,GAAA2rB,EAAAC,OAAA5rB,MACA2rB,GAAAC,OAAA5rB,QAAA,EACAupB,EAAA8B,IAAA,GAAAM,IACA5hC,MACA8hC,QAAA9B,GAEAyB,aAEAG,EAAAC,OAAA5rB,SAGAupB,EAAAuC,QACAC,EAAAxC,GAGA6B,IACAT,GAGApB,EAAAyC,YAAA,WACAZ,EAAAa,MAAAJ,QAAA,OAGAF,EAAAO,SAAA,WAA8B,MAAAd,GAAAe,cAI9B,QAAAnB,GAAAzB,EAAA6C,EAAA12B,EAAA9O,EAAA+jC,GACA,GAAA0B,IAAA32B,EAAApO,OACAglC,EAAA/C,EAAA0B,SAAAsB,aAAA72B,EAQA,IALA9O,EAAA4lC,aACAjD,EAAAwB,qBAAAuB,GAAA1lC,IAIAylC,IAAA1B,EAAA,CACA,GAAA8B,GAAAC,EAAAN,EAAA12B,EAAA1J,MAAA,OACA2gC,EAAAj3B,IAAApO,OAAA,EACAiiC,GAAAyC,YAAA,WACAL,EAAAl/B,IAAAggC,EAAAE,EAAA/lC,EAAAmjC,SAIA,GAAA6C,GAAAhmC,EAAAuD,QAAA0iC,EAAAtD,EAAA+C,EAAA52B,EAEA9O,GAAAkmC,gBAAA,SAAAhD,EAAAjiC,GAEAklC,EAAAxD,EADA+C,EAAAzkC,EACAiiC,EAAA8C,KAGAhmC,EAAAomC,cAAA,SAAA3rB,EAAAxZ,GAEAmnB,EAAAua,EADA+C,EAAAzkC,EACAwZ,EAAAurB,KAGAhmC,EAAAqmC,cAAA,SAAAC,EAAArlC,GAEAslC,EAAA5D,EADA+C,EAAAzkC,EACAqlC,EAAAN,KAGAhmC,EAAAwmC,aAAA,SAAA17B,EAAA7J,GACAmjC,EAAAzB,EAAA6C,EAAA12B,EAAArK,OAAAxD,GAAA6J,EAAAi5B,KAQA,QAAAkC,GAAAtD,EAAA+C,EAAA52B,GACA,GAAA23B,GAAA,KAAAf,EAEAM,GACAU,SAAAD,EAAA9D,EAAA+D,SAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAxiC,GAAAyiC,EAAAH,EAAAC,EAAAC,GACAtuB,EAAAlU,EAAAkU,QACAvQ,EAAA3D,EAAA2D,QACAlD,EAAAT,EAAAS,IAEA,OAAAkD,MAAAs8B,OACAx/B,EAAA4gC,EAAA5gC,EACA69B,EAAAqB,SAAAl/B,IAMA69B,EAAA+D,SAAA5hC,EAAAyT,OALAJ,SAAA4uB,MAAA,qCAAA1iC,EAAA,uBAAAS,IAQAkiC,OAAAP,EAAA9D,EAAAqE,OAAA,SAAAL,EAAAC,EAAAC,GACA,GAAAxiC,GAAAyiC,EAAAH,EAAAC,EAAAC,GACAtuB,EAAAlU,EAAAkU,QACAvQ,EAAA3D,EAAA2D,QACAlD,EAAAT,EAAAS,IAEA,MAAAkD,KAAAs8B,OACAx/B,EAAA4gC,EAAA5gC,EACA69B,EAAAsB,WAAAn/B,KAEA,WADAqT,SAAA4uB,MAAA,uCAAA1iC,EAAA,uBAAAS,EAKA69B,GAAAqE,OAAAliC,EAAAyT,EAAAvQ,IAiBA,OAXAhB,QAAAigC,iBAAAjB,GACAtB,SACAt9B,IAAAq/B,EACA,WAAuB,MAAA9D,GAAA+B,SACvB,WAAuB,MAAAwC,GAAAvE,EAAA+C,KAEvBvC,OACA/7B,IAAA,WAAwB,MAAA0+B,GAAAnD,EAAAQ,MAAAr0B,OAIxBk3B,EAGA,QAAAkB,GAAAvE,EAAA+C,GACA,GAAAyB,MAEAC,EAAA1B,EAAAhlC,MAiBA,OAhBAsG,QAAAs8B,KAAAX,EAAA+B,SAAAlhC,QAAA,SAAAsB,GAEA,GAAAA,EAAAM,MAAA,EAAAgiC,KAAA1B,EAAA,CAGA,GAAA2B,GAAAviC,EAAAM,MAAAgiC,EAKApgC,QAAA69B,eAAAsC,EAAAE,GACAjgC,IAAA,WAAwB,MAAAu7B,GAAA+B,QAAA5/B,IACxBggC,YAAA,OAIAqC,EAGA,QAAAhB,GAAAxD,EAAA79B,EAAAiQ,EAAAixB,IACArD,EAAAsB,WAAAn/B,KAAA69B,EAAAsB,WAAAn/B,QACAlB,KAAA,SAAA2U,GACAxD,EAAAixB,EAAA7C,MAAA5qB,KAIA,QAAA6P,GAAAua,EAAA79B,EAAAiQ,EAAAixB,IACArD,EAAAqB,SAAAl/B,KAAA69B,EAAAqB,SAAAl/B,QACAlB,KAAA,SAAA2U,EAAAjV,GACA,GAAAgkC,GAAAvyB,GACA2xB,SAAAV,EAAAU,SACAM,OAAAhB,EAAAgB,OACAtC,QAAAsB,EAAAtB,QACAvB,MAAA6C,EAAA7C,MACAoE,YAAA5E,EAAA+B,QACAc,UAAA7C,EAAAQ,OACK5qB,EAAAjV,EAIL,OAHAigC,GAAA+D,KACAA,EAAAE,QAAAC,QAAAH,IAEA3E,EAAAE,aACAyE,EAAAI,MAAA,SAAAC,GAEA,KADAhF,GAAAE,aAAAC,KAAA,aAAA6E,GACAA,IAGAL,IAKA,QAAAf,GAAA5D,EAAA79B,EAAA8iC,EAAA5B,GACA,GAAArD,EAAAuB,gBAAAp/B,GAEA,WADAqT,SAAA4uB,MAAA,gCAAAjiC,EAGA69B,GAAAuB,gBAAAp/B,GAAA,SAAA69B,GACA,MAAAiF,GACA5B,EAAA7C,MACA6C,EAAAtB,QACA/B,EAAAQ,MACAR,EAAA+B,UAKA,QAAAS,GAAAxC,GACAA,EAAA8B,IAAAoD,OAAA,WAAgC,MAAAljC,MAAA0gC,MAAAJ,SAA4B,WAC5D3/B,EAAAq9B,EAAAmF,YAAA,+DACMC,MAAA,EAAAC,MAAA,IAGN,QAAAlC,GAAA3C,EAAAr0B,GACA,MAAAA,GAAApO,OACAoO,EAAAjL,OAAA,SAAAs/B,EAAAliC,GAAyC,MAAAkiC,GAAAliC,IAAqBkiC,GAC9DA,EAGA,QAAA2D,GAAAhiC,EAAAyT,EAAAvQ,GASA,MARA1G,GAAAwD,aACAkD,EAAAuQ,EACAA,EAAAzT,EACAA,UAGAQ,EAAA,gBAAAR,GAAA,+CAAAA,GAAA,MAEUA,OAAAyT,UAAAvQ,WAGV,QAAAigC,GAAAC,GACA,GAAAnD,EAIA,WAHA5sB,SAAA4uB,MACA,sEAIAhC,GAAAmD,EACAC,EAAApD,GAkGA,QAAAqD,GAAA1kC,GACA,MAAAyD,OAAA1F,QAAAiC,GACAA,MAAA,SAAAzC,GAA8B,OAAUA,MAAA2pB,IAAA3pB,KACxC+F,OAAAs8B,KAAA5/B,OAAA,SAAAzC,GAA2C,OAAUA,MAAA2pB,IAAAlnB,EAAAzC,MAGrD,QAAAonC,GAAAhF,GACA,gBAAAqC,EAAAhiC,GAOA,MANA,gBAAAgiC,IACAhiC,EAAAgiC,EACAA,EAAA,IACK,MAAAA,EAAArJ,OAAAqJ,EAAAhlC,OAAA,KACLglC,GAAA,KAEArC,EAAAqC,EAAAhiC,IAIA,QAAA4kC,GAAA3F,EAAA7Y,EAAA4b,GACA,GAAA1lC,GAAA2iC,EAAAwB,qBAAAuB,EAIA,OAHA1lC,IACAmY,QAAA4uB,MAAA,wCAAAjd,EAAA,OAAA4b,GAEA1lC,Ef6+K+BgJ,EAAoB6wB,EAAE4I,EAAqB,IAAK,WAAa,MAAO8F,KehwMnGv/B,EAAA6wB,EAAA4I,EAAA,qBAAA+F;;;;;AAKA,GAAAL,GAAA,SAAApD,GAwBA,QAAA0D,KACA,GAAAzgC,GAAArD,KAAA+jC,QAEA1gC,GAAA26B,MACAh+B,KAAAgkC,OAAA3gC,EAAA26B,MACK36B,EAAAO,QAAAP,EAAAO,OAAAogC,SACLhkC,KAAAgkC,OAAA3gC,EAAAO,OAAAogC,QA3BA,GAFApb,OAAAwX,EAAAne,QAAAhN,MAAA,UAEA,GACA,GAAAgvB,GAAA7D,EAAAC,OAAA6D,gBAAAvmC,QAAA,UACAyiC,GAAA9hC,MAAA2lC,GAA0B3yB,KAAAwyB,IAAqB3/B,aAAA2/B,QAC5C,CAGH,GAAAK,GAAA/D,EAAAjiC,UAAAgmC,KACA/D,GAAAjiC,UAAAgmC,MAAA,SAAA9gC,OACA,KAAAA,UAEAA,EAAAiO,KAAAjO,EAAAiO,MACAwyB,GAAAhkC,OAAAuD,EAAAiO,MACAwyB,EACAK,EAAAvoC,KAAAoE,KAAAqD,MAmBA46B,EACA,mBAAAviB,SACAA,OAAA0oB,6BAwDAC,EAAA,SAAAC,EAAAC,GACAvkC,KAAAukC,UACAvkC,KAAAwkC,UAAAniC,OAAAsd,OAAA,MACA3f,KAAAykC,WAAAH,CACA,IAAAI,GAAAJ,EAAA9F,KACAx+B,MAAAw+B,OAAA,kBAAAkG,eAGAC,GAA4B1D,cAE5B0D,GAAA1D,WAAAx+B,IAAA,WACA,QAAAzC,KAAAykC,WAAAxD,YAGAoD,EAAAlmC,UAAAymC,SAAA,SAAAtoC,EAAAjB,GACA2E,KAAAwkC,UAAAloC,GAAAjB,GAGAgpC,EAAAlmC,UAAA0mC,YAAA,SAAAvoC,SACA0D,MAAAwkC,UAAAloC,IAGA+nC,EAAAlmC,UAAA+gC,SAAA,SAAA5iC,GACA,MAAA0D,MAAAwkC,UAAAloC,IAGA+nC,EAAAlmC,UAAA6W,OAAA,SAAAsvB,GACAtkC,KAAAykC,WAAAxD,WAAAqD,EAAArD,WACAqD,EAAAzvB,UACA7U,KAAAykC,WAAA5vB,QAAAyvB,EAAAzvB,SAEAyvB,EAAAQ,YACA9kC,KAAAykC,WAAAK,UAAAR,EAAAQ,WAEAR,EAAAvE,UACA//B,KAAAykC,WAAA1E,QAAAuE,EAAAvE,UAIAsE,EAAAlmC,UAAA0jC,aAAA,SAAAnD,GACAD,EAAAz+B,KAAAwkC,UAAA9F,IAGA2F,EAAAlmC,UAAAujC,cAAA,SAAAhD,GACA1+B,KAAAykC,WAAA1E,SACAtB,EAAAz+B,KAAAykC,WAAA1E,QAAArB,IAIA2F,EAAAlmC,UAAAsjC,cAAA,SAAA/C,GACA1+B,KAAAykC,WAAA5vB,SACA4pB,EAAAz+B,KAAAykC,WAAA5vB,QAAA6pB,IAIA2F,EAAAlmC,UAAAojC,gBAAA,SAAA7C,GACA1+B,KAAAykC,WAAAK,WACArG,EAAAz+B,KAAAykC,WAAAK,UAAApG,IAIAr8B,OAAAigC,iBAAA+B,EAAAlmC,UAAAwmC,EAEA,IAAAI,GAAA,SAAAC,GACA,GAAAC,GAAAjlC,IAGAA,MAAA2/B,KAAA,GAAA0E,GAAAW,GAAA,GAGAA,EAAA/F,SACAR,EAAAuG,EAAA/F,QAAA,SAAAqF,EAAAhoC,GACA2oC,EAAAphB,UAAAvnB,GAAAgoC,GAAA,KAKAS,GAAA5mC,UAAAsE,IAAA,SAAA0H,GACA,MAAAA,GAAAjL,OAAA,SAAA7D,EAAAiB,GACA,MAAAjB,GAAA6jC,SAAA5iC,IACG0D,KAAA2/B,OAGHoF,EAAA5mC,UAAA6iC,aAAA,SAAA72B,GACA,GAAA9O,GAAA2E,KAAA2/B,IACA,OAAAx1B,GAAAjL,OAAA,SAAA6hC,EAAAzkC,GAEA,MADAjB,KAAA6jC,SAAA5iC,GACAykC,GAAA1lC,EAAA4lC,WAAA3kC,EAAA,SACG,KAGHyoC,EAAA5mC,UAAA6W,OAAA,SAAAgwB,GACAhwB,EAAAhV,KAAA2/B,KAAAqF,IAGAD,EAAA5mC,UAAA0lB,SAAA,SAAA1Z,EAAAm6B,EAAAC,GACA,GAAAU,GAAAjlC,SACA,KAAAukC,OAAA,EAEA,IAAA3gC,GAAA5D,KAAAyC,IAAA0H,EAAA1J,MAAA,OACAu+B,EAAA,GAAAqF,GAAAC,EAAAC,EACA3gC,GAAAghC,SAAAz6B,IAAApO,OAAA,GAAAijC,GAGAsF,EAAArF,SACAR,EAAA6F,EAAArF,QAAA,SAAAiG,EAAA5oC,GACA2oC,EAAAphB,SAAA1Z,EAAArK,OAAAxD,GAAA4oC,EAAAX,MAKAQ,EAAA5mC,UAAAgnC,WAAA,SAAAh7B,GACA,GAAAvG,GAAA5D,KAAAyC,IAAA0H,EAAA1J,MAAA,OACAnE,EAAA6N,IAAApO,OAAA,EACA6H,GAAAs7B,SAAA5iC,GAAAioC,SAEA3gC,EAAAihC,YAAAvoC,GAsBA,IAAA8jC,GAEAgF,EAAA,SAAA/hC,GACA,GAAA4hC,GAAAjlC,SACA,KAAAqD,UAEA1C,EAAAy/B,EAAA,6DACAz/B,EAAA,mBAAAkiC,SAAA,oDAEA,IAAArE,GAAAn7B,EAAAm7B,UAA4B,KAAAA,SAC5B,IAAA6G,GAAAhiC,EAAAgiC,YAAgC,KAAAA,SAChC,IAAA9E,GAAAl9B,EAAAk9B,WAA8B,KAAAA,OAAA,GAG9BvgC,KAAAmjC,aAAA,EACAnjC,KAAAq/B,SAAAh9B,OAAAsd,OAAA,MACA3f,KAAAs/B,WAAAj9B,OAAAsd,OAAA,MACA3f,KAAAu/B,gBAAAl9B,OAAAsd,OAAA,MACA3f,KAAA0/B,SAAA,GAAAqF,GAAA1hC,GACArD,KAAAw/B,qBAAAn9B,OAAAsd,OAAA,MACA3f,KAAAslC,gBACAtlC,KAAAulC,WAAA,GAAAnF,EAGA,IAAApC,GAAAh+B,KACAwlC,EAAAxlC,KACA+hC,EAAAyD,EAAAzD,SACAM,EAAAmD,EAAAnD,MACAriC,MAAA+hC,SAAA,SAAA5hC,EAAAyT,GACA,MAAAmuB,GAAAnmC,KAAAoiC,EAAA79B,EAAAyT,IAEA5T,KAAAqiC,OAAA,SAAAliC,EAAAyT,EAAAvQ,GACA,MAAAg/B,GAAAzmC,KAAAoiC,EAAA79B,EAAAyT,EAAAvQ,IAIArD,KAAAugC,SAKAd,EAAAz/B,KAAAw+B,KAAAx+B,KAAA0/B,SAAAC,MAIAC,EAAA5/B,KAAAw+B,GAGA6G,EAAAvlC,OAAAi+B,GAAAl/B,QAAA,SAAA4mC,GAA2D,MAAAA,GAAAR,MAG3DS,GAA0BlH,SAE1BkH,GAAAlH,MAAA/7B,IAAA,WACA,MAAAzC,MAAA8/B,IAAAY,MAAAJ,SAGAoF,EAAAlH,MAAAt9B,IAAA,SAAAupB,GACA9pB,GAAA,gEAGAykC,EAAAjnC,UAAAkkC,OAAA,SAAAL,EAAAC,EAAAC,GACA,GAAA+C,GAAAjlC,KAGAwlC,EAAArD,EAAAH,EAAAC,EAAAC,GACA/hC,EAAAqlC,EAAArlC,KACAyT,EAAA4xB,EAAA5xB,QACAvQ,EAAAmiC,EAAAniC,QAEAk7B,GAAkBp+B,OAAAyT,WAClB+xB,EAAA3lC,KAAAs/B,WAAAn/B,EACA,KAAAwlC,EAEA,WADAnyB,SAAA4uB,MAAA,iCAAAjiC,EAGAH,MAAAygC,YAAA,WACAkF,EAAA9mC,QAAA,SAAAuR,GACAA,EAAAwD,OAGA5T,KAAAslC,aAAAzmC,QAAA,SAAAoX,GAA4C,MAAAA,GAAAsoB,EAAA0G,EAAAzG,SAE5Cn7B,KAAAoR,QACAjB,QAAAC,KACA,yBAAAtT,EAAA,uFAMAilC,EAAAjnC,UAAA4jC,SAAA,SAAAC,EAAAC,GAEA,GAAAuD,GAAArD,EAAAH,EAAAC,GACA9hC,EAAAqlC,EAAArlC,KACAyT,EAAA4xB,EAAA5xB,QAEA+xB,EAAA3lC,KAAAq/B,SAAAl/B,EACA,OAAAwlC,GAIAA,EAAA5pC,OAAA,EACA8mC,QAAAlc,IAAAgf,EAAA5mC,IAAA,SAAAqR,GAAgD,MAAAA,GAAAwD,MAChD+xB,EAAA,GAAA/xB,OALAJ,SAAA4uB,MAAA,+BAAAjiC,IAQAilC,EAAAjnC,UAAAmgC,UAAA,SAAAI,GACA,GAAAkH,GAAA5lC,KAAAslC,YAIA,OAHAM,GAAAjoC,QAAA+gC,GAAA,GACAkH,EAAA3mC,KAAAy/B,GAEA,WACA,GAAA7iC,GAAA+pC,EAAAjoC,QAAA+gC,EACA7iC,IAAA,GACA+pC,EAAAttB,OAAAzc,EAAA,KAKAupC,EAAAjnC,UAAA0nC,MAAA,SAAAlE,EAAAhjC,EAAA0E,GACA,GAAA4hC,GAAAjlC,IAGA,OADAW,GAAA,kBAAAghC,GAAA,wCACA3hC,KAAAulC,WAAArC,OAAA,WAA6C,MAAAvB,GAAAsD,EAAAzG,MAAAyG,EAAAlF,UAA+CphC,EAAA0E,IAG5F+hC,EAAAjnC,UAAAkgC,aAAA,SAAAG,GACA,GAAAyG,GAAAjlC,IAEAA,MAAAygC,YAAA,WACAwE,EAAAnF,IAAAY,MAAAJ,QAAA9B,KAIA4G,EAAAjnC,UAAA2nC,eAAA,SAAA37B,EAAAm6B,GACA,gBAAAn6B,KAAiCA,OACjCxJ,EAAA6B,MAAA1F,QAAAqN,GAAA,6CACAnK,KAAA0/B,SAAA7b,SAAA1Z,EAAAm6B,GACA7E,EAAAz/B,UAAAw+B,MAAAr0B,EAAAnK,KAAA0/B,SAAAj9B,IAAA0H,IAEAy1B,EAAA5/B,UAAAw+B,QAGA4G,EAAAjnC,UAAA4nC,iBAAA,SAAA57B,GACA,GAAA86B,GAAAjlC,IAEA,iBAAAmK,KAAiCA,OACjCxJ,EAAA6B,MAAA1F,QAAAqN,GAAA,6CACAnK,KAAA0/B,SAAAyF,WAAAh7B,GACAnK,KAAAygC,YAAA,WACA,GAAAS,GAAAC,EAAA8D,EAAAzG,MAAAr0B,EAAA1J,MAAA,MACA2/B,GAAA4F,OAAA9E,EAAA/2B,IAAApO,OAAA,MAEAojC,EAAAn/B,OAGAolC,EAAAjnC,UAAA8nC,UAAA,SAAAC,GACAlmC,KAAA0/B,SAAA1qB,OAAAkxB,GACA/G,EAAAn/B,MAAA,IAGAolC,EAAAjnC,UAAAsiC,YAAA,SAAA/B,GACA,GAAAyH,GAAAnmC,KAAAmjC,WACAnjC,MAAAmjC,aAAA,EACAzE,IACA1+B,KAAAmjC,YAAAgD,GAGA9jC,OAAAigC,iBAAA8C,EAAAjnC,UAAAunC,GAyQA,mBAAAhqB,gBAAA0kB,KACAkD,EAAA5nB,OAAA0kB,IAGA,IAAAgG,GAAA1C,EAAA,SAAA3C,EAAAsF,GACA,GAAA1D,KAuBA,OAtBAc,GAAA4C,GAAAxnC,QAAA,SAAA2mC,GACA,GAAAlpC,GAAAkpC,EAAAlpC,IACA2pB,EAAAuf,EAAAvf,GAEA0c,GAAArmC,GAAA,WACA,GAAAkiC,GAAAx+B,KAAAgkC,OAAAxF,MACAuB,EAAA//B,KAAAgkC,OAAAjE,OACA,IAAAgB,EAAA,CACA,GAAA1lC,GAAAsoC,EAAA3jC,KAAAgkC,OAAA,WAAAjD,EACA,KAAA1lC,EACA,MAEAmjC,GAAAnjC,EAAAuD,QAAA4/B,MACAuB,EAAA1kC,EAAAuD,QAAAmhC,QAEA,wBAAA9Z,GACAA,EAAArqB,KAAAoE,KAAAw+B,EAAAuB,GACAvB,EAAAvY,IAGA0c,EAAArmC,GAAAgqC,MAAA,IAEA3D,IAGAiB,EAAAF,EAAA,SAAA3C,EAAA+D,GACA,GAAAnC,KAgBA,OAfAc,GAAAqB,GAAAjmC,QAAA,SAAA2mC,GACA,GAAAlpC,GAAAkpC,EAAAlpC,IACA2pB,EAAAuf,EAAAvf,GAEAA,GAAA8a,EAAA9a,EACA0c,EAAArmC,GAAA,WAEA,IADA,GAAAoD,MAAA5D,EAAA8D,UAAA7D,OACAD,KAAA4D,EAAA5D,GAAA8D,UAAA9D,EAEA,KAAAilC,GAAA4C,EAAA3jC,KAAAgkC,OAAA,eAAAjD,GAGA,MAAA/gC,MAAAgkC,OAAA3B,OAAAxiC,MAAAG,KAAAgkC,QAAA/d,GAAAnmB,OAAAJ,OAGAijC,IAGA4D,EAAA7C,EAAA,SAAA3C,EAAAhB,GACA,GAAA4C,KAmBA,OAlBAc,GAAA1D,GAAAlhC,QAAA,SAAA2mC,GACA,GAAAlpC,GAAAkpC,EAAAlpC,IACA2pB,EAAAuf,EAAAvf,GAEAA,GAAA8a,EAAA9a,EACA0c,EAAArmC,GAAA,WACA,IAAAykC,GAAA4C,EAAA3jC,KAAAgkC,OAAA,aAAAjD,GAGA,MAAA9a,KAAAjmB,MAAAgkC,OAAAjE,QAIA//B,KAAAgkC,OAAAjE,QAAA9Z,OAHAzS,SAAA4uB,MAAA,0BAAAnc,IAMA0c,EAAArmC,GAAAgqC,MAAA,IAEA3D,IAGAkB,EAAAH,EAAA,SAAA3C,EAAAlsB,GACA,GAAA8tB,KAgBA,OAfAc,GAAA5uB,GAAAhW,QAAA,SAAA2mC,GACA,GAAAlpC,GAAAkpC,EAAAlpC,IACA2pB,EAAAuf,EAAAvf,GAEAA,GAAA8a,EAAA9a,EACA0c,EAAArmC,GAAA,WAEA,IADA,GAAAoD,MAAA5D,EAAA8D,UAAA7D,OACAD,KAAA4D,EAAA5D,GAAA8D,UAAA9D,EAEA,KAAAilC,GAAA4C,EAAA3jC,KAAAgkC,OAAA,aAAAjD,GAGA,MAAA/gC,MAAAgkC,OAAAjC,SAAAliC,MAAAG,KAAAgkC,QAAA/d,GAAAnmB,OAAAJ,OAGAijC,IA6BA6D,GACApB,QACA9B,UACArhB,QAAA,QACAmkB,WACAxC,eACA2C,aACA1C,aAGiE/F,GAAA,KfwwM3D,SAAUziC,EAAQC,EAAS+I,GgBxiOjChJ,EAAAC,SAAkB8H,QAAAiB,EAAA,KAAAoiC,YAAA,IhB8iOZ,SAAUprC,EAAQC,EAAS+I,GiB5iOjC,GAAAqiC,GAAAriC,EAAA,KACAsiC,EAAAtiC,EAAA,GACAA,GAAA,KACAA,EAAA,IACA,IAAAuiC,GAAAviC,EAAA,IAEA+yB,EAAA/yB,EAAA,GACAyD,EAAAzD,EAAA,GACAgzB,EAAAhzB,EAAA,IACAwiC,IAMAA,GAAAC,eAAA,SAAA/U,EAAA1d,GACA,GAQA0yB,GACAC,EACAC,EAVAC,EAAAnV,EAAA5xB,KAEAuI,EAAA2L,EAAA8yB,SACA3+B,EAAA6L,EAAA+yB,SACAC,EAAA,MAAA3+B,EACA4+B,EAAA,MAAA9+B,EACA++B,EAAAxV,EAAAyV,WA8EA,OAzEA,YAAAN,EACAH,GAAA1yB,EAAA5R,IAAA,aAAA1G,QAGAirC,EAAA3yB,EAAA5R,IAAA,eACAqF,EAAAhL,QAAAkqC,KACAA,MAAA,EAAAA,GAAA,IAEA,iBAAAA,GAAA,KACAzzB,SACAC,QAAAC,KAAA,+JAKAuzB,GAAA,MAEAA,EAAA,GAAA5P,EAAA3Q,aAAAugB,EAAA,MACAA,EAAA,GAAA5P,EAAA3Q,aAAAugB,EAAA,MACAC,EAAAM,EAAA,GAAAA,EAAA,IACAj/B,KAAAsG,IAAA24B,EAAA,KAkBA,MAAA7+B,IACAA,EAAA,YAAAw+B,EACAH,EAAA,EAAAjgB,IACAygB,EAAA,GAAAP,EAAA,GAAAC,GAEA,MAAAz+B,IACAA,EAAA,YAAA0+B,EACAH,IAAA,EAAAjgB,IACAygB,EAAA,GAAAP,EAAA,GAAAC,GAGA,YAAAv+B,IACAA,EAAA6+B,EAAA,IAEA,YAAA/+B,IACAA,EAAA++B,EAAA,KAGA,MAAA7+B,IAAAqf,SAAArf,QAAAoe,MACA,MAAAte,IAAAuf,SAAAvf,QAAAse,KAEAiL,EAAA0V,SAAA3/B,EAAAxH,MAAAoI,IAAAZ,EAAAxH,MAAAkI,IAGA6L,EAAAqzB,qBAEAh/B,EAAA,GAAAF,EAAA,IAAA6+B,IACA3+B,EAAA,GAGAA,EAAA,GAAAF,EAAA,IAAA8+B,IACA9+B,EAAA,KAIAE,EAAAF,IAGAq+B,EAAAc,gBAAA,SAAA5V,EAAA1d,GACA,GAAAuzB,GAAAf,EAAAC,eAAA/U,EAAA1d,GACAgzB,EAAA,MAAAhzB,EAAA8yB,SACAG,EAAA,MAAAjzB,EAAA+yB,SACAS,EAAAxzB,EAAA5R,IAAA,cAEA,SAAAsvB,EAAA5xB,OACA4xB,EAAA+V,KAAAzzB,EAAA5R,IAAA,YAGAsvB,EAAAgW,UAAAH,EAAA,GAAAA,EAAA,IACA7V,EAAAiW,YACAH,cACAR,SACAC,SACAW,YAAA,aAAAlW,EAAA5xB,KAAAkU,EAAA5R,IAAA,qBAQA,IAAA2nB,GAAA/V,EAAA5R,IAAA,WACA,OAAA2nB,GACA2H,EAAAmW,aAAAnW,EAAAmW,YAAA9d,IASAyc,EAAAsB,mBAAA,SAAA9zB,EAAA+zB,GAEA,GADAA,KAAA/zB,EAAA5R,IAAA,QAEA,OAAA2lC,GAEA,eACA,UAAA1B,GACAryB,EAAAg0B,iBAAApqB,UAEA,aACA,UAAA0oB,EAEA,SACA,OAAAC,EAAA7uB,SAAAqwB,IAAAzB,GAAAhnB,OAAAtL,KAQAwyB,EAAAyB,gBAAA,SAAAC,GACA,GAAA5gB,GAAA4gB,EAAAxW,MAAAyV,YACA9+B,EAAAif,EAAA,GACAnf,EAAAmf,EAAA,EACA,SAAAjf,EAAA,GAAAF,EAAA,GAAAE,EAAA,GAAAF,EAAA,IAUAq+B,EAAA2B,qBAAA,SAAAC,EAAAC,EAAAC,EAAAC,GAIA,GAAAC,GACAC,EAAA,EACAC,EAAA,EAEAC,EAAA,CACAN,GAAA3sC,OAAA,KAEAitC,EAAA1gC,KAAA2R,MAAAyuB,EAAA3sC,OAAA,IAGA,QAAAF,GAAA,EAAuBA,EAAA4sC,EAAA1sC,OAAuBF,GAAAmtC,EAAA,CAC9C,GAAAC,GAAAR,EAAA5sC,GACAoO,EAAAotB,EAAA/sB,gBACAo+B,EAAA7sC,GAAA8sC,EAAA,eAEA1+B,GAAA2+B,EAAA,UAAAK,EAEAh/B,EAAA2+B,EAAA,uBACAC,EAIAA,EAAAlN,UAAA1xB,IACA8+B,IACAD,EAAAxgC,KAAAE,IAAAsgC,EAAAC,KAGAF,EAAA7N,MAAA/wB,GAEA8+B,EAAA,GAVAF,EAAA5+B,EAAA1O,QAaA,WAAAutC,GAAAE,EAAA,EACAA,GAEAF,EAAA,GAAAE,EAAA,GAQAnC,EAAAqC,mBAAA,SAAAX,EAAAY,GACA,GAAApX,GAAAwW,EAAAxW,MACA2W,EAAA3W,EAAAqX,iBACAC,EAAAtX,EAAAuX,UACA,uBAAAH,IACAA,EAAA,SAAAjR,GACA,gBAAAjS,GACA,MAAAiS,GAAA/V,QAAA,UAA+C,MAAA8D,IAAA,MAElCkjB,GAEbrhC,EAAA/I,IAAA2pC,EAAAS,IAEA,kBAAAA,GACArhC,EAAA/I,IAAAsqC,EAAA,SAAAE,EAAAtyB,GACA,MAAAkyB,GACAtC,EAAA2C,gBAAAjB,EAAAgB,GACAtyB,IAEajX,MAGb0oC,GAIA7B,EAAA2C,gBAAA,SAAAjB,EAAA1qC,GAIA,mBAAA0qC,EAAApoC,KAAAooC,EAAAxW,MAAA0X,SAAA5rC,MAGAxC,EAAAC,QAAAurC,GjBqjOM,SAAUxrC,EAAQC,EAAS+I,GkBzyOjC,QAAAqlC,GAAAnX,EAAArlB,GACA,GAAA5Q,GAAAi2B,EAAA,IAAArlB,CACA,IAAAy8B,EAAArtC,GACA,MAAAqtC,GAAArtC,EAMA,QAHAstC,IAAArX,EAAA,IAAAtd,MAAA,MACAzK,EAAA,EAEA3O,EAAA,EAAAguC,EAAAD,EAAA7tC,OAA6CF,EAAAguC,EAAOhuC,IAEpD2O,EAAAlC,KAAAE,IAAA6uB,EAAAyS,YAAAF,EAAA/tC,GAAAqR,GAAA1C,QAUA,OAPAu/B,GAAAC,IACAD,EAAA,EACAJ,MAEAI,IACAJ,EAAArtC,GAAAkO,EAEAA,EAGA,QAAAy/B,GAAA1X,EAAArlB,EAAAg9B,EAAAC,GACA,GAAAC,KAAA7X,GAAA,QAAAtd,MAAA,MAAAlZ,OAEAyO,EAAAk/B,EAAAnX,EAAArlB,GAEAm9B,EAAAX,EAAA,IAAAx8B,GACAzC,EAAA2/B,EAAAC,EAEApgC,EAAA,GAAA7B,GAAA,IAAAoC,EAAAC,EAIA,QAFAR,EAAAogC,aAEAF,GACA,aACA,iBACAlgC,EAAAY,GAAAw/B,CACA,MACA,cACApgC,EAAAY,GAAAw/B,EAAA,EAOA,OAAAH,GACA,UACA,YACAjgC,EAAAU,GAAAV,EAAAO,KACA,MACA,cACAP,EAAAU,GAAAV,EAAAO,MAAA,EAMA,MAAAP,GAGA,QAAAqgC,GAAAl9B,EAAAnD,EAAAsgC,EAAApV,GAEA,GAAAxqB,GAAAV,EAAAU,EACAE,EAAAZ,EAAAY,EAEAJ,EAAAR,EAAAQ,OACAD,EAAAP,EAAAO,MAEAggC,EAAAD,EAAA9/B,OAEA4/B,EAAAE,EAAAF,WACAI,EAAAhgC,EAAA,EAAA+/B,EAAA,EAAAH,EAEAH,EAAA,MAEA,QAAA98B,GACA,WACAzC,GAAAwqB,EACAtqB,GAAA4/B,EACAP,EAAA,OACA,MACA,aACAv/B,GAAAwqB,EAAA3qB,EACAK,GAAA4/B,EACAP,EAAA,MACA,MACA,WACAv/B,GAAAH,EAAA,EACAK,GAAAsqB,EAAAqV,EAAAH,EACAH,EAAA,QACA,MACA,cACAv/B,GAAAH,EAAA,EACAK,GAAAJ,EAAA0qB,EAAAkV,EACAH,EAAA,QACA,MACA,cACAv/B,GAAAH,EAAA,EACAK,GAAA4/B,EACAP,EAAA,QACA,MACA,kBACAv/B,GAAAwqB,EACAtqB,GAAA4/B,EACAP,EAAA,MACA,MACA,mBACAv/B,GAAAH,EAAA2qB,EACAtqB,GAAA4/B,EACAP,EAAA,OACA,MACA,iBACAv/B,GAAAH,EAAA,EACAK,GAAAsqB,EAAAkV,EACAH,EAAA,QACA,MACA,oBACAv/B,GAAAH,EAAA,EACAK,GAAAJ,EAAA+/B,EAAArV,EAAAkV,EACAH,EAAA,QACA,MACA,qBACAv/B,GAAAwqB,EACAtqB,GAAAsqB,EAAAkV,EACAH,EAAA,MACA,MACA,sBACAv/B,GAAAH,EAAA2qB,EACAtqB,GAAAsqB,EAAAkV,EACAH,EAAA,OACA,MACA,wBACAv/B,GAAAwqB,EACAtqB,GAAAJ,EAAA+/B,EAAArV,EAAAkV,CACA,MACA,yBACA1/B,GAAAH,EAAA2qB,EACAtqB,GAAAJ,EAAA+/B,EAAArV,EAAAkV,EACAH,EAAA,QAIA,OACAv/B,IACAE,IACAq/B,YACAC,aAAA,cAmBA,QAAAjR,GAAA3G,EAAAmY,EAAAx9B,EAAAy9B,EAAAtnC,GACA,IAAAqnC,EACA,QAGArnC,SAEAsnC,EAAApqC,EAAAoqC,EAAA,MAcA,QAbAC,GAAArqC,EAAA8C,EAAAunC,cAAA,GACAC,EAAAtqC,EAAA8C,EAAAwnC,QAAA,GAGAC,EAAApB,EAAA,IAAAx8B,GAGA69B,EAAArB,EAAA,IAAAx8B,GACA89B,EAAAzqC,EAAA8C,EAAA2nC,YAAA,IAIAC,EAAAP,EAAApiC,KAAAE,IAAA,EAAAkiC,EAAA,GACA7uC,EAAA,EAAuBA,EAAAgvC,GAAAI,GAAAF,EAA6ClvC,IACpEovC,GAAAF,CAGA,IAAAG,GAAAxB,EAAAiB,EACAO,GAAAD,IACAN,EAAA,GACAO,EAAA,GAGAD,EAAAP,EAAAQ,CAIA,QAFAtB,IAAArX,EAAA,IAAAtd,MAAA,MAEApZ,EAAA,EAAAC,EAAA8tC,EAAA7tC,OAA+CF,EAAAC,EAASD,IAAA,CACxD,GAAAsvC,GAAAvB,EAAA/tC,GACA2P,EAAAk+B,EAAAyB,EAAAj+B,EAEA,MAAA1B,GAAAk/B,GAAA,CAIA,OAAAlc,GAAA,GAA4BA,IAAA,CAC5B,GAAAhjB,GAAAy/B,GAAAzc,GAAAoc,EAAA,CACAO,GAAAR,CACA,OAGA,GAAAS,GAAA,IAAA5c,EACA6c,EAAAF,EAAAF,EAAAF,EAAAD,GACAt/B,EAAA,EACAlD,KAAA2R,MAAAkxB,EAAApvC,OAAAkvC,EAAAz/B,GACA,CAEA2/B,KAAAlS,OAAA,EAAAmS,GACA5/B,EAAAk+B,EAAAyB,EAAAj+B,GAGA,KAAAi+B,IACAA,EAAAH,GAGApB,EAAA/tC,GAAAsvC,GAGA,MAAAvB,GAAA97B,KAAA,MAGA,QAAAu9B,GAAA9Y,EAAA0Y,EAAAF,EAAAD,GAGA,OAFAtgC,GAAA,EACA3O,EAAA,EACAC,EAAAy2B,EAAAx2B,OAAmCF,EAAAC,GAAA0O,EAAAygC,EAAiCpvC,IAAA,CACpE,GAAAyvC,GAAA/Y,EAAAgZ,WAAA1vC,EACA2O,IAAA,GAAA8gC,MAAA,IAAAP,EAAAD,EAEA,MAAAjvC,GA7PA,GAAA8tC,MACAI,EAAA,EACAC,EAAA,IAEAtsC,EAAA2G,EAAA,GACA+D,EAAA/D,EAAA,IACA9D,EAAA7C,EAAA6C,SA0PA82B,GAEAva,SAAA4sB,EAEAp/B,gBAAA2/B,EAEAK,2BAEApR,eAEA4Q,YAAA,SAAAvX,EAAArlB,GACA,GAAA0jB,GAAAlzB,EAAAF,YAEA,OADAozB,GAAA+X,KAAAz7B,GAAA,kBACA0jB,EAAAkZ,YAAAvX,IAIAl3B,GAAAC,QAAA+7B,GlB0zOM,SAAUh8B,EAAQC,EAAS+I,GAEjC,YmBrjPA,SAAAmnC,GAAAvlB,GACA,MAAAA,IAAAwlB,GAAAxlB,EAAAwlB,EAEA,QAAAC,GAAAzlB,GACA,MAAAA,GAAAwlB,GAAAxlB,GAAAwlB,EAYA,QAAAE,GAAAC,EAAAC,EAAAC,EAAAC,EAAAxW,GACA,GAAAyW,GAAA,EAAAzW,CACA,OAAAyW,QAAAJ,EAAA,EAAArW,EAAAsW,GACAtW,OAAAwW,EAAA,EAAAC,EAAAF,GAaA,QAAAG,GAAAL,EAAAC,EAAAC,EAAAC,EAAAxW,GACA,GAAAyW,GAAA,EAAAzW,CACA,aACAsW,EAAAD,GAAAI,EAAA,GAAAF,EAAAD,GAAAtW,GAAAyW,GACAD,EAAAD,GAAAvW,KAeA,QAAA2W,GAAAN,EAAAC,EAAAC,EAAAC,EAAA9lB,EAAAkmB,GAEA,GAAAv7B,GAAAm7B,EAAA,GAAAF,EAAAC,GAAAF,EACA/6B,EAAA,GAAAi7B,EAAA,EAAAD,EAAAD,GACAQ,EAAA,GAAAP,EAAAD,GACA1W,EAAA0W,EAAA3lB,EAEAomB,EAAAx7B,IAAA,EAAAD,EAAAw7B,EACAE,EAAAz7B,EAAAu7B,EAAA,EAAAx7B,EAAAskB,EACAqX,EAAAH,IAAA,EAAAv7B,EAAAqkB,EAEAsX,EAAA,CAEA,IAAAhB,EAAAa,IAAAb,EAAAc,GACA,GAAAd,EAAA36B,GACAs7B,EAAA,SAEA,CACA,GAAAM,IAAAL,EAAAv7B,CACA47B,IAAA,GAAAA,GAAA,IACAN,EAAAK,KAAAC,OAIA,CACA,GAAAC,GAAAJ,IAAA,EAAAD,EAAAE,CAEA,IAAAf,EAAAkB,GAAA,CACA,GAAAC,GAAAL,EAAAD,EACAI,GAAA57B,EAAAD,EAAA+7B,EACAC,GAAAD,EAAA,CACAF,IAAA,GAAAA,GAAA,IACAN,EAAAK,KAAAC,GAEAG,GAAA,GAAAA,GAAA,IACAT,EAAAK,KAAAI,OAGA,IAAAF,EAAA,GACA,GAAAG,GAAAC,EAAAJ,GACAK,EAAAV,EAAAx7B,EAAA,IAAAD,IAAA07B,EAAAO,GACAG,EAAAX,EAAAx7B,EAAA,IAAAD,IAAA07B,EAAAO,EAEAE,GADAA,EAAA,GACAE,GAAAF,EAAAG,GAGAD,EAAAF,EAAAG,GAGAF,EADAA,EAAA,GACAC,GAAAD,EAAAE,GAGAD,EAAAD,EAAAE,EAEA,IAAAT,KAAA57B,GAAAk8B,EAAAC,KAAA,EAAAp8B,EACA67B,IAAA,GAAAA,GAAA,IACAN,EAAAK,KAAAC,OAGA,CACA,GAAAU,IAAA,EAAAd,EAAAx7B,EAAA,EAAAD,EAAA07B,IAAA,EAAAQ,EAAAT,QACAe,EAAA9kC,KAAA+kC,KAAAF,GAAA,EACAG,EAAAR,EAAAT,GACAkB,EAAAjlC,KAAAklC,IAAAJ,GAEAX,IAAA57B,EAAA,EAAAy8B,EAAAC,IAAA,EAAA38B,GACAg8B,IAAA/7B,EAAAy8B,GAAAC,EAAAE,EAAAnlC,KAAAolC,IAAAN,MAAA,EAAAx8B,GACA+8B,IAAA98B,EAAAy8B,GAAAC,EAAAE,EAAAnlC,KAAAolC,IAAAN,MAAA,EAAAx8B,EACA67B,IAAA,GAAAA,GAAA,IACAN,EAAAK,KAAAC,GAEAG,GAAA,GAAAA,GAAA,IACAT,EAAAK,KAAAI,GAEAe,GAAA,GAAAA,GAAA,IACAxB,EAAAK,KAAAmB,IAIA,MAAAnB,GAaA,QAAAoB,GAAAhC,EAAAC,EAAAC,EAAAC,EAAA8B,GACA,GAAAh9B,GAAA,EAAAi7B,EAAA,GAAAD,EAAA,EAAAD,EACAh7B,EAAA,EAAAi7B,EAAA,EAAAE,EAAA,EAAAH,EAAA,EAAAE,EACAM,EAAA,EAAAP,EAAA,EAAAD,EAEAY,EAAA,CACA,IAAAhB,EAAA56B,IACA,GAAA86B,EAAA76B,GAAA,CACA,GAAA47B,IAAAL,EAAAv7B,CACA47B,IAAA,GAAAA,GAAA,IACAoB,EAAArB,KAAAC,QAIA,CACA,GAAAC,GAAA77B,IAAA,EAAAD,EAAAw7B,CACA,IAAAZ,EAAAkB,GACAmB,EAAA,IAAAh9B,GAAA,EAAAD,OAEA,IAAA87B,EAAA,GACA,GAAAG,GAAAC,EAAAJ,GACAD,IAAA57B,EAAAg8B,IAAA,EAAAj8B,GACAg8B,IAAA/7B,EAAAg8B,IAAA,EAAAj8B,EACA67B,IAAA,GAAAA,GAAA,IACAoB,EAAArB,KAAAC,GAEAG,GAAA,GAAAA,GAAA,IACAiB,EAAArB,KAAAI,IAIA,MAAAJ,GAaA,QAAAsB,GAAAlC,EAAAC,EAAAC,EAAAC,EAAAxW,EAAAd,GACA,GAAAsZ,IAAAlC,EAAAD,GAAArW,EAAAqW,EACAoC,GAAAlC,EAAAD,GAAAtW,EAAAsW,EACAoC,GAAAlC,EAAAD,GAAAvW,EAAAuW,EAEAoC,GAAAF,EAAAD,GAAAxY,EAAAwY,EACAI,GAAAF,EAAAD,GAAAzY,EAAAyY,EAEAI,GAAAD,EAAAD,GAAA3Y,EAAA2Y,CAEAzZ,GAAA,GAAAmX,EACAnX,EAAA,GAAAsZ,EACAtZ,EAAA,GAAAyZ,EACAzZ,EAAA,GAAA2Z,EAEA3Z,EAAA,GAAA2Z,EACA3Z,EAAA,GAAA0Z,EACA1Z,EAAA,GAAAwZ,EACAxZ,EAAA,GAAAsX,EAmBA,QAAAsC,GACAC,EAAAC,EAAA9iC,EAAAE,EAAAD,EAAAE,EAAA4iC,EAAAC,EACA9jC,EAAAE,EAAA4pB,GAGA,GAAAc,GAGAmZ,EACAC,EACAC,EACAC,EALAzkB,EAAA,KACA8K,EAAAjX,GAMA6wB,GAAA,GAAAnkC,EACAmkC,EAAA,GAAAjkC,CAIA,QAAAkkC,GAAA,EAAwBA,EAAA,EAAQA,GAAA,IAChCC,EAAA,GAAArD,EAAA2C,EAAA7iC,EAAAC,EAAA8iC,EAAAO,GACAC,EAAA,GAAArD,EAAA4C,EAAA5iC,EAAAC,EAAA6iC,EAAAM,IACAH,EAAAK,EAAAH,EAAAE,IACA9Z,IACAK,EAAAwZ,EACA7Z,EAAA0Z,EAGA1Z,GAAAjX,GAGA,QAAApiB,GAAA,EAAuBA,EAAA,MACvBuuB,EAAA8kB,GAD+BrzC,IAI/B6yC,EAAAnZ,EAAAnL,EACAukB,EAAApZ,EAAAnL,EAEA4kB,EAAA,GAAArD,EAAA2C,EAAA7iC,EAAAC,EAAA8iC,EAAAE,GACAM,EAAA,GAAArD,EAAA4C,EAAA5iC,EAAAC,EAAA6iC,EAAAC,GAEAE,EAAAK,EAAAD,EAAAF,GAEAJ,GAAA,GAAAE,EAAA1Z,GACAK,EAAAmZ,EACAxZ,EAAA0Z,IAIAO,EAAA,GAAAxD,EAAA2C,EAAA7iC,EAAAC,EAAA8iC,EAAAG,GACAQ,EAAA,GAAAxD,EAAA4C,EAAA5iC,EAAAC,EAAA6iC,EAAAE,GACAE,EAAAI,EAAAE,EAAAL,GAEAH,GAAA,GAAAE,EAAA3Z,GACAK,EAAAoZ,EACAzZ,EAAA2Z,GAGAzkB,GAAA,GAUA,OALAqK,KACAA,EAAA,GAAAkX,EAAA2C,EAAA7iC,EAAAC,EAAA8iC,EAAAjZ,GACAd,EAAA,GAAAkX,EAAA4C,EAAA5iC,EAAAC,EAAA6iC,EAAAlZ,IAGAuX,EAAA5X,GAWA,QAAAka,GAAAxD,EAAAC,EAAAC,EAAAvW,GACA,GAAAyW,GAAA,EAAAzW,CACA,OAAAyW,MAAAJ,EAAA,EAAArW,EAAAsW,GAAAtW,IAAAuW,EAWA,QAAAuD,GAAAzD,EAAAC,EAAAC,EAAAvW,GACA,aAAAA,IAAAsW,EAAAD,GAAArW,GAAAuW,EAAAD,IAYA,QAAAyD,GAAA1D,EAAAC,EAAAC,EAAA7lB,EAAAkmB,GACA,GAAAv7B,GAAAg7B,EAAA,EAAAC,EAAAC,EACAj7B,EAAA,GAAAg7B,EAAAD,GACAQ,EAAAR,EAAA3lB,EAEAumB,EAAA,CACA,IAAAhB,EAAA56B,IACA,GAAA86B,EAAA76B,GAAA,CACA,GAAA47B,IAAAL,EAAAv7B,CACA47B,IAAA,GAAAA,GAAA,IACAN,EAAAK,KAAAC,QAIA,CACA,GAAAC,GAAA77B,IAAA,EAAAD,EAAAw7B,CACA,IAAAZ,EAAAkB,GAAA,CACA,GAAAD,IAAA57B,GAAA,EAAAD,EACA67B,IAAA,GAAAA,GAAA,IACAN,EAAAK,KAAAC,OAGA,IAAAC,EAAA,GACA,GAAAG,GAAAC,EAAAJ,GACAD,IAAA57B,EAAAg8B,IAAA,EAAAj8B,GACAg8B,IAAA/7B,EAAAg8B,IAAA,EAAAj8B,EACA67B,IAAA,GAAAA,GAAA,IACAN,EAAAK,KAAAC,GAEAG,GAAA,GAAAA,GAAA,IACAT,EAAAK,KAAAI,IAIA,MAAAJ,GAWA,QAAA+C,GAAA3D,EAAAC,EAAAC,GACA,GAAA0D,GAAA5D,EAAAE,EAAA,EAAAD,CACA,YAAA2D,EAEA,IAGA5D,EAAAC,GAAA2D,EAaA,QAAAC,GAAA7D,EAAAC,EAAAC,EAAAvW,EAAAd,GACA,GAAAsZ,IAAAlC,EAAAD,GAAArW,EAAAqW,EACAoC,GAAAlC,EAAAD,GAAAtW,EAAAsW,EACAqC,GAAAF,EAAAD,GAAAxY,EAAAwY,CAGAtZ,GAAA,GAAAmX,EACAnX,EAAA,GAAAsZ,EACAtZ,EAAA,GAAAyZ,EAGAzZ,EAAA,GAAAyZ,EACAzZ,EAAA,GAAAuZ,EACAvZ,EAAA,GAAAqX,EAiBA,QAAA4D,GACApB,EAAAC,EAAA9iC,EAAAE,EAAAD,EAAAE,EACAjB,EAAAE,EAAA4pB,GAGA,GAAAc,GACAnL,EAAA,KACA8K,EAAAjX,GAEA6wB,GAAA,GAAAnkC,EACAmkC,EAAA,GAAAjkC,CAIA,QAAAkkC,GAAA,EAAwBA,EAAA,EAAQA,GAAA,KAChCC,EAAA,GAAAI,EAAAd,EAAA7iC,EAAAC,EAAAqjC,GACAC,EAAA,GAAAI,EAAAb,EAAA5iC,EAAAC,EAAAmjC,EACA,IAAAH,GAAAK,EAAAH,EAAAE,EACAJ,GAAA1Z,IACAK,EAAAwZ,EACA7Z,EAAA0Z,GAGA1Z,EAAAjX,GAGA,QAAApiB,GAAA,EAAuBA,EAAA,MACvBuuB,EAAA8kB,GAD+BrzC,IAAA,CAI/B,GAAA6yC,GAAAnZ,EAAAnL,EACAukB,EAAApZ,EAAAnL,CAEA4kB,GAAA,GAAAI,EAAAd,EAAA7iC,EAAAC,EAAAgjC,GACAM,EAAA,GAAAI,EAAAb,EAAA5iC,EAAAC,EAAA8iC,EAEA,IAAAE,GAAAK,EAAAD,EAAAF,EAEA,IAAAJ,GAAA,GAAAE,EAAA1Z,EACAK,EAAAmZ,EACAxZ,EAAA0Z,MAEA,CAEAO,EAAA,GAAAC,EAAAd,EAAA7iC,EAAAC,EAAAijC,GACAQ,EAAA,GAAAC,EAAAb,EAAA5iC,EAAAC,EAAA+iC,EACA,IAAAE,GAAAI,EAAAE,EAAAL,EACAH,IAAA,GAAAE,EAAA3Z,GACAK,EAAAoZ,EACAzZ,EAAA2Z,GAGAzkB,GAAA,IAUA,MALAqK,KACAA,EAAA,GAAA2a,EAAAd,EAAA7iC,EAAAC,EAAA6pB,GACAd,EAAA,GAAA2a,EAAAb,EAAA5iC,EAAAC,EAAA2pB,IAGAuX,EAAA5X,GAvfA,GAAA4F,GAAAz2B,EAAA,IACAsrC,EAAA7U,EAAAnb,OACAsvB,EAAAnU,EAAApF,WACAuX,EAAA3kC,KAAA+f,IACAykB,EAAAxkC,KAAA4rB,KAEAuX,EAAA,KACAyD,EAAA,KAEAzB,EAAAX,EAAA,GACAI,EAAA,IAGA4B,EAAAa,IACAX,EAAAW,IACAR,EAAAQ,GA2eAt0C,GAAAC,SAEAqwC,UAEAM,oBAEAC,cAEA0B,eAEAE,iBAEAO,oBAEAe,cAEAC,wBAEAC,kBAEAC,oBAEAE,qBAEAC,0BnBslPM,SAAUr0C,EAAQC,GoB/mQxB,GAAAi5B,GAAA,mBAAAC,cACAhyB,MACAgyB,aAKAvsB,GAKA0X,OAAA,WACA,GAAA8U,GAAA,GAAAF,GAAA,EAGA,OAFAtsB,GAAAmG,SAAAqmB,GAEAA,GAMArmB,SAAA,SAAAqmB,GAOA,MANAA,GAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,GAOAzB,KAAA,SAAAyB,EAAAvpB,GAOA,MANAupB,GAAA,GAAAvpB,EAAA,GACAupB,EAAA,GAAAvpB,EAAA,GACAupB,EAAA,GAAAvpB,EAAA,GACAupB,EAAA,GAAAvpB,EAAA,GACAupB,EAAA,GAAAvpB,EAAA,GACAupB,EAAA,GAAAvpB,EAAA,GACAupB,GAQApmB,IAAA,SAAAomB,EAAAmb,EAAAC,GAIA,GAAAC,GAAAF,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GACAE,EAAAH,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GACAG,EAAAJ,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GACAI,EAAAL,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GACAK,EAAAN,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GACAO,EAAAP,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,EAOA,OANAnb,GAAA,GAAAqb,EACArb,EAAA,GAAAsb,EACAtb,EAAA,GAAAub,EACAvb,EAAA,GAAAwb,EACAxb,EAAA,GAAAyb,EACAzb,EAAA,GAAA0b,EACA1b,GAQAiH,UAAA,SAAAjH,EAAA7jB,EAAA6Z,GAOA,MANAgK,GAAA,GAAA7jB,EAAA,GACA6jB,EAAA,GAAA7jB,EAAA,GACA6jB,EAAA,GAAA7jB,EAAA,GACA6jB,EAAA,GAAA7jB,EAAA,GACA6jB,EAAA,GAAA7jB,EAAA,GAAA6Z,EAAA,GACAgK,EAAA,GAAA7jB,EAAA,GAAA6Z,EAAA,GACAgK,GAQA2b,OAAA,SAAA3b,EAAA7jB,EAAAy/B,GACA,GAAAC,GAAA1/B,EAAA,GACA2/B,EAAA3/B,EAAA,GACA4/B,EAAA5/B,EAAA,GACA6/B,EAAA7/B,EAAA,GACA8/B,EAAA9/B,EAAA,GACA+/B,EAAA//B,EAAA,GACAggC,EAAAtoC,KAAAolC,IAAA2C,GACAQ,EAAAvoC,KAAAklC,IAAA6C,EAQA,OANA5b,GAAA,GAAA6b,EAAAO,EAAAJ,EAAAG,EACAnc,EAAA,IAAA6b,EAAAM,EAAAH,EAAAI,EACApc,EAAA,GAAA8b,EAAAM,EAAAH,EAAAE,EACAnc,EAAA,IAAA8b,EAAAK,EAAAC,EAAAH,EACAjc,EAAA,GAAAoc,EAAAL,EAAAI,EAAAD,EACAlc,EAAA,GAAAoc,EAAAF,EAAAC,EAAAJ,EACA/b,GAQA1C,MAAA,SAAA0C,EAAA7jB,EAAA6Z,GACA,GAAAqmB,GAAArmB,EAAA,GACAsmB,EAAAtmB,EAAA,EAOA,OANAgK,GAAA,GAAA7jB,EAAA,GAAAkgC,EACArc,EAAA,GAAA7jB,EAAA,GAAAmgC,EACAtc,EAAA,GAAA7jB,EAAA,GAAAkgC,EACArc,EAAA,GAAA7jB,EAAA,GAAAmgC,EACAtc,EAAA,GAAA7jB,EAAA,GAAAkgC,EACArc,EAAA,GAAA7jB,EAAA,GAAAmgC,EACAtc,GAOAjmB,OAAA,SAAAimB,EAAA7jB,GAEA,GAAA0/B,GAAA1/B,EAAA,GACA2/B,EAAA3/B,EAAA,GACA4/B,EAAA5/B,EAAA,GACA6/B,EAAA7/B,EAAA,GACA8/B,EAAA9/B,EAAA,GACA+/B,EAAA//B,EAAA,GAEAogC,EAAAV,EAAAI,EAAAD,EAAAF,CACA,OAAAS,IAGAA,EAAA,EAAAA,EAEAvc,EAAA,GAAAic,EAAAM,EACAvc,EAAA,IAAAgc,EAAAO,EACAvc,EAAA,IAAA8b,EAAAS,EACAvc,EAAA,GAAA6b,EAAAU,EACAvc,EAAA,IAAA8b,EAAAI,EAAAD,EAAAF,GAAAQ,EACAvc,EAAA,IAAAgc,EAAAD,EAAAF,EAAAK,GAAAK,EACAvc,GAVA,MAcAp5B,GAAAC,QAAA2M,GpBunQQ,CAEF,SAAU5M,EAAQC,EAAS+I,GAEjC,YqBrxQA/I,GAAAmrC,YAAA,CAEA,IAAAwK,GAAA5sC,EAAA,KAEA6sC,EAEA,SAAAxyC,GAAsC,MAAAA,MAAA+nC,WAAA/nC,GAAuC0E,QAAA1E,IAF7EuyC,EAIA31C,GAAA8H,QAAA8tC,EAAA9tC,SAAA,SAAA3G,GACA,OAAAZ,GAAA,EAAiBA,EAAA+D,UAAA7D,OAAsBF,IAAA,CACvC,GAAAL,GAAAoE,UAAA/D,EAEA,QAAAS,KAAAd,GACA6G,OAAAlE,UAAA5B,eAAAX,KAAAJ,EAAAc,KACAG,EAAAH,GAAAd,EAAAc,IAKA,MAAAG,KrB6xQM,SAAUpB,EAAQC,EAAS+I,GAEjC,YsBxxQA,SAAA8sC,GAAAC,EAAAngC,EAAAogC,EAAAC,EAAAC,GACA,GAAA5mC,GAAA,EACAE,EAAA,CACA,OAAAymC,IACAA,EAAArzB,KAEA,MAAAszB,IACAA,EAAAtzB,IAEA,IAAAuzB,GAAA,CACAvgC,GAAAwgC,UAAA,SAAAtrC,EAAA8Q,GACA,GAIAy6B,GACAC,EALAzlC,EAAA/F,EAAA+F,SACAjC,EAAA9D,EAAAmE,kBACAsnC,EAAA3gC,EAAA4gC,QAAA56B,EAAA,GACA66B,EAAAF,KAAAtnC,iBAGA,mBAAA8mC,EAAA,CACA,GAAAW,GAAA9nC,EAAAO,OAAAsnC,KAAAnnC,EAAAV,EAAAU,EAAA,EACA+mC,GAAA/mC,EAAAonC,EAEAL,EAAAJ,GAAAnrC,EAAA6rC,SACArnC,EAAA,EACA+mC,EAAAK,EACAlnC,GAAA2mC,EAAAH,EACAG,EAAAvnC,EAAAQ,QAGA+mC,EAAAlpC,KAAAE,IAAAgpC,EAAAvnC,EAAAQ,YAGA,CACA,GAAAwnC,GAAAhoC,EAAAQ,QAAAqnC,KAAAjnC,EAAAZ,EAAAY,EAAA,EACA8mC,GAAA9mC,EAAAonC,EAEAN,EAAAJ,GAAAprC,EAAA6rC,SACArnC,GAAA6mC,EAAAH,EACAxmC,EAAA,EACA8mC,EAAAM,EACAT,EAAAvnC,EAAAO,OAGAgnC,EAAAlpC,KAAAE,IAAAgpC,EAAAvnC,EAAAO,OAIArE,EAAA6rC,UAIA9lC,EAAA,GAAAvB,EACAuB,EAAA,GAAArB,EAEA,eAAAumC,EACAzmC,EAAA+mC,EAAAL,EACAxmC,EAAA8mC,EAAAN,KA/EA,GAAAvpC,GAAAzD,EAAA,GACA+D,EAAA/D,EAAA,IACA+yB,EAAA/yB,EAAA,GACAsmB,EAAAtmB,EAAA,IACAoiB,EAAA2Q,EAAA3Q,aACAhoB,EAAAqJ,EAAArJ,KAEAyL,KAKAgoC,EAAAhoC,EAAAgoC,iBACA,gDAMAC,EAAAjoC,EAAAioC,WACA,yBACA,yBAsEAjoC,GAAAkoC,IAAAjB,EASAjnC,EAAAmoC,KAAAvqC,EAAA/H,MAAAoxC,EAAA,YASAjnC,EAAAooC,KAAAxqC,EAAA/H,MAAAoxC,EAAA,cAiBAjnC,EAAAqoC,iBAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAhI,GAAA+H,EAAAjoC,MACAmoC,EAAAF,EAAAhoC,OAEAE,EAAA8b,EAAA+rB,EAAA7nC,EAAA+/B,GACA7/B,EAAA4b,EAAA+rB,EAAA3nC,EAAA8nC,GACAjnC,EAAA+a,EAAA+rB,EAAA9mC,GAAAg/B,GACA9+B,EAAA6a,EAAA+rB,EAAA5mC,GAAA+mC,EASA,QAPArvB,MAAA3Y,IAAA2Y,MAAAuD,WAAA2rB,EAAA7nC,SAAA,IACA2Y,MAAA5X,IAAA4X,MAAAuD,WAAA2rB,EAAA9mC,UAAAg/B,IACApnB,MAAAzY,IAAAyY,MAAAuD,WAAA2rB,EAAA3nC,SAAA,IACAyY,MAAA1X,IAAA0X,MAAAuD,WAAA2rB,EAAA5mC,UAAA+mC,GAEAD,EAAA/nB,EAAAgN,kBAAA+a,GAAA,IAGAloC,MAAAlC,KAAAE,IAAAkD,EAAAf,EAAA+nC,EAAA,GAAAA,EAAA,MACAjoC,OAAAnC,KAAAE,IAAAoD,EAAAf,EAAA6nC,EAAA,GAAAA,EAAA,QAoBAxoC,EAAA0oC,cAAA,SACAJ,EAAAC,EAAAC,GAEAA,EAAA/nB,EAAAgN,kBAAA+a,GAAA,EAEA,IAAAhI,GAAA+H,EAAAjoC,MACAmoC,EAAAF,EAAAhoC,OAEAuT,EAAAyI,EAAA+rB,EAAAx0B,KAAA0sB,GACAxsB,EAAAuI,EAAA+rB,EAAAt0B,IAAAy0B,GACAx0B,EAAAsI,EAAA+rB,EAAAr0B,MAAAusB,GACAtsB,EAAAqI,EAAA+rB,EAAAp0B,OAAAu0B,GACAnoC,EAAAic,EAAA+rB,EAAAhoC,MAAAkgC,GACAjgC,EAAAgc,EAAA+rB,EAAA/nC,OAAAkoC,GAEAE,EAAAH,EAAA,GAAAA,EAAA,GACAI,EAAAJ,EAAA,GAAAA,EAAA,GACAnoC,EAAAioC,EAAAjoC,MA0CA,QAvCA+Y,MAAA9Y,KACAA,EAAAkgC,EAAAvsB,EAAA20B,EAAA90B,GAEAsF,MAAA7Y,KACAA,EAAAkoC,EAAAv0B,EAAAy0B,EAAA30B,GAOAoF,MAAA9Y,IAAA8Y,MAAA7Y,KACAF,EAAAmgC,EAAAiI,EACAnoC,EAAA,GAAAkgC,EAGAjgC,EAAA,GAAAkoC,GAIA,MAAApoC,IAEA+Y,MAAA9Y,KACAA,EAAAD,EAAAE,GAEA6Y,MAAA7Y,KACAA,EAAAD,EAAAD,IAKA+Y,MAAAtF,KACAA,EAAA0sB,EAAAvsB,EAAA3T,EAAAsoC,GAEAxvB,MAAApF,KACAA,EAAAy0B,EAAAv0B,EAAA3T,EAAAooC,GAIAL,EAAAx0B,MAAAw0B,EAAAr0B,OACA,aACAH,EAAA0sB,EAAA,EAAAlgC,EAAA,EAAAkoC,EAAA,EACA,MACA,aACA10B,EAAA0sB,EAAAlgC,EAAAsoC,EAGA,OAAAN,EAAAt0B,KAAAs0B,EAAAp0B,QACA,aACA,aACAF,EAAAy0B,EAAA,EAAAloC,EAAA,EAAAioC,EAAA,EACA,MACA,cACAx0B,EAAAy0B,EAAAloC,EAAAooC,EAIA70B,KAAA,EACAE,KAAA,EACAoF,MAAA9Y,KAEAA,EAAAkgC,EAAA1sB,GAAAG,GAAA,IAEAmF,MAAA7Y,KAEAA,EAAAkoC,EAAAz0B,GAAAE,GAAA,GAGA,IAAAnU,GAAA,GAAA7B,GAAA4V,EAAA00B,EAAA,GAAAx0B,EAAAw0B,EAAA,GAAAloC,EAAAC,EAEA,OADAR,GAAAyoC,SACAzoC,GAwCAC,EAAA6oC,gBAAA,SAAAluC,EAAA2tC,EAAAC,EAAAC,EAAApmC,GACA,GAAAlI,IAAAkI,MAAA0mC,IAAA1mC,EAAA0mC,GAAA,GACAvoB,GAAAne,MAAA0mC,IAAA1mC,EAAA0mC,GAAA,GACAC,EAAA3mC,KAAA2mC,cAAA,KAEA,IAAA7uC,GAAAqmB,EAAA,CAIA,GAAAxgB,EACA,YAAAgpC,EACAhpC,EAAA,UAAApF,EAAA1E,KACA,GAAAiI,GAAA,KAAAoqC,EAAAhoC,OAAA,GAAAgoC,EAAA/nC,QAAA,GACA5F,EAAAyF,sBAIA,IADAL,EAAApF,EAAAyF,kBACAzF,EAAAquC,qBAAA,CACA,GAAA3kC,GAAA1J,EAAAyJ,mBAGArE,KAAA1O,QACA0O,EAAAe,eAAAuD,GAIAikC,EAAAtoC,EAAA0oC,cACA9qC,EAAA3K,UACiBqN,MAAAP,EAAAO,MAAAC,OAAAR,EAAAQ,QACjB+nC,GAEAC,EACAC,EAMA,IAAAS,GAAAtuC,EAAAqH,SACAknC,EAAAhvC,EAAAouC,EAAA7nC,EAAAV,EAAAU,EAAA,EACA0oC,EAAA5oB,EAAA+nB,EAAA3nC,EAAAZ,EAAAY,EAAA,CAEAhG,GAAAgD,KAAA,mBAAAorC,GAAAG,EAAAC,IAAAF,EAAA,GAAAC,EAAAD,EAAA,GAAAE,MAOAnpC,EAAAopC,eAAA,SAAAh3B,EAAAi3B,GACA,aAAAj3B,EAAA61B,EAAAoB,GAAA,KACA,MAAAj3B,EAAA61B,EAAAoB,GAAA,WAAAj3B,EAAA61B,EAAAoB,GAAA,KA2BArpC,EAAAmzB,iBAAA,SAAAmW,EAAAC,EAAAnnC,GAYA,QAAA9P,GAAAk3C,EAAAH,GACA,GAAAI,MACAC,EAAA,EACAC,KACAC,EAAA,CAcA,IAXAr1C,EAAAi1C,EAAA,SAAAruC,GACAwuC,EAAAxuC,GAAAmuC,EAAAnuC,KAEA5G,EAAAi1C,EAAA,SAAAruC,GAGA0uC,EAAAN,EAAApuC,KAAAsuC,EAAAtuC,GAAAwuC,EAAAxuC,GAAAouC,EAAApuC,IACA2uC,EAAAL,EAAAtuC,IAAAuuC,IACAI,EAAAH,EAAAxuC,IAAAyuC,MAGAG,EAAAV,GAQA,MANAS,GAAAP,EAAAC,EAAA,IACAG,EAAAH,EAAA,SAEAM,EAAAP,EAAAC,EAAA,MACAG,EAAAH,EAAA,UAEAG,CAOA,IA5BA,IA4BAC,GAAAF,EAMA,IAAAA,GAlCA,EAmCA,MAAAD,EAIA,QAAA93C,GAAA,EAA+BA,EAAA63C,EAAA33C,OAAkBF,IAAA,CACjD,GAAAwJ,GAAAquC,EAAA73C,EACA,KAAAk4C,EAAAJ,EAAAtuC,IAAA0uC,EAAAP,EAAAnuC,GAAA,CACAsuC,EAAAtuC,GAAAmuC,EAAAnuC,EACA,QAGA,MAAAsuC,GAjBA,MAAAE,GAqBA,QAAAE,GAAAr1C,EAAA2G,GACA,MAAA3G,GAAAnC,eAAA8I,GAGA,QAAA2uC,GAAAt1C,EAAA2G,GACA,aAAA3G,EAAA2G,IAAA,SAAA3G,EAAA2G,GAGA,QAAA2tB,GAAA0gB,EAAAj3C,EAAAjB,GACAiD,EAAAi1C,EAAA,SAAAruC,GACA5I,EAAA4I,GAAA7J,EAAA6J,MA5EAyC,EAAAnL,SAAA2P,UAEA,IAAA2nC,GAAA3nC,EAAA2nC,YACAnsC,EAAAhL,QAAAm3C,aAEA,IAAAC,GAAA13C,EAAA21C,EAAA,MACAgC,EAAA33C,EAAA21C,EAAA,KAEAnf,GAAAmf,EAAA,GAAAqB,EAAAU,GACAlhB,EAAAmf,EAAA,GAAAqB,EAAAW,IA6EAjqC,EAAA+yB,gBAAA,SAAAzhC,GACA,MAAA0O,GAAAkqC,oBAAyC54C,IAQzC0O,EAAAkqC,iBAAA,SAAA33C,EAAAjB,GAIA,MAHAA,IAAAiB,GAAAgC,EAAAyzC,EAAA,SAAA7sC,GACA7J,EAAAe,eAAA8I,KAAA5I,EAAA4I,GAAA7J,EAAA6J,MAEA5I,GAGApB,EAAAC,QAAA4O,GtB0zQQ,CAEF,SAAU7O,EAAQC,EAAS+I,GAEjC,YuBhxRA,SAAAka,GAAA1Z,GAEA,MAAAA,GAAA0Z,sBAAA1Z,EAAA0Z,yBAAwEP,KAAA,EAAAE,IAAA,GAIxE,QAAAm2B,GAAAxvC,EAAA2B,EAAAiuB,EAAA6f,GAsCA,MArCA7f,SAaA6f,IAAA36B,EAAAQ,gBACAo6B,EAAA1vC,EAAA2B,EAAAiuB,GASA9a,EAAAoH,QAAA+U,SAAA,MAAAtvB,EAAAguC,QAAAhuC,EAAAguC,SAAAhuC,EAAAiuC,SACAhgB,EAAAigB,IAAAluC,EAAAguC,OACA/f,EAAAkgB,IAAAnuC,EAAAouC,QAGA,MAAApuC,EAAAiuC,SACAhgB,EAAAigB,IAAAluC,EAAAiuC,QACAhgB,EAAAkgB,IAAAnuC,EAAAquC,SAIAN,EAAA1vC,EAAA2B,EAAAiuB,GAGAA,EAGA,QAAA8f,GAAA1vC,EAAA2B,EAAAiuB,GAEA,GAAA2d,GAAA7zB,EAAA1Z,EACA4vB,GAAAigB,IAAAluC,EAAAsuC,QAAA1C,EAAAp0B,KACAyW,EAAAkgB,IAAAnuC,EAAAuuC,QAAA3C,EAAAl0B,IAOA,QAAA82B,GAAAnwC,EAAA2B,EAAA8tC,GAIA,GAFA9tC,KAAAkV,OAAA3F,MAEA,MAAAvP,EAAAkuC,IACA,MAAAluC,EAGA,IAAA2U,GAAA3U,EAAArG,IAGA,IAFAgb,KAAAxd,QAAA,YAMA,CACA,GAAAs3C,GAAA,YAAA95B,EACA3U,EAAA0uC,cAAA,GACA1uC,EAAA2uC,eAAA,EACAF,IAAAZ,EAAAxvC,EAAAowC,EAAAzuC,EAAA8tC,OAPAD,GAAAxvC,EAAA2B,IAAA8tC,GACA9tC,EAAA4uC,QAAA5uC,EAAA,WAAAA,EAAA6uC,WAAA,MAAA7uC,EAAA8uC,QAAA,IASA,OAAA9uC,GAGA,QAAA+uC,GAAA1wC,EAAAQ,EAAA+K,GACAolC,EACA3wC,EAAA0wC,iBAAAlwC,EAAA+K,GAGAvL,EAAA4wC,YAAA,KAAApwC,EAAA+K,GAIA,QAAAslC,GAAA7wC,EAAAQ,EAAA+K,GACAolC,EACA3wC,EAAA6wC,oBAAArwC,EAAA+K,GAGAvL,EAAA8wC,YAAA,KAAAtwC,EAAA+K,GAtGA,GAAAE,GAAAjM,EAAA,IACAsV,EAAAtV,EAAA,IAEAmxC,EAAA,mBAAA95B,kBAAA65B,iBAgHAK,EAAAJ,EACA,SAAAhvC,GACAA,EAAAqvC,iBACArvC,EAAAsvC,kBACAtvC,EAAAuvC,cAAA,GAEA,SAAAvvC,GACAA,EAAAwvC,aAAA,EACAxvC,EAAAuvC,cAAA,EAGA16C,GAAAC,SACA+4C,gBACAW,iBACAO,mBACAG,sBAEAE,OAEAK,WAAA3lC,IvBqyRM,SAAUjV,EAAQC,GwB36RxB,GAAA46C,GAAA1zC,MAAArE,UAAAsC,MAOA6P,EAAA,WACAtQ,KAAAm2C,cAGA7lC,GAAAnS,WAEAlC,YAAAqU,EASA2L,IAAA,SAAAlG,EAAA3F,EAAAxR,GACA,GAAAw3C,GAAAp2C,KAAAm2C,UAEA,KAAA/lC,IAAA2F,EACA,MAAA/V,KAGAo2C,GAAArgC,KACAqgC,EAAArgC,MAGA,QAAAla,GAAA,EAA2BA,EAAAu6C,EAAArgC,GAAAha,OAAsBF,IACjD,GAAAu6C,EAAArgC,GAAAla,GAAAuI,IAAAgM,EACA,MAAApQ,KAUA,OANAo2C,GAAArgC,GAAA9W,MACAmF,EAAAgM,EACA6L,KAAA,EACA2U,IAAAhyB,GAAAoB,OAGAA,MASAwM,GAAA,SAAAuJ,EAAA3F,EAAAxR,GACA,GAAAw3C,GAAAp2C,KAAAm2C,UAEA,KAAA/lC,IAAA2F,EACA,MAAA/V,KAGAo2C,GAAArgC,KACAqgC,EAAArgC,MAGA,QAAAla,GAAA,EAA2BA,EAAAu6C,EAAArgC,GAAAha,OAAsBF,IACjD,GAAAu6C,EAAArgC,GAAAla,GAAAuI,IAAAgM,EACA,MAAApQ,KAUA,OANAo2C,GAAArgC,GAAA9W,MACAmF,EAAAgM,EACA6L,KAAA,EACA2U,IAAAhyB,GAAAoB,OAGAA,MAQAq2C,SAAA,SAAAtgC,GACA,GAAAqgC,GAAAp2C,KAAAm2C,UACA,OAAAC,GAAArgC,IAAAqgC,EAAArgC,GAAAha,QAQAigB,IAAA,SAAAjG,EAAA3F,GACA,GAAAgmC,GAAAp2C,KAAAm2C,UAEA,KAAApgC,EAEA,MADA/V,MAAAm2C,cACAn2C,IAGA,IAAAoQ,EAAA,CACA,GAAAgmC,EAAArgC,GAAA,CAEA,OADAugC,MACAz6C,EAAA,EAAAguC,EAAAuM,EAAArgC,GAAAha,OAAyDF,EAAAguC,EAAOhuC,IAChEu6C,EAAArgC,GAAAla,GAAA,GAAAuU,GACAkmC,EAAAr3C,KAAAm3C,EAAArgC,GAAAla,GAGAu6C,GAAArgC,GAAAugC,EAGAF,EAAArgC,IAAA,IAAAqgC,EAAArgC,GAAAha,cACAq6C,GAAArgC,cAIAqgC,GAAArgC,EAGA,OAAA/V,OAQAqW,QAAA,SAAAlW,GACA,GAAAH,KAAAm2C,WAAAh2C,GAAA,CACA,GAAAT,GAAAE,UACA22C,EAAA72C,EAAA3D,MAEAw6C,GAAA,IACA72C,EAAAw2C,EAAAt6C,KAAA8D,EAAA,GAKA,QAFA02C,GAAAp2C,KAAAm2C,WAAAh2C,GACArE,EAAAs6C,EAAAr6C,OACAF,EAAA,EAA+BA,EAAAC,GAAS,CAExC,OAAAy6C,GACA,OACAH,EAAAv6C,GAAA,EAAAD,KAAAw6C,EAAAv6C,GAAA,IACA,MACA,QACAu6C,EAAAv6C,GAAA,EAAAD,KAAAw6C,EAAAv6C,GAAA,IAAA6D,EAAA,GACA,MACA,QACA02C,EAAAv6C,GAAA,EAAAD,KAAAw6C,EAAAv6C,GAAA,IAAA6D,EAAA,GAAAA,EAAA,GACA,MACA,SAEA02C,EAAAv6C,GAAA,EAAAgE,MAAAu2C,EAAAv6C,GAAA,IAAA6D,GAIA02C,EAAAv6C,GAAA,KACAu6C,EAAA99B,OAAAzc,EAAA,GACAC,KAGAD,KAKA,MAAAmE,OAOAw2C,mBAAA,SAAAr2C,GACA,GAAAH,KAAAm2C,WAAAh2C,GAAA,CACA,GAAAT,GAAAE,UACA22C,EAAA72C,EAAA3D,MAEAw6C,GAAA,IACA72C,EAAAw2C,EAAAt6C,KAAA8D,EAAA,EAAAA,EAAA3D,OAAA,GAMA,QAJA60B,GAAAlxB,IAAA3D,OAAA,GAEAq6C,EAAAp2C,KAAAm2C,WAAAh2C,GACArE,EAAAs6C,EAAAr6C,OACAF,EAAA,EAA+BA,EAAAC,GAAS,CAExC,OAAAy6C,GACA,OACAH,EAAAv6C,GAAA,EAAAD,KAAAg1B,EACA,MACA,QACAwlB,EAAAv6C,GAAA,EAAAD,KAAAg1B,EAAAlxB,EAAA,GACA,MACA,QACA02C,EAAAv6C,GAAA,EAAAD,KAAAg1B,EAAAlxB,EAAA,GAAAA,EAAA,GACA,MACA,SAEA02C,EAAAv6C,GAAA,EAAAgE,MAAA+wB,EAAAlxB,GAIA02C,EAAAv6C,GAAA,KACAu6C,EAAA99B,OAAAzc,EAAA,GACAC,KAGAD,KAKA,MAAAmE,QA4EA3E,EAAAC,QAAAgV,GxB27RM,SAAUjV,EAAQC,EAAS+I,GyBnpSjC,QAAAoyC,GAAA56C,GAEA,MADAA,GAAAyM,KAAAD,MAAAxM,GACAA,EAAA,IAAAA,EAAA,QAAAA,EAGA,QAAA66C,GAAA76C,GAEA,MADAA,GAAAyM,KAAAD,MAAAxM,GACAA,EAAA,IAAAA,EAAA,QAAAA,EAGA,QAAA86C,GAAA3sB,GACA,MAAAA,GAAA,IAAAA,EAAA,IAAAA,EAGA,QAAA4sB,GAAA7wB,GACA,MACA0wB,GADA1wB,EAAAhqB,QAAA,MAAAgqB,EAAA2R,OAAA3R,EAAAhqB,OAAA,GACA8qB,WAAAd,GAAA,QAEA8wB,SAAA9wB,EAAA,KAGA,QAAA+wB,GAAA/wB,GACA,MACA4wB,GADA5wB,EAAAhqB,QAAA,MAAAgqB,EAAA2R,OAAA3R,EAAAhqB,OAAA,GACA8qB,WAAAd,GAAA,IAEAc,WAAAd,IAGA,QAAAgxB,GAAAnH,EAAAC,EAAAzrC,GAQA,MAPAA,GAAA,EACAA,GAAA,EAEAA,EAAA,IACAA,GAAA,GAGA,EAAAA,EAAA,EACAwrC,GAAAC,EAAAD,GAAAxrC,EAAA,EAEA,EAAAA,EAAA,EACAyrC,EAEA,EAAAzrC,EAAA,EACAwrC,GAAAC,EAAAD,IAAA,IAAAxrC,GAAA,EAEAwrC,EAGA,QAAAta,GAAA1kB,EAAAC,EAAAmmC,GACA,MAAApmC,IAAAC,EAAAD,GAAAomC,EAGA,QAAAC,GAAAxiB,EAAAyiB,EAAA7nC,EAAAwB,EAAAD,GAEA,MADA6jB,GAAA,GAAAyiB,EAAmBziB,EAAA,GAAAplB,EAAYolB,EAAA,GAAA5jB,EAAY4jB,EAAA,GAAA7jB,EAC3C6jB,EAEA,QAAA0iB,GAAA1iB,EAAA7jB,GAEA,MADA6jB,GAAA,GAAA7jB,EAAA,GAAsB6jB,EAAA,GAAA7jB,EAAA,GAAe6jB,EAAA,GAAA7jB,EAAA,GAAe6jB,EAAA,GAAA7jB,EAAA,GACpD6jB,EAIA,QAAA2iB,GAAAC,EAAAC,GAEAC,GACAJ,EAAAI,EAAAD,GAEAC,EAAAC,EAAAC,IAAAJ,EAAAE,GAAAD,EAAA72C,SAQA,QAAAuf,GAAAq3B,EAAAC,GACA,GAAAD,EAAA,CAGAC,OAEA,IAAAI,GAAAF,EAAA/0C,IAAA40C,EACA,IAAAK,EACA,MAAAP,GAAAG,EAAAI,EAIAL,IAAA,EAEA,IAAAtxB,GAAAsxB,EAAAl1B,QAAA,SAAA9R,aAGA,IAAA0V,IAAA4xB,GAGA,MAFAR,GAAAG,EAAAK,EAAA5xB,IACAqxB,EAAAC,EAAAC,GACAA,CAIA,UAAAvxB,EAAA2R,OAAA,IAkCA,GAAAkgB,GAAA7xB,EAAApoB,QAAA,KAAAk6C,EAAA9xB,EAAApoB,QAAA,IACA,SAAAi6C,GAAAC,EAAA,IAAA9xB,EAAAhqB,OAAA,CACA,GAAA+7C,GAAA/xB,EAAAkT,OAAA,EAAA2e,GACAz2B,EAAA4E,EAAAkT,OAAA2e,EAAA,EAAAC,GAAAD,EAAA,IAAA3iC,MAAA,KACA8iC,EAAA,CACA,QAAAD,GACA,WACA,OAAA32B,EAAAplB,OAEA,WADAk7C,GAAAK,EAAA,QAGAS,GAAAjB,EAAA31B,EAAAhM,MAEA,WACA,WAAAgM,EAAAplB,WACAk7C,GAAAK,EAAA,UAGAL,EAAAK,EACAV,EAAAz1B,EAAA,IACAy1B,EAAAz1B,EAAA,IACAy1B,EAAAz1B,EAAA,IACA42B,GAEAX,EAAAC,EAAAC,GACAA,EACA,YACA,WAAAn2B,EAAAplB,WACAk7C,GAAAK,EAAA,UAGAn2B,EAAA,GAAA21B,EAAA31B,EAAA,IACA62B,EAAA72B,EAAAm2B,GACAF,EAAAC,EAAAC,GACAA,EACA,WACA,WAAAn2B,EAAAplB,WACAk7C,GAAAK,EAAA,UAGAU,EAAA72B,EAAAm2B,GACAF,EAAAC,EAAAC,GACAA,EACA,SACA,QAIAL,EAAAK,EAAA,aAlFA,CACA,OAAAvxB,EAAAhqB,OAAA,CACA,GAAAk8C,GAAApB,SAAA9wB,EAAAkT,OAAA,MACA,OAAAgf,IAAA,GAAAA,GAAA,MAIAhB,EAAAK,GACA,KAAAW,IAAA,QAAAA,IAAA,EACA,IAAAA,GAAA,IAAAA,IAAA,EACA,GAAAA,GAAA,GAAAA,IAAA,EACA,GAEAb,EAAAC,EAAAC,GACAA,OAVAL,GAAAK,EAAA,SAYA,OAAAvxB,EAAAhqB,OAAA,CACA,GAAAk8C,GAAApB,SAAA9wB,EAAAkT,OAAA,MACA,OAAAgf,IAAA,GAAAA,GAAA,UAIAhB,EAAAK,GACA,SAAAW,IAAA,IACA,MAAAA,IAAA,EACA,IAAAA,EACA,GAEAb,EAAAC,EAAAC,GACAA,OAVAL,GAAAK,EAAA,YAwEA,QAAAU,GAAAE,EAAAC,GACA,GAAA/zC,IAAAyiB,WAAAqxB,EAAA,qBAGAljB,EAAA8hB,EAAAoB,EAAA,IACArO,EAAAiN,EAAAoB,EAAA,IACArI,EAAAhG,GAAA,GAAAA,GAAA7U,EAAA,GAAA6U,EAAA7U,EAAA6U,EAAA7U,EACA4a,EAAA,EAAA/F,EAAAgG,CAcA,OAZAsI,SACAlB,EAAAkB,EACA1B,EAAA,IAAAM,EAAAnH,EAAAC,EAAAzrC,EAAA,MACAqyC,EAAA,IAAAM,EAAAnH,EAAAC,EAAAzrC,IACAqyC,EAAA,IAAAM,EAAAnH,EAAAC,EAAAzrC,EAAA,MACA,GAGA,IAAA8zC,EAAAn8C,SACAo8C,EAAA,GAAAD,EAAA,IAGAC,EAOA,QAAAC,GAAAD,GACA,GAAAA,EAAA,CAKA,GASAE,GACAC,EAVAC,EAAAJ,EAAA,OACAK,EAAAL,EAAA,OACA7L,EAAA6L,EAAA,OAEAM,EAAAnwC,KAAAI,IAAA6vC,EAAAC,EAAAlM,GACAoM,EAAApwC,KAAAE,IAAA+vC,EAAAC,EAAAlM,GACAqM,EAAAD,EAAAD,EAEAG,GAAAF,EAAAD,GAAA,CAIA,QAAAE,EACAN,EAAA,EACAC,EAAA,MAEA,CAEAA,EADAM,EAAA,GACAD,GAAAD,EAAAD,GAGAE,GAAA,EAAAD,EAAAD,EAGA,IAAAI,KAAAH,EAAAH,GAAA,EAAAI,EAAA,GAAAA,EACAG,IAAAJ,EAAAF,GAAA,EAAAG,EAAA,GAAAA,EACAI,IAAAL,EAAApM,GAAA,EAAAqM,EAAA,GAAAA,CAEAJ,KAAAG,EACAL,EAAAU,EAAAD,EAEAN,IAAAE,EACAL,EAAA,IAAAQ,EAAAE,EAEAzM,IAAAoM,IACAL,EAAA,IAAAS,EAAAD,GAGAR,EAAA,IACAA,GAAA,GAGAA,EAAA,IACAA,GAAA,GAIA,GAAAH,IAAA,IAAAG,EAAAC,EAAAM,EAMA,OAJA,OAAAT,EAAA,IACAD,EAAAj5C,KAAAk5C,EAAA,IAGAD,GASA,QAAAvzC,GAAAF,EAAAu0C,GACA,GAAAj5B,GAAAC,EAAAvb,EACA,IAAAsb,EAAA,CACA,OAAAlkB,GAAA,EAA2BA,EAAA,EAAOA,IAElCkkB,EAAAlkB,GADAm9C,EAAA,EACAj5B,EAAAlkB,IAAA,EAAAm9C,GAAA,GAGA,IAAAj5B,EAAAlkB,IAAAm9C,EAAAj5B,EAAAlkB,GAAA,CAGA,OAAAokB,GAAAF,EAAA,IAAAA,EAAAhkB,OAAA,eASA,QAAAk9C,GAAAx0C,EAAAu0C,GACA,GAAAj5B,GAAAC,EAAAvb,EACA,IAAAsb,EACA,gBAAAA,EAAA,SAAAA,EAAA,SAAAA,EAAA,IAAAzd,SAAA,IAAA7B,MAAA,GAWA,QAAAy4C,GAAAC,EAAAC,EAAA3kB,GACA,GAAA2kB,KAAAr9C,QACAo9C,GAAA,GAAAA,GAAA,EADA,CAMA1kB,OAEA,IAAA52B,GAAAs7C,GAAAC,EAAAr9C,OAAA,GACAs9C,EAAA/wC,KAAA2R,MAAApc,GACAy7C,EAAAhxC,KAAAixC,KAAA17C,GACA27C,EAAAJ,EAAAC,GACAI,EAAAL,EAAAE,GACAI,EAAA77C,EAAAw7C,CAMA,OALA5kB,GAAA,GAAAgiB,EAAAnhB,EAAAkkB,EAAA,GAAAC,EAAA,GAAAC,IACAjlB,EAAA,GAAAgiB,EAAAnhB,EAAAkkB,EAAA,GAAAC,EAAA,GAAAC,IACAjlB,EAAA,GAAAgiB,EAAAnhB,EAAAkkB,EAAA,GAAAC,EAAA,GAAAC,IACAjlB,EAAA,GAAAkiB,EAAArhB,EAAAkkB,EAAA,GAAAC,EAAA,GAAAC,IAEAjlB,GAUA,QAAAklB,GAAAR,EAAAC,EAAAQ,GACA,GAAAR,KAAAr9C,QACAo9C,GAAA,GAAAA,GAAA,EADA,CAMA,GAAAt7C,GAAAs7C,GAAAC,EAAAr9C,OAAA,GACAs9C,EAAA/wC,KAAA2R,MAAApc,GACAy7C,EAAAhxC,KAAAixC,KAAA17C,GACA27C,EAAAx5B,EAAAo5B,EAAAC,IACAI,EAAAz5B,EAAAo5B,EAAAE,IACAI,EAAA77C,EAAAw7C,EAEA50C,EAAAwb,GAEAw2B,EAAAnhB,EAAAkkB,EAAA,GAAAC,EAAA,GAAAC,IACAjD,EAAAnhB,EAAAkkB,EAAA,GAAAC,EAAA,GAAAC,IACAjD,EAAAnhB,EAAAkkB,EAAA,GAAAC,EAAA,GAAAC,IACA/C,EAAArhB,EAAAkkB,EAAA,GAAAC,EAAA,GAAAC,KAEA,OAGA,OAAAE,IAEAn1C,QACA40C,YACAC,aACAz7C,SAEA4G,GAWA,QAAAo1C,GAAAp1C,EAAAL,EAAA4wB,EAAA6U,GAGA,GAFAplC,EAAAub,EAAAvb,GAQA,MALAA,GAAA2zC,EAAA3zC,GACA,MAAAL,IAAAK,EAAA,GAAAiyC,EAAAtyC,IACA,MAAA4wB,IAAAvwB,EAAA,GAAAqyC,EAAA9hB,IACA,MAAA6U,IAAAplC,EAAA,GAAAqyC,EAAAjN,IAEA5pB,EAAA+3B,EAAAvzC,GAAA,QAUA,QAAAq1C,GAAAr1C,EAAAszC,GAGA,IAFAtzC,EAAAub,EAAAvb,KAEA,MAAAszC,EAEA,MADAtzC,GAAA,GAAAkyC,EAAAoB,GACA93B,EAAAxb,EAAA,QASA,QAAAwb,GAAA85B,EAAA55C,GACA,GAAA45C,KAAAh+C,OAAA,CAGA,GAAAs7C,GAAA0C,EAAA,OAAAA,EAAA,OAAAA,EAAA,EAIA,OAHA,SAAA55C,GAAA,SAAAA,GAAA,SAAAA,IACAk3C,GAAA,IAAA0C,EAAA,IAEA55C,EAAA,IAAAk3C,EAAA,KAhgBA,GAAA2C,GAAA31C,EAAA,KAEAszC,GACAsC,aAAA,SAAAC,WAAA,eACAC,cAAA,eAAAC,MAAA,aACAC,YAAA,eAAAC,OAAA,eACAC,OAAA,eAAAC,QAAA,eACAC,OAAA,SAAAC,gBAAA,eACAC,MAAA,WAAAC,YAAA,cACAC,OAAA,aAAAC,WAAA,eACAC,WAAA,cAAAC,YAAA,aACAC,WAAA,cAAAC,OAAA,cACAC,gBAAA,eAAAC,UAAA,eACAC,SAAA,aAAAC,MAAA,aACAC,UAAA,WAAAC,UAAA,aACAC,eAAA,cAAAC,UAAA,eACAC,WAAA,WAAAC,UAAA,eACAC,WAAA,eAAAC,aAAA,aACAC,gBAAA,aAAAC,YAAA,aACAC,YAAA,cAAAC,SAAA,WACAC,YAAA,eAAAC,cAAA,eACAC,eAAA,aAAAC,eAAA,YACAC,eAAA,YAAAC,eAAA,aACAC,YAAA,aAAAC,UAAA,cACAC,aAAA,aAAAC,SAAA,eACAC,SAAA,eAAAC,YAAA,cACAC,WAAA,aAAAC,aAAA,eACAC,aAAA,aAAAC,SAAA,aACAC,WAAA,eAAAC,YAAA,eACAC,MAAA,aAAAC,WAAA,cACAC,MAAA,eAAAC,OAAA,WACAC,aAAA,cAAAC,MAAA,eACAC,UAAA,eAAAC,SAAA,eACAC,WAAA,aAAAC,QAAA,YACAC,OAAA,eAAAC,OAAA,eACAC,UAAA,eAAAC,eAAA,eACAC,WAAA,aAAAC,cAAA,eACAC,WAAA,eAAAC,YAAA,eACAC,WAAA,eAAAC,sBAAA,eACAC,WAAA,eAAAC,YAAA,eACAC,WAAA,eAAAC,WAAA,eACAC,aAAA,eAAAC,eAAA,cACAC,cAAA,eAAAC,gBAAA,eACAC,gBAAA,eAAAC,gBAAA,eACAC,aAAA,eAAAC,MAAA,WACAC,WAAA,aAAAC,OAAA,eACAC,SAAA,aAAAC,QAAA,WACAC,kBAAA,eAAAC,YAAA,WACAC,cAAA,cAAAC,cAAA,eACAC,gBAAA,cAAAC,iBAAA,eACAC,mBAAA,aAAAC,iBAAA,cACAC,iBAAA,cAAAC,cAAA,aACAC,WAAA,eAAAC,WAAA,eACAC,UAAA,eAAAC,aAAA,eACAC,MAAA,WAAAC,SAAA,eACAC,OAAA,aAAAC,WAAA,cACAC,QAAA,aAAAC,WAAA,YACAC,QAAA,eAAAC,eAAA,eACAC,WAAA,eAAAC,eAAA,eACAC,eAAA,eAAAC,YAAA,eACAC,WAAA,eAAAC,MAAA,cACAC,MAAA,eAAAC,MAAA,eACAC,YAAA,eAAAC,QAAA,aACAC,KAAA,WAAAC,WAAA,eACAC,WAAA,cAAAC,aAAA,aACAC,QAAA,eAAAC,YAAA,cACAC,UAAA,aAAAC,UAAA,eACAC,QAAA,aAAAC,QAAA,eACAC,SAAA,eAAAC,WAAA,cACAC,WAAA,eAAAC,WAAA,eACAC,MAAA,eAAAC,aAAA,aACAC,WAAA,cAAAC,KAAA,eACAC,MAAA,aAAAC,SAAA,eACAC,QAAA,aAAAC,WAAA,cACAC,QAAA,eAAAC,OAAA,eACAC,OAAA,eAAAC,YAAA,eACAC,QAAA,aAAAC,aAAA,eA+DA5L,EAAA,GAAAwC,GAAA,IACAzC,EAAA,IAuXAl8C,GAAAC,SACA0kB,QACArb,OACAs0C,QACAC,iBACAS,aACAE,YACAC,cACA75B,czBivSM,SAAU5kB,EAAQyiC,EAAqBz5B,GAE7C,c0BnwTA,SAAA2L;;;;;AASA,QAAAqzC,GAAA54B,GACA,WAAA64B,KAAA74B,GAAA,OAAAA,EAGA,QAAA84B,GAAA94B,GACA,WAAA64B,KAAA74B,GAAA,OAAAA,EAGA,QAAA+4B,GAAA/4B,GACA,WAAAA,EAGA,QAAAg5B,GAAAh5B,GACA,WAAAA,EAMA,QAAAruB,GAAAyB,GACA,sBAAAA,IAAA,gBAAAA,GAQA,QAAAlB,GAAA+B,GACA,cAAAA,GAAA,gBAAAA,GASA,QAAAglD,GAAAhlD,GACA,0BAAAilD,GAAA/nD,KAAA8C,GAGA,QAAAklD,GAAAn5B,GACA,0BAAAk5B,GAAA/nD,KAAA6uB,GAMA,QAAAo5B,GAAA59B,GACA,GAAAumB,GAAA3lB,WAAAZ,EACA,OAAAumB,IAAA,GAAAlkC,KAAA2R,MAAAuyB,QAAAzkB,SAAA9B,GAMA,QAAA3jB,GAAA2jB,GACA,aAAAA,EACA,GACA,gBAAAA,GACA69B,KAAA7jC,UAAAgG,EAAA,QACA4R,OAAA5R,GAOA,QAAA89B,GAAA99B,GACA,GAAAumB,GAAA3lB,WAAAZ,EACA,OAAA3C,OAAAkpB,GAAAvmB,EAAAumB,EAOA,QAAAre,GACApI,EACAi+B,GAIA,OAFAjlD,GAAAsD,OAAAsd,OAAA,MACArC,EAAAyI,EAAA9Q,MAAA,KACApZ,EAAA,EAAiBA,EAAAyhB,EAAAvhB,OAAiBF,IAClCkD,EAAAue,EAAAzhB,KAAA,CAEA,OAAAmoD,GACA,SAAA/9B,GAAsB,MAAAlnB,GAAAknB,EAAA5V,gBACtB,SAAA4V,GAAsB,MAAAlnB,GAAAknB,IAgBtB,QAAA7N,GAAA+O,EAAA1R,GACA,GAAA0R,EAAAprB,OAAA,CACA,GAAAuY,GAAA6S,EAAAxpB,QAAA8X,EACA,IAAAnB,GAAA,EACA,MAAA6S,GAAA7O,OAAAhE,EAAA,IASA,QAAAklB,GAAA96B,EAAApC,GACA,MAAAC,IAAAX,KAAA8C,EAAApC,GAMA,QAAAo7C,GAAAhZ,GACA,GAAAulB,GAAA5hD,OAAAsd,OAAA,KACA,iBAAAoG,GAEA,MADAk+B,GAAAl+B,KACAk+B,EAAAl+B,GAAA2Y,EAAA3Y,KAiCA,QAAAvmB,GAAAk/B,EAAA9N,GACA,QAAAszB,GAAAtzC,GACA,GAAAi5B,GAAAjqC,UAAA7D,MACA,OAAA8tC,GACAA,EAAA,EACAnL,EAAA7+B,MAAA+wB,EAAAhxB,WACA8+B,EAAA9iC,KAAAg1B,EAAAhgB,GACA8tB,EAAA9iC,KAAAg1B,GAIA,MADAszB,GAAAC,QAAAzlB,EAAA3iC,OACAmoD,EAMA,QAAAE,GAAA9mC,EAAA+mC,GACAA,KAAA,CAGA,KAFA,GAAAxoD,GAAAyhB,EAAAvhB,OAAAsoD,EACA5qB,EAAA,GAAAj3B,OAAA3G,GACAA,KACA49B,EAAA59B,GAAAyhB,EAAAzhB,EAAAwoD,EAEA,OAAA5qB,GAMA,QAAAv8B,GAAAonD,EAAAC,GACA,OAAAjoD,KAAAioD,GACAD,EAAAhoD,GAAAioD,EAAAjoD,EAEA,OAAAgoD,GAMA,QAAAE,GAAAr9B,GAEA,OADAwb,MACA9mC,EAAA,EAAiBA,EAAAsrB,EAAAprB,OAAgBF,IACjCsrB,EAAAtrB,IACAqB,EAAAylC,EAAAxb,EAAAtrB,GAGA,OAAA8mC,GAQA,QAAA//B,GAAAgO,EAAAC,EAAAu7B,IAyBA,QAAAqY,GAAA7zC,EAAAC,GACA,GAAA6zC,GAAA/nD,EAAAiU,GACA+zC,EAAAhoD,EAAAkU,EACA,KAAA6zC,IAAAC,EAOG,OAAAD,IAAAC,GACH9sB,OAAAjnB,KAAAinB,OAAAhnB,EAPA,KACA,MAAAizC,MAAA7jC,UAAArP,KAAAkzC,KAAA7jC,UAAApP,GACK,MAAArK,GAEL,MAAAoK,KAAAC,GASA,QAAA+zC,GAAAz9B,EAAAlB,GACA,OAAApqB,GAAA,EAAiBA,EAAAsrB,EAAAprB,OAAgBF,IACjC,GAAA4oD,EAAAt9B,EAAAtrB,GAAAoqB,GAAkC,MAAApqB,EAElC,UAMA,QAAAgpD,GAAAnmB,GACA,GAAAomB,IAAA,CACA,mBACAA,IACAA,GAAA,EACApmB,EAAA7+B,MAAAG,KAAAJ,aAyHA,QAAAmlD,GAAAh/B,GACA,GAAAqmB,IAAArmB,EAAA,IAAAwlB,WAAA,EACA,aAAAa,GAAA,KAAAA,EAMA,QAAA4Y,GAAAtmD,EAAApC,EAAA2pB,EAAAka,GACA99B,OAAA69B,eAAAxhC,EAAApC,GACAuB,MAAAooB,EACAka,eACA8kB,UAAA,EACAC,cAAA,IAQA,QAAAtuB,GAAAzsB,GACA,IAAAg7C,GAAAzhC,KAAAvZ,GAAA,CAGA,GAAAi7C,GAAAj7C,EAAA8K,MAAA,IACA,iBAAAvW,GACA,OAAA7C,GAAA,EAAmBA,EAAAupD,EAAArpD,OAAqBF,IAAA,CACxC,IAAA6C,EAAiB,MACjBA,KAAA0mD,EAAAvpD,IAEA,MAAA6C,KAqGA,QAAA2mD,GAAAriB,EAAAsiB,EAAAC,GACA,GAAAllB,GAAAmlB,aACAnlB,GAAAmlB,aAAA5pD,KAAA,KAAAonC,EAAAsiB,EAAAC,OACG,CAKH,IAAAE,IAAA,mBAAAjyC,SAGA,KAAAwvB,EAFAxvB,SAAA4uB,MAAAY,IA6DA,QAAA0iB,GAAA3uB,GACA,wBAAAA,IAAA,cAAArT,KAAAqT,EAAAz0B,YAgKA,QAAAqjD,GAAAC,GACAC,GAAAppD,QAAmBqpD,GAAA7mD,KAAA4mD,GAAAppD,QACnBopD,GAAAppD,OAAAmpD,EAGA,QAAAG,KACAF,GAAAppD,OAAAqpD,GAAA3wC,MA2GA,QAAA6wC,GAAAvpD,EAAAwpD,EAAAtnB,GAEAliC,EAAAypD,UAAAD,EASA,QAAAE,GAAA1pD,EAAAwpD,EAAAtnB,GACA,OAAA9iC,GAAA,EAAAguC,EAAAlL,EAAA5iC,OAAkCF,EAAAguC,EAAOhuC,IAAA,CACzC,GAAAS,GAAAqiC,EAAA9iC,EACAmpD,GAAAvoD,EAAAH,EAAA2pD,EAAA3pD,KASA,QAAA8pD,GAAAvoD,EAAAwoD,GACA,GAAA1pD,EAAAkB,GAAA,CAGA,GAAAyoD,EAeA,OAdA9sB,GAAA37B,EAAA,WAAAA,EAAA0oD,iBAAAC,IACAF,EAAAzoD,EAAA0oD,OAEAE,GAAAC,gBACAC,OACAnkD,MAAA1F,QAAAe,IAAA6lD,EAAA7lD,KACAwE,OAAAukD,aAAA/oD,KACAA,EAAAgpD,SAEAP,EAAA,GAAAE,IAAA3oD,IAEAwoD,GAAAC,GACAA,EAAAQ,UAEAR,GAMA,QAAAS,GACAroD,EACApC,EACA2pB,EACA+gC,EACAC,GAEA,GAAAC,GAAA,GAAArB,IAEAsB,EAAA9kD,OAAA+kD,yBAAA1oD,EAAApC,EACA,KAAA6qD,IAAA,IAAAA,EAAAjC,aAAA,CAKA,GAAAvjB,GAAAwlB,KAAA1kD,IACA4kD,EAAAF,KAAAjmD,IAEAomD,GAAAL,GAAAb,EAAAngC,EACA5jB,QAAA69B,eAAAxhC,EAAApC,GACA6jC,YAAA,EACA+kB,cAAA,EACAziD,IAAA,WACA,GAAA5E,GAAA8jC,IAAA/lC,KAAA8C,GAAAunB,CAUA,OATA4/B,IAAAppD,SACAyqD,EAAAK,SACAD,GACAA,EAAAJ,IAAAK,SAEA/kD,MAAA1F,QAAAe,IACA2pD,EAAA3pD,IAGAA,GAEAqD,IAAA,SAAAumD,GACA,GAAA5pD,GAAA8jC,IAAA/lC,KAAA8C,GAAAunB,CAEAwhC,KAAA5pD,GAAA4pD,OAAA5pD,QAOAwpD,EACAA,EAAAzrD,KAAA8C,EAAA+oD,GAEAxhC,EAAAwhC,EAEAH,GAAAL,GAAAb,EAAAqB,GACAP,EAAAQ,cAUA,QAAAxmD,GAAAzE,EAAAH,EAAA2pB,GACA,GAAAzjB,MAAA1F,QAAAL,IAAAonD,EAAAvnD,GAGA,MAFAG,GAAAV,OAAAuM,KAAAE,IAAA/L,EAAAV,OAAAO,GACAG,EAAA6b,OAAAhc,EAAA,EAAA2pB,GACAA,CAEA,IAAAuT,EAAA/8B,EAAAH,GAEA,MADAG,GAAAH,GAAA2pB,EACAA,CAEA,IAAAqgC,GAAA,EAAAC,MACA,OAAA9pD,GAAAoqD,QAAAP,KAAAQ,QAKA7gC,EAEAqgC,GAIAS,EAAAT,EAAAzoD,MAAAvB,EAAA2pB,GACAqgC,EAAAY,IAAAQ,SACAzhC,IALAxpB,EAAAH,GAAA2pB,EACAA,GAUA,QAAA0hC,GAAAlrD,EAAAH,GACA,GAAAkG,MAAA1F,QAAAL,IAAAonD,EAAAvnD,GAEA,WADAG,GAAA6b,OAAAhc,EAAA,EAGA,IAAAgqD,GAAA,EAAAC,MACA9pD,GAAAoqD,QAAAP,KAAAQ,SAOAttB,EAAA/8B,EAAAH,WAGAG,GAAAH,GACAgqD,GAGAA,EAAAY,IAAAQ,UAOA,QAAAF,GAAA3pD,GACA,OAAA2I,OAAA,GAAA3K,EAAA,EAAAguC,EAAAhsC,EAAA9B,OAAiDF,EAAAguC,EAAOhuC,IACxD2K,EAAA3I,EAAAhC,GACA2K,KAAA+/C,QAAA//C,EAAA+/C,OAAAW,IAAAK,SACA/kD,MAAA1F,QAAA0J,IACAghD,EAAAhhD,GAgCA,QAAAohD,GAAAtD,EAAApoD,GACA,IAAAA,EAAc,MAAAooD,EAGd,QAFAhoD,GAAAurD,EAAAC,EACAnpB,EAAAt8B,OAAAs8B,KAAAziC,GACAL,EAAA,EAAiBA,EAAA8iC,EAAA5iC,OAAiBF,IAClCS,EAAAqiC,EAAA9iC,GACAgsD,EAAAvD,EAAAhoD,GACAwrD,EAAA5rD,EAAAI,GACAk9B,EAAA8qB,EAAAhoD,GAEKonD,EAAAmE,IAAAnE,EAAAoE,IACLF,EAAAC,EAAAC,GAFA5mD,EAAAojD,EAAAhoD,EAAAwrD,EAKA,OAAAxD,GAMA,QAAAyD,GACAC,EACAC,EACA3C,GAEA,MAAAA,GAmBG0C,GAAAC,EACH,WAEA,GAAAC,GAAA,kBAAAD,GACAA,EAAArsD,KAAA0pD,GACA2C,EACAE,EAAA,kBAAAH,GACAA,EAAApsD,KAAA0pD,OACAhC,EACA,OAAA4E,GACAN,EAAAM,EAAAC,GAEAA,OAZG,GAjBHF,EAGAD,EAQA,WACA,MAAAJ,GACA,kBAAAK,KAAArsD,KAAAoE,MAAAioD,EACAD,EAAApsD,KAAAoE,QAVAioD,EAHAD,EA2DA,QAAAI,GACAJ,EACAC,GAEA,MAAAA,GACAD,EACAA,EAAAloD,OAAAmoD,GACAzlD,MAAA1F,QAAAmrD,GACAA,GACAA,GACAD,EAcA,QAAAK,GAAAL,EAAAC,GACA,GAAAtlB,GAAAtgC,OAAAsd,OAAAqoC,GAAA,KACA,OAAAC,GACA/qD,EAAAylC,EAAAslB,GACAtlB,EA+EA,QAAA2lB,GAAAjlD,GACA,GAAA4D,GAAA5D,EAAA4D,KACA,IAAAA,EAAA,CACA,GACApL,GAAAoqB,EAAA5gB,EADAs9B,IAEA,IAAAngC,MAAA1F,QAAAmK,GAEA,IADApL,EAAAoL,EAAAlL,OACAF,KAEA,iBADAoqB,EAAAhf,EAAApL,MAEAwJ,EAAAkjD,GAAAtiC,GACA0c,EAAAt9B,IAAqBlF,KAAA,WAKlB,IAAAujD,EAAAz8C,GACH,OAAA3K,KAAA2K,GACAgf,EAAAhf,EAAA3K,GACA+I,EAAAkjD,GAAAjsD,GACAqmC,EAAAt9B,GAAAq+C,EAAAz9B,GACAA,GACW9lB,KAAA8lB,EAGX5iB,GAAA4D,MAAA07B,GAMA,QAAA6lB,GAAAnlD,GACA,GAAAolD,GAAAplD,EAAAolD,MACA,IAAAjmD,MAAA1F,QAAA2rD,GAEA,OADAC,GAAArlD,EAAAolD,UACA5sD,EAAA,EAAmBA,EAAA4sD,EAAA1sD,OAAmBF,IACtC6sD,EAAAD,EAAA5sD,IAAA4sD,EAAA5sD,GAQA,QAAA8sD,GAAAtlD,GACA,GAAAulD,GAAAvlD,EAAAwlD,UACA,IAAAD,EACA,OAAAtsD,KAAAssD,GAAA,CACA,GAAA5D,GAAA4D,EAAAtsD,EACA,mBAAA0oD,KACA4D,EAAAtsD,IAAqBkD,KAAAwlD,EAAAhwC,OAAAgwC,KAUrB,QAAA8D,GACAllD,EACAuC,EACAm/C,GAgCA,QAAAyD,GAAAzsD,GACA,GAAA0sD,GAAAC,GAAA3sD,IAAA4sD,EACA7lD,GAAA/G,GAAA0sD,EAAAplD,EAAAtH,GAAA6J,EAAA7J,GAAAgpD,EAAAhpD,GA5BA,kBAAA6J,KACAA,IAAA9C,SAGAilD,EAAAniD,GACAqiD,EAAAriD,GACAwiD,EAAAxiD,EACA,IAAAgjD,GAAAhjD,EAAAijD,OAIA,IAHAD,IACAvlD,EAAAklD,EAAAllD,EAAAulD,EAAA7D,IAEAn/C,EAAAkjD,OACA,OAAAxtD,GAAA,EAAAguC,EAAA1jC,EAAAkjD,OAAAttD,OAA4CF,EAAAguC,EAAOhuC,IACnD+H,EAAAklD,EAAAllD,EAAAuC,EAAAkjD,OAAAxtD,GAAAypD,EAGA,IACAhpD,GADA+G,IAEA,KAAA/G,IAAAsH,GACAmlD,EAAAzsD,EAEA,KAAAA,IAAA6J,GACAqzB,EAAA51B,EAAAtH,IACAysD,EAAAzsD,EAOA,OAAA+G,GAQA,QAAAimD,GACAjmD,EACAlD,EACA6Q,EACAu4C,GAGA,mBAAAv4C,GAAA,CAGA,GAAAw4C,GAAAnmD,EAAAlD,EAEA,IAAAq5B,EAAAgwB,EAAAx4C,GAA2B,MAAAw4C,GAAAx4C,EAC3B,IAAAy4C,GAAAlB,GAAAv3C,EACA,IAAAwoB,EAAAgwB,EAAAC,GAAoC,MAAAD,GAAAC,EACpC,IAAAC,GAAAC,GAAAF,EACA,IAAAjwB,EAAAgwB,EAAAE,GAAqC,MAAAF,GAAAE,EASrC,OAPAF,GAAAx4C,IAAAw4C,EAAAC,IAAAD,EAAAE,IAYA,QAAAE,GACAttD,EACAutD,EACAC,EACAxE,GAEA,GAAAlnD,GAAAyrD,EAAAvtD,GACAytD,GAAAvwB,EAAAswB,EAAAxtD,GACAuB,EAAAisD,EAAAxtD,EAUA,IARA0tD,EAAAC,QAAA7rD,EAAA+B,QACA4pD,IAAAvwB,EAAAp7B,EAAA,WACAP,GAAA,EACKmsD,EAAAnyB,OAAAz5B,EAAA+B,OAAA,KAAAtC,OAAAqsD,GAAA5tD,KACLuB,GAAA,QAIAylD,KAAAzlD,EAAA,CACAA,EAAAssD,EAAA7E,EAAAlnD,EAAA9B,EAGA,IAAA8tD,GAAA3D,GAAAC,aACAD,IAAAC,eAAA,EACAN,EAAAvoD,GACA4oD,GAAAC,cAAA0D,EAKA,MAAAvsD,GAMA,QAAAssD,GAAA7E,EAAAlnD,EAAA9B,GAEA,GAAAk9B,EAAAp7B,EAAA,YAGA,GAAA4mD,GAAA5mD,EAAAgF,OAYA,OAAAkiD,MAAAvhB,SAAA+lB,eACAxG,KAAAgC,EAAAvhB,SAAA+lB,UAAAxtD,QACAgnD,KAAAgC,EAAA+E,OAAA/tD,GAEAgpD,EAAA+E,OAAA/tD,GAIA,kBAAA0oD,IAAA,aAAAsF,EAAAlsD,EAAA+B,MACA6kD,EAAAppD,KAAA0pD,GACAN,GAiFA,QAAAsF,GAAA5rB,GACA,GAAA9X,GAAA8X,KAAAp8B,WAAAskB,MAAA,qBACA,OAAAA,KAAA,MAGA,QAAAojC,GAAA7pD,EAAAu+B,GACA,IAAAl8B,MAAA1F,QAAA4hC,GACA,MAAA4rB,GAAA5rB,KAAA4rB,EAAAnqD,EAEA,QAAAtE,GAAA,EAAAC,EAAA4iC,EAAA3iC,OAAkCF,EAAAC,EAASD,IAC3C,GAAAyuD,EAAA5rB,EAAA7iC,MAAAyuD,EAAAnqD,GACA,QAIA,UA4JA,QAAAoqD,GAAAtkC,GACA,UAAAukC,QAAAlH,iBAAAzrB,OAAA5R,IAOA,QAAAwkC,GAAAC,GACA,GAAAC,GAAA,GAAAH,IACAE,EAAAE,IACAF,EAAAlsD,KACAksD,EAAAG,SACAH,EAAAn4B,KACAm4B,EAAAI,IACAJ,EAAA9rD,QACA8rD,EAAAK,iBACAL,EAAAM,aAOA,OALAL,GAAAM,GAAAP,EAAAO,GACAN,EAAAO,SAAAR,EAAAQ,SACAP,EAAAruD,IAAAouD,EAAApuD,IACAquD,EAAAQ,UAAAT,EAAAS,UACAR,EAAAS,UAAA,EACAT,EAGA,QAAAU,IAAAC,GAGA,OAFAxvD,GAAAwvD,EAAAvvD,OACA4mC,EAAA,GAAAngC,OAAA1G,GACAD,EAAA,EAAiBA,EAAAC,EAASD,IAC1B8mC,EAAA9mC,GAAA4uD,EAAAa,EAAAzvD,GAEA,OAAA8mC,GAoBA,QAAA4oB,IAAAC,GACA,QAAAC,KACA,GAAAC,GAAA9rD,UAEA4rD,EAAAC,EAAAD,GACA,KAAAhpD,MAAA1F,QAAA0uD,GAOA,MAAAA,GAAA3rD,MAAA,KAAAD,UALA,QADA+qD,GAAAa,EAAA/qD,QACA5E,EAAA,EAAqBA,EAAA8uD,EAAA5uD,OAAmBF,IACxC8uD,EAAA9uD,GAAAgE,MAAA,KAAA6rD,GAQA,MADAD,GAAAD,MACAC,EAGA,QAAAE,IACAn/C,EACAo/C,EACA7nD,EACA8nD,EACAvG,GAEA,GAAAjgD,GAAAymD,EAAAC,EAAAh2C,CACA,KAAA1Q,IAAAmH,GACAs/C,EAAAt/C,EAAAnH,GACA0mD,EAAAH,EAAAvmD,GACA0Q,EAAAi/B,GAAA3vC,GACAg+C,EAAAyI,KAKKzI,EAAA0I,IACL1I,EAAAyI,EAAAN,OACAM,EAAAt/C,EAAAnH,GAAAkmD,GAAAO,IAEA/nD,EAAAgS,EAAA1Q,KAAAymD,EAAA/1C,EAAA8uC,KAAA9uC,EAAAi2C,QAAAj2C,EAAAk2C,UACKH,IAAAC,IACLA,EAAAP,IAAAM,EACAt/C,EAAAnH,GAAA0mD,GAGA,KAAA1mD,IAAAumD,GACAvI,EAAA72C,EAAAnH,MACA0Q,EAAAi/B,GAAA3vC,GACAwmD,EAAA91C,EAAA1Q,KAAAumD,EAAAvmD,GAAA0Q,EAAAi2C,UAOA,QAAAE,IAAAlH,EAAAmH,EAAA1oD,GAIA,QAAA2oD,KACA3oD,EAAA5D,MAAAG,KAAAJ,WAGAwY,EAAAqzC,EAAAD,IAAAY,GAPA,GAAAX,GACAY,EAAArH,EAAAmH,EASA9I,GAAAgJ,GAEAZ,EAAAF,IAAAa,IAGA7I,EAAA8I,EAAAb,MAAAhI,EAAA6I,EAAAxY,SAEA4X,EAAAY,EACAZ,EAAAD,IAAAvsD,KAAAmtD,IAGAX,EAAAF,IAAAc,EAAAD,IAIAX,EAAA5X,QAAA,EACAmR,EAAAmH,GAAAV,EAKA,QAAAa,IACA9tD,EACAu4B,EACA6zB,GAKA,GAAAf,GAAA9yB,EAAA1zB,QAAA4D,KACA,KAAAo8C,EAAAwG,GAAA,CAGA,GAAAlnB,MACA4pB,EAAA/tD,EAAA+tD,MACAtlD,EAAAzI,EAAAyI,KACA,IAAAs8C,EAAAgJ,IAAAhJ,EAAAt8C,GACA,OAAA3K,KAAAutD,GAAA,CACA,GAAA2C,GAAAtC,GAAA5tD,EAiBAmwD,IAAA9pB,EAAA17B,EAAA3K,EAAAkwD,GAAA,IACAC,GAAA9pB,EAAA4pB,EAAAjwD,EAAAkwD,GAAA,GAGA,MAAA7pB,IAGA,QAAA8pB,IACA9pB,EACA+pB,EACApwD,EACAkwD,EACAG,GAEA,GAAApJ,EAAAmJ,GAAA,CACA,GAAAlzB,EAAAkzB,EAAApwD,GAKA,MAJAqmC,GAAArmC,GAAAowD,EAAApwD,GACAqwD,SACAD,GAAApwD,IAEA,CACK,IAAAk9B,EAAAkzB,EAAAF,GAKL,MAJA7pB,GAAArmC,GAAAowD,EAAAF,GACAG,SACAD,GAAAF,IAEA,EAGA,SAiBA,QAAAI,IAAA/B,GACA,OAAAhvD,GAAA,EAAiBA,EAAAgvD,EAAA9uD,OAAqBF,IACtC,GAAA2G,MAAA1F,QAAA+tD,EAAAhvD,IACA,MAAA2G,OAAArE,UAAA2B,OAAAD,SAAAgrD,EAGA,OAAAA,GAOA,QAAAgC,IAAAhC,GACA,MAAAzuD,GAAAyuD,IACAN,EAAAM,IACAroD,MAAA1F,QAAA+tD,GACAiC,GAAAjC,OACAvH,GAGA,QAAAyJ,IAAAnzC,GACA,MAAA2pC,GAAA3pC,IAAA2pC,EAAA3pC,EAAA2Y,OAAAkxB,EAAA7pC,EAAAuxC,WAGA,QAAA2B,IAAAjC,EAAAmC,GACA,GACAnxD,GAAAuwC,EAAA6gB,EADAtqB,IAEA,KAAA9mC,EAAA,EAAaA,EAAAgvD,EAAA9uD,OAAqBF,IAClCuwC,EAAAye,EAAAhvD,GACAwnD,EAAAjX,IAAA,iBAAAA,KACA6gB,EAAAtqB,IAAA5mC,OAAA,GAEAyG,MAAA1F,QAAAsvC,GACAzJ,EAAA1jC,KAAAY,MAAA8iC,EAAAmqB,GAAA1gB,GAAA4gB,GAAA,QAAAnxD,IACKO,EAAAgwC,GACL2gB,GAAAE,GAIA,EAAA16B,MAAAsF,OAAAuU,GACO,KAAAA,GAEPzJ,EAAA1jC,KAAAsrD,EAAAne,IAGA2gB,GAAA3gB,IAAA2gB,GAAAE,GAEAtqB,IAAA5mC,OAAA,GAAAwuD,EAAA0C,EAAA16B,KAAA6Z,EAAA7Z,OAGAixB,EAAAqH,EAAAqC,WACA3J,EAAAnX,EAAAwe,MACAvH,EAAAjX,EAAA9vC,MACAinD,EAAAyJ,KACA5gB,EAAA9vC,IAAA,UAAA0wD,EAAA,IAAAnxD,EAAA,MAEA8mC,EAAA1jC,KAAAmtC,IAIA,OAAAzJ,GAKA,QAAAwqB,IAAAC,EAAAtlB,GAIA,MAHAslB,GAAA3mB,YAAA2mB,EAAAhqD,UACAgqD,IAAAhqD,SAEAzG,EAAAywD,GACAtlB,EAAA5qC,OAAAkwD,GACAA,EAGA,QAAAC,IACAC,EACA9uD,EACAI,EACAisD,EACAD,GAEA,GAAAhxC,GAAA2zC,IAGA,OAFA3zC,GAAAoxC,aAAAsC,EACA1zC,EAAA4zC,WAAoBhvD,OAAAI,UAAAisD,WAAAD,OACpBhxC,EAGA,QAAA6zC,IACAH,EACAI,EACA9uD,GAEA,GAAA4kD,EAAA8J,EAAAlrB,QAAAmhB,EAAA+J,EAAAK,WACA,MAAAL,GAAAK,SAGA,IAAApK,EAAA+J,EAAAM,UACA,MAAAN,GAAAM,QAGA,IAAApK,EAAA8J,EAAAO,UAAAtK,EAAA+J,EAAAQ,aACA,MAAAR,GAAAQ,WAGA,KAAAvK,EAAA+J,EAAAS,UAGG,CACH,GAAAA,GAAAT,EAAAS,UAAAnvD,GACAykC,GAAA,EAEA2qB,EAAA,WACA,OAAAnyD,GAAA,EAAAguC,EAAAkkB,EAAAhyD,OAA0CF,EAAAguC,EAAOhuC,IACjDkyD,EAAAlyD,GAAAoyD,gBAIAnrB,EAAA+hB,EAAA,SAAAliB,GAEA2qB,EAAAM,SAAAT,GAAAxqB,EAAA+qB,GAGArqB,GACA2qB,MAIAE,EAAArJ,EAAA,SAAAsJ,GAKA5K,EAAA+J,EAAAK,aACAL,EAAAlrB,OAAA,EACA4rB,OAIArrB,EAAA2qB,EAAAxqB,EAAAorB,EA6CA,OA3CAvxD,GAAAgmC,KACA,kBAAAA,GAAA9D,KAEAwkB,EAAAiK,EAAAM,WACAjrB,EAAA9D,KAAAiE,EAAAorB,GAEO3K,EAAA5gB,EAAA/rB,YAAA,kBAAA+rB,GAAA/rB,UAAAioB,OACP8D,EAAA/rB,UAAAioB,KAAAiE,EAAAorB,GAEA3K,EAAA5gB,EAAAP,SACAkrB,EAAAK,UAAAR,GAAAxqB,EAAAP,MAAAsrB,IAGAnK,EAAA5gB,EAAAkrB,WACAP,EAAAQ,YAAAX,GAAAxqB,EAAAkrB,QAAAH,GACA,IAAA/qB,EAAAyrB,MACAd,EAAAO,SAAA,EAEAQ,WAAA,WACAhL,EAAAiK,EAAAM,WAAAvK,EAAAiK,EAAAlrB,SACAkrB,EAAAO,SAAA,EACAG,MAEarrB,EAAAyrB,OAAA,MAIb7K,EAAA5gB,EAAA2rB,UACAD,WAAA,WACAhL,EAAAiK,EAAAM,WACAM,EAGA,OAGWvrB,EAAA2rB,WAKXjrB,GAAA,EAEAiqB,EAAAO,QACAP,EAAAQ,YACAR,EAAAM,SA/EAN,EAAAS,SAAA9uD,KAAAL,GAqFA,QAAA2vD,IAAA1D,GACA,GAAAroD,MAAA1F,QAAA+tD,GACA,OAAAhvD,GAAA,EAAmBA,EAAAgvD,EAAA9uD,OAAqBF,IAAA,CACxC,GAAAuwC,GAAAye,EAAAhvD,EACA,IAAA0nD,EAAAnX,IAAAmX,EAAAnX,EAAA2e,kBACA,MAAA3e,IAUA,QAAAoiB,IAAAlJ,GACAA,EAAAmJ,QAAApsD,OAAAsd,OAAA,MACA2lC,EAAAoJ,eAAA,CAEA,IAAAC,GAAArJ,EAAAvhB,SAAA6qB,gBACAD,IACAE,GAAAvJ,EAAAqJ,GAMA,QAAA5qD,IAAAgS,EAAA2oB,EAAAowB,GACAA,EACAryD,GAAAsyD,MAAAh5C,EAAA2oB,GAEAjiC,GAAAuyD,IAAAj5C,EAAA2oB,GAIA,QAAAuwB,IAAAl5C,EAAA2oB,GACAjiC,GAAAyyD,KAAAn5C,EAAA2oB,GAGA,QAAAmwB,IACAvJ,EACAqJ,EACAQ,GAEA1yD,GAAA6oD,EACAqG,GAAAgD,EAAAQ,MAA+CprD,GAAAkrD,GAAA3J,GA4G/C,QAAA8J,IACAvE,EACAjsD,GAEA,GAAAywD,KACA,KAAAxE,EACA,MAAAwE,EAGA,QADAC,MACAzzD,EAAA,EAAAguC,EAAAghB,EAAA9uD,OAAsCF,EAAAguC,EAAOhuC,IAAA,CAC7C,GAAAsK,GAAA0kD,EAAAhvD,EAGA,IAAAsK,EAAAvH,aAAAuH,EAAAopD,oBAAA3wD,IACAuH,EAAA3H,MAAA,MAAA2H,EAAA3H,KAAAgxD,KAUAF,EAAArwD,KAAAkH,OATA,CACA,GAAAd,GAAAc,EAAA3H,KAAAgxD,KACAA,EAAAH,EAAAhqD,KAAAgqD,EAAAhqD,MACA,cAAAc,EAAAykD,IACA4E,EAAAvwD,KAAAY,MAAA2vD,EAAArpD,EAAA0kD,UAEA2E,EAAAvwD,KAAAkH,IAUA,MAHAmpD,GAAAG,MAAAC,MACAL,EAAAjsD,QAAAksD,GAEAD,EAGA,QAAAK,IAAA91C,GACA,MAAAA,GAAAuxC,WAAA,MAAAvxC,EAAA2Y,KAGA,QAAAo9B,IACAnE,EACA7oB,GAEAA,OACA,QAAA9mC,GAAA,EAAiBA,EAAA2vD,EAAAzvD,OAAgBF,IACjC2G,MAAA1F,QAAA0uD,EAAA3vD,IACA8zD,GAAAnE,EAAA3vD,GAAA8mC,GAEAA,EAAA6oB,EAAA3vD,GAAAS,KAAAkvD,EAAA3vD,GAAA6iC,EAGA,OAAAiE,GAQA,QAAAitB,IAAAtK,GACA,GAAAjiD,GAAAiiD,EAAAvhB,SAGAngC,EAAAP,EAAAO,MACA,IAAAA,IAAAP,EAAAwsD,SAAA,CACA,KAAAjsD,EAAAmgC,SAAA8rB,UAAAjsD,EAAAksD,SACAlsD,IAAAksD,OAEAlsD,GAAAmsD,UAAA9wD,KAAAqmD,GAGAA,EAAAwK,QAAAlsD,EACA0hD,EAAA0K,MAAApsD,IAAAosD,MAAA1K,EAEAA,EAAAyK,aACAzK,EAAA2K,SAEA3K,EAAA4K,SAAA,KACA5K,EAAA6K,UAAA,KACA7K,EAAA8K,iBAAA,EACA9K,EAAA+K,YAAA,EACA/K,EAAAgL,cAAA,EACAhL,EAAAiL,mBAAA,EA6FA,QAAAC,IACAlL,EACAzgD,EACA4rD,GAEAnL,EAAAoL,IAAA7rD,EACAygD,EAAAvhB,SAAAzgC,SACAgiD,EAAAvhB,SAAAzgC,OAAAiqD,IAmBAoD,GAAArL,EAAA,cAEA,IAAAsL,EAkCA,OAdAA,GAAA,WACAtL,EAAAuL,QAAAvL,EAAAwL,UAAAL,IAIAnL,EAAA4K,SAAA,GAAAa,IAAAzL,EAAAsL,EAAAhuD,GACA6tD,GAAA,EAIA,MAAAnL,EAAA5hD,SACA4hD,EAAA+K,YAAA,EACAM,GAAArL,EAAA,YAEAA,EAGA,QAAA0L,IACA1L,EACAwE,EACA6E,EACAsC,EACAC,GAQA,GAAAC,MACAD,GACA5L,EAAAvhB,SAAAqtB,iBACAH,EAAAzyD,KAAA6yD,aACA/L,EAAAgM,eAAAC,GAkBA,IAfAjM,EAAAvhB,SAAAytB,aAAAP,EACA3L,EAAA5hD,OAAAutD,EAEA3L,EAAAmM,SACAnM,EAAAmM,OAAA7tD,OAAAqtD,GAEA3L,EAAAvhB,SAAAqtB,gBAAAF,EAKA5L,EAAAoM,OAAAT,EAAAzyD,MAAAyyD,EAAAzyD,KAAA+tD,MACAjH,EAAAqM,WAAAhD,EAGA7E,GAAAxE,EAAAvhB,SAAA98B,MAAA,CACAw/C,GAAAC,eAAA,CAGA,QAFAz/C,GAAAq+C,EAAA+E,OACAuH,EAAAtM,EAAAvhB,SAAA8tB,cACAh2D,EAAA,EAAmBA,EAAA+1D,EAAA71D,OAAqBF,IAAA,CACxC,GAAAS,GAAAs1D,EAAA/1D,EACAoL,GAAA3K,GAAAstD,EAAAttD,EAAAgpD,EAAAvhB,SAAA98B,MAAA6iD,EAAAxE,GAEAmB,GAAAC,eAAA,EAEApB,EAAAvhB,SAAA+lB,YAIA,GAAA6E,EAAA,CACA,GAAAQ,GAAA7J,EAAAvhB,SAAA6qB,gBACAtJ,GAAAvhB,SAAA6qB,iBAAAD,EACAE,GAAAvJ,EAAAqJ,EAAAQ,GAGAgC,IACA7L,EAAAwM,OAAA1C,GAAA8B,EAAAD,EAAAryD,SACA0mD,EAAA2I,gBAQA,QAAA8D,IAAAzM,GACA,KAAAA,QAAAwK,UACA,GAAAxK,EAAA6K,UAAuB,QAEvB,UAGA,QAAA6B,IAAA1M,EAAA2M,GACA,GAAAA,GAEA,GADA3M,EAAA8K,iBAAA,EACA2B,GAAAzM,GACA,WAEG,IAAAA,EAAA8K,gBACH,MAEA,IAAA9K,EAAA6K,WAAA,OAAA7K,EAAA6K,UAAA,CACA7K,EAAA6K,WAAA,CACA,QAAAt0D,GAAA,EAAmBA,EAAAypD,EAAAyK,UAAAh0D,OAAyBF,IAC5Cm2D,GAAA1M,EAAAyK,UAAAl0D,GAEA80D,IAAArL,EAAA,cAIA,QAAA4M,IAAA5M,EAAA2M,GACA,KAAAA,IACA3M,EAAA8K,iBAAA,EACA2B,GAAAzM,KAIAA,EAAA6K,WAAA,CACA7K,EAAA6K,WAAA,CACA,QAAAt0D,GAAA,EAAmBA,EAAAypD,EAAAyK,UAAAh0D,OAAyBF,IAC5Cq2D,GAAA5M,EAAAyK,UAAAl0D,GAEA80D,IAAArL,EAAA,gBAIA,QAAAqL,IAAArL,EAAA7hD,GACA,GAAA0uD,GAAA7M,EAAAvhB,SAAAtgC,EACA,IAAA0uD,EACA,OAAAt2D,GAAA,EAAA2yB,EAAA2jC,EAAAp2D,OAAwCF,EAAA2yB,EAAO3yB,IAC/C,IACAs2D,EAAAt2D,GAAAD,KAAA0pD,GACO,MAAA9+C,GACP6+C,EAAA7+C,EAAA8+C,EAAA7hD,EAAA,SAIA6hD,EAAAoJ,eACApJ,EAAA8M,MAAA,QAAA3uD,GAoBA,QAAA4uD,MACA/9C,GAAAg+C,GAAAv2D,OAAAw2D,GAAAx2D,OAAA,EACA2uB,MAIA8nC,GAAAC,IAAA,EAMA,QAAAC,MACAD,IAAA,CACA,IAAAE,GAAA3hD,CAcA,KAJAshD,GAAAlrC,KAAA,SAAAxW,EAAAC,GAA8B,MAAAD,GAAAI,GAAAH,EAAAG,KAI9BsD,GAAA,EAAiBA,GAAAg+C,GAAAv2D,OAAsBuY,KACvCq+C,EAAAL,GAAAh+C,IACAtD,EAAA2hD,EAAA3hD,GACA0Z,GAAA1Z,GAAA,KACA2hD,EAAAC,KAmBA,IAAAC,GAAAN,GAAA9xD,QACAqyD,EAAAR,GAAA7xD,OAEA4xD,MAGAU,GAAAF,GACAG,GAAAF,GAIAG,IAAA5yB,GAAA4yB,UACAA,GAAA90B,KAAA,SAIA,QAAA60B,IAAAV,GAEA,IADA,GAAAz2D,GAAAy2D,EAAAv2D,OACAF,KAAA,CACA,GAAA82D,GAAAL,EAAAz2D,GACAypD,EAAAqN,EAAArN,EACAA,GAAA4K,WAAAyC,GAAArN,EAAA+K,YACAM,GAAArL,EAAA,YASA,QAAA4N,IAAA5N,GAGAA,EAAA6K,WAAA,EACAoC,GAAAtzD,KAAAqmD,GAGA,QAAAyN,IAAAT,GACA,OAAAz2D,GAAA,EAAiBA,EAAAy2D,EAAAv2D,OAAkBF,IACnCy2D,EAAAz2D,GAAAs0D,WAAA,EACA6B,GAAAM,EAAAz2D,IAAA,GASA,QAAAs3D,IAAAR,GACA,GAAA3hD,GAAA2hD,EAAA3hD,EACA,UAAA0Z,GAAA1Z,GAAA,CAEA,GADA0Z,GAAA1Z,IAAA,EACAyhD,GAEK,CAIL,IADA,GAAA52D,GAAAy2D,GAAAv2D,OAAA,EACAF,EAAAyY,IAAAg+C,GAAAz2D,GAAAmV,GAAA2hD,EAAA3hD,IACAnV,GAEAy2D,IAAAh6C,OAAAzc,EAAA,IAAA82D,OARAL,IAAArzD,KAAA0zD,EAWAH,MACAA,IAAA,EACA7xB,GAAA+xB,MA4NA,QAAAxsD,IAAA+f,GACAmtC,GAAAxxC,QACAyxC,GAAAptC,EAAAmtC,IAGA,QAAAC,IAAAptC,EAAAqtC,GACA,GAAAz3D,GAAA8iC,EACA40B,EAAA/wD,MAAA1F,QAAAmpB,EACA,KAAAstC,GAAA52D,EAAAspB,KAAA5jB,OAAAukD,aAAA3gC,GAAA,CAGA,GAAAA,EAAAsgC,OAAA,CACA,GAAAiN,GAAAvtC,EAAAsgC,OAAAW,IAAAl2C,EACA,IAAAsiD,EAAA5oC,IAAA8oC,GACA,MAEAF,GAAAvvD,IAAAyvD,GAEA,GAAAD,EAEA,IADA13D,EAAAoqB,EAAAlqB,OACAF,KAAiBw3D,GAAAptC,EAAApqB,GAAAy3D,OAIjB,KAFA30B,EAAAt8B,OAAAs8B,KAAA1Y,GACApqB,EAAA8iC,EAAA5iC,OACAF,KAAiBw3D,GAAAptC,EAAA0Y,EAAA9iC,IAAAy3D,IAajB,QAAAG,IAAAh3D,EAAAi3D,EAAAp3D,GACAq3D,GAAAlxD,IAAA,WACA,MAAAzC,MAAA0zD,GAAAp3D,IAEAq3D,GAAAzyD,IAAA,SAAA+kB,GACAjmB,KAAA0zD,GAAAp3D,GAAA2pB,GAEA5jB,OAAA69B,eAAAzjC,EAAAH,EAAAq3D,IAGA,QAAAC,IAAAtO,GACAA,EAAAuO,YACA,IAAAjqD,GAAA07C,EAAAvhB,QACAn6B,GAAA3C,OAAmB+G,GAAAs3C,EAAA17C,EAAA3C,OACnB2C,EAAAkqD,SAAqBC,GAAAzO,EAAA17C,EAAAkqD,SACrBlqD,EAAApL,KACAw1D,GAAA1O,GAEAc,EAAAd,EAAA5kB,UAAyB,GAEzB92B,EAAAq2B,UAAsBg0B,GAAA3O,EAAA17C,EAAAq2B,UACtBr2B,EAAAi8B,OAAAj8B,EAAAi8B,QAAAquB,IACAC,GAAA7O,EAAA17C,EAAAi8B,OAcA,QAAA73B,IAAAs3C,EAAA8O,GACA,GAAAtK,GAAAxE,EAAAvhB,SAAA+lB,cACA7iD,EAAAq+C,EAAA+E,UAGA1rB,EAAA2mB,EAAAvhB,SAAA8tB,aACA/wB,GAAAwkB,EAAAwK,OAEArJ,IAAAC,cAAA5lB,CAkCA,QAAAxkC,KAAA83D,IAjCA,SAAA93D,GACAqiC,EAAA1/B,KAAA3C,EACA,IAAAuB,GAAA+rD,EAAAttD,EAAA83D,EAAAtK,EAAAxE,EAqBAyB,GAAA9/C,EAAA3K,EAAAuB,GAKAvB,IAAAgpD,IACAmO,GAAAnO,EAAA,SAAAhpD,IAIAA,EACAmqD,IAAAC,eAAA,EAGA,QAAAsN,IAAA1O,GACA,GAAA9mD,GAAA8mD,EAAAvhB,SAAAvlC,IACAA,GAAA8mD,EAAA5kB,MAAA,kBAAAliC,GACAqa,GAAAra,EAAA8mD,GACA9mD,MACAklD,EAAAllD,KACAA,KAYA,KAJA,GAAAmgC,GAAAt8B,OAAAs8B,KAAAngC,GACAyI,EAAAq+C,EAAAvhB,SAAA98B,MAEApL,GADAypD,EAAAvhB,SAAA+vB,QACAn1B,EAAA5iC,QACAF,KAAA,CACA,GAAAS,GAAAqiC,EAAA9iC,EASAoL,IAAAuyB,EAAAvyB,EAAA3K,IAMKyoD,EAAAzoD,IACLm3D,GAAAnO,EAAA,QAAAhpD,GAIA8pD,EAAA5nD,GAAA,GAGA,QAAAqa,IAAAra,EAAA8mD,GACA,IACA,MAAA9mD,GAAA5C,KAAA0pD,GACG,MAAA9+C,GAEH,MADA6+C,GAAA7+C,EAAA8+C,EAAA,cAOA,QAAA2O,IAAA3O,EAAArlB,GAEA,GAAAo0B,GAAA/O,EAAAgP,kBAAAjyD,OAAAsd,OAAA,KAEA,QAAArjB,KAAA2jC,GAAA,CACA,GAAAs0B,GAAAt0B,EAAA3jC,GACAqlC,EAAA,kBAAA4yB,OAAA9xD,GAWA4xD,GAAA/3D,GAAA,GAAAy0D,IAAAzL,EAAA3jB,EAAA/+B,EAAA4xD,IAKAl4D,IAAAgpD,IACAmP,GAAAnP,EAAAhpD,EAAAi4D,IAWA,QAAAE,IAAAh4D,EAAAH,EAAAi4D,GACA,kBAAAA,IACAZ,GAAAlxD,IAAAiyD,GAAAp4D,GACAq3D,GAAAzyD,IAAA0B,IAEA+wD,GAAAlxD,IAAA8xD,EAAA9xD,KACA,IAAA8xD,EAAAtQ,MACAyQ,GAAAp4D,GACAi4D,EAAA9xD,IACAG,EACA+wD,GAAAzyD,IAAAqzD,EAAArzD,IACAqzD,EAAArzD,IACA0B,GAEAP,OAAA69B,eAAAzjC,EAAAH,EAAAq3D,IAGA,QAAAe,IAAAp4D,GACA,kBACA,GAAAq2D,GAAA3yD,KAAAs0D,mBAAAt0D,KAAAs0D,kBAAAh4D,EACA,IAAAq2D,EAOA,MANAA,GAAAl/B,OACAk/B,EAAAgC,WAEA9O,GAAAppD,QACAk2D,EAAApL,SAEAoL,EAAA90D,OAKA,QAAAk2D,IAAAzO,EAAAwO,GAEAxO,EAAAvhB,SAAA98B,KACA,QAAA3K,KAAAw3D,GACAxO,EAAAhpD,GAAA,MAAAw3D,EAAAx3D,GAAAsG,EAAApD,EAAAs0D,EAAAx3D,GAAAgpD,GAmBA,QAAA6O,IAAA7O,EAAAzf,GAEA,OAAAvpC,KAAAupC,GAAA,CACA,GAAAz1B,GAAAy1B,EAAAvpC,EACA,IAAAkG,MAAA1F,QAAAsT,GACA,OAAAvU,GAAA,EAAqBA,EAAAuU,EAAArU,OAAoBF,IACzC+4D,GAAAtP,EAAAhpD,EAAA8T,EAAAvU,QAGA+4D,IAAAtP,EAAAhpD,EAAA8T,IAKA,QAAAwkD,IACAtP,EACAuP,EACAzkD,EACA/M,GASA,MAPAqgD,GAAAtzC,KACA/M,EAAA+M,EACAA,aAEA,gBAAAA,KACAA,EAAAk1C,EAAAl1C,IAEAk1C,EAAApiB,OAAA2xB,EAAAzkD,EAAA/M,GAoDA,QAAAyxD,IAAAxP,GACA,GAAAyP,GAAAzP,EAAAvhB,SAAAgxB,OACAA,KACAzP,EAAA0P,UAAA,kBAAAD,GACAA,EAAAn5D,KAAA0pD,GACAyP,GAIA,QAAAE,IAAA3P,GACA,GAAA7pD,GAAAy5D,GAAA5P,EAAAvhB,SAAA0kB,OAAAnD,EACA7pD,KACAgrD,GAAAC,eAAA,EACArkD,OAAAs8B,KAAAljC,GAAAoD,QAAA,SAAAvC,GAYAyqD,EAAAzB,EAAAhpD,EAAAb,EAAAa,MAGAmqD,GAAAC,eAAA,GAIA,QAAAwO,IAAAzM,EAAAnD,GACA,GAAAmD,EAAA,CAOA,OALAhtD,GAAA4G,OAAAsd,OAAA,MACAgf,EAAAw2B,GACAC,QAAAC,QAAA5M,GACApmD,OAAAs8B,KAAA8pB,GAEA5sD,EAAA,EAAmBA,EAAA8iC,EAAA5iC,OAAiBF,IAIpC,IAHA,GAAAS,GAAAqiC,EAAA9iC,GACAy5D,EAAA7M,EAAAnsD,GACAd,EAAA8pD,EACA9pD,GAAA,CACA,GAAAA,EAAAw5D,WAAAM,IAAA95D,GAAAw5D,UAAA,CACAv5D,EAAAa,GAAAd,EAAAw5D,UAAAM,EACA,OAEA95D,IAAAs0D,QAMA,MAAAr0D,IAMA,QAAA85D,IACAx+B,EACA+yB,EACAtrD,EACAI,EACAisD,GAEA,GAAA5jD,MACA4iD,EAAA9yB,EAAA1zB,QAAA4D,KACA,IAAAs8C,EAAAsG,GACA,OAAAvtD,KAAAutD,GACA5iD,EAAA3K,GAAAstD,EAAAttD,EAAAutD,EAAAC,WAGAvG,GAAA/kD,EAAA+tD,QAA4BiJ,GAAAvuD,EAAAzI,EAAA+tD,OAC5BhJ,EAAA/kD,EAAAyI,QAA4BuuD,GAAAvuD,EAAAzI,EAAAyI,MAI5B,IAAAwuD,GAAApzD,OAAAsd,OAAA/gB,GACAwF,EAAA,SAAAwM,EAAAC,EAAAu7B,EAAAlX,GAAiC,MAAA33B,IAAAk4D,EAAA7kD,EAAAC,EAAAu7B,EAAAlX,GAAA,IACjCw1B,EAAA3zB,EAAA1zB,QAAAC,OAAA1H,KAAA,KAAAwI,GACA5F,OACAyI,QACA4jD,WACAjnD,OAAAhF,EACA+vD,UAAAnwD,EAAAgO,OACAkpD,WAAAR,GAAAn+B,EAAA1zB,QAAAolD,OAAA7pD,GACAywD,MAAA,WAAwB,MAAAD,IAAAvE,EAAAjsD,KASxB,OAPA8rD,aAAAF,MACAE,EAAA6E,kBAAA3wD,EACA8rD,EAAAiL,kBAAA5+B,EAAA1zB,QACA7E,EAAAgxD,QACA9E,EAAAlsD,OAAAksD,EAAAlsD,UAAqCgxD,KAAAhxD,EAAAgxD,OAGrC9E,EAGA,QAAA8K,IAAAlR,EAAApoD,GACA,OAAAI,KAAAJ,GACAooD,EAAAiE,GAAAjsD,IAAAJ,EAAAI,GA4EA,QAAAs5D,IACA7+B,EACAv4B,EACAI,EACAisD,EACAD,GAEA,IAAAvH,EAAAtsB,GAAA,CAIA,GAAA22B,GAAA9uD,EAAAmlC,SAAA8xB,KASA,IANAl5D,EAAAo6B,KACAA,EAAA22B,EAAAxwD,OAAA65B,IAKA,kBAAAA,GAAA,CAQA,GAAAi0B,EACA,IAAA3H,EAAAtsB,EAAA++B,OACA9K,EAAAj0B,MAEAusB,MADAvsB,EAAA02B,GAAAzC,EAAA0C,EAAA9uD,KAKA,MAAAyuD,IACArC,EACAxsD,EACAI,EACAisD,EACAD,EAKApsD,SAIAu3D,GAAAh/B,GAGAwsB,EAAA/kD,EAAA6V,QACA2hD,GAAAj/B,EAAA1zB,QAAA7E,EAIA,IAAAsrD,GAAAwC,GAAA9tD,EAAAu4B,EAAA6zB,EAGA,IAAApH,EAAAzsB,EAAA1zB,QAAAY,YACA,MAAAsxD,IAAAx+B,EAAA+yB,EAAAtrD,EAAAI,EAAAisD,EAIA,IAAA8D,GAAAnwD,EAAAgO,EAEA,IAAAg3C,EAAAzsB,EAAA1zB,QAAAwsD,UAAA,CAKA,GAAAL,GAAAhxD,EAAAgxD,IACAhxD,MACAgxD,IACAhxD,EAAAgxD,QAKAyG,GAAAz3D,EAGA,IAAA6G,GAAA0xB,EAAA1zB,QAAAgC,MAAAulD,CAOA,OANA,IAAAJ,IACA,iBAAAzzB,EAAA,KAAA1xB,EAAA,IAAAA,EAAA,IACA7G,MAAA8kD,iBAAA1kD,GACKm4B,OAAA+yB,YAAA6E,YAAA/D,MAAAC,YACLG,KAKA,QAAAkL,IACAxL,EACA9mD,EACAuyD,EACAC,GAEA,GAAAC,GAAA3L,EAAAK,iBACA1nD,GACAizD,cAAA,EACA1yD,SACAkmD,UAAAuM,EAAAvM,UACAyM,cAAAF,EAAAzL,IACA4G,aAAA9G,EACAkE,iBAAAyH,EAAA1H,UACAyC,gBAAAiF,EAAAxL,SACA2L,WAAAL,GAAA,KACAM,QAAAL,GAAA,MAGAM,EAAAhM,EAAAlsD,KAAAk4D,cAKA,OAJAnT,GAAAmT,KACArzD,EAAAC,OAAAozD,EAAApzD,OACAD,EAAAE,gBAAAmzD,EAAAnzD,iBAEA,GAAA8yD,GAAAt/B,KAAA1zB,GAGA,QAAA4yD,IAAAz3D,GACAA,EAAAiF,OACAjF,EAAAiF,QAEA,QAAA5H,GAAA,EAAiBA,EAAA86D,GAAA56D,OAAyBF,IAAA,CAC1C,GAAAS,GAAAq6D,GAAA96D,GACA+6D,EAAAp4D,EAAAiF,KAAAnH,GACAu6D,EAAAC,GAAAx6D,EACAkC,GAAAiF,KAAAnH,GAAAs6D,EAAAG,GAAAF,EAAAD,GAAAC,GAIA,QAAAE,IAAA96C,EAAA+6C,GACA,gBAAApmD,EAAAC,EAAAu7B,EAAAlX,GACAjZ,EAAArL,EAAAC,EAAAu7B,EAAAlX,GACA8hC,EAAApmD,EAAAC,EAAAu7B,EAAAlX,IAMA,QAAA8gC,IAAA3yD,EAAA7E,GACA,GAAAJ,GAAAiF,EAAAgR,OAAAhR,EAAAgR,MAAAjW,MAAA,QACA2X,EAAA1S,EAAAgR,OAAAhR,EAAAgR,MAAA0B,OAAA,SAAgEvX,EAAAyI,QAAAzI,EAAAyI,WAA+B7I,GAAAI,EAAA6V,MAAAxW,KAC/F,IAAA2O,GAAAhO,EAAAgO,KAAAhO,EAAAgO,MACA+2C,GAAA/2C,EAAAuJ,IACAvJ,EAAAuJ,IAAAvX,EAAA6V,MAAA4iD,UAAAn3D,OAAA0M,EAAAuJ,IAEAvJ,EAAAuJ,GAAAvX,EAAA6V,MAAA4iD,SAWA,QAAA15D,IACAqB,EACAgsD,EACApsD,EACAqsD,EACAqM,EACAC,GAUA,OARA30D,MAAA1F,QAAA0B,IAAApC,EAAAoC,MACA04D,EAAArM,EACAA,EAAArsD,EACAA,MAAA8kD,IAEAE,EAAA2T,KACAD,EAAAE,IAEAC,GAAAz4D,EAAAgsD,EAAApsD,EAAAqsD,EAAAqM,GAGA,QAAAG,IACAz4D,EACAgsD,EACApsD,EACAqsD,EACAqM,GAEA,GAAA3T,EAAA/kD,IAAA+kD,EAAA,EAAAgD,QAMA,MAAAgH,KAMA,IAHAhK,EAAA/kD,IAAA+kD,EAAA/kD,EAAA84D,MACA1M,EAAApsD,EAAA84D,KAEA1M,EAEA,MAAA2C,KAaA/qD,OAAA1F,QAAA+tD,IACA,kBAAAA,GAAA,KAEArsD,QACAA,EAAA6yD,aAAwBjuD,QAAAynD,EAAA,IACxBA,EAAA9uD,OAAA,GAEAm7D,IAAAE,GACAvM,EAAAgC,GAAAhC,GACGqM,IAAAK,KACH1M,EAAA+B,GAAA/B,GAEA,IAAAH,GAAAO,CACA,oBAAAL,GAAA,CACA,GAAA7zB,EACAk0B,GAAA5qB,GAAAm3B,gBAAA5M,GAGAF,EAFArqB,GAAAo3B,cAAA7M,GAEA,GAAAJ,IACAnqB,GAAAq3B,qBAAA9M,GAAApsD,EAAAqsD,MACAvH,UAAA1kD,GAEK2kD,EAAAxsB,EAAAuyB,EAAA1qD,EAAAmlC,SAAA,aAAA6mB,IAELgL,GAAA7+B,EAAAv4B,EAAAI,EAAAisD,EAAAD,GAKA,GAAAJ,IACAI,EAAApsD,EAAAqsD,MACAvH,UAAA1kD,OAKA8rD,GAAAkL,GAAAhL,EAAApsD,EAAAI,EAAAisD,EAEA,OAAAtH,GAAAmH,IACAO,GAAa0M,GAAAjN,EAAAO,GACbP,GAEA6C,KAIA,QAAAoK,IAAAjN,EAAAO,GAEA,GADAP,EAAAO,KACA,kBAAAP,EAAAE,KAIArH,EAAAmH,EAAAG,UACA,OAAAhvD,GAAA,EAAAguC,EAAA6gB,EAAAG,SAAA9uD,OAA8CF,EAAAguC,EAAOhuC,IAAA,CACrD,GAAAsK,GAAAukD,EAAAG,SAAAhvD,EACA0nD,GAAAp9C,EAAAykD,MAAAvH,EAAAl9C,EAAA8kD,KACA0M,GAAAxxD,EAAA8kD,IAWA,QAAA2M,IACA3xC,EACA3iB,GAEA,GAAAm2B,GAAA59B,EAAAguC,EAAAlL,EAAAriC,CACA,IAAAkG,MAAA1F,QAAAmpB,IAAA,gBAAAA,GAEA,IADAwT,EAAA,GAAAj3B,OAAAyjB,EAAAlqB,QACAF,EAAA,EAAAguC,EAAA5jB,EAAAlqB,OAA+BF,EAAAguC,EAAOhuC,IACtC49B,EAAA59B,GAAAyH,EAAA2iB,EAAApqB,UAEG,oBAAAoqB,GAEH,IADAwT,EAAA,GAAAj3B,OAAAyjB,GACApqB,EAAA,EAAeA,EAAAoqB,EAASpqB,IACxB49B,EAAA59B,GAAAyH,EAAAzH,EAAA,EAAAA,OAEG,IAAAc,EAAAspB,GAGH,IAFA0Y,EAAAt8B,OAAAs8B,KAAA1Y,GACAwT,EAAA,GAAAj3B,OAAAm8B,EAAA5iC,QACAF,EAAA,EAAAguC,EAAAlL,EAAA5iC,OAAgCF,EAAAguC,EAAOhuC,IACvCS,EAAAqiC,EAAA9iC,GACA49B,EAAA59B,GAAAyH,EAAA2iB,EAAA3pB,KAAAT,EAMA,OAHA0nD,GAAA9pB,KACA,EAAAyzB,UAAA,GAEAzzB,EAQA,QAAAo+B,IACAxyD,EACAyyD,EACA7wD,EACA8wD,GAEA,GAAAC,GAAAh4D,KAAAsxD,aAAAjsD,EACA,IAAA2yD,EAKA,MAJA/wD,SACA8wD,IACA9wD,EAAA/J,OAA8B66D,GAAA9wD,IAE9B+wD,EAAA/wD,IAAA6wD,CAEA,IAAAG,GAAAj4D,KAAA8xD,OAAAzsD,EAUA,OAAA4yD,IAAAH,EASA,QAAAI,IAAAlnD,GACA,MAAAs4C,GAAAtpD,KAAA+jC,SAAA,UAAA/yB,GAAA,IAAA5C,GAQA,QAAA+pD,IACAC,EACA97D,EACA+7D,GAEA,GAAAC,GAAAj4B,GAAAi4B,SAAAh8D,IAAA+7D,CACA,OAAA71D,OAAA1F,QAAAw7D,IACA,IAAAA,EAAA36D,QAAAy6D,GAEAE,IAAAF,EASA,QAAAG,IACA/5D,EACAosD,EACA/sD,EACA26D,EACAC,GAEA,GAAA56D,EACA,GAAAlB,EAAAkB,GAKK,CACL2E,MAAA1F,QAAAe,KACAA,EAAA2mD,EAAA3mD,GAEA,IAAA6uD,EA0BA,QAAApwD,KAAAuB,IAzBA,SAAAvB,GACA,GACA,UAAAA,GACA,UAAAA,GACAo8D,GAAAp8D,GAEAowD,EAAAluD,MACS,CACT,GAAA2B,GAAA3B,EAAA+tD,OAAA/tD,EAAA+tD,MAAApsD,IACAusD,GAAA8L,GAAAn4B,GAAAs4B,YAAA/N,EAAAzqD,EAAA7D,GACAkC,EAAAo6D,WAAAp6D,EAAAo6D,aACAp6D,EAAA+tD,QAAA/tD,EAAA+tD,UAEA,KAAAjwD,IAAAowD,MACAA,EAAApwD,GAAAuB,EAAAvB,GAEAm8D,GAAA,EACAj6D,EAAAgO,KAAAhO,EAAAgO,QACA,UAAAlQ,GAAA,SAAAu8D,GACAh7D,EAAAvB,GAAAu8D,KAMAv8D,QAGA,MAAAkC,GAQA,QAAAs6D,IACAxkD,EACAykD,GAEA,GAAAC,GAAAh5D,KAAAi5D,aAAA3kD,EAGA,OAAA0kD,KAAAD,EACAv2D,MAAA1F,QAAAk8D,GACA3N,GAAA2N,GACAvO,EAAAuO,IAGAA,EAAAh5D,KAAAi5D,aAAA3kD,GACAtU,KAAA+jC,SAAAxgC,gBAAA+Q,GAAA1Y,KAAAoE,KAAAk5D,cACAC,GAAAH,EAAA,aAAA1kD,GAAA,GACA0kD,GAOA,QAAAI,IACAJ,EACA1kD,EACAhY,GAGA,MADA68D,IAAAH,EAAA,WAAA1kD,GAAAhY,EAAA,IAAAA,EAAA,QACA08D,EAGA,QAAAG,IACAH,EACA18D,EACA+8D,GAEA,GAAA72D,MAAA1F,QAAAk8D,GACA,OAAAn9D,GAAA,EAAmBA,EAAAm9D,EAAAj9D,OAAiBF,IACpCm9D,EAAAn9D,IAAA,gBAAAm9D,GAAAn9D,IACAy9D,GAAAN,EAAAn9D,GAAAS,EAAA,IAAAT,EAAAw9D,OAIAC,IAAAN,EAAA18D,EAAA+8D,GAIA,QAAAC,IAAA1/C,EAAAtd,EAAA+8D,GACAz/C,EAAAsxC,UAAA,EACAtxC,EAAAtd,MACAsd,EAAAy/C,SAKA,QAAAE,IAAA/6D,EAAAX,GACA,GAAAA,EACA,GAAA6lD,EAAA7lD,GAKK,CACL,GAAA2O,GAAAhO,EAAAgO,GAAAhO,EAAAgO,GAAAtP,KAA4CsB,EAAAgO,MAC5C,QAAAlQ,KAAAuB,GAAA,CACA,GAAAqG,GAAAsI,EAAAlQ,GACAu6D,EAAAh5D,EAAAvB,EACAkQ,GAAAlQ,GAAA4H,KAAApE,OAAA+2D,EAAA3yD,GAAA2yD,QAIA,MAAAr4D,GAKA,QAAAg7D,IAAAlU,GACAA,EAAAmM,OAAA,KACAnM,EAAA2T,aAAA,IACA,IAAAhI,GAAA3L,EAAA5hD,OAAA4hD,EAAAvhB,SAAAytB,aACAiI,EAAAxI,KAAAryD,OACA0mD,GAAAwM,OAAA1C,GAAA9J,EAAAvhB,SAAAqtB,gBAAAqI,GACAnU,EAAAgM,aAAAC,GAKAjM,EAAAoU,GAAA,SAAA9oD,EAAAC,EAAAu7B,EAAAlX,GAAiC,MAAA33B,IAAA+nD,EAAA10C,EAAAC,EAAAu7B,EAAAlX,GAAA,IAGjCowB,EAAAqU,eAAA,SAAA/oD,EAAAC,EAAAu7B,EAAAlX,GAA6C,MAAA33B,IAAA+nD,EAAA10C,EAAAC,EAAAu7B,EAAAlX,GAAA,GAI7C,IAAA0kC,GAAA3I,KAAAzyD,IAUAuoD,GAAAzB,EAAA,SAAAsU,KAAArN,MAAA,SACAxF,EAAAzB,EAAA,aAAAsU,KAAAptD,GAAA,SAmJA,QAAAqtD,IAAAvU,EAAAjiD,GACA,GAAAuG,GAAA07C,EAAAvhB,SAAA1hC,OAAAsd,OAAA2lC,EAAArpD,YAAAoH,QAEAuG,GAAAhG,OAAAP,EAAAO,OACAgG,EAAAkgD,UAAAzmD,EAAAymD,UACAlgD,EAAA4nD,aAAAnuD,EAAAmuD,aACA5nD,EAAAglD,iBAAAvrD,EAAAurD,iBACAhlD,EAAAwnD,gBAAA/tD,EAAA+tD,gBACAxnD,EAAA2sD,cAAAlzD,EAAAkzD,cACA3sD,EAAA4sD,WAAAnzD,EAAAmzD,WACA5sD,EAAA6sD,QAAApzD,EAAAozD,QACApzD,EAAAC,SACAsG,EAAAtG,OAAAD,EAAAC,OACAsG,EAAArG,gBAAAF,EAAAE,iBAIA,QAAAwyD,IAAAh/B,GACA,GAAA1zB,GAAA0zB,EAAA1zB,OACA,IAAA0zB,EAAA+iC,MAAA,CACA,GAAAC,GAAAhE,GAAAh/B,EAAA+iC,MAEA,IAAAC,IADAhjC,EAAAgjC,aACA,CAGAhjC,EAAAgjC,cAEA,IAAAC,GAAAC,GAAAljC,EAEAijC,IACA98D,EAAA65B,EAAAmjC,cAAAF,GAEA32D,EAAA0zB,EAAA1zB,QAAAylD,EAAAiR,EAAAhjC,EAAAmjC,eACA72D,EAAAgC,OACAhC,EAAA82D,WAAA92D,EAAAgC,MAAA0xB,IAIA,MAAA1zB,GAGA,QAAA42D,IAAAljC,GACA,GAAAqjC,GACAC,EAAAtjC,EAAA1zB,QACAi3D,EAAAvjC,EAAAmjC,cACAK,EAAAxjC,EAAAyjC,aACA,QAAAl+D,KAAA+9D,GACAA,EAAA/9D,KAAAi+D,EAAAj+D,KACA89D,IAAsBA,MACtBA,EAAA99D,GAAAm+D,GAAAJ,EAAA/9D,GAAAg+D,EAAAh+D,GAAAi+D,EAAAj+D,IAGA,OAAA89D,GAGA,QAAAK,IAAAJ,EAAAC,EAAAC,GAGA,GAAA/3D,MAAA1F,QAAAu9D,GAAA,CACA,GAAA13B,KACA43B,GAAA/3D,MAAA1F,QAAAy9D,SACAD,EAAA93D,MAAA1F,QAAAw9D,QACA,QAAAz+D,GAAA,EAAmBA,EAAAw+D,EAAAt+D,OAAmBF,KAEtCy+D,EAAA38D,QAAA08D,EAAAx+D,KAAA,GAAA0+D,EAAA58D,QAAA08D,EAAAx+D,IAAA,IACA8mC,EAAA1jC,KAAAo7D,EAAAx+D,GAGA,OAAA8mC,GAEA,MAAA03B,GAIA,QAAAK,IAAAr3D,GAMArD,KAAAmkC,MAAA9gC,GAWA,QAAAs3D,IAAAv6B,GACAA,EAAAw6B,IAAA,SAAAn1B,GACA,GAAAo1B,GAAA76D,KAAA86D,oBAAA96D,KAAA86D,qBACA,IAAAD,EAAAl9D,QAAA8nC,IAAA,EACA,MAAAzlC,KAIA,IAAAN,GAAA0kD,EAAAxkD,UAAA,EAQA,OAPAF,GAAAq7D,QAAA/6D,MACA,kBAAAylC,GAAAnC,QACAmC,EAAAnC,QAAAzjC,MAAA4lC,EAAA/lC,GACK,kBAAA+lC,IACLA,EAAA5lC,MAAA,KAAAH,GAEAm7D,EAAA57D,KAAAwmC,GACAzlC,MAMA,QAAAg7D,IAAA56B,GACAA,EAAA9hC,MAAA,SAAAA,GAEA,MADA0B,MAAAqD,QAAAylD,EAAA9oD,KAAAqD,QAAA/E,GACA0B,MAMA,QAAAi7D,IAAA76B,GAMAA,EAAA01B,IAAA,CACA,IAAAA,GAAA,CAKA11B,GAAAljC,OAAA,SAAAg9D,GACAA,OACA,IAAAgB,GAAAl7D,KACAm7D,EAAAD,EAAApF,IACAsF,EAAAlB,EAAAmB,QAAAnB,EAAAmB,SACA,IAAAD,EAAAD,GACA,MAAAC,GAAAD,EAGA,IAAA91D,GAAA60D,EAAA70D,MAAA61D,EAAA73D,QAAAgC,KAWA8uB,EAAA,SAAA9wB,GACArD,KAAAmkC,MAAA9gC,GA6CA,OA3CA8wB,GAAAh2B,UAAAkE,OAAAsd,OAAAu7C,EAAA/8D,WACAg2B,EAAAh2B,UAAAlC,YAAAk4B,EACAA,EAAA2hC,QACA3hC,EAAA9wB,QAAAylD,EACAoS,EAAA73D,QACA62D,GAEA/lC,EAAA,MAAA+mC,EAKA/mC,EAAA9wB,QAAA4D,OACAq0D,GAAAnnC,GAEAA,EAAA9wB,QAAA48B,UACAs7B,GAAApnC,GAIAA,EAAAj3B,OAAAg+D,EAAAh+D,OACAi3B,EAAA71B,MAAA48D,EAAA58D,MACA61B,EAAAymC,IAAAM,EAAAN,IAIAY,GAAA38D,QAAA,SAAAsB,GACAg0B,EAAAh0B,GAAA+6D,EAAA/6D,KAGAkF,IACA8uB,EAAA9wB,QAAA82D,WAAA90D,GAAA8uB,GAMAA,EAAA4lC,aAAAmB,EAAA73D,QACA8wB,EAAA+lC,gBACA/lC,EAAAqmC,cAAAt9D,KAAiCi3B,EAAA9wB,SAGjC+3D,EAAAD,GAAAhnC,EACAA,GAIA,QAAAmnC,IAAAG,GACA,GAAAx0D,GAAAw0D,EAAAp4D,QAAA4D,KACA,QAAA3K,KAAA2K,GACAwsD,GAAAgI,EAAAt9D,UAAA,SAAA7B,GAIA,QAAAi/D,IAAAE,GACA,GAAAx7B,GAAAw7B,EAAAp4D,QAAA48B,QACA,QAAA3jC,KAAA2jC,GACAw0B,GAAAgH,EAAAt9D,UAAA7B,EAAA2jC,EAAA3jC,IAMA,QAAAo/D,IAAAt7B,GAIAo7B,GAAA38D,QAAA,SAAAsB,GACAigC,EAAAjgC,GAAA,SACA6Q,EACA2qD,GAEA,MAAAA,IAYA,cAAAx7D,GAAAujD,EAAAiY,KACAA,EAAAt2D,KAAAs2D,EAAAt2D,MAAA2L,EACA2qD,EAAA37D,KAAAqD,QAAAwyD,MAAA34D,OAAAy+D,IAEA,cAAAx7D,GAAA,kBAAAw7D,KACAA,GAAwBn8D,KAAAm8D,EAAA3mD,OAAA2mD,IAExB37D,KAAAqD,QAAAlD,EAAA,KAAA6Q,GAAA2qD,EACAA,GAnBA37D,KAAAqD,QAAAlD,EAAA,KAAA6Q,MA6BA,QAAA4qD,IAAAhyD,GACA,MAAAA,OAAAmtB,KAAA1zB,QAAAgC,MAAAuE,EAAAghD,KAGA,QAAAiR,IAAAC,EAAAz2D,GACA,MAAA7C,OAAA1F,QAAAg/D,GACAA,EAAAn+D,QAAA0H,IAAA,EACG,gBAAAy2D,GACHA,EAAA7mD,MAAA,KAAAtX,QAAA0H,IAAA,IACGu+C,EAAAkY,IACHA,EAAAp4C,KAAAre,GAMA,QAAA02D,IAAA9X,EAAA+X,EAAA38D,GACA,OAAA/C,KAAA2nD,GAAA,CACA,GAAAgY,GAAAhY,EAAA3nD,EACA,IAAA2/D,EAAA,CACA,GAAA52D,GAAAu2D,GAAAK,EAAAlR,iBACA1lD,KAAAhG,EAAAgG,KACA42D,IAAAD,GACAE,GAAAD,GAEAhY,EAAA3nD,GAAA,QAMA,QAAA4/D,IAAAxR,GACAA,GACAA,EAAAyR,kBAAAv7B,WA2KA,QAAAw7B,IAAA1R,GAIA,IAHA,GAAAlsD,GAAAksD,EAAAlsD,KACA69D,EAAA3R,EACA4R,EAAA5R,EACAnH,EAAA+Y,EAAAH,oBACAG,IAAAH,kBAAA1K,OACA6K,EAAA99D,OACAA,EAAA+9D,GAAAD,EAAA99D,QAGA,MAAA+kD,EAAA8Y,IAAAz4D,SACAy4D,EAAA79D,OACAA,EAAA+9D,GAAA/9D,EAAA69D,EAAA79D,MAGA,OAAAg+D,IAAAh+D,EAAAi+D,YAAAj+D,EAAAk+D,OAGA,QAAAH,IAAAp2D,EAAAvC,GACA,OACA64D,YAAA38D,GAAAqG,EAAAs2D,YAAA74D,EAAA64D,aACAC,MAAAnZ,EAAAp9C,EAAAu2D,QACAv2D,EAAAu2D,MAAA94D,EAAA84D,OACA94D,EAAA84D,OAIA,QAAAF,IACAC,EACAE,GAEA,MAAApZ,GAAAkZ,IAAAlZ,EAAAoZ,GACA78D,GAAA28D,EAAAG,GAAAD,IAGA,GAGA,QAAA78D,IAAA8Q,EAAAC,GACA,MAAAD,GAAAC,EAAAD,EAAA,IAAAC,EAAAD,EAAAC,GAAA,GAGA,QAAA+rD,IAAA/+D,GACA,MAAA2E,OAAA1F,QAAAe,GACAg/D,GAAAh/D,GAEAlB,EAAAkB,GACAi/D,GAAAj/D,GAEA,gBAAAA,GACAA,EAGA,GAGA,QAAAg/D,IAAAh/D,GAGA,OADAk/D,GADAp6B,EAAA,GAEA9mC,EAAA,EAAAguC,EAAAhsC,EAAA9B,OAAmCF,EAAAguC,EAAOhuC,IAC1C0nD,EAAAwZ,EAAAH,GAAA/+D,EAAAhC,MAAA,KAAAkhE,IACAp6B,IAAgBA,GAAA,KAChBA,GAAAo6B,EAGA,OAAAp6B,GAGA,QAAAm6B,IAAAj/D,GACA,GAAA8kC,GAAA,EACA,QAAArmC,KAAAuB,GACAA,EAAAvB,KACAqmC,IAAgBA,GAAA,KAChBA,GAAArmC,EAGA,OAAAqmC,GAuCA,QAAA60B,IAAA5M,GACA,MAAAoS,IAAApS,GACA,MAIA,SAAAA,EACA,WADA,GAMA,QAAAqS,IAAArS,GAEA,IAAAnF,GACA,QAEA,IAAAgS,GAAA7M,GACA,QAIA,IAFAA,IAAAv6C,cAEA,MAAA6sD,GAAAtS,GACA,MAAAsS,IAAAtS,EAEA,IAAA/lD,GAAAvH,SAAAC,cAAAqtD,EACA,OAAAA,GAAAjtD,QAAA,QAEAu/D,GAAAtS,GACA/lD,EAAA5I,cAAAyf,OAAAyhD,oBACAt4D,EAAA5I,cAAAyf,OAAA0hD,YAGAF,GAAAtS,GAAA,qBAAAlnC,KAAA7e,EAAAvC,YASA,QAAA6R,IAAAtP,GACA,mBAAAA,GAAA,CACA,GAAAw4D,GAAA//D,SAAAggE,cAAAz4D,EACA,OAAAw4D,IAIA//D,SAAAC,cAAA,OAIA,MAAAsH,GAMA,QAAA04D,IAAAC,EAAA9S,GACA,GAAAI,GAAAxtD,SAAAC,cAAAigE,EACA,kBAAAA,EACA1S,GAGAJ,EAAAlsD,MAAAksD,EAAAlsD,KAAA+tD,WAAAjJ,KAAAoH,EAAAlsD,KAAA+tD,MAAAkR,UACA3S,EAAApoC,aAAA,uBAEAooC,GAGA,QAAA4S,IAAA38B,EAAAy8B,GACA,MAAAlgE,UAAAogE,gBAAAC,GAAA58B,GAAAy8B,GAGA,QAAAI,IAAArrC,GACA,MAAAj1B,UAAAsgE,eAAArrC,GAGA,QAAAsrC,IAAAtrC,GACA,MAAAj1B,UAAAugE,cAAAtrC,GAGA,QAAAurC,IAAAzB,EAAA0B,EAAAC,GACA3B,EAAAyB,aAAAC,EAAAC,GAGA,QAAAn5B,IAAAjrB,EAAAzT,GACAyT,EAAAirB,YAAA1+B,GAGA,QAAA83D,IAAArkD,EAAAzT,GACAyT,EAAAqkD,YAAA93D,GAGA,QAAAk2D,IAAAziD,GACA,MAAAA,GAAAyiD,WAGA,QAAA6B,IAAAtkD,GACA,MAAAA,GAAAskD,YAGA,QAAAV,IAAA5jD,GACA,MAAAA,GAAA4jD,QAGA,QAAAW,IAAAvkD,EAAA2Y,GACA3Y,EAAAwkD,YAAA7rC,EAGA,QAAA7P,IAAA9I,EAAAtd,EAAA2pB,GACArM,EAAA8I,aAAApmB,EAAA2pB,GAoCA,QAAAo4C,IAAA3T,EAAA4T,GACA,GAAAhiE,GAAAouD,EAAAlsD,KAAAgnC,GACA,IAAAlpC,EAAA,CAEA,GAAAgpD,GAAAoF,EAAA9rD,QACA4mC,EAAAklB,EAAAyR,mBAAAzR,EAAAI,IACAyT,EAAAjZ,EAAA2K,KACAqO,GACA97D,MAAA1F,QAAAyhE,EAAAjiE,IACA8b,EAAAmmD,EAAAjiE,GAAAkpC,GACK+4B,EAAAjiE,KAAAkpC,IACL+4B,EAAAjiE,OAAAgnD,IAGAoH,EAAAlsD,KAAAggE,SACAh8D,MAAA1F,QAAAyhE,EAAAjiE,IAEOiiE,EAAAjiE,GAAAqB,QAAA6nC,GAAA,GAEP+4B,EAAAjiE,GAAA2C,KAAAumC,GAHA+4B,EAAAjiE,IAAAkpC,GAMA+4B,EAAAjiE,GAAAkpC,GAuBA,QAAAi5B,IAAA7tD,EAAAC,GACA,MACAD,GAAAtU,MAAAuU,EAAAvU,MAEAsU,EAAAg6C,MAAA/5C,EAAA+5C,KACAh6C,EAAAu6C,YAAAt6C,EAAAs6C,WACA5H,EAAA3yC,EAAApS,QAAA+kD,EAAA1yC,EAAArS,OACAkgE,GAAA9tD,EAAAC,IAEA2yC,EAAA5yC,EAAA+tD,qBACA/tD,EAAAo6C,eAAAn6C,EAAAm6C,cACA3H,EAAAxyC,EAAAm6C,aAAA5oB,QAQA,QAAAs8B,IAAA9tD,EAAAC,GACA,aAAAD,EAAAg6C,IAA0B,QAC1B,IAAA/uD,EAGA,QAFA0nD,EAAA1nD,EAAA+U,EAAApS,OAAA+kD,EAAA1nD,IAAA0wD,QAAA1wD,EAAAsE,SACAojD,EAAA1nD,EAAAgV,EAAArS,OAAA+kD,EAAA1nD,IAAA0wD,QAAA1wD,EAAAsE,MAIA,QAAAy+D,IAAA/T,EAAAgU,EAAAC,GACA,GAAAjjE,GAAAS,EACAyC,IACA,KAAAlD,EAAAgjE,EAAoBhjE,GAAAijE,IAAajjE,EACjCS,EAAAuuD,EAAAhvD,GAAAS,IACAinD,EAAAjnD,KAAqByC,EAAAzC,GAAAT,EAErB,OAAAkD,GAgmBA,QAAAggE,IAAAC,EAAAtU,IACAsU,EAAAxgE,KAAAqqD,YAAA6B,EAAAlsD,KAAAqqD,aACAgI,GAAAmO,EAAAtU,GAIA,QAAAmG,IAAAmO,EAAAtU,GACA,GAQApuD,GAAA2iE,EAAAC,EARAC,EAAAH,IAAAI,GACAC,EAAA3U,IAAA0U,GACAE,EAAAC,GAAAP,EAAAxgE,KAAAqqD,WAAAmW,EAAApgE,SACA4gE,EAAAD,GAAA7U,EAAAlsD,KAAAqqD,WAAA6B,EAAA9rD,SAEA6gE,KACAC,IAGA,KAAApjE,IAAAkjE,GACAP,EAAAK,EAAAhjE,GACA4iE,EAAAM,EAAAljE,GACA2iE,GAQAC,EAAAS,SAAAV,EAAAphE,MACA+hE,GAAAV,EAAA,SAAAxU,EAAAsU,GACAE,EAAAla,KAAAka,EAAAla,IAAA6a,kBACAH,EAAAzgE,KAAAigE,KATAU,GAAAV,EAAA,OAAAxU,EAAAsU,GACAE,EAAAla,KAAAka,EAAAla,IAAA8a,UACAL,EAAAxgE,KAAAigE,GAYA,IAAAO,EAAA1jE,OAAA,CACA,GAAAgkE,GAAA,WACA,OAAAlkE,GAAA,EAAqBA,EAAA4jE,EAAA1jE,OAA2BF,IAChD+jE,GAAAH,EAAA5jE,GAAA,WAAA6uD,EAAAsU,GAGAG,GACAjT,GAAAxB,EAAAlsD,KAAAiF,OAAAinD,EAAAlsD,KAAAiF,SAA6D,SAAAs8D,GAE7DA,IAYA,GARAL,EAAA3jE,QACAmwD,GAAAxB,EAAAlsD,KAAAiF,OAAAinD,EAAAlsD,KAAAiF,SAA2D,uBAC3D,OAAA5H,GAAA,EAAqBA,EAAA6jE,EAAA3jE,OAA8BF,IACnD+jE,GAAAF,EAAA7jE,GAAA,mBAAA6uD,EAAAsU,MAKAG,EACA,IAAA7iE,IAAAgjE,GACAE,EAAAljE,IAEAsjE,GAAAN,EAAAhjE,GAAA,SAAA0iE,IAAAK,GAQA,QAAAE,IACA3W,EACAtD,GAEA,GAAA3iB,GAAAtgC,OAAAsd,OAAA,KACA,KAAAipC,EACA,MAAAjmB,EAEA,IAAA9mC,GAAAqjE,CACA,KAAArjE,EAAA,EAAaA,EAAA+sD,EAAA7sD,OAAiBF,IAC9BqjE,EAAAtW,EAAA/sD,GACAqjE,EAAAc,YACAd,EAAAc,UAAAC,IAEAt9B,EAAAu9B,GAAAhB,MACAA,EAAAla,IAAAsE,EAAAhE,EAAAvhB,SAAA,aAAAm7B,EAAA75D,MAAA,EAEA,OAAAs9B,GAGA,QAAAu9B,IAAAhB,GACA,MAAAA,GAAAiB,SAAAjB,EAAA,SAAA78D,OAAAs8B,KAAAugC,EAAAc,eAA4ElyD,KAAA,KAG5E,QAAA8xD,IAAAV,EAAAz7D,EAAAinD,EAAAsU,EAAAK,GACA,GAAA3gC,GAAAwgC,EAAAla,KAAAka,EAAAla,IAAAvhD,EACA,IAAAi7B,EACA,IACAA,EAAAgsB,EAAAI,IAAAoU,EAAAxU,EAAAsU,EAAAK,GACK,MAAA74D,GACL6+C,EAAA7+C,EAAAkkD,EAAA9rD,QAAA,aAAAsgE,EAAA,SAAAz7D,EAAA,UAYA,QAAA28D,IAAApB,EAAAtU,GACA,GAAA9gD,GAAA8gD,EAAAK,gBACA,MAAAxH,EAAA35C,KAAA,IAAAA,EAAAmtB,KAAA1zB,QAAAg9D,cAGAhd,EAAA2b,EAAAxgE,KAAA+tD,QAAAlJ,EAAAqH,EAAAlsD,KAAA+tD,QAAA,CAGA,GAAAjwD,GAAAwvD,EACAhB,EAAAJ,EAAAI,IACAwV,EAAAtB,EAAAxgE,KAAA+tD,UACAA,EAAA7B,EAAAlsD,KAAA+tD,SAEAhJ,GAAAgJ,EAAAhG,UACAgG,EAAA7B,EAAAlsD,KAAA+tD,MAAArvD,KAAwCqvD,GAGxC,KAAAjwD,IAAAiwD,GACAT,EAAAS,EAAAjwD,GACAgkE,EAAAhkE,KACAwvD,GACAyU,GAAAzV,EAAAxuD,EAAAwvD,EAKA0U,KAAAjU,EAAA1uD,QAAAyiE,EAAAziE,OACA0iE,GAAAzV,EAAA,QAAAyB,EAAA1uD,MAEA,KAAAvB,IAAAgkE,GACAjd,EAAAkJ,EAAAjwD,MACAmkE,GAAAnkE,GACAwuD,EAAA4V,kBAAAC,GAAAC,GAAAtkE,IACOukE,GAAAvkE,IACPwuD,EAAAgW,gBAAAxkE,KAMA,QAAAikE,IAAA17D,EAAAvI,EAAAuB,GACAkjE,GAAAzkE,GAGA0kE,GAAAnjE,GACAgH,EAAAi8D,gBAAAxkE,GAEAuI,EAAA6d,aAAApmB,KAEGukE,GAAAvkE,GACHuI,EAAA6d,aAAApmB,EAAA0kE,GAAAnjE,IAAA,UAAAA,EAAA,gBACG4iE,GAAAnkE,GACH0kE,GAAAnjE,GACAgH,EAAA67D,kBAAAC,GAAAC,GAAAtkE,IAEAuI,EAAAo8D,eAAAN,GAAArkE,EAAAuB,GAGAmjE,GAAAnjE,GACAgH,EAAAi8D,gBAAAxkE,GAEAuI,EAAA6d,aAAApmB,EAAAuB,GAYA,QAAAqjE,IAAAlC,EAAAtU,GACA,GAAA7lD,GAAA6lD,EAAAI,IACAtsD,EAAAksD,EAAAlsD,KACA2iE,EAAAnC,EAAAxgE,IACA,MACA6kD,EAAA7kD,EAAAi+D,cACApZ,EAAA7kD,EAAAk+D,SACArZ,EAAA8d,IACA9d,EAAA8d,EAAA1E,cACApZ,EAAA8d,EAAAzE,SALA,CAYA,GAAA0E,GAAAhF,GAAA1R,GAGA2W,EAAAx8D,EAAAy8D,kBACA/d,GAAA8d,KACAD,EAAAthE,GAAAshE,EAAAxE,GAAAyE,KAIAD,IAAAv8D,EAAA08D,aACA18D,EAAA6d,aAAA,QAAA0+C,GACAv8D,EAAA08D,WAAAH,IAaA,QAAAI,IAAAC,GAoEA,QAAAC,MACAC,WAAA1iE,KAAAwiE,EAAAhhE,MAAAmhE,EAAA/lE,GAAAgmE,QACAD,EAAA/lE,EAAA,EArEA,GAQAuwC,GAAAsC,EAAA7yC,EAAAimE,EAAAH,EARAI,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAT,EAAA,CAGA,KAAA/lE,EAAA,EAAaA,EAAA4lE,EAAA1lE,OAAgBF,IAG7B,GAFA6yC,EAAAtC,EACAA,EAAAq1B,EAAAl2B,WAAA1vC,GACAkmE,EACA,KAAA31B,GAAA,KAAAsC,IAAwCqzB,GAAA,OACnC,IAAAC,EACL,KAAA51B,GAAA,KAAAsC,IAAwCszB,GAAA,OACnC,IAAAC,EACL,KAAA71B,GAAA,KAAAsC,IAAwCuzB,GAAA,OACnC,IAAAC,EACL,KAAA91B,GAAA,KAAAsC,IAAwCwzB,GAAA,OACnC,IACL,MAAA91B,GACA,MAAAq1B,EAAAl2B,WAAA1vC,EAAA,IACA,MAAA4lE,EAAAl2B,WAAA1vC,EAAA,IACAsmE,GAAAC,GAAAC,EASK,CACL,OAAAj2B,GACA,QAAA41B,GAAA,CAAmC,MACnC,SAAAD,GAAA,CAAmC,MACnC,SAAAE,GAAA,CAA2C,MAC3C,SAAAI,GAA2B,MAC3B,SAAAA,GAA2B,MAC3B,SAAAD,GAA4B,MAC5B,SAAAA,GAA4B,MAC5B,UAAAD,GAA2B,MAC3B,UAAAA,IAEA,QAAA/1B,EAAA,CAIA,IAHA,GAAA5d,GAAA3yB,EAAA,EACAm7C,MAAA,GAEcxoB,GAAA,GAEd,OADAwoB,EAAAyqB,EAAA/pC,OAAAlJ,IADsBA,KAItBwoB,GAAAsrB,GAAA5+C,KAAAszB,KACAkrB,GAAA,aA5BA5e,KAAAwe,GAEAF,EAAA/lE,EAAA,EACAimE,EAAAL,EAAAhhE,MAAA,EAAA5E,GAAAgmE,QAEAH,GAwCA,QAXApe,KAAAwe,EACAA,EAAAL,EAAAhhE,MAAA,EAAA5E,GAAAgmE,OACG,IAAAD,GACHF,IAQAC,EACA,IAAA9lE,EAAA,EAAeA,EAAA8lE,EAAA5lE,OAAoBF,IACnCimE,EAAAS,GAAAT,EAAAH,EAAA9lE,GAIA,OAAAimE,GAGA,QAAAS,IAAAd,EAAApiE,GACA,GAAAxD,GAAAwD,EAAA1B,QAAA,IACA,OAAA9B,GAAA,EAEA,OAAAwD,EAAA,MAAAoiE,EAAA,IAIA,OAFApiE,EAAAoB,MAAA,EAAA5E,GAEA,MAAA4lE,EAAA,IADApiE,EAAAoB,MAAA5E,EAAA,GAOA,QAAA2mE,IAAA1jC,GACAtrB,QAAA4uB,MAAA,mBAAAtD,GAGA,QAAA2jC,IACAxjC,EACA3iC,GAEA,MAAA2iC,GACAA,EAAAlgC,IAAA,SAAAmM,GAAgC,MAAAA,GAAA5O,KAAiB+C,OAAA,SAAAqjE,GAAuB,MAAAA,QAIxE,QAAAC,IAAA99D,EAAAQ,EAAAxH,IACAgH,EAAAoC,QAAApC,EAAAoC,WAAAhI,MAAsCoG,OAAAxH,UAGtC,QAAA+kE,IAAA/9D,EAAAQ,EAAAxH,IACAgH,EAAA0nD,QAAA1nD,EAAA0nD,WAAAttD,MAAsCoG,OAAAxH,UAGtC,QAAAglE,IACAh+D,EACAQ,EACA86D,EACAtiE,EACAilE,EACA9C,IAEAn7D,EAAAgkD,aAAAhkD,EAAAgkD,gBAAA5pD,MAAgDoG,OAAA86D,UAAAtiE,QAAAilE,MAAA9C,cAGhD,QAAA+C,IACAl+D,EACAQ,EACAxH,EACAmiE,EACAgD,EACAvvD,GAcAusD,KAAAhU,gBACAgU,GAAAhU,QACA3mD,EAAA,IAAAA,GAEA26D,KAAAnb,aACAmb,GAAAnb,KACAx/C,EAAA,IAAAA,GAGA26D,KAAA/T,gBACA+T,GAAA/T,QACA5mD,EAAA,IAAAA,EAEA,IAAA49D,EACAjD,MAAAkD,cACAlD,GAAAkD,OACAD,EAAAp+D,EAAAs+D,eAAAt+D,EAAAs+D,kBAEAF,EAAAp+D,EAAAo+D,SAAAp+D,EAAAo+D,UAEA,IAAAG,IAAoBvlE,QAAAmiE,aACpB7N,EAAA8Q,EAAA59D,EAEA7C,OAAA1F,QAAAq1D,GACA6Q,EAAA7Q,EAAA4I,QAAAqI,GAAAjR,EAAAlzD,KAAAmkE,GAEAH,EAAA59D,GADG8sD,EACH6Q,GAAAI,EAAAjR,MAAAiR,GAEAA,EAIA,QAAAC,IACAx+D,EACAQ,EACAi+D,GAEA,GAAAC,GACAC,GAAA3+D,EAAA,IAAAQ,IACAm+D,GAAA3+D,EAAA,UAAAQ,EACA,UAAAk+D,EACA,MAAA/B,IAAA+B,EACG,SAAAD,EAAA,CACH,GAAAG,GAAAD,GAAA3+D,EAAAQ,EACA,UAAAo+D,EACA,MAAA3f,MAAA7jC,UAAAwjD,IAKA,QAAAD,IAAA3+D,EAAAQ,GACA,GAAA4gB,EACA,WAAAA,EAAAphB,EAAA6+D,SAAAr+D,IAEA,OADAiY,GAAAzY,EAAA8+D,UACA9nE,EAAA,EAAAguC,EAAAvsB,EAAAvhB,OAAoCF,EAAAguC,EAAOhuC,IAC3C,GAAAyhB,EAAAzhB,GAAAwJ,SAAA,CACAiY,EAAAhF,OAAAzc,EAAA,EACA,OAIA,MAAAoqB,GAQA,QAAA29C,IACA/+D,EACAhH,EACAmiE,GAEA,GAAAx6B,GAAAw6B,MACA/6C,EAAAugB,EAAAvgB,OACA48C,EAAAr8B,EAAAq8B,KAGAgC,EADA,KAEAhC,KACAgC,EACA,8CAIA5+C,IACA4+C,EAAA,MAAAA,EAAA,IAEA,IAAAC,GAAAC,GAAAlmE,EAAAgmE,EAEAh/D,GAAAwP,OACAxW,MAAA,IAAAA,EAAA,IACAikE,WAAA,IAAAjkE,EAAA,IACAo5D,SAAA,mBAAwD6M,EAAA,KAOxD,QAAAC,IACAlmE,EACAimE,GAEA,GAAAE,GAAAC,GAAApmE,EACA,eAAAmmE,EAAA/sD,IACApZ,EAAA,IAAAimE,EAEA,QAAAE,EAAA,SAAAA,EAAA,SAAAF,EAAA,IAyBA,QAAAG,IAAAh+C,GAKA,GAJAF,GAAAE,EACAnqB,GAAAiqB,GAAAhqB,OACAmoE,GAAAC,GAAAC,GAAA,EAEAn+C,EAAAtoB,QAAA,QAAAsoB,EAAAo+C,YAAA,KAAAvoE,GAAA,EACA,OACA2lE,IAAAx7C,EACAhP,IAAA,KAIA,OAAAqtD,MACAC,GAAA51B,KAEA61B,GAAAD,IACAE,GAAAF,IACK,KAAAA,IACLG,GAAAH,GAIA,QACA9C,IAAAx7C,EAAA0+C,UAAA,EAAAR,IACAltD,IAAAgP,EAAA0+C,UAAAR,GAAA,EAAAC,KAIA,QAAAz1B,MACA,MAAA5oB,IAAAwlB,aAAA24B,IAGA,QAAAI,MACA,MAAAJ,KAAApoE,GAGA,QAAA0oE,IAAAD,GACA,YAAAA,GAAA,KAAAA,EAGA,QAAAG,IAAAH,GACA,GAAAK,GAAA,CAEA,KADAT,GAAAD,IACAI,MAEA,GADAC,EAAA51B,KACA61B,GAAAD,GACAE,GAAAF,OAKA,IAFA,KAAAA,GAAuBK,IACvB,KAAAL,GAAuBK,IACvB,IAAAA,EAAA,CACAR,GAAAF,EACA,QAKA,QAAAO,IAAAF,GAEA,IADA,GAAAM,GAAAN,GACAD,OACAC,EAAA51B,QACAk2B,KAeA,QAAAxwD,IACAxP,EACAq6D,EACA4F,GAEAC,GAAAD,CACA,IAAAjnE,GAAAqhE,EAAArhE,MACAmiE,EAAAd,EAAAc,UACApV,EAAA/lD,EAAA+lD,IACAzqD,EAAA0E,EAAA6+D,SAAAvjE,IAoBA,IAAA0E,EAAA+R,UAGA,MAFAgtD,IAAA/+D,EAAAhH,EAAAmiE,IAEA,CACG,eAAApV,EACHoa,GAAAngE,EAAAhH,EAAAmiE,OACG,cAAApV,GAAA,aAAAzqD,EACH8kE,GAAApgE,EAAAhH,EAAAmiE,OACG,cAAApV,GAAA,UAAAzqD,EACH+kE,GAAArgE,EAAAhH,EAAAmiE,OACG,cAAApV,GAAA,aAAAA,EACHua,GAAAtgE,EAAAhH,EAAAmiE,OACG,KAAA3/B,GAAAo3B,cAAA7M,GAGH,MAFAgZ,IAAA/+D,EAAAhH,EAAAmiE,IAEA,CAWA,UAGA,QAAAiF,IACApgE,EACAhH,EACAmiE,GAEA,GAAA/6C,GAAA+6C,KAAA/6C,OACAmgD,EAAA/B,GAAAx+D,EAAA,iBACAwgE,EAAAhC,GAAAx+D,EAAA,sBACAygE,EAAAjC,GAAAx+D,EAAA,uBACA89D,IAAA99D,EAAA,UACA,iBAAAhH,EAAA,QACAA,EAAA,IAAAunE,EAAA,QACA,SAAAC,EACA,KAAAxnE,EAAA,IACA,OAAAA,EAAA,IAAAwnE,EAAA,MAGAtC,GAAAl+D,EAAA0gE,GACA,WAAA1nE,EAAA,yCAEAwnE,EAAA,MAAAC,EAAA,qCAEArgD,EAAA,MAAAmgD,EAAA,IAAAA,GAAA,oCAEevnE,EAAA,mCACHA,EAAA,qDACDkmE,GAAAlmE,EAAA,WACX,SAIA,QAAAqnE,IACArgE,EACAhH,EACAmiE,GAEA,GAAA/6C,GAAA+6C,KAAA/6C,OACAmgD,EAAA/B,GAAAx+D,EAAA,gBACAugE,GAAAngD,EAAA,MAAAmgD,EAAA,IAAAA,EACAzC,GAAA99D,EAAA,gBAAAhH,EAAA,IAAAunE,EAAA,KACArC,GAAAl+D,EAAA0gE,GAAAxB,GAAAlmE,EAAAunE,GAAA,SAGA,QAAAJ,IACAngE,EACAhH,EACAmiE,GAEA,GAAA/6C,GAAA+6C,KAAA/6C,OACAugD,EAAA,0JAGAvgD,EAAA,sBAGAwgD,EAAA,uBAAAD,EAAA,GACAC,KAAA,IAAA1B,GAAAlmE,EAFA,6DAGAklE,GAAAl+D,EAAA,SAAA4gE,EAAA,SAGA,QAAAN,IACAtgE,EACAhH,EACAmiE,GAEA,GAAA7/D,GAAA0E,EAAA6+D,SAAAvjE,KACAqlC,EAAAw6B,MACA0F,EAAAlgC,EAAAkgC,KACAzgD,EAAAugB,EAAAvgB,OACA48C,EAAAr8B,EAAAq8B,KACA8D,GAAAD,GAAA,UAAAvlE,EACA4V,EAAA2vD,EACA,SACA,UAAAvlE,EACAylE,GACA,QAEA/B,EAAA,qBACAhC,KACAgC,EAAA,8BAEA5+C,IACA4+C,EAAA,MAAAA,EAAA,IAGA,IAAA4B,GAAA1B,GAAAlmE,EAAAgmE,EACA8B,KACAF,EAAA,qCAA8CA,GAG9C9C,GAAA99D,EAAA,YAAAhH,EAAA,KACAklE,GAAAl+D,EAAAkR,EAAA0vD,EAAA,UACA5D,GAAA58C,IACA89C,GAAAl+D,EAAA,yBAUA,QAAAghE,IAAAr5D,GACA,GAAAuJ,EAEAwtC,GAAA/2C,EAAAo5D,OAEA7vD,EAAA+vD,GAAA,iBACAt5D,EAAAuJ,MAAAjW,OAAA0M,EAAAo5D,IAAAp5D,EAAAuJ,cACAvJ,GAAAo5D,KAEAriB,EAAA/2C,EAAA+4D,OAEAxvD,EAAAgwD,GAAA,iBACAv5D,EAAAuJ,MAAAjW,OAAA0M,EAAA+4D,IAAA/4D,EAAAuJ,cACAvJ,GAAA+4D,KAMA,QAAAS,IACAjwD,EACA3F,EACA0+C,EACA9C,EACAC,GAEA,GAAA6C,EAAA,CACA,GAAAmX,GAAA71D,EACAw1C,EAAAsgB,EACA91D,GAAA,SAAA+1D,GAIA,QAHA,IAAAvmE,UAAA7D,OACAkqE,EAAAE,GACAF,EAAApmE,MAAA,KAAAD,aAEAwmE,GAAArwD,EAAA3F,EAAA47C,EAAApG,IAIAsgB,GAAA3wB,iBACAx/B,EACA3F,EACAi2D,IACSra,UAAAC,WACTD,GAIA,QAAAoa,IACArwD,EACA3F,EACA47C,EACApG,IAEAA,GAAAsgB,IAAAxwB,oBAAA3/B,EAAA3F,EAAA47C,GAGA,QAAAsa,IAAAtH,EAAAtU,GACA,GAAA6b,GAAAhjB,EAAAmH,EAAAK,kBACAa,EAAA2a,EAAAvH,EAAAxgE,KAAAgoE,SAAAxH,EAAAxgE,KAAAgO,GACAA,EAAA+5D,EAAA7b,EAAAlsD,KAAAgoE,SAAA9b,EAAAlsD,KAAAgO,EACA62C,GAAAuI,IAAAvI,EAAA72C,KAGAA,QACAo/C,QACAsa,GAAAxb,EAAAI,IACA+a,GAAAr5D,GACAm/C,GAAAn/C,EAAAo/C,EAAAoa,GAAAI,GAAA1b,EAAA9rD,UAUA,QAAA6nE,IAAAzH,EAAAtU,GACA,IAAArH,EAAA2b,EAAAxgE,KAAAo6D,YAAAvV,EAAAqH,EAAAlsD,KAAAo6D,UAAA,CAGA,GAAAt8D,GAAAwvD,EACAhB,EAAAJ,EAAAI,IACA4b,EAAA1H,EAAAxgE,KAAAo6D,aACA3xD,EAAAyjD,EAAAlsD,KAAAo6D,YAEArV,GAAAt8C,EAAAs/C,UACAt/C,EAAAyjD,EAAAlsD,KAAAo6D,SAAA17D,KAA2C+J,GAG3C,KAAA3K,IAAAoqE,GACArjB,EAAAp8C,EAAA3K,MACAwuD,EAAAxuD,GAAA,GAGA,KAAAA,IAAA2K,GAKA,GAJA6kD,EAAA7kD,EAAA3K,GAIA,gBAAAA,GAAA,cAAAA,IACAouD,EAAAG,WAA2BH,EAAAG,SAAA9uD,OAAA,GAC3B+vD,IAAA4a,EAAApqE,IAGA,aAAAA,EAAA,CAGAwuD,EAAA6b,OAAA7a,CAEA,IAAA8a,GAAAvjB,EAAAyI,GAAA,GAAAj0B,OAAAi0B,EACA+a,IAAA/b,EAAAJ,EAAAkc,KACA9b,EAAAjtD,MAAA+oE,OAGA9b,GAAAxuD,GAAAwvD,GAQA,QAAA+a,IACA/b,EACAJ,EACAoc,GAEA,OAAAhc,EAAAic,YACA,WAAArc,EAAAE,KACAoc,GAAAlc,EAAAgc,IACAG,GAAAnc,EAAAgc,IAIA,QAAAE,IAAAlc,EAAAgc,GAGA,MAAAxpE,UAAA4pE,gBAAApc,KAAAjtD,QAAAipE,EAGA,QAAAG,IAAAnc,EAAArD,GACA,GAAA5pD,GAAAitD,EAAAjtD,MACAmiE,EAAAlV,EAAAqc,WACA,OAAA5jB,GAAAyc,MAAA/6C,OACA8+B,EAAAlmD,KAAAkmD,EAAA0D,GAEAlE,EAAAyc,MAAA6B,KACAhkE,EAAAgkE,SAAApa,EAAAoa,OAEAhkE,IAAA4pD,EAwBA,QAAA2f,IAAA5oE,GACA,GAAAwG,GAAAqiE,GAAA7oE,EAAAwG,MAGA,OAAAxG,GAAA8oE,YACApqE,EAAAsB,EAAA8oE,YAAAtiE,GACAA,EAIA,QAAAqiE,IAAAE,GACA,MAAA/kE,OAAA1F,QAAAyqE,GACA/iB,EAAA+iB,GAEA,gBAAAA,GACAC,GAAAD,GAEAA,EAOA,QAAAE,IAAA/c,EAAAgd,GACA,GACAC,GADAhlC,IAGA,IAAA+kC,EAEA,IADA,GAAApL,GAAA5R,EACA4R,EAAAH,mBACAG,IAAAH,kBAAA1K,OACA6K,EAAA99D,OAAAmpE,EAAAP,GAAA9K,EAAA99D,QACAtB,EAAAylC,EAAAglC,IAKAA,EAAAP,GAAA1c,EAAAlsD,QACAtB,EAAAylC,EAAAglC,EAIA,KADA,GAAAtL,GAAA3R,EACA2R,IAAAz4D,QACAy4D,EAAA79D,OAAAmpE,EAAAP,GAAA/K,EAAA79D,QACAtB,EAAAylC,EAAAglC,EAGA,OAAAhlC,GA8CA,QAAAilC,IAAA5I,EAAAtU,GACA,GAAAlsD,GAAAksD,EAAAlsD,KACA2iE,EAAAnC,EAAAxgE,IAEA,MAAA6kD,EAAA7kD,EAAA8oE,cAAAjkB,EAAA7kD,EAAAwG,QACAq+C,EAAA8d,EAAAmG,cAAAjkB,EAAA8d,EAAAn8D,QADA,CAMA,GAAA8mD,GAAAzmD,EACAR,EAAA6lD,EAAAI,IACA+c,EAAA1G,EAAAmG,YACAQ,EAAA3G,EAAA4G,iBAAA5G,EAAAn8D,UAGAgjE,EAAAH,GAAAC,EAEA9iE,EAAAqiE,GAAA3c,EAAAlsD,KAAAwG,UAKA0lD,GAAAlsD,KAAAupE,gBAAAxkB,EAAAv+C,EAAAuhD,QACArpD,KAAe8H,GACfA,CAEA,IAAAijE,GAAAR,GAAA/c,GAAA,EAEA,KAAArlD,IAAA2iE,GACA3kB,EAAA4kB,EAAA5iE,KACA6iE,GAAArjE,EAAAQ,EAAA,GAGA,KAAAA,IAAA4iE,IACAnc,EAAAmc,EAAA5iE,MACA2iE,EAAA3iE,IAEA6iE,GAAArjE,EAAAQ,EAAA,MAAAymD,EAAA,GAAAA,IAgBA,QAAAqc,IAAAtjE,EAAAu8D,GAEA,GAAAA,QAAAS,QAKA,GAAAh9D,EAAAujE,UACAhH,EAAAzjE,QAAA,QACAyjE,EAAAnsD,MAAA,OAAApW,QAAA,SAAAutC,GAA6C,MAAAvnC,GAAAujE,UAAArkE,IAAAqoC,KAE7CvnC,EAAAujE,UAAArkE,IAAAq9D,OAEG,CACH,GAAAtV,GAAA,KAAAjnD,EAAAie,aAAA,iBACAgpC,GAAAnuD,QAAA,IAAAyjE,EAAA,QACAv8D,EAAA6d,aAAA,SAAAopC,EAAAsV,GAAAS,SASA,QAAAwG,IAAAxjE,EAAAu8D,GAEA,GAAAA,QAAAS,QAKA,GAAAh9D,EAAAujE,UACAhH,EAAAzjE,QAAA,QACAyjE,EAAAnsD,MAAA,OAAApW,QAAA,SAAAutC,GAA6C,MAAAvnC,GAAAujE,UAAAhwD,OAAAg0B,KAE7CvnC,EAAAujE,UAAAhwD,OAAAgpD,GAEAv8D,EAAAujE,UAAArsE,QACA8I,EAAAi8D,gBAAA,aAEG,CAGH,IAFA,GAAAhV,GAAA,KAAAjnD,EAAAie,aAAA,kBACAwlD,EAAA,IAAAlH,EAAA,IACAtV,EAAAnuD,QAAA2qE,IAAA,GACAxc,IAAA3pC,QAAAmmD,EAAA,IAEAxc,KAAA+V,OACA/V,EACAjnD,EAAA6d,aAAA,QAAAopC,GAEAjnD,EAAAi8D,gBAAA,UAOA,QAAAyH,IAAAC,GACA,GAAAA,EAAA,CAIA,mBAAAA,GAAA,CACA,GAAA7lC,KAKA,QAJA,IAAA6lC,EAAAC,KACAvrE,EAAAylC,EAAA+lC,GAAAF,EAAAnjE,MAAA,MAEAnI,EAAAylC,EAAA6lC,GACA7lC,EACG,sBAAA6lC,GACHE,GAAAF,OADG,IA8CH,QAAAG,IAAAjqC,GACAkqC,GAAA,WACAA,GAAAlqC,KAIA,QAAAmqC,IAAAhkE,EAAAu8D,GACA,GAAA0H,GAAAjkE,EAAAy8D,qBAAAz8D,EAAAy8D,sBACAwH,GAAAnrE,QAAAyjE,GAAA,IACA0H,EAAA7pE,KAAAmiE,GACA+G,GAAAtjE,EAAAu8D,IAIA,QAAA2H,IAAAlkE,EAAAu8D,GACAv8D,EAAAy8D,oBACAlpD,EAAAvT,EAAAy8D,mBAAAF,GAEAiH,GAAAxjE,EAAAu8D,GAGA,QAAA4H,IACAnkE,EACAokE,EACAtqE,GAEA,GAAA6mC,GAAA0jC,GAAArkE,EAAAokE,GACA9oE,EAAAqlC,EAAArlC,KACAmuD,EAAA9oB,EAAA8oB,QACA6a,EAAA3jC,EAAA2jC,SACA,KAAAhpE,EAAc,MAAAxB,IACd,IAAAoX,GAAA5V,IAAAipE,GAAAC,GAAAC,GACAC,EAAA,EACAC,EAAA,WACA3kE,EAAA6wC,oBAAA3/B,EAAA0zD,GACA9qE,KAEA8qE,EAAA,SAAAjjE,GACAA,EAAA/J,SAAAoI,KACA0kE,GAAAJ,GACAK,IAIAnb,YAAA,WACAkb,EAAAJ,GACAK,KAEGlb,EAAA,GACHzpD,EAAA0wC,iBAAAx/B,EAAA0zD,GAKA,QAAAP,IAAArkE,EAAAokE,GACA,GAQA9oE,GARAupE,EAAAhuD,OAAAiuD,iBAAA9kE,GACA+kE,EAAAF,EAAAG,GAAA,SAAA50D,MAAA,MACA60D,EAAAJ,EAAAG,GAAA,YAAA50D,MAAA,MACA80D,EAAAC,GAAAJ,EAAAE,GACAG,EAAAP,EAAAQ,GAAA,SAAAj1D,MAAA,MACAk1D,EAAAT,EAAAQ,GAAA,YAAAj1D,MAAA,MACAm1D,EAAAJ,GAAAC,EAAAE,GAGA7b,EAAA,EACA6a,EAAA,CA8BA,OA5BAF,KAAAG,GACAW,EAAA,IACA5pE,EAAAipE,GACA9a,EAAAyb,EACAZ,EAAAW,EAAA/tE,QAEGktE,IAAAoB,GACHD,EAAA,IACAjqE,EAAAkqE,GACA/b,EAAA8b,EACAjB,EAAAgB,EAAApuE,SAGAuyD,EAAAhmD,KAAAE,IAAAuhE,EAAAK,GACAjqE,EAAAmuD,EAAA,EACAyb,EAAAK,EACAhB,GACAiB,GACA,KACAlB,EAAAhpE,EACAA,IAAAipE,GACAU,EAAA/tE,OACAouE,EAAApuE,OACA,IAMAoE,OACAmuD,UACA6a,YACAmB,aANAnqE,IAAAipE,IACAmB,GAAA7mD,KAAAgmD,EAAAG,GAAA,cASA,QAAAG,IAAAQ,EAAAC,GAEA,KAAAD,EAAAzuE,OAAA0uE,EAAA1uE,QACAyuE,IAAA1qE,OAAA0qE,EAGA,OAAAliE,MAAAE,IAAA3I,MAAA,KAAA4qE,EAAA1rE,IAAA,SAAAm2B,EAAAr5B,GACA,MAAA6uE,IAAAx1C,GAAAw1C,GAAAF,EAAA3uE,OAIA,QAAA6uE,IAAA11C,GACA,WAAApM,OAAAoM,EAAAv0B,MAAA,OAKA,QAAAkqE,IAAAjgB,EAAAkgB,GACA,GAAA/lE,GAAA6lD,EAAAI,GAGAvH,GAAA1+C,EAAAgmE,YACAhmE,EAAAgmE,SAAAC,WAAA,EACAjmE,EAAAgmE,WAGA,IAAArsE,GAAA+pE,GAAA7d,EAAAlsD,KAAAusE,WACA,KAAA1nB,EAAA7kD,KAKA+kD,EAAA1+C,EAAAmmE,WAAA,IAAAnmE,EAAAzE,SAAA,CA4BA,IAxBA,GAAAqoE,GAAAjqE,EAAAiqE,IACAtoE,EAAA3B,EAAA2B,KACA8qE,EAAAzsE,EAAAysE,WACAC,EAAA1sE,EAAA0sE,aACAC,EAAA3sE,EAAA2sE,iBACAC,EAAA5sE,EAAA4sE,YACAC,EAAA7sE,EAAA6sE,cACAC,EAAA9sE,EAAA8sE,kBACAC,EAAA/sE,EAAA+sE,YACAZ,EAAAnsE,EAAAmsE,MACAa,EAAAhtE,EAAAgtE,WACAC,EAAAjtE,EAAAitE,eACAC,EAAAltE,EAAAktE,aACAC,EAAAntE,EAAAmtE,OACAC,EAAAptE,EAAAotE,YACAC,EAAArtE,EAAAqtE,gBACAvkE,EAAA9I,EAAA8I,SAMA1I,EAAAktE,GACAC,EAAAD,GAAApoE,OACAqoE,KAAAnoE,QACAmoE,IAAAnoE,OACAhF,EAAAmtE,EAAAntE,OAGA,IAAAotE,IAAAptE,EAAAyxD,aAAA3F,EAAAuhB,YAEA,KAAAD,GAAAL,GAAA,KAAAA,EAAA,CAIA,GAAAO,GAAAF,GAAAZ,EACAA,EACAH,EACAkB,EAAAH,GAAAV,EACAA,EACAH,EACAiB,EAAAJ,GAAAX,EACAA,EACAH,EAEAmB,EAAAL,EACAN,GAAAH,EACAA,EACAe,EAAAN,GACA,kBAAAL,KACAhB,EACA4B,EAAAP,EACAJ,GAAAJ,EACAA,EACAgB,EAAAR,EACAH,GAAAJ,EACAA,EAEAgB,EAAA1oB,EACApnD,EAAA2K,GACAA,EAAAqjE,MACArjE,GAOAolE,GAAA,IAAAjE,IAAAjI,GACAmM,EAAAC,GAAAN,GAEA3tE,EAAAkG,EAAAmmE,SAAAnmB,EAAA,WACA6nB,IACA3D,GAAAlkE,EAAAunE,GACArD,GAAAlkE,EAAAsnE,IAEAxtE,EAAAmsE,WACA4B,GACA3D,GAAAlkE,EAAAqnE,GAEAM,KAAA3nE,IAEA0nE,KAAA1nE,GAEAA,EAAAmmE,SAAA,MAGAtgB,GAAAlsD,KAAAquE,MAEA3gB,GAAAxB,EAAAlsD,KAAAiF,OAAAinD,EAAAlsD,KAAAiF,SAA2D,oBAC3D,GAAAG,GAAAiB,EAAAw3D,WACAyQ,EAAAlpE,KAAAmpE,UAAAnpE,EAAAmpE,SAAAriB,EAAApuD,IACAwwE,IACAA,EAAAliB,MAAAF,EAAAE,KACAkiB,EAAAhiB,IAAA+f,UAEAiC,EAAAhiB,IAAA+f,WAEAyB,KAAAznE,EAAAlG,KAKA0tE,KAAAxnE,GACA6nE,IACA7D,GAAAhkE,EAAAqnE,GACArD,GAAAhkE,EAAAsnE,GACAxD,GAAA,WACAE,GAAAhkE,EAAAunE,GACArD,GAAAlkE,EAAAqnE,GACAvtE,EAAAmsE,WAAA6B,IACAK,GAAAP,GACApe,WAAA1vD,EAAA8tE,GAEAzD,GAAAnkE,EAAA1E,EAAAxB,OAMA+rD,EAAAlsD,KAAAquE,OACAjC,OACA0B,KAAAznE,EAAAlG,IAGA+tE,GAAAC,GACAhuE,MAIA,QAAAsuE,IAAAviB,EAAAwiB,GAsEA,QAAAC,KAEAxuE,EAAAmsE,YAIApgB,EAAAlsD,KAAAquE,QACAhoE,EAAAw3D,WAAA0Q,WAAAloE,EAAAw3D,WAAA0Q,cAA6DriB,EAAA,KAAAA,GAE7D0iB,KAAAvoE,GACA6nE,IACA7D,GAAAhkE,EAAAwoE,GACAxE,GAAAhkE,EAAAyoE,GACA3E,GAAA,WACAE,GAAAhkE,EAAA0oE,GACAxE,GAAAlkE,EAAAwoE,GACA1uE,EAAAmsE,WAAA6B,IACAK,GAAAQ,GACAnf,WAAA1vD,EAAA6uE,GAEAxE,GAAAnkE,EAAA1E,EAAAxB,OAKAsuE,KAAApoE,EAAAlG,GACA+tE,GAAAC,GACAhuE,KAhGA,GAAAkG,GAAA6lD,EAAAI,GAGAvH,GAAA1+C,EAAAmmE,YACAnmE,EAAAmmE,SAAAF,WAAA,EACAjmE,EAAAmmE,WAGA,IAAAxsE,GAAA+pE,GAAA7d,EAAAlsD,KAAAusE,WACA,IAAA1nB,EAAA7kD,GACA,MAAA0uE,IAIA,KAAA3pB,EAAA1+C,EAAAgmE,WAAA,IAAAhmE,EAAAzE,SAAA,CAIA,GAAAqoE,GAAAjqE,EAAAiqE,IACAtoE,EAAA3B,EAAA2B,KACAktE,EAAA7uE,EAAA6uE,WACAE,EAAA/uE,EAAA+uE,aACAD,EAAA9uE,EAAA8uE,iBACAF,EAAA5uE,EAAA4uE,YACAH,EAAAzuE,EAAAyuE,MACAQ,EAAAjvE,EAAAivE,WACAC,EAAAlvE,EAAAkvE,eACAC,EAAAnvE,EAAAmvE,WACArmE,EAAA9I,EAAA8I,SAEAolE,GAAA,IAAAjE,IAAAjI,GACAmM,EAAAC,GAAAK,GAEAO,EAAAzpB,EACApnD,EAAA2K,GACAA,EAAA2lE,MACA3lE,GAOA3I,EAAAkG,EAAAgmE,SAAAhmB,EAAA,WACAhgD,EAAAw3D,YAAAx3D,EAAAw3D,WAAA0Q,WACAloE,EAAAw3D,WAAA0Q,SAAAriB,EAAApuD,KAAA,MAEAowE,IACA3D,GAAAlkE,EAAA0oE,GACAxE,GAAAlkE,EAAAyoE,IAEA3uE,EAAAmsE,WACA4B,GACA3D,GAAAlkE,EAAAwoE,GAEAK,KAAA7oE,KAEAqoE,IACAO,KAAA5oE,IAEAA,EAAAgmE,SAAA,MAGA8C,GACAA,EAAAR,GAEAA,KAoDA,QAAAH,IAAA/mD,GACA,sBAAAA,KAAA3C,MAAA2C,GASA,QAAA2mD,IAAAluC,GACA,GAAA2kB,EAAA3kB,GACA,QAEA,IAAAkvC,GAAAlvC,EAAA8sB,GACA,OAAAjI,GAAAqqB,GAEAhB,GACApqE,MAAA1F,QAAA8wE,GACAA,EAAA,GACAA,IAGAlvC,EAAAylB,SAAAzlB,EAAA3iC,QAAA,EAIA,QAAA8xE,IAAAnL,EAAAhY,IACA,IAAAA,EAAAlsD,KAAAquE,MACAlC,GAAAjgB,GAmGA,QAAAojB,IAAAjpE,EAAAkpE,EAAAzoB,GACA,GAAAznD,GAAAkwE,EAAAlwE,MACAmwE,EAAAnpE,EAAA44D,QACA,KAAAuQ,GAAAxrE,MAAA1F,QAAAe,GAAA,CASA,OADAw/D,GAAA/gD,EACAzgB,EAAA,EAAAguC,EAAAhlC,EAAAxB,QAAAtH,OAAwCF,EAAAguC,EAAOhuC,IAE/C,GADAygB,EAAAzX,EAAAxB,QAAAxH,GACAmyE,EACA3Q,EAAAzY,EAAA/mD,EAAAowE,GAAA3xD,KAAA,EACAA,EAAA+gD,eACA/gD,EAAA+gD,gBAGA,IAAA5Y,EAAAwpB,GAAA3xD,GAAAze,GAIA,YAHAgH,EAAAqpE,gBAAAryE,IACAgJ,EAAAqpE,cAAAryE,GAMAmyE,KACAnpE,EAAAqpE,eAAA,IAIA,QAAAC,IAAAtwE,EAAAwF,GACA,OAAAxH,GAAA,EAAAguC,EAAAxmC,EAAAtH,OAAqCF,EAAAguC,EAAOhuC,IAC5C,GAAA4oD,EAAAwpB,GAAA5qE,EAAAxH,IAAAgC,GACA,QAGA,UAGA,QAAAowE,IAAA3xD,GACA,gBAAAA,GACAA,EAAAqqD,OACArqD,EAAAze,MAGA,QAAAuwE,IAAA5nE,GACAA,EAAA/J,OAAAsqE,WAAA,EAGA,QAAAsH,IAAA7nE,GAEAA,EAAA/J,OAAAsqE,YACAvgE,EAAA/J,OAAAsqE,WAAA,EACA1wD,GAAA7P,EAAA/J,OAAA,UAGA,QAAA4Z,IAAAxR,EAAA1E,GACA,GAAAqG,GAAAlJ,SAAAgxE,YAAA,aACA9nE,GAAA+nE,UAAApuE,GAAA,MACA0E,EAAA2pE,cAAAhoE,GAMA,QAAAioE,IAAA/jB,GACA,OAAAA,EAAAyR,mBAAAzR,EAAAlsD,MAAAksD,EAAAlsD,KAAAusE,WAEArgB,EADA+jB,GAAA/jB,EAAAyR,kBAAA1K,QAyFA,QAAAid,IAAAhkB,GACA,GAAAikB,GAAAjkB,KAAAK,gBACA,OAAA4jB,MAAA53C,KAAA1zB,QAAAwsD,SACA6e,GAAAngB,GAAAogB,EAAA9jB,WAEAH,EAIA,QAAAkkB,IAAAxhB,GACA,GAAA5uD,MACA6E,EAAA+pD,EAAArpB,QAEA,QAAAznC,KAAA+G,GAAAymD,UACAtrD,EAAAlC,GAAA8wD,EAAA9wD,EAIA,IAAAqyD,GAAAtrD,EAAAurD,gBACA,QAAAigB,KAAAlgB,GACAnwD,EAAA+pD,GAAAsmB,IAAAlgB,EAAAkgB,EAEA,OAAArwE,GAGA,QAAAwsC,IAAA5mC,EAAA0qE,GACA,oBAAAprD,KAAAorD,EAAAlkB,KACA,MAAAxmD,GAAA,cACA6C,MAAA6nE,EAAA/jB,iBAAAjB,YAKA,QAAAilB,IAAArkB,GACA,KAAAA,IAAA9mD,QACA,GAAA8mD,EAAAlsD,KAAAusE,WACA,SAKA,QAAAiE,IAAA7oE,EAAA8oE,GACA,MAAAA,GAAA3yE,MAAA6J,EAAA7J,KAAA2yE,EAAArkB,MAAAzkD,EAAAykD,IAGA,QAAA+T,IAAA/kD,GACA,MAAAA,GAAAuxC,WAAAvxC,EAAAoxC,aAoQA,QAAAkkB,IAAA9iC,GAEAA,EAAA0e,IAAAqkB,SACA/iC,EAAA0e,IAAAqkB,UAGA/iC,EAAA0e,IAAAkgB,UACA5+B,EAAA0e,IAAAkgB,WAIA,QAAAoE,IAAAhjC,GACAA,EAAA5tC,KAAA6wE,OAAAjjC,EAAA0e,IAAAvsC,wBAGA,QAAA+wD,IAAAljC,GACA,GAAAmjC,GAAAnjC,EAAA5tC,KAAAgxE,IACAH,EAAAjjC,EAAA5tC,KAAA6wE,OACAj8B,EAAAm8B,EAAAvxD,KAAAqxD,EAAArxD,KACAq1B,EAAAk8B,EAAArxD,IAAAmxD,EAAAnxD,GACA,IAAAk1B,GAAAC,EAAA,CACAjH,EAAA5tC,KAAAixE,OAAA,CACA,IAAAz6C,GAAAoX,EAAA0e,IAAA9lD,KACAgwB,GAAAzmB,UAAAymB,EAAA06C,gBAAA,aAAAt8B,EAAA,MAAAC,EAAA,MACAre,EAAA26C,mBAAA,MAmFA,QAAAC,IACAr9C,EACAs9C,GAEA,GAAAC,GAAAD,EAAAE,GAAAF,GAAAG,EACA,IAAAF,EAAApsD,KAAA6O,GAAA,CAMA,IAHA,GAEA3L,GAAAtS,EAFA27D,KACAC,EAAAJ,EAAAI,UAAA,EAEAtpD,EAAAkpD,EAAAtmD,KAAA+I,IAAA,CACAje,EAAAsS,EAAAtS,MAEAA,EAAA47D,GACAD,EAAAhxE,KAAA6kD,KAAA7jC,UAAAsS,EAAA9xB,MAAAyvE,EAAA57D,IAGA,IAAAmtD,GAAAD,GAAA56C,EAAA,GAAAi7C,OACAoO,GAAAhxE,KAAA,MAAAwiE,EAAA,KACAyO,EAAA57D,EAAAsS,EAAA,GAAA7qB,OAKA,MAHAm0E,GAAA39C,EAAAx2B,QACAk0E,EAAAhxE,KAAA6kD,KAAA7jC,UAAAsS,EAAA9xB,MAAAyvE,KAEAD,EAAAniE,KAAA,MAKA,QAAAqiE,IAAAtrE,EAAAxB,GACA,GACAo5D,IADAp5D,EAAAoQ,KACA+vD,GAAA3+D,EAAA,SAYA43D,KACA53D,EAAA43D,YAAA3Y,KAAA7jC,UAAAw8C,GAEA,IAAA2T,GAAA/M,GAAAx+D,EAAA,WACAurE,KACAvrE,EAAAurE,gBAIA,QAAAC,IAAAxrE,GACA,GAAArG,GAAA,EAOA,OANAqG,GAAA43D,cACAj+D,GAAA,eAAAqG,EAAA,iBAEAA,EAAAurE,eACA5xE,GAAA,SAAAqG,EAAA,kBAEArG,EAWA,QAAA8xE,IAAAzrE,EAAAxB,GACA,GACAikE,IADAjkE,EAAAoQ,KACA+vD,GAAA3+D,EAAA,SACA,IAAAyiE,EAAA,CAaAziE,EAAAyiE,YAAAxjB,KAAA7jC,UAAAunD,GAAAF,IAGA,GAAAiJ,GAAAlN,GAAAx+D,EAAA,WACA0rE,KACA1rE,EAAA0rE,gBAIA,QAAAC,IAAA3rE,GACA,GAAArG,GAAA,EAOA,OANAqG,GAAAyiE,cACA9oE,GAAA,eAAAqG,EAAA,iBAEAA,EAAA0rE,eACA/xE,GAAA,UAAAqG,EAAA,mBAEArG,EAgBA,QAAA+zB,IAAA1tB,EAAAq6D,GACAA,EAAArhE,OACA8kE,GAAA99D,EAAA,oBAAAq6D,EAAA,WAMA,QAAAuR,IAAA5rE,EAAAq6D,GACAA,EAAArhE,OACA8kE,GAAA99D,EAAA,kBAAAq6D,EAAA,WA0HA,QAAAwR,IAAA7yE,EAAA8yE,GACA,GAAAC,GAAAD,EAAAE,GAAAC,EACA,OAAAjzE,GAAAskB,QAAAyuD,EAAA,SAAAhqD,GAA6C,MAAAmqD,IAAAnqD,KAG7C,QAAAoqD,IAAAP,EAAAptE,GA8HA,QAAA4tE,GAAAzkC,GACAl4B,GAAAk4B,EACAikC,IAAA9L,UAAAn4B,GAuEA,QAAA0kC,GAAA1T,EAAAnZ,EAAAmlB,GACA,GAAAgG,GAAA2B,CASA,IARA,MAAA9sB,IAAwBA,EAAA/vC,GACxB,MAAAk1D,IAAsBA,EAAAl1D,GAEtBkpD,IACA2T,EAAA3T,EAAAntD,eAIAmtD,EACA,IAAAgS,EAAA52D,EAAA7c,OAAA,EAAkCyzE,GAAA,GAClC52D,EAAA42D,GAAA4B,gBAAAD,EAD4C3B,SAO5CA,GAAA,CAGA,IAAAA,GAAA,GAEA,OAAA3zE,GAAA+c,EAAA7c,OAAA,EAAoCF,GAAA2zE,EAAU3zE,IAS9CwH,EAAAmmE,KACAnmE,EAAAmmE,IAAA5wD,EAAA/c,GAAA+uD,IAAAvG,EAAAmlB,EAKA5wD,GAAA7c,OAAAyzE,EACA6B,EAAA7B,GAAA52D,EAAA42D,EAAA,GAAA5kB,QACK,OAAAumB,EACL9tE,EAAAghD,OACAhhD,EAAAghD,MAAAmZ,MAAA,EAAAnZ,EAAAmlB,GAEK,MAAA2H,IACL9tE,EAAAghD,OACAhhD,EAAAghD,MAAAmZ,MAAA,EAAAnZ,EAAAmlB,GAEAnmE,EAAAmmE,KACAnmE,EAAAmmE,IAAAhM,EAAAnZ,EAAAmlB,IAjPA,IANA,GAKAvc,GAAAokB,EALAz4D,KACA04D,EAAAjuE,EAAAiuE,WACAC,EAAAluE,EAAAmuE,YAAAC,GACAC,EAAAruE,EAAAsuE,kBAAAF,GACAn9D,EAAA,EAEAm8D,GAAA,CAGA,GAFAxjB,EAAAwjB,EAEAY,GAAAO,GAAAP,GAgFK,CACL,GAAAQ,GAAA,EACAC,EAAAT,EAAAhhE,cACA0hE,EAAAC,GAAAF,KAAAE,GAAAF,GAAA,GAAAG,QAAA,kBAAAH,EAAA,gBACAI,EAAAzB,EAAAtuD,QAAA4vD,EAAA,SAAAprD,EAAA4L,EAAA4/C,GAaA,MAZAN,GAAAM,EAAAp2E,OACA61E,GAAAE,IAAA,aAAAA,IACAv/C,IACApQ,QAAA,2BACAA,QAAA,mCAEAiwD,GAAAN,EAAAv/C,KACAA,IAAA9xB,MAAA,IAEA4C,EAAAgvE,OACAhvE,EAAAgvE,MAAA9/C,GAEA,IAEAje,IAAAm8D,EAAA10E,OAAAm2E,EAAAn2E,OACA00E,EAAAyB,EACAhB,EAAAY,EAAAx9D,EAAAu9D,EAAAv9D,OArGA,CACA89D,GAAAf,EAAAZ,IACAQ,EAAA,EAEA,IAAAqB,GAAA7B,EAAA9yE,QAAA,IACA,QAAA20E,EAAA,CAEA,GAAAC,GAAA7uD,KAAA+sD,GAAA,CACA,GAAA+B,GAAA/B,EAAA9yE,QAAA,SAEA,IAAA60E,GAAA,GACAnvE,EAAAovE,mBACApvE,EAAAkvE,QAAA9B,EAAA9L,UAAA,EAAA6N,IAEAvB,EAAAuB,EAAA,EACA,WAKA,GAAAE,GAAAhvD,KAAA+sD,GAAA,CACA,GAAAkC,GAAAlC,EAAA9yE,QAAA,KAEA,IAAAg1E,GAAA,GACA1B,EAAA0B,EAAA,EACA,WAKA,GAAAC,GAAAnC,EAAA7pD,MAAAisD,GACA,IAAAD,EAAA,CACA3B,EAAA2B,EAAA,GAAA72E,OACA,UAIA,GAAA+2E,GAAArC,EAAA7pD,MAAAurD,GACA,IAAAW,EAAA,CACA,GAAAC,GAAAz+D,CACA28D,GAAA6B,EAAA,GAAA/2E,QACAm1E,EAAA4B,EAAA,GAAAC,EAAAz+D,EACA,UAIA,GAAA0+D,GA2EA,WACA,GAAA3uB,GAAAosB,EAAA7pD,MAAAqsD,GACA,IAAA5uB,EAAA,CACA,GAAAz9B,IACA42C,QAAAnZ,EAAA,GACAkI,SACAlI,MAAA/vC,EAEA28D,GAAA5sB,EAAA,GAAAtoD,OAEA,KADA,GAAAytE,GAAA3hE,IACA2hE,EAAAiH,EAAA7pD,MAAAssD,OAAArrE,EAAA4oE,EAAA7pD,MAAAusD,MACAlC,EAAAppE,EAAA,GAAA9L,QACA6qB,EAAA2lC,MAAAttD,KAAA4I,EAEA,IAAA2hE,EAIA,MAHA5iD,GAAAwsD,WAAA5J,EAAA,GACAyH,EAAAzH,EAAA,GAAAztE,QACA6qB,EAAA4iD,IAAAl1D,EACAsS,KA5FA,IAAAosD,EAAA,EAiGA,SAAApsD,GACA,GAAA42C,GAAA52C,EAAA42C,QACA4V,EAAAxsD,EAAAwsD,UAEA9B,KACA,MAAAD,GAAAgC,GAAA7V,IACA0T,EAAAG,GAEAK,EAAAlU,IAAA6T,IAAA7T,GACA0T,EAAA1T,GAQA,QAJA8V,GAAA/B,EAAA/T,MAAA4V,EAEAvpC,EAAAjjB,EAAA2lC,MAAAxwD,OACAwwD,EAAA,GAAA/pD,OAAAqnC,GACAhuC,EAAA,EAAmBA,EAAAguC,EAAOhuC,IAAA,CAC1B,GAAA6D,GAAAknB,EAAA2lC,MAAA1wD,EAEA03E,MAAA,IAAA7zE,EAAA,GAAA/B,QAAA,QACA,KAAA+B,EAAA,UAA6BA,GAAA,GAC7B,KAAAA,EAAA,UAA6BA,GAAA,GAC7B,KAAAA,EAAA,UAA6BA,GAAA,GAE7B,IAAA7B,GAAA6B,EAAA,IAAAA,EAAA,IAAAA,EAAA,MACA6sD,GAAA1wD,IACAwJ,KAAA3F,EAAA,GACA7B,MAAA6yE,GACA7yE,EACAwF,EAAAstE,uBAKA2C,IACA16D,EAAA3Z,MAAkB2rD,IAAA4S,EAAA4T,cAAA5T,EAAAntD,cAAAk8C,UAClB8kB,EAAA7T,GAGAn6D,EAAAghD,OACAhhD,EAAAghD,MAAAmZ,EAAAjR,EAAA+mB,EAAA1sD,EAAAy9B,MAAAz9B,EAAA4iD,MAzIAwJ,EACA,WAIA,GAAAzgD,OAAA,GAAAihD,MAAA,GAAA7kC,MAAA,EACA,IAAA2jC,GAAA,GAEA,IADAkB,EAAA/C,EAAAhwE,MAAA6xE,KAEAH,GAAAzuD,KAAA8vD,IACAP,GAAAvvD,KAAA8vD,IACAjB,GAAA7uD,KAAA8vD,IACAd,GAAAhvD,KAAA8vD,KAGA7kC,EAAA6kC,EAAA71E,QAAA,QACA,IACA20E,GAAA3jC,EACA6kC,EAAA/C,EAAAhwE,MAAA6xE,EAEA//C,GAAAk+C,EAAA9L,UAAA,EAAA2N,GACArB,EAAAqB,GAGAA,EAAA,IACA//C,EAAAk+C,EACAA,EAAA,IAGAptE,EAAAgvE,OAAA9/C,GACAlvB,EAAAgvE,MAAA9/C,GA0BA,GAAAk+C,IAAAxjB,EAAA,CACA5pD,EAAAgvE,OAAAhvE,EAAAgvE,MAAA5B,EAIA,QAKAS,IA4JA,QAAAlxD,IACAyzD,EACApwE,GA6BA,QAAAqwE,GAAAC,GAEAA,EAAAC,MACAC,GAAA,GAEAC,GAAAH,EAAA/oB,OACAmpB,GAAA,GAjCAC,GAAA3wE,EAAAoQ,MAAA+uD,GAEAsR,GAAAzwE,EAAA4wE,UAAAxC,GACAyC,GAAA7wE,EAAAs1D,aAAA8Y,GACA0C,GAAA9wE,EAAAm0D,iBAAAia,GAEA2C,GAAA3R,GAAAp/D,EAAA47B,QAAA,iBACAo1C,GAAA5R,GAAAp/D,EAAA47B,QAAA,oBACAq1C,GAAA7R,GAAAp/D,EAAA47B,QAAA,qBAEA4wC,GAAAxsE,EAAAwsE,UAEA,IAEAlwC,GACA40C,EAHA37D,KACA47D,GAAA,IAAAnxE,EAAAmxE,mBAGAX,GAAA,EACAE,GAAA,CA2NA,OAvMA/C,IAAAyC,GACAhgE,KAAAugE,GACA1C,WAAAjuE,EAAAiuE,WACAE,WAAAnuE,EAAAmuE,WACAG,iBAAAtuE,EAAAsuE,iBACAhB,qBAAAttE,EAAAstE,qBACA8B,kBAAApvE,EAAAoxE,SACApwB,MAAA,SAAAuG,EAAA2B,EAAA+mB,GAGA,GAAAroB,GAAAspB,KAAAtpB,IAAAkpB,GAAAvpB,EAIAkb,KAAA,QAAA7a,IACAsB,EAAAmoB,GAAAnoB,GAGA,IAAAonB,IACAxzE,KAAA,EACAyqD,MACA+Y,UAAApX,EACAmX,SAAAiR,GAAApoB,GACA3oD,OAAA2wE,EACA1pB,YAEAI,KACA0oB,EAAA1oB,MAGA2pB,GAAAjB,KAAAhtB,OACAgtB,EAAAkB,WAAA,EASA,QAAAh5E,GAAA,EAAqBA,EAAAw4E,GAAAt4E,OAA0BF,IAC/Cw4E,GAAAx4E,GAAA83E,EAAAtwE,EAYA,IATAwwE,IACAiB,GAAAnB,GACAA,EAAAC,MACAC,GAAA,IAGAC,GAAAH,EAAA/oB,OACAmpB,GAAA,GAEAF,EACAkB,GAAApB,OACO,CACPqB,GAAArB,GACAsB,GAAAtB,GACAuB,GAAAvB,GACAwB,GAAAxB,GAIAA,EAAAv3C,OAAAu3C,EAAAr3E,MAAAiwD,EAAAxwD,OAEAq5E,GAAAzB,GACA0B,GAAA1B,GACA2B,GAAA3B,EACA,QAAA4B,GAAA,EAAyBA,EAAAnB,GAAAr4E,OAAyBw5E,IAClDnB,GAAAmB,GAAA5B,EAAAtwE,EAEAmyE,IAAA7B,GAwCA,GAnBAh0C,EAGO/mB,EAAA7c,QAEP4jC,EAAA81C,KAAA9B,EAAA+B,QAAA/B,EAAAgC,OAEAC,GAAAj2C,GACA8hC,IAAAkS,EAAA+B,OACAG,MAAAlC,IARAh0C,EAAAg0C,EAkBAY,IAAAZ,EAAAkB,UACA,GAAAlB,EAAA+B,QAAA/B,EAAAgC,KACAG,GAAAnC,EAAAY,OACS,IAAAZ,EAAAoC,UAAA,CACTxB,EAAAn4C,OAAA,CACA,IAAA/2B,GAAAsuE,EAAAqC,YAAA,aAAuDzB,EAAAljB,cAAAkjB,EAAAljB,iBAA6DhsD,GAAAsuE,MAEpHY,GAAA1pB,SAAA5rD,KAAA00E,GACAA,EAAA/vE,OAAA2wE,CAGAjB,GAIAI,EAAAC,IAHAY,EAAAZ,EACA/6D,EAAA3Z,KAAA00E,GAKA,QAAAsC,GAAA,EAAuBA,EAAA3B,GAAAv4E,OAA6Bk6E,IACpD3B,GAAA2B,GAAAtC,EAAAtwE,IAIAmmE,IAAA,WAEA,GAAAmK,GAAA/6D,IAAA7c,OAAA,GACAm6E,EAAAvC,EAAA9oB,SAAA8oB,EAAA9oB,SAAA9uD,OAAA,EACAm6E,IAAA,IAAAA,EAAA/1E,MAAA,MAAA+1E,EAAA3jD,OAAAwhD,GACAJ,EAAA9oB,SAAA11C,MAGAyD,EAAA7c,QAAA,EACAw4E,EAAA37D,IAAA7c,OAAA,GACA23E,EAAAC,IAGAtB,MAAA,SAAA9/C,GACA,GAAAgiD,KAgBAzO,IACA,aAAAyO,EAAA3pB,KACA2pB,EAAA7Q,SAAA14B,cAAAzY,GAFA,CAMA,GAAAs4B,GAAA0pB,EAAA1pB,QAKA,IAJAt4B,EAAAwhD,GAAAxhD,EAAAsvC,OACAsU,GAAA5B,GAAAhiD,EAAA6jD,GAAA7jD,GAEAiiD,GAAA3pB,EAAA9uD,OAAA,OACA,CACA,GAAA+lE,IACA+R,GAAA,MAAAthD,IAAAuvC,EAAA8N,GAAAr9C,EAAAs9C,KACAhlB,EAAA5rD,MACAkB,KAAA,EACA2hE,aACAvvC,SAES,MAAAA,GAAAs4B,EAAA9uD,QAAA,MAAA8uD,IAAA9uD,OAAA,GAAAw2B,MACTs4B,EAAA5rD,MACAkB,KAAA,EACAoyB,YAKAggD,QAAA,SAAAhgD,GACAgiD,EAAA1pB,SAAA5rD,MACAkB,KAAA,EACAoyB,OACA44B,WAAA,OAIAxrB,EAGA,QAAAm1C,IAAAjwE,GACA,MAAA2+D,GAAA3+D,EAAA,WACAA,EAAA+uE,KAAA,GAIA,QAAAmB,IAAAlwE,GACA,GAAAglC,GAAAhlC,EAAA8+D,UAAA5nE,MACA,IAAA8tC,EAEA,OADA0iB,GAAA1nD,EAAA0nD,MAAA,GAAA/pD,OAAAqnC,GACAhuC,EAAA,EAAmBA,EAAAguC,EAAOhuC,IAC1B0wD,EAAA1wD,IACAwJ,KAAAR,EAAA8+D,UAAA9nE,GAAAwJ,KACAxH,MAAAimD,KAAA7jC,UAAApb,EAAA8+D,UAAA9nE,GAAAgC,YAGGgH,GAAA+uE,MAEH/uE,EAAAu3B,OAAA,GAIA,QAAA+4C,IAAAtwE,GACA,GAAA48D,GAAA4B,GAAAx+D,EAAA,MACA48D,KAIA58D,EAAAvI,IAAAmlE,GAIA,QAAA2T,IAAAvwE,GACA,GAAA2gC,GAAA69B,GAAAx+D,EAAA,MACA2gC,KACA3gC,EAAA2gC,MACA3gC,EAAA25D,SAAA6X,GAAAxxE,IAIA,QAAAmwE,IAAAnwE,GACA,GAAA48D,EACA,IAAAA,EAAA+B,GAAA3+D,EAAA,UACA,GAAAyxE,GAAA7U,EAAA76C,MAAA2vD,GACA,KAAAD,EAIA,MAEAzxE,GAAA2xE,IAAAF,EAAA,GAAAzU,MACA,IAAAvpC,GAAAg+C,EAAA,GAAAzU,OACA4U,EAAAn+C,EAAA1R,MAAA8vD,GACAD,IACA5xE,EAAAyzB,MAAAm+C,EAAA,GAAA5U,OACAh9D,EAAA8xE,UAAAF,EAAA,GAAA5U,OACA4U,EAAA,KACA5xE,EAAA+xE,UAAAH,EAAA,GAAA5U,SAGAh9D,EAAAyzB,SAKA,QAAA28C,IAAApwE,GACA,GAAA48D,GAAA+B,GAAA3+D,EAAA,OACA,IAAA48D,EACA58D,EAAA4wE,GAAAhU,EACAmU,GAAA/wE,GACA48D,MACAoU,MAAAhxE,QAEG,CACH,MAAA2+D,GAAA3+D,EAAA,YACAA,EAAA8wE,MAAA,EAEA,IAAAD,GAAAlS,GAAA3+D,EAAA,YACA6wE,KACA7wE,EAAA6wE,WAKA,QAAAI,IAAAjxE,EAAAjB,GACA,GAAA8qC,GAAAmoC,GAAAjzE,EAAAinD,SACAnc,MAAA+mC,IACAG,GAAAlnC,GACA+yB,IAAA58D,EAAA6wE,OACAG,MAAAhxE,IAUA,QAAAgyE,IAAAhsB,GAEA,IADA,GAAAhvD,GAAAgvD,EAAA9uD,OACAF,KAAA,CACA,OAAAgvD,EAAAhvD,GAAAsE,KACA,MAAA0qD,GAAAhvD,EAQAgvD,GAAA11C,OAKA,QAAAygE,IAAA/wE,EAAAjE,GACAiE,EAAAiyE,eACAjyE,EAAAiyE,iBAEAjyE,EAAAiyE,aAAA73E,KAAA2B,GAGA,QAAAs0E,IAAArwE,GAEA,MADA2+D,GAAA3+D,EAAA,YAEAA,EAAAggD,MAAA,GAIA,QAAAwwB,IAAAxwE,GACA,YAAAA,EAAA+lD,IACA/lD,EAAAkyE,SAAA1T,GAAAx+D,EAAA,YAQG,CACH,GAAAmxE,GAAA3S,GAAAx+D,EAAA,OACAmxE,KACAnxE,EAAAmxE,WAAA,OAAAA,EAAA,YAAAA,GAEA,aAAAnxE,EAAA+lD,MACA/lD,EAAAkxE,UAAAvS,GAAA3+D,EAAA,WAKA,QAAAywE,IAAAzwE,GACA,GAAAkpE,IACAA,EAAA1K,GAAAx+D,EAAA,SACAA,EAAA+R,UAAAm3D,GAEA,MAAAvK,GAAA3+D,EAAA,qBACAA,EAAA6xD,gBAAA,GAIA,QAAA8e,IAAA3wE,GACA,GACAhJ,GAAAguC,EAAAxkC,EAAA86D,EAAAtiE,EAAAmiE,EAAAgX,EADA15D,EAAAzY,EAAA8+D,SAEA,KAAA9nE,EAAA,EAAAguC,EAAAvsB,EAAAvhB,OAA8BF,EAAAguC,EAAOhuC,IAGrC,GAFAwJ,EAAA86D,EAAA7iD,EAAAzhB,GAAAwJ,KACAxH,EAAAyf,EAAAzhB,GAAAgC,MACAo5E,GAAAvzD,KAAAre,GAQA,GANAR,EAAAqyE,aAAA,EAEAlX,EAAAmX,GAAA9xE,GACA26D,IACA36D,IAAA8c,QAAAi1D,GAAA,KAEAC,GAAA3zD,KAAAre,GACAA,IAAA8c,QAAAk1D,GAAA,IACAx5E,EAAA2jE,GAAA3jE,GACAm5E,GAAA,EACAhX,IACAA,EAAA5hE,OACA44E,GAAA,EAEA,eADA3xE,EAAAkjD,GAAAljD,MACuCA,EAAA,cAEvC26D,EAAAsX,QACAjyE,EAAAkjD,GAAAljD,IAEA26D,EAAA38B,MACA0/B,GACAl+D,EACA,UAAA0jD,GAAAljD,GACA0+D,GAAAlmE,EAAA,YAIAgH,EAAA+R,YACAogE,IAAA9C,GAAArvE,EAAA+lD,IAAA/lD,EAAA6+D,SAAAvjE,KAAAkF,GAIAu9D,GAAA/9D,EAAAQ,EAAAxH,GAFA8kE,GAAA99D,EAAAQ,EAAAxH,OAIO,IAAA05E,GAAA7zD,KAAAre,GACPA,IAAA8c,QAAAo1D,GAAA,IACAxU,GAAAl+D,EAAAQ,EAAAxH,EAAAmiE,GAAA,EAAAgU,QACO,CACP3uE,IAAA8c,QAAA80D,GAAA,GAEA,IAAAO,GAAAnyE,EAAAuhB,MAAA6wD,IACA3U,EAAA0U,KAAA,EACA1U,KACAz9D,IAAA5E,MAAA,IAAAqiE,EAAA/mE,OAAA,KAEA8mE,GAAAh+D,EAAAQ,EAAA86D,EAAAtiE,EAAAilE,EAAA9C,OAKK,CAaL4C,GAAA/9D,EAAAQ,EAAAy+C,KAAA7jC,UAAApiB,KAKA,QAAAw4E,IAAAxxE,GAEA,IADA,GAAAjB,GAAAiB,EACAjB,GAAA,CACA,OAAA0/C,KAAA1/C,EAAA4yE,IACA,QAEA5yE,YAEA,SAGA,QAAAuzE,IAAA9xE,GACA,GAAAuhB,GAAAvhB,EAAAuhB,MAAAwwD,GACA,IAAAxwD,EAAA,CACA,GAAA6S,KAEA,OADA7S,GAAA/nB,QAAA,SAAAqM,GAAgCuuB,EAAAvuB,EAAAzK,MAAA,SAChCg5B,GAIA,QAAAk7C,IAAApoB,GAEA,OADAxtD,MACAlD,EAAA,EAAAguC,EAAA0iB,EAAAxwD,OAAmCF,EAAAguC,EAAOhuC,IAO1CkD,EAAAwtD,EAAA1wD,GAAAwJ,MAAAknD,EAAA1wD,GAAAgC,KAEA,OAAAkB,GAIA,QAAAo3E,IAAAtxE,GACA,iBAAAA,EAAA+lD,KAAA,UAAA/lD,EAAA+lD,IAGA,QAAAgqB,IAAA/vE,GACA,MACA,UAAAA,EAAA+lD,KACA,WAAA/lD,EAAA+lD,OACA/lD,EAAA6+D,SAAAvjE,MACA,oBAAA0E,EAAA6+D,SAAAvjE,MASA,QAAAu0E,IAAAnoB,GAEA,OADA5pB,MACA9mC,EAAA,EAAiBA,EAAA0wD,EAAAxwD,OAAkBF,IAAA,CACnC,GAAAgM,GAAA0kD,EAAA1wD,EACA67E,IAAAh0D,KAAA7b,EAAAxC,QACAwC,EAAAxC,KAAAwC,EAAAxC,KAAA8c,QAAAw1D,GAAA,IACAh1C,EAAA1jC,KAAA4I,IAGA,MAAA86B,GAqCA,QAAAi1C,IAAAj4C,EAAAt8B,GACAs8B,IACAk4C,GAAAC,GAAAz0E,EAAA00E,YAAA,IACAC,GAAA30E,EAAAo0D,eAAAga,GAEAwG,GAAAt4C,GAEAu4C,GAAAv4C,GAAA,IAGA,QAAAw4C,IAAAx5C,GACA,MAAAxQ,GACA,2DACAwQ,EAAA,IAAAA,EAAA,KAIA,QAAAs5C,IAAAr+D,GAEA,GADAA,EAAAw+D,OAAAltB,GAAAtxC,GACA,IAAAA,EAAAzZ,KAAA,CAIA,IACA63E,GAAAp+D,EAAAgxC,MACA,SAAAhxC,EAAAgxC,KACA,MAAAhxC,EAAA8pD,SAAA,mBAEA,MAEA,QAAA7nE,GAAA,EAAAguC,EAAAjwB,EAAAixC,SAAA9uD,OAA6CF,EAAAguC,EAAOhuC,IAAA,CACpD,GAAAsK,GAAAyT,EAAAixC,SAAAhvD,EACAo8E,IAAA9xE,GACAA,EAAAiyE,SACAx+D,EAAAw+D,QAAA,GAGA,GAAAx+D,EAAAk9D,aACA,OAAAvB,GAAA,EAAA8C,EAAAz+D,EAAAk9D,aAAA/6E,OAAuDw5E,EAAA8C,EAAW9C,IAAA,CAClE,GAAAM,GAAAj8D,EAAAk9D,aAAAvB,GAAAM,KACAoC,IAAApC,GACAA,EAAAuC,SACAx+D,EAAAw+D,QAAA,KAOA,QAAAF,IAAAt+D,EAAAm/C,GACA,OAAAn/C,EAAAzZ,KAAA,CAOA,IANAyZ,EAAAw+D,QAAAx+D,EAAAirC,QACAjrC,EAAA0+D,YAAAvf,GAKAn/C,EAAAw+D,QAAAx+D,EAAAixC,SAAA9uD,SACA,IAAA6d,EAAAixC,SAAA9uD,QACA,IAAA6d,EAAAixC,SAAA,GAAA1qD,MAGA,YADAyZ,EAAA2+D,YAAA,EAKA,IAFA3+D,EAAA2+D,YAAA,EAEA3+D,EAAAixC,SACA,OAAAhvD,GAAA,EAAAguC,EAAAjwB,EAAAixC,SAAA9uD,OAA+CF,EAAAguC,EAAOhuC,IACtDq8E,GAAAt+D,EAAAixC,SAAAhvD,GAAAk9D,KAAAn/C,EAAA48D,IAGA,IAAA58D,EAAAk9D,aACA,OAAAvB,GAAA,EAAA8C,EAAAz+D,EAAAk9D,aAAA/6E,OAAuDw5E,EAAA8C,EAAW9C,IAClE2C,GAAAt+D,EAAAk9D,aAAAvB,GAAAM,MAAA9c,IAMA,QAAA7N,IAAAtxC,GACA,WAAAA,EAAAzZ,OAGA,IAAAyZ,EAAAzZ,SAGAyZ,EAAAg6D,MACAh6D,EAAAs9D,aACAt9D,EAAA67D,IAAA77D,EAAA48D,KACAgC,GAAA5+D,EAAAgxC,OACAotB,GAAAp+D,EAAAgxC,MACA6tB,GAAA7+D,KACAvX,OAAAs8B,KAAA/kB,GAAA61C,MAAAooB,OAIA,QAAAY,IAAA7+D,GACA,KAAAA,EAAAhW,QAAA,CAEA,GADAgW,IAAAhW,OACA,aAAAgW,EAAAgxC,IACA,QAEA,IAAAhxC,EAAA48D,IACA,SAGA,SAuCA,QAAAkC,IACAzV,EACAvd,EACAjyC,GAEA,GAAAkvB,GAAA+iB,EAAA,aAAkC,MAClC,QAAArgD,KAAA49D,GAAA,CAYAtgC,GAAA,IAAAt9B,EAAA,KAAAszE,GAAAtzE,EAXA49D,EAAA59D,IAWA,IAEA,MAAAs9B,GAAAliC,MAAA,UAGA,QAAAk4E,IACAtzE,EACA+K,GAEA,IAAAA,EACA,oBAGA,IAAA5N,MAAA1F,QAAAsT,GACA,UAAAA,EAAArR,IAAA,SAAAqR,GAAmD,MAAAuoE,IAAAtzE,EAAA+K,KAAoCtC,KAAA,QAGvF,IAAA8qE,GAAAC,GAAAn1D,KAAAtT,EAAAvS,OACAi7E,EAAAC,GAAAr1D,KAAAtT,EAAAvS,MAEA,IAAAuS,EAAA4vD,UAIG,CACH,GAAAyF,GAAA,GACAuT,EAAA,GACAr6C,IACA,QAAAriC,KAAA8T,GAAA4vD,UACAiZ,GAAA38E,IACA08E,GAAAC,GAAA38E,GAEAg8D,GAAAh8D,IACAqiC,EAAA1/B,KAAA3C,IAGAqiC,EAAA1/B,KAAA3C,EAGAqiC,GAAA5iC,SACA0pE,GAAAyT,GAAAv6C,IAGAq6C,IACAvT,GAAAuT,EAOA,2BAA8BvT,GAL9BmT,EACAxoE,EAAAvS,MAAA,WACAi7E,EACA,IAAA1oE,EAAA,kBACAA,EAAAvS,OAC8B,IA9B9B,MAAA+6E,IAAAE,EACA1oE,EAAAvS,MACA,oBAA2BuS,EAAA,UAgC3B,QAAA8oE,IAAAv6C,GACA,mCAAAA,EAAA5/B,IAAAo6E,IAAArrE,KAAA,sBAGA,QAAAqrE,IAAA78E,GACA,GAAA88E,GAAAviC,SAAAv6C,EAAA,GACA,IAAA88E,EACA,0BAAAA,CAEA,IAAA9gD,GAAAggC,GAAAh8D,EACA,4BAAAwnD,KAAA7jC,UAAA3jB,IAAAg8B,EAAA,IAAAwrB,KAAA7jC,UAAAqY,GAAA,QAKA,QAAA9rB,IAAA3H,EAAAq6D,GAIAr6D,EAAAw0E,cAAA,SAAA5T,GAAsC,YAAAA,EAAA,IAAAvG,EAAA,WAKtC,QAAAoa,IAAAz0E,EAAAq6D,GACAr6D,EAAA00E,SAAA,SAAA9T,GACA,YAAAA,EAAA,KAAA5gE,EAAA,SAAAq6D,EAAA,WAAAA,EAAAc,WAAAd,EAAAc,UAAA5hE,KAAA,iBAAA8gE,EAAAc,WAAAd,EAAAc,UAAA38B,KAAA,iBA4BA,QAAAm2C,IACAC,EACAp2E,GAEA,GAAAm7B,GAAA,GAAAk7C,IAAAr2E,EAEA,QACAC,OAAA,sBAFAm2E,EAAAE,GAAAF,EAAAj7C,GAAA,aAEyB,IACzBj7B,gBAAAi7B,EAAAj7B,iBAIA,QAAAo2E,IAAA90E,EAAA25B,GACA,GAAA35B,EAAA0zE,aAAA1zE,EAAA+0E,gBACA,MAAAC,IAAAh1E,EAAA25B,EACG,IAAA35B,EAAAggD,OAAAhgD,EAAAi1E,cACH,MAAAC,IAAAl1E,EAAA25B,EACG,IAAA35B,EAAA2xE,MAAA3xE,EAAAm1E,aACH,MAAAC,IAAAp1E,EAAA25B,EACG,IAAA35B,EAAA4wE,KAAA5wE,EAAAq1E,YACH,MAAAC,IAAAt1E,EAAA25B,EACG,iBAAA35B,EAAA+lD,KAAA/lD,EAAAmxE,WAEA,aAAAnxE,EAAA+lD,IACH,MAAAwvB,IAAAv1E,EAAA25B,EAGA,IAAAinC,EACA,IAAA5gE,EAAA+R,UACA6uD,EAAA4U,GAAAx1E,EAAA+R,UAAA/R,EAAA25B,OACK,CACL,GAAAhgC,GAAAqG,EAAAu3B,UAAAknB,GAAAg3B,GAAAz1E,EAAA25B,GAEAqsB,EAAAhmD,EAAA6xD,eAAA,KAAA6jB,GAAA11E,EAAA25B,GAAA,EACAinC,GAAA,OAAA5gE,EAAA,SAAArG,EAAA,IAAAA,EAAA,KAAAqsD,EAAA,IAAAA,EAAA,QAGA,OAAAhvD,GAAA,EAAmBA,EAAA2iC,EAAA41C,WAAAr4E,OAA6BF,IAChD4pE,EAAAjnC,EAAA41C,WAAAv4E,GAAAgJ,EAAA4gE,EAEA,OAAAA,GAlBA,MAAA8U,IAAA11E,EAAA25B,IAAA,SAuBA,QAAAq7C,IAAAh1E,EAAA25B,GAGA,MAFA35B,GAAA+0E,iBAAA,EACAp7C,EAAAj7B,gBAAAtE,KAAA,qBAA0C06E,GAAA90E,EAAA25B,GAAA,KAC1C,OAAAA,EAAAj7B,gBAAAxH,OAAA,IAAA8I,EAAAyzE,YAAA,gBAIA,QAAAyB,IAAAl1E,EAAA25B,GAEA,GADA35B,EAAAi1E,eAAA,EACAj1E,EAAA4wE,KAAA5wE,EAAAq1E,YACA,MAAAC,IAAAt1E,EAAA25B,EACG,IAAA35B,EAAAyzE,YAAA,CAGH,IAFA,GAAAh8E,GAAA,GACAsH,EAAAiB,EAAAjB,OACAA,GAAA,CACA,GAAAA,EAAA4yE,IAAA,CACAl6E,EAAAsH,EAAAtH,GACA,OAEAsH,WAEA,MAAAtH,GAMA,MAAAq9E,GAAA90E,EAAA25B,GAAA,IAAAA,EAAAg8C,UAAAl+E,EAAA,IAAAA,EAAA,QAFAq9E,GAAA90E,EAAA25B,GAIA,MAAAq7C,IAAAh1E,EAAA25B,GAIA,QAAA27C,IACAt1E,EACA25B,EACAi8C,EACAC,GAGA,MADA71E,GAAAq1E,aAAA,EACAS,GAAA91E,EAAAiyE,aAAAr2E,QAAA+9B,EAAAi8C,EAAAC,GAGA,QAAAC,IACAC,EACAp8C,EACAi8C,EACAC,GAcA,QAAAG,GAAAh2E,GACA,MAAA41E,GACAA,EAAA51E,EAAA25B,GACA35B,EAAAggD,KACAk1B,GAAAl1E,EAAA25B,GACAm7C,GAAA90E,EAAA25B,GAjBA,IAAAo8C,EAAA7+E,OACA,MAAA2+E,IAAA,MAGA,IAAA95E,GAAAg6E,EAAApkE,OACA,OAAA5V,GAAA6gE,IACA,IAAA7gE,EAAA,SAAAi6E,EAAAj6E,EAAAi1E,OAAA,IAAA8E,GAAAC,EAAAp8C,EAAAi8C,EAAAC,GAEA,GAAAG,EAAAj6E,EAAAi1E,OAaA,QAAAoE,IACAp1E,EACA25B,EACAi8C,EACAK,GAEA,GAAArZ,GAAA58D,EAAA2xE,IACAl+C,EAAAzzB,EAAAyzB,MACAq+C,EAAA9xE,EAAA8xE,UAAA,IAAA9xE,EAAA,aACA+xE,EAAA/xE,EAAA+xE,UAAA,IAAA/xE,EAAA,YAiBA,OADAA,GAAAm1E,cAAA,GACAc,GAAA,WAAArZ,EAAA,cACAnpC,EAAAq+C,EAAAC,EAAA,aACA6D,GAAAd,IAAA90E,EAAA25B,GACA,KAGA,QAAA87C,IAAAz1E,EAAA25B,GACA,GAAAhgC,GAAA,IAIAoqD,EAAAmyB,GAAAl2E,EAAA25B,EACAoqB,KAAapqD,GAAAoqD,EAAA,KAGb/jD,EAAAvI,MACAkC,GAAA,OAAAqG,EAAA,SAGAA,EAAA2gC,MACAhnC,GAAA,OAAAqG,EAAA,SAEAA,EAAA25D,WACAhgE,GAAA,kBAGAqG,EAAA+uE,MACAp1E,GAAA,aAGAqG,EAAA+R,YACApY,GAAA,QAAAqG,EAAA,SAGA,QAAAhJ,GAAA,EAAiBA,EAAA2iC,EAAAw8C,WAAAj/E,OAA6BF,IAC9C2C,GAAAggC,EAAAw8C,WAAAn/E,GAAAgJ,EA8BA,IA3BAA,EAAA0nD,QACA/tD,GAAA,UAAoBy8E,GAAAp2E,EAAA0nD,OAAA,MAGpB1nD,EAAAoC,QACAzI,GAAA,aAAuBy8E,GAAAp2E,EAAAoC,OAAA,MAGvBpC,EAAAo+D,SACAzkE,GAAAk6E,GAAA7zE,EAAAo+D,QAAA,EAAAzkC,EAAA/qB,MAAA,KAEA5O,EAAAs+D,eACA3kE,GAAAk6E,GAAA7zE,EAAAs+D,cAAA,EAAA3kC,EAAA/qB,MAAA,KAGA5O,EAAAmxE,aACAx3E,GAAA,QAAAqG,EAAA,gBAGAA,EAAAwsD,cACA7yD,GAAA08E,GAAAr2E,EAAAwsD,YAAA7yB,GAAA,KAGA35B,EAAAwP,QACA7V,GAAA,gBAAoBqG,EAAAwP,MAAA,mBAAAxP,EAAAwP,MAAA,wBAAAxP,EAAAwP,MAAA,iBAGpBxP,EAAA6xD,eAAA,CACA,GAAAA,GAAAykB,GAAAt2E,EAAA25B,EACAk4B,KACAl4D,GAAAk4D,EAAA,KAYA,MATAl4D,KAAA2jB,QAAA,aAEAtd,EAAA00E,WACA/6E,EAAAqG,EAAA00E,SAAA/6E,IAGAqG,EAAAw0E,gBACA76E,EAAAqG,EAAAw0E,cAAA76E,IAEAA,EAGA,QAAAu8E,IAAAl2E,EAAA25B,GACA,GAAAoqB,GAAA/jD,EAAAgkD,UACA,IAAAD,EAAA,CACA,GAEA/sD,GAAAguC,EAAAq1B,EAAAkc,EAFAz4C,EAAA,eACA04C,GAAA,CAEA,KAAAx/E,EAAA,EAAAguC,EAAA+e,EAAA7sD,OAA8BF,EAAAguC,EAAOhuC,IAAA,CACrCqjE,EAAAtW,EAAA/sD,GACAu/E,GAAA,CACA,IAAAE,GAAA98C,EAAAqqB,WAAAqW,EAAA75D,KACAi2E,KAGAF,IAAAE,EAAAz2E,EAAAq6D,EAAA1gC,EAAA/qB,OAEA2nE,IACAC,GAAA,EACA14C,GAAA,UAAeu8B,EAAA,mBAAAA,EAAA,aAAAA,EAAArhE,MAAA,WAAAqhE,EAAA,sBAAApb,KAAA7jC,UAAAi/C,EAAArhE,OAAA,KAAAqhE,EAAA4D,IAAA,SAAA5D,EAAA,aAAAA,EAAAc,UAAA,cAAAlc,KAAA7jC,UAAAi/C,EAAAc,WAAA,UAGf,MAAAqb,GACA14C,EAAAliC,MAAA,cADA,IAKA,QAAA06E,IAAAt2E,EAAA25B,GACA,GAAAi7C,GAAA50E,EAAAgmD,SAAA,EAMA,QAAA4uB,EAAAt5E,KAAA,CACA,GAAAo7E,GAAA/B,GAAAC,EAAAj7C,EAAAn7B,QACA,4CAA+Ck4E,EAAA,6BAAiCA,EAAAh4E,gBAAAxE,IAAA,SAAA0mE,GAA4E,oBAAqBA,EAAA,MAAkB33D,KAAA,WAInM,QAAAotE,IACA7rB,EACA7wB,GAEA,yBAAAn8B,OAAAs8B,KAAA0wB,GAAAtwD,IAAA,SAAAzC,GACA,MAAAk/E,IAAAl/E,EAAA+yD,EAAA/yD,GAAAkiC,KACK1wB,KAAA,UAGL,QAAA0tE,IACAl/E,EACAuI,EACA25B,GAEA,MAAA35B,GAAA2xE,MAAA3xE,EAAAm1E,aACAyB,GAAAn/E,EAAAuI,EAAA25B,GAEA,QAAWliC,EAAA,gBAAAu7B,OAAAhzB,EAAA6+D,SAAAgY,OAAA,aACX,aAAA72E,EAAA+lD,IACA2vB,GAAA11E,EAAA25B,IAAA,SACAm7C,GAAA90E,EAAA25B,IAAA,KAGA,QAAAi9C,IACAn/E,EACAuI,EACA25B,GAEA,GAAAijC,GAAA58D,EAAA2xE,IACAl+C,EAAAzzB,EAAAyzB,MACAq+C,EAAA9xE,EAAA8xE,UAAA,IAAA9xE,EAAA,aACA+xE,EAAA/xE,EAAA+xE,UAAA,IAAA/xE,EAAA,YAEA,OADAA,GAAAm1E,cAAA,EACA,OAAAvY,EAAA,cACAnpC,EAAAq+C,EAAAC,EAAA,YACA4E,GAAAl/E,EAAAuI,EAAA25B,GACA,KAGA,QAAA+7C,IACA11E,EACA25B,EACAm9C,EACAC,EACAC,GAEA,GAAAhxB,GAAAhmD,EAAAgmD,QACA,IAAAA,EAAA9uD,OAAA,CACA,GAAA+/E,GAAAjxB,EAAA,EAEA,QAAAA,EAAA9uD,QACA+/E,EAAAtF,KACA,aAAAsF,EAAAlxB,KACA,SAAAkxB,EAAAlxB,IAEA,OAAAgxB,GAAAjC,IAAAmC,EAAAt9C,EAEA,IAAA04B,GAAAykB,EACAI,GAAAlxB,EAAArsB,EAAAw9C,gBACA,EACAV,EAAAO,GAAAI,EACA,WAAApxB,EAAA9rD,IAAA,SAAAqtC,GAA8C,MAAAkvC,GAAAlvC,EAAA5N,KAAwB1wB,KAAA,UAAAopD,EAAA,IAAAA,EAAA,KAQtE,QAAA6kB,IACAlxB,EACAmxB,GAGA,OADAr5C,GAAA,EACA9mC,EAAA,EAAiBA,EAAAgvD,EAAA9uD,OAAqBF,IAAA,CACtC,GAAAgJ,GAAAgmD,EAAAhvD,EACA,QAAAgJ,EAAA1E,KAAA,CAGA,GAAA+7E,GAAAr3E,IACAA,EAAAiyE,cAAAjyE,EAAAiyE,aAAAqF,KAAA,SAAA/vC,GAA+D,MAAA8vC,IAAA9vC,EAAAypC,SAAsC,CACrGlzC,EAAA,CACA,QAEAq5C,EAAAn3E,IACAA,EAAAiyE,cAAAjyE,EAAAiyE,aAAAqF,KAAA,SAAA/vC,GAA+D,MAAA4vC,GAAA5vC,EAAAypC,YAC/DlzC,EAAA,IAGA,MAAAA,GAGA,QAAAu5C,IAAAr3E,GACA,WAAAy+C,KAAAz+C,EAAA2xE,KAAA,aAAA3xE,EAAA+lD,KAAA,SAAA/lD,EAAA+lD,IAGA,QAAAqxB,IAAAriE,EAAA4kB,GACA,WAAA5kB,EAAAzZ,KACAw5E,GAAA//D,EAAA4kB,GACG,IAAA5kB,EAAAzZ,MAAAyZ,EAAAuxC,UACHixB,GAAAxiE,GAEAyiE,GAAAziE,GAIA,QAAAyiE,IAAA9pD,GACA,iBAAAA,EAAApyB,KACAoyB,EAAAuvC,WACAwa,GAAAx4B,KAAA7jC,UAAAsS,UAAA,IAGA,QAAA6pD,IAAA7J,GACA,aAAAA,EAAA,UAGA,QAAA6H,IAAAv1E,EAAA25B,GACA,GAAAu4C,GAAAlyE,EAAAkyE,UAAA,YACAlsB,EAAA0vB,GAAA11E,EAAA25B,GACAmE,EAAA,MAAAo0C,GAAAlsB,EAAA,IAAAA,EAAA,IACA0B,EAAA1nD,EAAA0nD,OAAA,IAA6B1nD,EAAA0nD,MAAAxtD,IAAA,SAAA6R,GAAgC,MAAA23C,IAAA33C,EAAAvL,MAAA,IAAAuL,EAAA,QAAiD9C,KAAA,SAC9GyuE,EAAA13E,EAAA6+D,SAAA,SAUA,QATAnX,IAAAgwB,GAAA1xB,IACAloB,GAAA,SAEA4pB,IACA5pB,GAAA,IAAA4pB,GAEAgwB,IACA55C,IAAA4pB,EAAA,gBAAAgwB,GAEA55C,EAAA,IAIA,QAAA03C,IACAmC,EACA33E,EACA25B,GAEA,GAAAqsB,GAAAhmD,EAAA6xD,eAAA,KAAA6jB,GAAA11E,EAAA25B,GAAA,EACA,aAAAg+C,EAAA,IAAAlC,GAAAz1E,EAAA25B,IAAAqsB,EAAA,IAAAA,EAAA,QAGA,QAAAowB,IAAAh0E,GAEA,OADA07B,GAAA,GACA9mC,EAAA,EAAiBA,EAAAoL,EAAAlL,OAAkBF,IAAA,CACnC,GAAAuC,GAAA6I,EAAApL,EACA8mC,IAAA,IAAAvkC,EAAA,UAAAk+E,GAAAl+E,EAAAP,OAAA,IAEA,MAAA8kC,GAAAliC,MAAA,MAIA,QAAA67E,IAAA/pD,GACA,MAAAA,GACApQ,QAAA,qBACAA,QAAA,qBAsGA,QAAAs6D,IAAAhX,EAAAiX,GACA,IACA,UAAAh8E,UAAA+kE,GACG,MAAAziC,GAEH,MADA05C,GAAAz9E,MAAiB+jC,MAAAyiC,SACjB7iE,GAIA,QAAA+5E,IAAAC,GACA,GAAA34B,GAAA5hD,OAAAsd,OAAA,KAEA,iBACA8zD,EACApwE,EACAiiD,GAEAjiD,OAqBA,IAAA/G,GAAA+G,EAAAwsE,WACAh4C,OAAAx0B,EAAAwsE,YAAA4D,EACAA,CACA,IAAAxvB,EAAA3nD,GACA,MAAA2nD,GAAA3nD,EAIA,IAAAugF,GAAAD,EAAAnJ,EAAApwE,GAiBAs/B,KACAm6C,IAyBA,OAxBAn6C,GAAAr/B,OAAAm5E,GAAAI,EAAAv5E,OAAAw5E,GACAn6C,EAAAp/B,gBAAAs5E,EAAAt5E,gBAAAxE,IAAA,SAAA0mE,GACA,MAAAgX,IAAAhX,EAAAqX,KAsBA74B,EAAA3nD,GAAAqmC,GA+JA,QAAAo6C,IAAAl4E,GACA,GAAAA,EAAAm4E,UACA,MAAAn4E,GAAAm4E,SAEA,IAAA9iD,GAAA58B,SAAAC,cAAA,MAEA,OADA28B,GAAA+jC,YAAAp5D,EAAAo4E,WAAA,IACA/iD,EAAAgjD,UAhyTA,GAAAv5B,IAAAthD,OAAAlE,UAAAmE,SA+DAk2E,GAAArqD,EAAA,qBAKAuqC,GAAAvqC,EAAA,mBAiBA5xB,GAAA8F,OAAAlE,UAAA5B,eAmBA4gF,GAAA,SACA50B,GAAA7Q,EAAA,SAAA3xB,GACA,MAAAA,GAAA5D,QAAAg7D,GAAA,SAAAza,EAAAt2B,GAAkD,MAAAA,KAAA7pB,cAAA,OAMlDonC,GAAAjS,EAAA,SAAA3xB,GACA,MAAAA,GAAA2R,OAAA,GAAAnV,cAAAwD,EAAAtlB,MAAA,KAMA28E,GAAA,iBACAlzB,GAAAxS,EAAA,SAAA3xB,GACA,MAAAA,GACA5D,QAAAi7D,GAAA,SACAj7D,QAAAi7D,GAAA,SACA/sE,gBAkEAohE,GAAA,SAAA7gE,EAAAC,EAAAu7B,GAA6B,UAK7Bh+B,GAAA,SAAAs0D,GAA6B,MAAAA,IAoD7B2a,GAAA,uBAEA7hB,IACA,YACA,YACA,UAGA8hB,IACA,eACA,UACA,cACA,UACA,eACA,UACA,gBACA,YACA,YACA,eAKAj9C,IAIAk9C,sBAAAl7E,OAAAsd,OAAA,MAKAlL,QAAA,EAKA+oE,eAAA,EAKAvqB,UAAA,EAKAwqB,aAAA,EAKAj4B,aAAA,KAKAk4B,YAAA,KAKAC,mBAKArlB,SAAAj2D,OAAAsd,OAAA,MAMA83C,cAAAga,GAMAmM,eAAAnM,GAMAxU,iBAAAwU,GAKAja,gBAAA50D,EAKA80D,qBAAAtpD,GAMAuqD,YAAA8Y,GAKAvtC,gBAAAo5C,IAKA/rB,GAAAlvD,OAAAw7E,WAyBA14B,GAAA,UAiBA1xC,GAAA7Q,EAmHAk7E,GAAA,gBAGAr4B,GAAA,mBAAA/pC,QACAqiE,GAAAt4B,IAAA/pC,OAAAia,UAAAQ,UAAA9lB,cACAy1D,GAAAiY,IAAA,eAAAr6D,KAAAq6D,IACAvd,GAAAud,OAAApgF,QAAA,cACAqgF,GAAAD,OAAApgF,QAAA,WACAsgF,GAAAF,OAAApgF,QAAA,aACAugF,GAAAH,IAAA,uBAAAr6D,KAAAq6D,IACAhY,GAAAgY,IAAA,cAAAr6D,KAAAq6D,MAAAC,GAGA9pB,MAAqBruB,MAErBwgC,IAAA,CACA,IAAA5gB,GACA,IACA,GAAA77C,MACAvH,QAAA69B,eAAAt2B,GAAA,WACAnH,IAAA,WAEA4jE,IAAA,KAGA3qD,OAAA65B,iBAAA,oBAAA3rC,IACG,MAAApD,IAKH,GAAA23E,IAiHAC,GAhHAz3B,GAAA,WAWA,WAVArD,KAAA66B,KAOAA,IALA14B,QAAA,KAAAz1C,GAGA,WAAAA,EAAA,QAAA2J,IAAA0kE,SAKAF,IAIAlrB,GAAAxN,IAAA/pC,OAAA0oB,6BAOA+wB,GACA,mBAAAmpB,SAAA54B,EAAA44B,SACA,mBAAAlpB,UAAA1P,EAAA0P,QAAAC,SAKA10B,GAAA,WAKA,QAAA49C,KACAC,GAAA,CACA,IAAAC,GAAAC,EAAAj+E,MAAA,EACAi+E,GAAA3iF,OAAA,CACA,QAAAF,GAAA,EAAmBA,EAAA4iF,EAAA1iF,OAAmBF,IACtC4iF,EAAA5iF,KATA,GAEA8iF,GAFAD,KACAF,GAAA,CAmBA,uBAAA37C,UAAA6iB,EAAA7iB,SAAA,CACA,GAAAmU,GAAAnU,QAAAC,UACA87C,EAAA,SAAA57C,GAAmCxvB,QAAA4uB,MAAAY,GACnC27C,GAAA,WACA3nC,EAAAnY,KAAA0/C,GAAAx7C,MAAA67C,GAMAV,IAAkB7vB,WAAAzrD,QAEf,uBAAAi8E,oBACHn5B,EAAAm5B,mBAEA,yCAAAA,iBAAAv8E,WAiBAq8E,EAAA,WACAtwB,WAAAkwB,EAAA,QAjBA,CAGA,GAAAO,GAAA,EACAC,EAAA,GAAAF,kBAAAN,GACAS,EAAA1hF,SAAAsgE,eAAA/lC,OAAAinD,GACAC,GAAA34B,QAAA44B,GACAC,eAAA,IAEAN,EAAA,WACAG,KAAA,KACAE,EAAAxgF,KAAAq5B,OAAAinD,IAUA,gBAAAngF,EAAAiyB,GACA,GAAAsuD,EAgBA,IAfAR,EAAAz/E,KAAA,WACA,GAAAN,EACA,IACAA,EAAA/C,KAAAg1B,GACS,MAAApqB,GACT6+C,EAAA7+C,EAAAoqB,EAAA,gBAEOsuD,IACPA,EAAAtuD,KAGA4tD,IACAA,GAAA,EACAG,MAEAhgF,GAAA,mBAAAkkC,SACA,UAAAA,SAAA,SAAAC,EAAAorB,GACAgxB,EAAAp8C,OAUAs7C,IAFA,mBAAAe,MAAAz5B,EAAAy5B,KAEAA,IAGA,WACA,QAAAA,KACAn/E,KAAAkB,IAAAmB,OAAAsd,OAAA,MAYA,MAVAw/D,GAAAhhF,UAAAusB,IAAA,SAAApuB,GACA,WAAA0D,KAAAkB,IAAA5E,IAEA6iF,EAAAhhF,UAAA4F,IAAA,SAAAzH,GACA0D,KAAAkB,IAAA5E,IAAA,GAEA6iF,EAAAhhF,UAAAyjB,MAAA,WACA5hB,KAAAkB,IAAAmB,OAAAsd,OAAA,OAGAw/D,IAOA,IAAAxiD,IAAA,EAMAkpB,GAAA,WACA7lD,KAAAgR,GAAA2rB,KACA38B,KAAA4lC,QAGAigB,IAAA1nD,UAAAihF,OAAA,SAAAnpE,GACAjW,KAAA4lC,KAAA3mC,KAAAgX,IAGA4vC,GAAA1nD,UAAAkhF,UAAA,SAAAppE,GACAmC,EAAApY,KAAA4lC,KAAA3vB,IAGA4vC,GAAA1nD,UAAAopD,OAAA,WACA1B,GAAAppD,QACAopD,GAAAppD,OAAA6iF,OAAAt/E,OAIA6lD,GAAA1nD,UAAAupD,OAAA,WAGA,OADA9hB,GAAA5lC,KAAA4lC,KAAAnlC,QACA5E,EAAA,EAAAguC,EAAAjE,EAAA7pC,OAAkCF,EAAAguC,EAAOhuC,IACzC+pC,EAAA/pC,GAAAmZ,UAOA6wC,GAAAppD,OAAA,IACA,IAAAqpD,OAgBAvjD,GAAAC,MAAArE,UACAohF,GAAAl9E,OAAAsd,OAAApd,KACA,OACA,MACA,QACA,UACA,SACA,OACA,WAEA1D,QAAA,SAAAqR,GAEA,GAAAsvE,GAAAj9E,GAAA2N,EACA80C,GAAAu6B,GAAArvE,EAAA,WAEA,IADA,GAAAxQ,MAAA5D,EAAA8D,UAAA7D,OACAD,KAAA4D,EAAA5D,GAAA8D,UAAA9D,EAEA,IAEAgkE,GAFArkE,EAAA+jF,EAAA3/E,MAAAG,KAAAN,GACA4mD,EAAAtmD,KAAAumD,MAEA,QAAAr2C,GACA,WACA,cACA4vD,EAAApgE,CACA,MACA,cACAogE,EAAApgE,EAAAe,MAAA,GAMA,MAHAq/D,IAAmBxZ,EAAAm5B,aAAA3f,GAEnBxZ,EAAAY,IAAAQ,SACAjsD,KAMA,IAAAikF,IAAAr9E,OAAAs9E,oBAAAJ,IAQA94B,IACAC,eAAA,GASAF,GAAA,SAAA3oD,GAKA,GAJAmC,KAAAnC,QACAmC,KAAAknD,IAAA,GAAArB,IACA7lD,KAAA8mD,QAAA,EACA9B,EAAAnnD,EAAA,SAAAmC,MACAwC,MAAA1F,QAAAe,GAAA,EACAigF,GACA93B,EACAG,GACAtoD,EAAA0hF,GAAAG,IACA1/E,KAAAy/E,aAAA5hF,OAEAmC,MAAA4/E,KAAA/hF,GASA2oD,IAAAroD,UAAAyhF,KAAA,SAAAlhF,GAEA,OADAigC,GAAAt8B,OAAAs8B,KAAAjgC,GACA7C,EAAA,EAAiBA,EAAA8iC,EAAA5iC,OAAiBF,IAClCkrD,EAAAroD,EAAAigC,EAAA9iC,GAAA6C,EAAAigC,EAAA9iC,MAOA2qD,GAAAroD,UAAAshF,aAAA,SAAAI,GACA,OAAAhkF,GAAA,EAAAguC,EAAAg2C,EAAA9jF,OAAmCF,EAAAguC,EAAOhuC,IAC1CuqD,EAAAy5B,EAAAhkF,IAiMA,IAAAotD,IAAA5oB,GAAAk9C,qBAkFAt0B,IAAAzqD,KAAA,SACAwpD,EACAC,EACA3C,GAEA,MAAAA,GAcAyC,EAAAC,EAAAC,EAAA3C,GAbA2C,GAAA,kBAAAA,GAQAD,EAEAD,EAAAnsD,KAAAoE,KAAAgoD,EAAAC,IAsBAq1B,GAAAz+E,QAAA,SAAA4E,GACAwlD,GAAAxlD,GAAA2kD,IAiBAoT,GAAA38D,QAAA,SAAAsB,GACA8oD,GAAA9oD,EAAA,KAAAkoD,IASAY,GAAApjB,MAAA,SAAAmiB,EAAAC,GAKA,GAHAD,IAAAkM,KAAkClM,MAAA1E,IAClC2E,IAAAiM,KAAiCjM,MAAA3E,KAEjC2E,EAAkB,MAAA5lD,QAAAsd,OAAAqoC,GAAA,KAClB,KAAAA,EAAmB,MAAAC,EACnB,IAAAxuB,KACAv8B,GAAAu8B,EAAAuuB,EACA,QAAA1rD,KAAA2rD,GAAA,CACA,GAAArkD,GAAA61B,EAAAn9B,GACA6J,EAAA8hD,EAAA3rD,EACAsH,KAAApB,MAAA1F,QAAA8G,KACAA,OAEA61B,EAAAn9B,GAAAsH,EACAA,EAAA9D,OAAAqG,GACA3D,MAAA1F,QAAAqJ,SAEA,MAAAszB,IAMAwvB,GAAAhiD,MACAgiD,GAAA6K,QACA7K,GAAAR,OACAQ,GAAAhpB,SAAA,SAAA+nB,EAAAC,GACA,IAAAA,EAAkB,MAAA5lD,QAAAsd,OAAAqoC,GAAA,KAClB,KAAAA,EAAmB,MAAAC,EACnB,IAAAxuB,GAAAp3B,OAAAsd,OAAA,KAGA,OAFAziB,GAAAu8B,EAAAuuB,GACA9qD,EAAAu8B,EAAAwuB,GACAxuB,GAEAwvB,GAAA8L,QAAAhN,CAKA,IAAAmB,IAAA,SAAAlB,EAAAC,GACA,WAAA3E,KAAA2E,EACAD,EACAC,GAsaAuC,GAAA,SACAI,EACApsD,EACAqsD,EACAt4B,EACAu4B,EACAlsD,EACAmsD,EACAC,GAEAhrD,KAAA4qD,MACA5qD,KAAAxB,OACAwB,KAAA6qD,WACA7qD,KAAAuyB,OACAvyB,KAAA8qD,MACA9qD,KAAAirD,OAAA3H,GACAtjD,KAAApB,UACAoB,KAAAuvD,sBAAAjM,GACAtjD,KAAA1D,IAAAkC,KAAAlC,IACA0D,KAAA+qD,mBACA/qD,KAAAm8D,sBAAA7Y,GACAtjD,KAAA4D,WAAA0/C,GACAtjD,KAAA8/E,KAAA,EACA9/E,KAAAkrD,UAAA,EACAlrD,KAAAisE,cAAA,EACAjsE,KAAAmrD,WAAA,EACAnrD,KAAAorD,UAAA,EACAprD,KAAAq5D,QAAA,EACAr5D,KAAAgrD,eACAhrD,KAAAwtD,cAAAlK,GACAtjD,KAAA2+D,oBAAA,GAGAj5B,IAA0Bv/B,SAI1Bu/B,IAAAv/B,MAAA1D,IAAA,WACA,MAAAzC,MAAAm8D,mBAGA95D,OAAAigC,iBAAAkoB,GAAArsD,UAAAunC,GAEA,IA+bAjpC,IA/bA8wD,GAAA,SAAAh7B,OACA,KAAAA,MAAA,GAEA,IAAA3Y,GAAA,GAAA4wC,GAGA,OAFA5wC,GAAA2Y,OACA3Y,EAAAuxC,WAAA,EACAvxC,GAyCAo7B,GAAA0C,EAAA,SAAAryC,GACA,GAAA4mD,GAAA,MAAA5mD,EAAAqyB,OAAA,EACAryB,GAAA4mD,EAAA5mD,EAAA5E,MAAA,GAAA4E,CACA,IAAAypD,GAAA,MAAAzpD,EAAAqyB,OAAA,EACAryB,GAAAypD,EAAAzpD,EAAA5E,MAAA,GAAA4E,CACA,IAAA2mD,GAAA,MAAA3mD,EAAAqyB,OAAA,EAEA,OADAryB,GAAA2mD,EAAA3mD,EAAA5E,MAAA,GAAA4E,GAEAA,OACAw/C,KAAAiK,EACA9C,UACAC,aA4jBA6f,GAAA,KAuTAxZ,MACAC,MACA7nC,MAEA8nC,IAAA,EACAC,IAAA,EACAn+C,GAAA,EAmIAyrE,GAAA,EAOAhvB,GAAA,SACAzL,EACA06B,EACArhF,EACA0E,GAEArD,KAAAslD,KACAA,EAAAuO,UAAA50D,KAAAe,MAEAqD,GACArD,KAAAojC,OAAA//B,EAAA+/B,KACApjC,KAAAigF,OAAA58E,EAAA48E,KACAjgF,KAAA0lE,OAAAriE,EAAAqiE,KACA1lE,KAAAqjC,OAAAhgC,EAAAggC,MAEArjC,KAAAojC,KAAApjC,KAAAigF,KAAAjgF,KAAA0lE,KAAA1lE,KAAAqjC,MAAA,EAEArjC,KAAArB,KACAqB,KAAAgR,KAAA+uE,GACA//E,KAAAkgF,QAAA,EACAlgF,KAAAyzB,MAAAzzB,KAAA0lE,KACA1lE,KAAAs8B,QACAt8B,KAAAmgF,WACAngF,KAAAogF,OAAA,GAAAhC,IACAp+E,KAAAqgF,UAAA,GAAAjC,IACAp+E,KAAA8hE,WAEA,GAEA,kBAAAke,GACAhgF,KAAA2hC,OAAAq+C,GAEAhgF,KAAA2hC,OAAA/K,EAAAopD,GACAhgF,KAAA2hC,SACA3hC,KAAA2hC,OAAA,eASA3hC,KAAAnC,MAAAmC,KAAA0lE,SACApiB,GACAtjD,KAAAyC,MAMAsuD,IAAA5yD,UAAAsE,IAAA,WACAkjD,EAAA3lD,KACA,IAAAnC,GACAynD,EAAAtlD,KAAAslD,EACA,KACAznD,EAAAmC,KAAA2hC,OAAA/lC,KAAA0pD,KACG,MAAA9+C,GACH,IAAAxG,KAAAigF,KAGA,KAAAz5E,EAFA6+C,GAAA7+C,EAAA8+C,EAAA,uBAAAtlD,KAAA,gBAIG,QAGHA,KAAAojC,MACAl9B,GAAArI,GAEAkoD,IACA/lD,KAAAsgF,cAEA,MAAAziF,IAMAkzD,GAAA5yD,UAAAmhF,OAAA,SAAAp4B,GACA,GAAAl2C,GAAAk2C,EAAAl2C,EACAhR,MAAAqgF,UAAA31D,IAAA1Z,KACAhR,KAAAqgF,UAAAt8E,IAAAiN,GACAhR,KAAAmgF,QAAAlhF,KAAAioD,GACAlnD,KAAAogF,OAAA11D,IAAA1Z,IACAk2C,EAAAk4B,OAAAp/E,QAQA+wD,GAAA5yD,UAAAmiF,YAAA,WAIA,IAHA,GAAAr7C,GAAAjlC,KAEAnE,EAAAmE,KAAAs8B,KAAAvgC,OACAF,KAAA,CACA,GAAAqrD,GAAAjiB,EAAA3I,KAAAzgC,EACAopC,GAAAo7C,UAAA31D,IAAAw8B,EAAAl2C,KACAk2C,EAAAm4B,UAAAp6C,GAGA,GAAAsI,GAAAvtC,KAAAogF,MACApgF,MAAAogF,OAAApgF,KAAAqgF,UACArgF,KAAAqgF,UAAA9yC,EACAvtC,KAAAqgF,UAAAz+D,QACA2rB,EAAAvtC,KAAAs8B,KACAt8B,KAAAs8B,KAAAt8B,KAAAmgF,QACAngF,KAAAmgF,QAAA5yC,EACAvtC,KAAAmgF,QAAApkF,OAAA,GAOAg1D,GAAA5yD,UAAA6W,OAAA,WAEAhV,KAAA0lE,KACA1lE,KAAAyzB,OAAA,EACGzzB,KAAAqjC,KACHrjC,KAAA4yD,MAEAO,GAAAnzD,OAQA+wD,GAAA5yD,UAAAy0D,IAAA,WACA,GAAA5yD,KAAAkgF,OAAA,CACA,GAAAriF,GAAAmC,KAAAyC,KACA,IACA5E,IAAAmC,KAAAnC,OAIAlB,EAAAkB,IACAmC,KAAAojC,KACA,CAEA,GAAAu8B,GAAA3/D,KAAAnC,KAEA,IADAmC,KAAAnC,QACAmC,KAAAigF,KACA,IACAjgF,KAAArB,GAAA/C,KAAAoE,KAAAslD,GAAAznD,EAAA8hE,GACS,MAAAn5D,GACT6+C,EAAA7+C,EAAAxG,KAAAslD,GAAA,yBAAAtlD,KAAA,oBAGAA,MAAArB,GAAA/C,KAAAoE,KAAAslD,GAAAznD,EAAA8hE,MAUA5O,GAAA5yD,UAAAw2D,SAAA,WACA30D,KAAAnC,MAAAmC,KAAAyC,MACAzC,KAAAyzB,OAAA,GAMAs9B,GAAA5yD,UAAAopD,OAAA,WAIA,IAHA,GAAAtiB,GAAAjlC,KAEAnE,EAAAmE,KAAAs8B,KAAAvgC,OACAF,KACAopC,EAAA3I,KAAAzgC,GAAA0rD,UAOAwJ,GAAA5yD,UAAAoiF,SAAA,WACA,GAAAt7C,GAAAjlC,IAEA,IAAAA,KAAAkgF,OAAA,CAIAlgF,KAAAslD,GAAAiL,mBACAn4C,EAAApY,KAAAslD,GAAAuO,UAAA7zD,KAGA,KADA,GAAAnE,GAAAmE,KAAAs8B,KAAAvgC,OACAF,KACAopC,EAAA3I,KAAAzgC,GAAAwjF,UAAAp6C,EAEAjlC,MAAAkgF,QAAA,GASA,IAAA9sB,IAAA,GAAAgrB,IA+BAzqB,IACAxzB,YAAA,EACA+kB,cAAA,EACAziD,IAAAG,EACA1B,IAAA0B,GAwIA4xD,IAA8BkR,MAAA,GAwR9B5O,IACAxlD,KAAA,SACAo5C,EACA+F,EACA0F,EACAC,GAEA,IAAA1L,EAAAyR,mBAAAzR,EAAAyR,kBAAA7L,aAAA,EACA5F,EAAAyR,kBAAAjG,GACAxL,EACAohB,GACA3V,EACAC,IAEAoqB,OAAA/vB,EAAA/F,EAAAI,QAAAxH,GAAAmN,OACK,IAAA/F,EAAAlsD,KAAAiiF,UAAA,CAEL,GAAAC,GAAAh2B,CACAoM,IAAA6pB,SAAAD,OAIAC,SAAA,SAAA3hB,EAAAtU,GACA,GAAArnD,GAAAqnD,EAAAK,gBAEAiG,IADAtG,EAAAyR,kBAAA6C,EAAA7C,kBAGA94D,EAAAymD,UACAzmD,EAAAsrD,UACAjE,EACArnD,EAAAwnD,WAIA+1B,OAAA,SAAAl2B,GACA,GAAA9rD,GAAA8rD,EAAA9rD,QACAu9D,EAAAzR,EAAAyR,iBACAA,GAAA9L,aACA8L,EAAA9L,YAAA,EACAM,GAAAwL,EAAA,YAEAzR,EAAAlsD,KAAAiiF,YACA7hF,EAAAyxD,WAMA6C,GAAAiJ,GAEAnK,GAAAmK,GAAA,KAKA0kB,QAAA,SAAAn2B,GACA,GAAAyR,GAAAzR,EAAAyR,iBACAA,GAAA7L,eACA5F,EAAAlsD,KAAAiiF,UAGAvuB,GAAAiK,GAAA,GAFAA,EAAAv7B,cAQA+1B,GAAAt0D,OAAAs8B,KAAAm4B,IA6JAS,GAAA,EACAH,GAAA,EAgdA0pB,GAAA,GAEA,SAAA1gD,GACAA,EAAAjiC,UAAAgmC,MAAA,SAAA9gC,GACA,GAAAiiD,GAAAtlD,IAEAslD,GAAAy7B,KAAAD,KAWAx7B,EAAAuB,QAAA,EAEAxjD,KAAAizD,aAIAuD,GAAAvU,EAAAjiD,GAEAiiD,EAAAvhB,SAAA+kB,EACAiN,GAAAzQ,EAAArpD,aACAoH,MACAiiD,GAOAA,EAAA4T,aAAA5T,EAGAA,EAAA07B,MAAA17B,EACAsK,GAAAtK,GACAkJ,GAAAlJ,GACAkU,GAAAlU,GACAqL,GAAArL,EAAA,gBACA2P,GAAA3P,GACAsO,GAAAtO,GACAwP,GAAAxP,GACAqL,GAAArL,EAAA,WASAA,EAAAvhB,SAAAl/B,IACAygD,EAAAk7B,OAAAl7B,EAAAvhB,SAAAl/B,MAwFA61D,IAh+BA,SAAAt6B,GAIA,GAAA6gD,KACAA,GAAAx+E,IAAA,WAA6B,MAAAzC,MAAA0gC,MAC7B,IAAAwgD,KACAA,GAAAz+E,IAAA,WAA8B,MAAAzC,MAAAqqD,QAa9BhoD,OAAA69B,eAAAE,EAAAjiC,UAAA,QAAA8iF,GACA5+E,OAAA69B,eAAAE,EAAAjiC,UAAA,SAAA+iF,GAEA9gD,EAAAjiC,UAAAgjF,KAAAjgF,EACAk/B,EAAAjiC,UAAAijF,QAAAz5B,EAEAvnB,EAAAjiC,UAAA+kC,OAAA,SACA88C,EACArhF,EACA0E,GAEA,GAAAiiD,GAAAtlD,IACA,IAAA0jD,EAAA/kD,GACA,MAAAi2D,IAAAtP,EAAA06B,EAAArhF,EAAA0E,EAEAA,SACAA,EAAA48E,MAAA,CACA,IAAAttB,GAAA,GAAA5B,IAAAzL,EAAA06B,EAAArhF,EAAA0E,EAIA,OAHAA,GAAAg+E,WACA1iF,EAAA/C,KAAA0pD,EAAAqN,EAAA90D,OAEA,WACA80D,EAAA4tB,cAu7BA7lB,IAzjEA,SAAAt6B,GACA,GAAAkhD,GAAA,QACAlhD,GAAAjiC,UAAA6wD,IAAA,SAAAj5C,EAAA2oB,GACA,GAAAuG,GAAAjlC,KAEAslD,EAAAtlD,IACA,IAAAwC,MAAA1F,QAAAiZ,GACA,OAAAla,GAAA,EAAAguC,EAAA9zB,EAAAha,OAAuCF,EAAAguC,EAAOhuC,IAC9CopC,EAAA+pB,IAAAj5C,EAAAla,GAAA6iC,QAGA4mB,EAAAmJ,QAAA14C,KAAAuvC,EAAAmJ,QAAA14C,QAAA9W,KAAAy/B,GAGA4iD,EAAA59D,KAAA3N,KACAuvC,EAAAoJ,eAAA,EAGA,OAAApJ,IAGAllB,EAAAjiC,UAAA4wD,MAAA,SAAAh5C,EAAA2oB,GAEA,QAAAlyB,KACA84C,EAAA4J,KAAAn5C,EAAAvJ,GACAkyB,EAAA7+B,MAAAylD,EAAA1lD,WAHA,GAAA0lD,GAAAtlD,IAOA,OAFAwM,GAAAkyB,KACA4mB,EAAA0J,IAAAj5C,EAAAvJ,GACA84C,GAGAllB,EAAAjiC,UAAA+wD,KAAA,SAAAn5C,EAAA2oB,GACA,GAAAuG,GAAAjlC,KAEAslD,EAAAtlD,IAEA,KAAAJ,UAAA7D,OAEA,MADAupD,GAAAmJ,QAAApsD,OAAAsd,OAAA,MACA2lC,CAGA,IAAA9iD,MAAA1F,QAAAiZ,GAAA,CACA,OAAAw/D,GAAA,EAAA1rC,EAAA9zB,EAAAha,OAAyCw5E,EAAA1rC,EAAS0rC,IAClDtwC,EAAAiqB,KAAAn5C,EAAAw/D,GAAA72C,EAEA,OAAA4mB,GAGA,GAAAi8B,GAAAj8B,EAAAmJ,QAAA14C,EACA,KAAAwrE,EACA,MAAAj8B,EAEA,QAAA1lD,UAAA7D,OAEA,MADAupD,GAAAmJ,QAAA14C,GAAA,KACAuvC,CAKA,KAFA,GAAA3mD,GACA9C,EAAA0lF,EAAAxlF,OACAF,KAEA,IADA8C,EAAA4iF,EAAA1lF,MACA6iC,GAAA//B,EAAA+/B,OAAA,CACA6iD,EAAAjpE,OAAAzc,EAAA,EACA,OAGA,MAAAypD,IAGAllB,EAAAjiC,UAAAi0D,MAAA,SAAAr8C,GACA,GAAAuvC,GAAAtlD,KAaAuhF,EAAAj8B,EAAAmJ,QAAA14C,EACA,IAAAwrE,EAAA,CACAA,IAAAxlF,OAAA,EAAAqoD,EAAAm9B,IAEA,QADA7hF,GAAA0kD,EAAAxkD,UAAA,GACA/D,EAAA,EAAAguC,EAAA03C,EAAAxlF,OAAqCF,EAAAguC,EAAOhuC,IAC5C,IACA0lF,EAAA1lF,GAAAgE,MAAAylD,EAAA5lD,GACS,MAAA8G,GACT6+C,EAAA7+C,EAAA8+C,EAAA,sBAAAvvC,EAAA,MAIA,MAAAuvC,KA09DAoV,IA73DA,SAAAt6B,GACAA,EAAAjiC,UAAA0yD,QAAA,SAAAnG,EAAA+F,GACA,GAAAnL,GAAAtlD,IACAslD,GAAA+K,YACAM,GAAArL,EAAA,eAEA,IAAAz0B,GAAAy0B,EAAAoL,IACA8wB,EAAAl8B,EAAAmM,OACAgwB,EAAA3V,EACAA,IAAAxmB,EACAA,EAAAmM,OAAA/G,EAGA82B,EAYAl8B,EAAAoL,IAAApL,EAAAo8B,UAAAF,EAAA92B,IAVApF,EAAAoL,IAAApL,EAAAo8B,UACAp8B,EAAAoL,IAAAhG,EAAA+F,GAAA,EACAnL,EAAAvhB,SAAAyyB,WACAlR,EAAAvhB,SAAA0yB,SAIAnR,EAAAvhB,SAAAyyB,WAAAlR,EAAAvhB,SAAA0yB,QAAA,MAKAqV,GAAA2V,EAEA5wD,IACAA,EAAA8wD,QAAA,MAEAr8B,EAAAoL,MACApL,EAAAoL,IAAAixB,QAAAr8B,GAGAA,EAAA5hD,QAAA4hD,EAAAwK,SAAAxK,EAAA5hD,SAAA4hD,EAAAwK,QAAA2B,SACAnM,EAAAwK,QAAAY,IAAApL,EAAAoL,MAMAtwB,EAAAjiC,UAAA8vD,aAAA,WACA,GAAA3I,GAAAtlD,IACAslD,GAAA4K,UACA5K,EAAA4K,SAAAl7C,UAIAorB,EAAAjiC,UAAAyiC,SAAA,WACA,GAAA0kB,GAAAtlD,IACA,KAAAslD,EAAAiL,kBAAA,CAGAI,GAAArL,EAAA,iBACAA,EAAAiL,mBAAA,CAEA,IAAA3sD,GAAA0hD,EAAAwK,SACAlsD,KAAA2sD,mBAAAjL,EAAAvhB,SAAA8rB,UACAz3C,EAAAxU,EAAAmsD,UAAAzK,GAGAA,EAAA4K,UACA5K,EAAA4K,SAAAqwB,UAGA,KADA,GAAA1kF,GAAAypD,EAAAuO,UAAA93D,OACAF,KACAypD,EAAAuO,UAAAh4D,GAAA0kF,UAIAj7B,GAAA5kB,MAAA6lB,QACAjB,EAAA5kB,MAAA6lB,OAAAO,UAGAxB,EAAAgL,cAAA,EAEAhL,EAAAo8B,UAAAp8B,EAAAmM,OAAA,MAEAd,GAAArL,EAAA,aAEAA,EAAA4J,OAEA5J,EAAAoL,MACApL,EAAAoL,IAAAixB,QAAA,SAyyDAjnB,IArOA,SAAAt6B,GACAA,EAAAjiC,UAAAyjF,UAAA,SAAAljD,GACA,MAAAiC,IAAAjC,EAAA1+B,OAGAogC,EAAAjiC,UAAA2yD,QAAA,WACA,GAAAxL,GAAAtlD,KACAwlC,EAAA8f,EAAAvhB,SACAzgC,EAAAkiC,EAAAliC,OACAC,EAAAiiC,EAAAjiC,gBACAiuD,EAAAhsB,EAAAgsB,YAEA,IAAAlM,EAAA+K,WAEA,OAAA/zD,KAAAgpD,GAAAwM,OACAxM,EAAAwM,OAAAx1D,GAAA+uD,GAAA/F,EAAAwM,OAAAx1D,GAIAgpD,GAAAgM,aAAAE,KAAAhzD,KAAA6yD,aAAAE,GAEAhuD,IAAA+hD,EAAA2T,eACA3T,EAAA2T,iBAIA3T,EAAA5hD,OAAA8tD,CAEA,IAAA9G,EACA,KACAA,EAAApnD,EAAA1H,KAAA0pD,EAAA4T,aAAA5T,EAAAqU,gBACK,MAAAnzD,GACL6+C,EAAA7+C,EAAA8+C,EAAA,mBASAoF,EAAApF,EAAAmM,OAgBA,MAZA/G,aAAAF,MAQAE,EAAA6C,MAGA7C,EAAA9mD,OAAA4tD,EACA9G,GAMAtqB,EAAAjiC,UAAA0jF,GAAAzoB,GACAh5B,EAAAjiC,UAAA2jF,GAAA/9B,EACA3jB,EAAAjiC,UAAA4jF,GAAAz/E,EACA89B,EAAAjiC,UAAA6jF,GAAApqB,GACAx3B,EAAAjiC,UAAA4wC,GAAA8oB,GACAz3B,EAAAjiC,UAAA8jF,GAAAx9B,EACArkB,EAAAjiC,UAAA+jF,GAAAt9B,EACAxkB,EAAAjiC,UAAAgkF,GAAArpB,GACA14B,EAAAjiC,UAAAikF,GAAAlqB,GACA93B,EAAAjiC,UAAAkkF,GAAAlqB,GACA/3B,EAAAjiC,UAAAmkF,GAAA/pB,GACAn4B,EAAAjiC,UAAAokF,GAAAh4B,EACAnqB,EAAAjiC,UAAAqkF,GAAAj1B,GACAntB,EAAAjiC,UAAAskF,GAAA9yB,GACAvvB,EAAAjiC,UAAAukF,GAAAnpB,IAyJAmB,GA0KA,IAAAioB,KAAA9qD,OAAAo6C,OAAAzvE,OAuCAogF,IACAv9E,KAAA,aACAwqD,UAAA,EAEA5oD,OACA47E,QAAAF,GACAG,QAAAH,IAGAI,QAAA,WACA/iF,KAAAikD,MAAA5hD,OAAAsd,OAAA,OAGAqjE,UAAA,WACA,GAAA/9C,GAAAjlC,IAEA,QAAA1D,KAAA2oC,GAAAgf,MACAiY,GAAAj3B,EAAAgf,MAAA3nD,KAIAupC,OACAg9C,QAAA,SAAA58D,GACA81C,GAAA/7D,KAAAikD,MAAAjkD,KAAAyxD,OAAA,SAAApsD,GAA2D,MAAAw2D,IAAA51C,EAAA5gB,MAE3Dy9E,QAAA,SAAA78D,GACA81C,GAAA/7D,KAAAikD,MAAAjkD,KAAAyxD,OAAA,SAAApsD,GAA2D,OAAAw2D,GAAA51C,EAAA5gB,OAI3D/B,OAAA,WACA,GAAAonD,GAAA6D,GAAAvuD,KAAA8xD,OAAA1uD,SACA2nD,EAAAL,KAAAK,gBACA,IAAAA,EAAA,CAEA,GAAA1lD,GAAAu2D,GAAA7Q,EACA,IAAA1lD,IACArF,KAAA6iF,UAAAhnB,GAAA77D,KAAA6iF,QAAAx9E,IACArF,KAAA8iF,SAAAjnB,GAAA77D,KAAA8iF,QAAAz9E,IAEA,MAAAqlD,EAEA,IAAApuD,GAAA,MAAAouD,EAAApuD,IAGAyuD,EAAAh0B,KAAA++B,KAAA/K,EAAAH,IAAA,KAAAG,EAAA,QACAL,EAAApuD,GACA0D,MAAAikD,MAAA3nD,GACAouD,EAAAyR,kBAAAn8D,KAAAikD,MAAA3nD,GAAA6/D,kBAEAn8D,KAAAikD,MAAA3nD,GAAAouD,EAEAA,EAAAlsD,KAAAiiF,WAAA,EAEA,MAAA/1B,KAIAu4B,IACAL,eAKA,SAAAxiD,GAEA,GAAA8iD,KACAA,GAAAzgF,IAAA,WAA+B,MAAA49B,KAQ/Bh+B,OAAA69B,eAAAE,EAAA,SAAA8iD,GAKA9iD,EAAA1iC,MACA+V,QACAvW,SACA4rD,eACAq6B,eAAAp8B,GAGA3mB,EAAAl/B,MACAk/B,EAAA4F,OAAA2hB,EACAvnB,EAAAO,YAEAP,EAAA/8B,QAAAhB,OAAAsd,OAAA,MACA67C,GAAA38D,QAAA,SAAAsB,GACAigC,EAAA/8B,QAAAlD,EAAA,KAAAkC,OAAAsd,OAAA,QAKAygB,EAAA/8B,QAAAwyD,MAAAz1B,EAEAljC,EAAAkjC,EAAA/8B,QAAA82D,WAAA8oB,IAEAtoB,GAAAv6B,GACA46B,GAAA56B,GACA66B,GAAA76B,GACAs7B,GAAAt7B,IAGAs6B,IAEAr4D,OAAA69B,eAAAw6B,GAAAv8D,UAAA,aACAsE,IAAAkkD,KAGAtkD,OAAA69B,eAAAw6B,GAAAv8D,UAAA,eACAsE,IAAA,WAEA,MAAAzC,MAAA0D,QAAA1D,KAAA0D,OAAAC,cAIA+2D,GAAAz4C,QAAA,OAMA,IAg9CAnmB,IACAiqB,GACAw+C,GACAL,GACAC,GACAC,GAwEAW,GAyLAmB,GA2OAkd,GAj8DAxF,GAAAzvD,EAAA,eAGAk1D,GAAAl1D,EAAA,gCACAwqC,GAAA,SAAA/N,EAAAzqD,EAAA0H,GACA,MACA,UAAAA,GAAAw7E,GAAAz4B,IAAA,WAAAzqD,GACA,aAAA0H,GAAA,WAAA+iD,GACA,YAAA/iD,GAAA,UAAA+iD,GACA,UAAA/iD,GAAA,UAAA+iD,GAIAiW,GAAA1yC,EAAA,wCAEA4yC,GAAA5yC,EACA,wYAQAwyC,GAAA,+BAEAF,GAAA,SAAAp7D,GACA,YAAAA,EAAAqyB,OAAA,cAAAryB,EAAA5E,MAAA,MAGAmgE,GAAA,SAAAv7D,GACA,MAAAo7D,IAAAp7D,KAAA5E,MAAA,EAAA4E,EAAAtJ,QAAA,IAGAilE,GAAA,SAAA/6C,GACA,aAAAA,IAAA,IAAAA,GAsFA03C,IACA2lB,IAAA,6BACAC,KAAA,sCAGAC,GAAAr1D,EACA,snBAeA6uC,GAAA7uC,EACA,kNAGA,GAGA8lD,GAAA,SAAArpB,GAA+B,cAAAA,GAE/B6M,GAAA,SAAA7M,GACA,MAAA44B,IAAA54B,IAAAoS,GAAApS,IAcAsS,GAAA76D,OAAAsd,OAAA,MAyGA8jE,GAAAphF,OAAAw7E,QACAtgF,cAAAggE,GACAG,mBACAE,kBACAC,iBACAC,gBACAj5B,eACAo5B,eACA5B,cACA6B,eACAV,WACAW,kBACAz7C,kBAKA8iB,IACA7lB,OAAA,SAAA+iD,EAAAhY,GACA2T,GAAA3T,IAEA11C,OAAA,SAAAgqD,EAAAtU,GACAsU,EAAAxgE,KAAAgnC,MAAAklB,EAAAlsD,KAAAgnC,MACA64B,GAAAW,GAAA,GACAX,GAAA3T,KAGAm2B,QAAA,SAAAn2B,GACA2T,GAAA3T,GAAA,KA6CA0U,GAAA,GAAA5U,IAAA,UAEAk5B,IAAA,iDA4nBA76B,IACAlpC,OAAAo/C,GACA/pD,OAAA+pD,GACA8hB,QAAA,SAAAn2B,GACAqU,GAAArU,EAAA0U,MAsEAa,GAAA59D,OAAAsd,OAAA,MAqCAgkE,IACAn+C,GACAqjB,IAuEA0D,IACA5sC,OAAAygD,GACAprD,OAAAorD,IAoCAwjB,IACAjkE,OAAAuhD,GACAlsD,OAAAksD,IAKAoB,GAAA,gBAsWAsD,GAAA,MACAL,GAAA,MAyOAtC,IACAtjD,OAAA2mD,GACAtxD,OAAAsxD,IAiFA1N,IACAj5C,OAAA8mD,GACAzxD,OAAAyxD,IAKAe,GAAA9vB,EAAA,SAAAmsC,GACA,GAAAlhD,MACAmhD,EAAA,gBACAC,EAAA,OAOA,OANAF,GAAA5uE,MAAA6uE,GAAAjlF,QAAA,SAAA4W,GACA,GAAAA,EAAA,CACA,GAAA83B,GAAA93B,EAAAR,MAAA8uE,EACAx2C,GAAAxxC,OAAA,IAAA4mC,EAAA4K,EAAA,GAAAs0B,QAAAt0B,EAAA,GAAAs0B,WAGAl/B,IAyDAqhD,GAAA,MACAC,GAAA,iBACA/b,GAAA,SAAArjE,EAAAQ,EAAA4gB,GAEA,GAAA+9D,GAAAtgE,KAAAre,GACAR,EAAAG,MAAAk/E,YAAA7+E,EAAA4gB,OACG,IAAAg+D,GAAAvgE,KAAAuC,GACHphB,EAAAG,MAAAk/E,YAAA7+E,EAAA4gB,EAAA9D,QAAA8hE,GAAA,qBACG,CACH,GAAAE,GAAAlvD,GAAA5vB,EACA,IAAA7C,MAAA1F,QAAAmpB,GAIA,OAAApqB,GAAA,EAAAC,EAAAmqB,EAAAlqB,OAAuCF,EAAAC,EAASD,IAChDgJ,EAAAG,MAAAm/E,GAAAl+D,EAAApqB,OAGAgJ,GAAAG,MAAAm/E,GAAAl+D,IAKAm+D,IAAA,qBAGAnvD,GAAAyiB,EAAA,SAAAt5C,GAGA,GAFAglF,OAAA9lF,SAAAC,cAAA,OAAAyH,MAEA,YADA5G,EAAAmqD,GAAAnqD,KACAA,IAAAglF,IACA,MAAAhlF,EAGA,QADAimF,GAAAjmF,EAAAs5B,OAAA,GAAAnV,cAAAnkB,EAAAqC,MAAA,GACA5E,EAAA,EAAiBA,EAAAuoF,GAAAroF,OAAwBF,IAAA,CACzC,GAAAwJ,GAAA++E,GAAAvoF,GAAAwoF,CACA,IAAAh/E,IAAA+9E,IACA,MAAA/9E,MAgDAL,IACA2a,OAAAioD,GACA5yD,OAAA4yD,IAoFAc,GAAAhxB,EAAA,SAAAryC,GACA,OACA4lE,WAAA5lE,EAAA,SACA6lE,aAAA7lE,EAAA,YACA8lE,iBAAA9lE,EAAA,gBACAgoE,WAAAhoE,EAAA,SACAkoE,aAAAloE,EAAA,YACAioE,iBAAAjoE,EAAA,mBAIAi/E,GAAA7+B,KAAA+a,GACA4I,GAAA,aACAiB,GAAA,YAGAR,GAAA,aACAR,GAAA,gBACAa,GAAA,YACAZ,GAAA,cACAgb,UAEAhhC,KAAA5nC,OAAA6oE,qBACAjhC,KAAA5nC,OAAA8oE,wBAEA3a,GAAA,mBACAR,GAAA,2BAEA/lB,KAAA5nC,OAAA+oE,oBACAnhC,KAAA5nC,OAAAgpE,uBAEAxa,GAAA,kBACAZ,GAAA,sBAKA,IAAAV,IAAAnjB,IAAA/pC,OAAAipE,sBACAjpE,OAAAipE,sBAAAnlF,KAAAkc,QACA2yC,WAsDAkc,GAAA,yBAiXAQ,GAAAtlB,IACA9lC,OAAAkuD,GACA+W,SAAA/W,GACAz1D,OAAA,SAAAsyC,EAAAwiB,IAEA,IAAAxiB,EAAAlsD,KAAAquE,KACAI,GAAAviB,EAAAwiB,GAEAA,SAKA2X,IACAt4B,GACAq3B,GACA3gB,GACArK,GACA5zD,GACA+lE,IAOA9rC,GAAA4lD,GAAA/kF,OAAA6jF,IAEAmB,GA3rEA,SAAAC,GAgBA,QAAAC,GAAAl6B,GACA,UAAAN,IAAAi5B,EAAAjmB,QAAA1S,GAAAz6C,wBAA2DizC,GAAAwH,GAG3D,QAAAm6B,GAAAC,EAAAv2B,GACA,QAAA9C,KACA,KAAAA,EAAA8C,WACAw2B,EAAAD,GAIA,MADAr5B,GAAA8C,YACA9C,EAGA,QAAAs5B,GAAAtgF,GACA,GAAAjB,GAAA6/E,EAAApnB,WAAAx3D,EAEA0+C,GAAA3/C,IACA6/E,EAAA5+C,YAAAjhC,EAAAiB,GAKA,QAAAugF,GAAA16B,EAAA26B,EAAAlvB,EAAAC,EAAAkvB,GAEA,GADA56B,EAAAuhB,cAAAqZ,GACA1vB,EAAAlL,EAAA26B,EAAAlvB,EAAAC,GAAA,CAIA,GAAA53D,GAAAksD,EAAAlsD,KACAqsD,EAAAH,EAAAG,SACAD,EAAAF,EAAAE,GACArH,GAAAqH,IAmBAF,EAAAI,IAAAJ,EAAAO,GACAw4B,EAAA/lB,gBAAAhT,EAAAO,GAAAL,GACA64B,EAAAlmF,cAAAqtD,EAAAF,GACA66B,EAAA76B,GAIA86B,EAAA96B,EAAAG,EAAAw6B,GACA9hC,EAAA/kD,IACAinF,EAAA/6B,EAAA26B,GAEAzE,EAAAzqB,EAAAzL,EAAAI,IAAAsL,IAMK5S,EAAAkH,EAAAS,YACLT,EAAAI,IAAA24B,EAAA5lB,cAAAnT,EAAAn4B,MACAquD,EAAAzqB,EAAAzL,EAAAI,IAAAsL,KAEA1L,EAAAI,IAAA24B,EAAA7lB,eAAAlT,EAAAn4B,MACAquD,EAAAzqB,EAAAzL,EAAAI,IAAAsL,KAIA,QAAAR,GAAAlL,EAAA26B,EAAAlvB,EAAAC,GACA,GAAAv6D,GAAA6uD,EAAAlsD,IACA,IAAA+kD,EAAA1nD,GAAA,CACA,GAAA6pF,GAAAniC,EAAAmH,EAAAyR,oBAAAtgE,EAAA4kF,SAQA,IAPAl9B,EAAA1nD,IAAA4H,OAAA8/C,EAAA1nD,IAAAyV,OACAzV,EAAA6uD,GAAA,EAAAyL,EAAAC,GAMA7S,EAAAmH,EAAAyR,mBAKA,MAJAwpB,GAAAj7B,EAAA26B,GACA7hC,EAAAkiC,IACAE,EAAAl7B,EAAA26B,EAAAlvB,EAAAC,IAEA,GAKA,QAAAuvB,GAAAj7B,EAAA26B,GACA9hC,EAAAmH,EAAAlsD,KAAAqnF,iBACAR,EAAApmF,KAAAY,MAAAwlF,EAAA36B,EAAAlsD,KAAAqnF,eACAn7B,EAAAlsD,KAAAqnF,cAAA,MAEAn7B,EAAAI,IAAAJ,EAAAyR,kBAAAzL,IACAo1B,EAAAp7B,IACA+6B,EAAA/6B,EAAA26B,GACAE,EAAA76B,KAIA2T,GAAA3T,GAEA26B,EAAApmF,KAAAyrD,IAIA,QAAAk7B,GAAAl7B,EAAA26B,EAAAlvB,EAAAC,GAOA,IANA,GAAAv6D,GAKAkqF,EAAAr7B,EACAq7B,EAAA5pB,mBAEA,GADA4pB,IAAA5pB,kBAAA1K,OACAlO,EAAA1nD,EAAAkqF,EAAAvnF,OAAA+kD,EAAA1nD,IAAAkvE,YAAA,CACA,IAAAlvE,EAAA,EAAmBA,EAAA0lF,EAAAqD,SAAA7oF,SAAyBF,EAC5C0lF,EAAAqD,SAAA/oF,GAAAujE,GAAA2mB,EAEAV,GAAApmF,KAAA8mF,EACA,OAKAnF,EAAAzqB,EAAAzL,EAAAI,IAAAsL,GAGA,QAAAwqB,GAAAh9E,EAAAknD,EAAAk7B,GACAziC,EAAA3/C,KACA2/C,EAAAyiC,GACAA,EAAA3pB,aAAAz4D,GACA6/E,EAAA3lB,aAAAl6D,EAAAknD,EAAAk7B,GAGAvC,EAAAxlB,YAAAr6D,EAAAknD,IAKA,QAAA06B,GAAA96B,EAAAG,EAAAw6B,GACA,GAAA7iF,MAAA1F,QAAA+tD,GACA,OAAAhvD,GAAA,EAAqBA,EAAAgvD,EAAA9uD,SAAqBF,EAC1CupF,EAAAv6B,EAAAhvD,GAAAwpF,EAAA36B,EAAAI,IAAA,aAEK1uD,GAAAsuD,EAAAn4B,OACLkxD,EAAAxlB,YAAAvT,EAAAI,IAAA24B,EAAA7lB,eAAAlT,EAAAn4B,OAIA,QAAAuzD,GAAAp7B,GACA,KAAAA,EAAAyR,mBACAzR,IAAAyR,kBAAA1K,MAEA,OAAAlO,GAAAmH,EAAAE,KAGA,QAAA66B,GAAA/6B,EAAA26B,GACA,OAAA9P,GAAA,EAAqBA,EAAAgM,EAAA5hE,OAAA5jB,SAAyBw5E,EAC9CgM,EAAA5hE,OAAA41D,GAAAnW,GAAA1U,EAEA7uD,GAAA6uD,EAAAlsD,KAAAiF,KACA8/C,EAAA1nD,KACA0nD,EAAA1nD,EAAA8jB,SAA4B9jB,EAAA8jB,OAAAy/C,GAAA1U,GAC5BnH,EAAA1nD,EAAA+kF,SAA4ByE,EAAApmF,KAAAyrD,IAO5B,QAAA66B,GAAA76B,GAGA,IAFA,GAAA7uD,GACAqS,EAAAw8C,EACAx8C,GACAq1C,EAAA1nD,EAAAqS,EAAAtP,UAAA2kD,EAAA1nD,IAAAkoC,SAAAvgC,WACAigF,EAAA/gE,aAAAgoC,EAAAI,IAAAjvD,EAAA,IAEAqS,IAAAtK,MAGA2/C,GAAA1nD,EAAAiwE,KACAjwE,IAAA6uD,EAAA9rD,SACA2kD,EAAA1nD,IAAAkoC,SAAAvgC,WAEAigF,EAAA/gE,aAAAgoC,EAAAI,IAAAjvD,EAAA,IAIA,QAAAoqF,GAAA9vB,EAAAC,EAAA9K,EAAA46B,EAAApnB,EAAAumB,GACA,KAAUa,GAAApnB,IAAoBonB,EAC9Bd,EAAA95B,EAAA46B,GAAAb,EAAAlvB,EAAAC,GAIA,QAAA+vB,GAAAz7B,GACA,GAAA7uD,GAAA2yB,EACAhwB,EAAAksD,EAAAlsD,IACA,IAAA+kD,EAAA/kD,GAEA,IADA+kD,EAAA1nD,EAAA2C,EAAAiF,OAAA8/C,EAAA1nD,IAAAglF,UAAyDhlF,EAAA6uD,GACzD7uD,EAAA,EAAiBA,EAAA0lF,EAAAV,QAAA9kF,SAAwBF,EAAO0lF,EAAAV,QAAAhlF,GAAA6uD,EAEhD,IAAAnH,EAAA1nD,EAAA6uD,EAAAG,UACA,IAAAr8B,EAAA,EAAiBA,EAAAk8B,EAAAG,SAAA9uD,SAA2ByyB,EAC5C23D,EAAAz7B,EAAAG,SAAAr8B,IAKA,QAAA43D,GAAAjwB,EAAA7K,EAAA46B,EAAApnB,GACA,KAAUonB,GAAApnB,IAAoBonB,EAAA,CAC9B,GAAAG,GAAA/6B,EAAA46B,EACA3iC,GAAA8iC,KACA9iC,EAAA8iC,EAAAz7B,MACA07B,EAAAD,GACAF,EAAAE,IAEAlB,EAAAkB,EAAAv7B,OAMA,QAAAw7B,GAAA57B,EAAAwiB,GACA,GAAA3pB,EAAA2pB,IAAA3pB,EAAAmH,EAAAlsD,MAAA,CACA,GAAA3C,GACA8yD,EAAA4yB,EAAAnpE,OAAArc,OAAA,CAaA,KAZAwnD,EAAA2pB,GAGAA,EAAAve,aAGAue,EAAA+X,EAAAv6B,EAAAI,IAAA6D,GAGApL,EAAA1nD,EAAA6uD,EAAAyR,oBAAA5Y,EAAA1nD,IAAA41D,SAAAlO,EAAA1nD,EAAA2C,OACA8nF,EAAAzqF,EAAAqxE,GAEArxE,EAAA,EAAiBA,EAAA0lF,EAAAnpE,OAAArc,SAAuBF,EACxC0lF,EAAAnpE,OAAAvc,GAAA6uD,EAAAwiB,EAEA3pB,GAAA1nD,EAAA6uD,EAAAlsD,KAAAiF,OAAA8/C,EAAA1nD,IAAAuc,QACAvc,EAAA6uD,EAAAwiB,GAEAA,QAGAiY,GAAAz6B,EAAAI,KAIA,QAAAy7B,GAAApwB,EAAAqwB,EAAAC,EAAApB,EAAAqB,GAgBA,IAfA,GAQAC,GAAAC,EAAAC,EAAAzwB,EARA0wB,EAAA,EACAC,EAAA,EACAC,EAAAR,EAAAzqF,OAAA,EACAkrF,EAAAT,EAAA,GACAU,EAAAV,EAAAQ,GACAG,EAAAV,EAAA1qF,OAAA,EACAqrF,EAAAX,EAAA,GACAY,EAAAZ,EAAAU,GAMAG,GAAAZ,EAEAI,GAAAE,GAAAD,GAAAI,GACA9jC,EAAA4jC,GACAA,EAAAT,IAAAM,GACOzjC,EAAA6jC,GACPA,EAAAV,IAAAQ,GACOvoB,GAAAwoB,EAAAG,IACPG,EAAAN,EAAAG,EAAA/B,GACA4B,EAAAT,IAAAM,GACAM,EAAAX,IAAAM,IACOtoB,GAAAyoB,EAAAG,IACPE,EAAAL,EAAAG,EAAAhC,GACA6B,EAAAV,IAAAQ,GACAK,EAAAZ,IAAAU,IACO1oB,GAAAwoB,EAAAI,IACPE,EAAAN,EAAAI,EAAAhC,GACAiC,GAAA7D,EAAA3lB,aAAA3H,EAAA8wB,EAAAn8B,IAAA24B,EAAAvlB,YAAAgpB,EAAAp8B,MACAm8B,EAAAT,IAAAM,GACAO,EAAAZ,IAAAU,IACO1oB,GAAAyoB,EAAAE,IACPG,EAAAL,EAAAE,EAAA/B,GACAiC,GAAA7D,EAAA3lB,aAAA3H,EAAA+wB,EAAAp8B,IAAAm8B,EAAAn8B,KACAo8B,EAAAV,IAAAQ,GACAI,EAAAX,IAAAM,KAEA1jC,EAAAsjC,KAAmCA,EAAA/nB,GAAA4nB,EAAAM,EAAAE,IACnCJ,EAAArjC,EAAA6jC,EAAA9qF,KAAAqqF,EAAAS,EAAA9qF,KAAA,KACA+mD,EAAAujC,IACAxB,EAAAgC,EAAA/B,EAAAlvB,EAAA8wB,EAAAn8B,KACAs8B,EAAAX,IAAAM,KAEAF,EAAAL,EAAAI,GAQAnoB,GAAAooB,EAAAO,IACAG,EAAAV,EAAAO,EAAA/B,GACAmB,EAAAI,OAAAtjC,GACAgkC,GAAA7D,EAAA3lB,aAAA3H,EAAA0wB,EAAA/7B,IAAAm8B,EAAAn8B,KACAs8B,EAAAX,IAAAM,KAGA3B,EAAAgC,EAAA/B,EAAAlvB,EAAA8wB,EAAAn8B,KACAs8B,EAAAX,IAAAM,KAKAD,GAAAE,GACA5wB,EAAA/S,EAAAojC,EAAAU,EAAA,SAAAV,EAAAU,EAAA,GAAAr8B,IACAm7B,EAAA9vB,EAAAC,EAAAqwB,EAAAM,EAAAI,EAAA9B,IACK0B,EAAAI,GACLf,EAAAjwB,EAAAqwB,EAAAM,EAAAE,GAIA,QAAAO,GAAAvoB,EAAAtU,EAAA26B,EAAAqB,GACA,GAAA1nB,IAAAtU,EAAA,CAIA,GAAAI,GAAAJ,EAAAI,IAAAkU,EAAAlU,GAEA,IAAAtH,EAAAwb,EAAAL,oBAMA,YALApb,EAAAmH,EAAAM,aAAA4C,UACA45B,EAAAxoB,EAAAlU,IAAAJ,EAAA26B,GAEA36B,EAAAiU,oBAAA,EASA,IAAAnb,EAAAkH,EAAAQ,WACA1H,EAAAwb,EAAA9T,WACAR,EAAApuD,MAAA0iE,EAAA1iE,MACAknD,EAAAkH,EAAAU,WAAA5H,EAAAkH,EAAA2O,SAGA,YADA3O,EAAAyR,kBAAA6C,EAAA7C,kBAIA,IAAAtgE,GACA2C,EAAAksD,EAAAlsD,IACA+kD,GAAA/kD,IAAA+kD,EAAA1nD,EAAA2C,EAAAiF,OAAA8/C,EAAA1nD,IAAA8kF,WACA9kF,EAAAmjE,EAAAtU,EAGA,IAAA87B,GAAAxnB,EAAAnU,SACAw7B,EAAA37B,EAAAG,QACA,IAAAtH,EAAA/kD,IAAAsnF,EAAAp7B,GAAA,CACA,IAAA7uD,EAAA,EAAiBA,EAAA0lF,EAAAvsE,OAAAjZ,SAAuBF,EAAO0lF,EAAAvsE,OAAAnZ,GAAAmjE,EAAAtU,EAC/CnH,GAAA1nD,EAAA2C,EAAAiF,OAAA8/C,EAAA1nD,IAAAmZ,SAAwDnZ,EAAAmjE,EAAAtU,GAExDrH,EAAAqH,EAAAn4B,MACAgxB,EAAAijC,IAAAjjC,EAAA8iC,GACAG,IAAAH,GAA2BE,EAAAz7B,EAAA07B,EAAAH,EAAAhB,EAAAqB,GACpBnjC,EAAA8iC,IACP9iC,EAAAyb,EAAAzsC,OAAmCkxD,EAAAtlB,eAAArT,EAAA,IACnCm7B,EAAAn7B,EAAA,KAAAu7B,EAAA,EAAAA,EAAAtqF,OAAA,EAAAspF,IACO9hC,EAAAijC,GACPJ,EAAAt7B,EAAA07B,EAAA,EAAAA,EAAAzqF,OAAA,GACOwnD,EAAAyb,EAAAzsC,OACPkxD,EAAAtlB,eAAArT,EAAA,IAEKkU,EAAAzsC,OAAAm4B,EAAAn4B,MACLkxD,EAAAtlB,eAAArT,EAAAJ,EAAAn4B,MAEAgxB,EAAA/kD,IACA+kD,EAAA1nD,EAAA2C,EAAAiF,OAAA8/C,EAAA1nD,IAAA4rF,YAA2D5rF,EAAAmjE,EAAAtU,IAI3D,QAAAg9B,GAAAh9B,EAAA4H,EAAAq1B,GAGA,GAAAnkC,EAAAmkC,IAAApkC,EAAAmH,EAAA9mD,QACA8mD,EAAA9mD,OAAApF,KAAAqnF,cAAAvzB,MAEA,QAAAz2D,GAAA,EAAqBA,EAAAy2D,EAAAv2D,SAAkBF,EACvCy2D,EAAAz2D,GAAA2C,KAAAiF,KAAAm9E,OAAAtuB,EAAAz2D,IAWA,QAAA2rF,GAAA18B,EAAAJ,EAAA26B,GACA,GAAA7hC,EAAAkH,EAAAS,YAAA5H,EAAAmH,EAAAM,cAGA,MAFAN,GAAAI,MACAJ,EAAAiU,oBAAA,GACA,CAOAjU,GAAAI,KACA,IAAAF,GAAAF,EAAAE,IACApsD,EAAAksD,EAAAlsD,KACAqsD,EAAAH,EAAAG,QACA,IAAAtH,EAAA/kD,KACA+kD,EAAA1nD,EAAA2C,EAAAiF,OAAA8/C,EAAA1nD,IAAAyV,OAAsDzV,EAAA6uD,GAAA,GACtDnH,EAAA1nD,EAAA6uD,EAAAyR,oBAGA,MADAwpB,GAAAj7B,EAAA26B,IACA,CAGA,IAAA9hC,EAAAqH,GAAA,CACA,GAAArH,EAAAsH,GAEA,GAAAC,EAAA88B,gBAES,CAGT,OAFAC,IAAA,EACAvrB,EAAAxR,EAAAg9B,WACAvS,EAAA,EAA2BA,EAAA1qB,EAAA9uD,OAAuBw5E,IAAA,CAClD,IAAAjZ,IAAAkrB,EAAAlrB,EAAAzR,EAAA0qB,GAAA8P,GAAA,CACAwC,GAAA,CACA,OAEAvrB,IAAA4B,YAIA,IAAA2pB,GAAAvrB,EASA,aAtBAkpB,GAAA96B,EAAAG,EAAAw6B,EA0BA,IAAA9hC,EAAA/kD,GACA,OAAAlC,KAAAkC,GACA,IAAAupF,EAAAzrF,GAAA,CACAmpF,EAAA/6B,EAAA26B,EACA,YAIKv6B,GAAAtsD,OAAAksD,EAAAn4B,OACLu4B,EAAAtsD,KAAAksD,EAAAn4B,KAEA,UA9eA,GAAA12B,GAAA2yB,EACA+yD,KAEAtiD,EAAA8lD,EAAA9lD,QACAwkD,EAAAsB,EAAAtB,OAEA,KAAA5nF,EAAA,EAAaA,EAAA6nF,GAAA3nF,SAAkBF,EAE/B,IADA0lF,EAAAmC,GAAA7nF,OACA2yB,EAAA,EAAeA,EAAAyQ,EAAAljC,SAAoByyB,EACnC+0B,EAAAtkB,EAAAzQ,GAAAk1D,GAAA7nF,MACA0lF,EAAAmC,GAAA7nF,IAAAoD,KAAAggC,EAAAzQ,GAAAk1D,GAAA7nF,IA2BA,IAsYAksF,GAAA55D,EAAA,gDAiFA,iBAAA6wC,EAAAtU,EAAA+F,EAAAi2B,EAAAvwB,EAAAC,GACA,GAAA/S,EAAAqH,GAEA,YADAnH,EAAAyb,IAA4BmnB,EAAAnnB,GAI5B,IAAAgpB,IAAA,EACA3C,IAEA,IAAAhiC,EAAA2b,GAEAgpB,GAAA,EACA5C,EAAA16B,EAAA26B,EAAAlvB,EAAAC,OACK,CACL,GAAA6xB,GAAA1kC,EAAAyb,EAAA5+D,SACA,KAAA6nF,GAAAxpB,GAAAO,EAAAtU,GAEA68B,EAAAvoB,EAAAtU,EAAA26B,EAAAqB,OACO,CACP,GAAAuB,EAAA,CAQA,GAJA,IAAAjpB,EAAA5+D,UAAA4+D,EAAAkpB,aAAA7K,MACAre,EAAA8B,gBAAAuc,IACA5sB,GAAA,GAEAjN,EAAAiN,IACA+2B,EAAAxoB,EAAAtU,EAAA26B,GAEA,MADAqC,GAAAh9B,EAAA26B,GAAA,GACArmB,CAaAA,GAAAgmB,EAAAhmB,GAGA,GAAAmpB,GAAAnpB,EAAAlU,IACAs9B,EAAA3E,EAAApnB,WAAA8rB,EAWA,IAVA/C,EACA16B,EACA26B,EAIA8C,EAAAtd,SAAA,KAAAud,EACA3E,EAAAvlB,YAAAiqB,IAGA5kC,EAAAmH,EAAA9mD,QAAA,CAIA,IADA,GAAAsK,GAAAw8C,EAAA9mD,OACAsK,GACAA,EAAA48C,IAAAJ,EAAAI,IACA58C,IAAAtK,MAEA,IAAAkiF,EAAAp7B,GACA,OAAA7uD,GAAA,EAA2BA,EAAA0lF,EAAA5hE,OAAA5jB,SAAuBF,EAClD0lF,EAAA5hE,OAAA9jB,GAAAujE,GAAA1U,EAAA9mD,QAKA2/C,EAAA6kC,GACAhC,EAAAgC,GAAAppB,GAAA,KACSzb,EAAAyb,EAAApU,MACTu7B,EAAAnnB,IAMA,MADA0oB,GAAAh9B,EAAA26B,EAAA2C,GACAt9B,EAAAI,OA4mDiC24B,WAAAxkD,aAOjCopD,GAAAl6D,EAAA,4CAGAqyC,KAEAljE,SAAAi4C,iBAAA,6BACA,GAAA1wC,GAAAvH,SAAA4pE,aACAriE,MAAAyjF,QACAjyE,GAAAxR,EAAA,UAKA,IAAA0jF,KACAzoB,SAAA,SAAAj7D,EAAAkpE,EAAArjB,GACA,cAAAA,EAAAE,IAAA,CACA,GAAAjsD,GAAA,WACAmvE,GAAAjpE,EAAAkpE,EAAArjB,EAAA9rD,SAEAD,MAEAmnE,IAAAkY,KACA3vB,WAAA1vD,EAAA,QAEK,aAAA+rD,EAAAE,KAAAy9B,GAAAxjF,EAAA1E,SACL0E,EAAAsiE,YAAA4G,EAAA/N,UACA+N,EAAA/N,UAAA0F,OAKA7gE,EAAA0wC,iBAAA,SAAA84B,IACA4P,KACAp5E,EAAA0wC,iBAAA,mBAAA64B,IACAvpE,EAAA0wC,iBAAA,iBAAA84B,KAGA7N,KACA37D,EAAAyjF,QAAA,MAKAzoB,iBAAA,SAAAh7D,EAAAkpE,EAAArjB,GACA,cAAAA,EAAAE,IAAA,CACAkjB,GAAAjpE,EAAAkpE,EAAArjB,EAAA9rD,UAKAiG,EAAA44D,SACAsQ,EAAAlwE,MAAAs+E,KAAA,SAAA1xD,GAA2C,MAAA0jD,IAAA1jD,EAAA5lB,EAAAxB,WAC3C0qE,EAAAlwE,QAAAkwE,EAAApO,UAAAwO,GAAAJ,EAAAlwE,MAAAgH,EAAAxB,WAEAgT,GAAAxR,EAAA,aAgFAgoE,IACArtE,KAAA,SAAAqF,EAAA2gC,EAAAklB,GACA,GAAA7sD,GAAA2nC,EAAA3nC,KAEA6sD,GAAA+jB,GAAA/jB,EACA,IAAA89B,GAAA99B,EAAAlsD,MAAAksD,EAAAlsD,KAAAusE,WACA0d,EAAA5jF,EAAA6jF,mBACA,SAAA7jF,EAAAG,MAAA2jF,QAAA,GAAA9jF,EAAAG,MAAA2jF,OACA9qF,IAAA2qF,IAAAhoB,IACA9V,EAAAlsD,KAAAquE,MAAA,EACAlC,GAAAjgB,EAAA,WACA7lD,EAAAG,MAAA2jF,QAAAF,KAGA5jF,EAAAG,MAAA2jF,QAAA9qF,EAAA4qF,EAAA,QAIAzzE,OAAA,SAAAnQ,EAAA2gC,EAAAklB,GACA,GAAA7sD,GAAA2nC,EAAA3nC,KAIAA,KAHA2nC,EAAAm6B,WAIAjV,EAAA+jB,GAAA/jB,GACAA,EAAAlsD,MAAAksD,EAAAlsD,KAAAusE,aACAvK,IACA9V,EAAAlsD,KAAAquE,MAAA,EACAhvE,EACA8sE,GAAAjgB,EAAA,WACA7lD,EAAAG,MAAA2jF,QAAA9jF,EAAA6jF,qBAGAzb,GAAAviB,EAAA,WACA7lD,EAAAG,MAAA2jF,QAAA,UAIA9jF,EAAAG,MAAA2jF,QAAA9qF,EAAAgH,EAAA6jF,mBAAA,SAIAE,OAAA,SACA/jF,EACAkpE,EACArjB,EACAsU,EACAK,GAEAA,IACAx6D,EAAAG,MAAA2jF,QAAA9jF,EAAA6jF,sBAKAG,IACAx0E,MAAAk0E,GACA1b,SAQAic,IACAzjF,KAAAwyB,OACA8zC,OAAA1hB,QACAwe,IAAAxe,QACA8+B,KAAAlxD,OACA13B,KAAA03B,OACAozC,WAAApzC,OACAw1C,WAAAx1C,OACAqzC,aAAArzC,OACA01C,aAAA11C,OACAszC,iBAAAtzC,OACAy1C,iBAAAz1C,OACAuzC,YAAAvzC,OACAyzC,kBAAAzzC,OACAwzC,cAAAxzC,OACAvwB,UAAAshB,OAAAiP,OAAAx1B,SAsDA2mF,IACA3jF,KAAA,aACA4B,MAAA6hF,GACAj5B,UAAA,EAEAvsD,OAAA,SAAAc,GACA,GAAA6gC,GAAAjlC,KAEA6qD,EAAA7qD,KAAA+jC,SAAAqtB,eACA,IAAAvG,IAKAA,IAAAxrD,OAAA,SAAA+sC,GAA6C,MAAAA,GAAAwe,KAAA+T,GAAAvyB,KAE7Cye,EAAA9uD,QAAA,CAaA,GAAAgtF,GAAA/oF,KAAA+oF,KAYAja,EAAAjkB,EAAA,EAIA,IAAAkkB,GAAA/uE,KAAA0D,QACA,MAAAorE,EAKA,IAAA3oE,GAAAuoE,GAAAI,EAEA,KAAA3oE,EACA,MAAA2oE,EAGA,IAAA9uE,KAAAipF,SACA,MAAAj+C,IAAA5mC,EAAA0qE,EAMA,IAAA99D,GAAA,gBAAAhR,KAAA,QACAmG,GAAA7J,IAAA,MAAA6J,EAAA7J,IACA6J,EAAAglD,UACAn6C,EAAA,UACAA,EAAA7K,EAAAykD,IACAxuD,EAAA+J,EAAA7J,KACA,IAAAu7B,OAAA1xB,EAAA7J,KAAAqB,QAAAqT,GAAA7K,EAAA7J,IAAA0U,EAAA7K,EAAA7J,IACA6J,EAAA7J,GAEA,IAAAkC,IAAA2H,EAAA3H,OAAA2H,EAAA3H,UAA8CusE,WAAA6D,GAAA5uE,MAC9CkpF,EAAAlpF,KAAAyxD,OACAwd,EAAAP,GAAAwa,EAQA,IAJA/iF,EAAA3H,KAAAqqD,YAAA1iD,EAAA3H,KAAAqqD,WAAAszB,KAAA,SAAAjnD,GAA0E,eAAAA,EAAA7vB,SAC1Ec,EAAA3H,KAAAquE,MAAA,GAIAoC,GACAA,EAAAzwE,OACAwwE,GAAA7oE,EAAA8oE,KACAtQ,GAAAsQ,GACA,CAGA,GAAA9N,GAAA8N,MAAAzwE,KAAAusE,WAAA7tE,KAAqEsB,GAErE,eAAAuqF,EAOA,MALA/oF,MAAAipF,UAAA,EACA/8B,GAAAiV,EAAA,wBACAl8B,EAAAgkD,UAAA,EACAhkD,EAAAgpB,iBAEAjjB,GAAA5mC,EAAA0qE,EACO,eAAAia,EAAA,CACP,GAAApqB,GAAAx4D,GACA,MAAA+iF,EAEA,IAAAC,GACAhc,EAAA,WAAwCgc,IACxCj9B,IAAA1tD,EAAA,aAAA2uE,GACAjhB,GAAA1tD,EAAA,iBAAA2uE,GACAjhB,GAAAiV,EAAA,sBAAA8L,GAAgEkc,EAAAlc,KAIhE,MAAA6B,MAiBA7nE,GAAA/J,GACA0tD,IAAA/yB,OACAuxD,UAAAvxD,QACCixD,UAED7hF,IAAA8hF,IAEA,IAAAM,KACApiF,SAEA3D,OAAA,SAAAc,GAQA,OAPAwmD,GAAA5qD,KAAA4qD,KAAA5qD,KAAA0D,OAAAlF,KAAAosD,KAAA,OACA7rD,EAAAsD,OAAAsd,OAAA,MACA2pE,EAAAtpF,KAAAspF,aAAAtpF,KAAA6qD,SACA0+B,EAAAvpF,KAAA8xD,OAAA1uD,YACAynD,EAAA7qD,KAAA6qD,YACA2+B,EAAA5a,GAAA5uE,MAEAnE,EAAA,EAAmBA,EAAA0tF,EAAAxtF,OAAwBF,IAAA,CAC3C,GAAAuwC,GAAAm9C,EAAA1tF,EACA,IAAAuwC,EAAAwe,IACA,SAAAxe,EAAA9vC,KAAA,IAAAu7B,OAAAuU,EAAA9vC,KAAAqB,QAAA,WACAktD,EAAA5rD,KAAAmtC,GACArtC,EAAAqtC,EAAA9vC,KAAA8vC,GACWA,EAAA5tC,OAAA4tC,EAAA5tC,UAAuBusE,WAAAye,QASlC,GAAAF,EAAA,CAGA,OAFAG,MACAC,KACAnU,EAAA,EAAuBA,EAAA+T,EAAAvtF,OAA2Bw5E,IAAA,CAClD,GAAAoU,GAAAL,EAAA/T,EACAoU,GAAAnrF,KAAAusE,WAAAye,EACAG,EAAAnrF,KAAAgxE,IAAAma,EAAA7+B,IAAAvsC,wBACAxf,EAAA4qF,EAAArtF,KACAmtF,EAAAxqF,KAAA0qF,GAEAD,EAAAzqF,KAAA0qF,GAGA3pF,KAAAypF,KAAArlF,EAAAwmD,EAAA,KAAA6+B,GACAzpF,KAAA0pF,UAGA,MAAAtlF,GAAAwmD,EAAA,KAAAC,IAGA++B,aAAA,WAEA5pF,KAAA0hF,UACA1hF,KAAAyxD,OACAzxD,KAAAypF,MACA,GACA,GAEAzpF,KAAAyxD,OAAAzxD,KAAAypF,MAGAI,QAAA,WACA,GAAAh/B,GAAA7qD,KAAAspF,aACAF,EAAAppF,KAAAopF,YAAAppF,KAAAqF,MAAA,YACA,IAAAwlD,EAAA9uD,QAAAiE,KAAA8pF,QAAAj/B,EAAA,GAAAC,IAAAs+B,GAAA,CAMAv+B,EAAAhsD,QAAAqwE,IACArkB,EAAAhsD,QAAAuwE,IACAvkB,EAAAhsD,QAAAywE,GAGA,IAAAya,GAAAzsF,SAAAysF,IACAA,GAAAC,YAEAn/B,GAAAhsD,QAAA,SAAAutC,GACA,GAAAA,EAAA5tC,KAAAixE,MAAA,CACA,GAAA5qE,GAAAunC,EAAA0e,IACA91B,EAAAnwB,EAAAG,KACA6jE,IAAAhkE,EAAAukF,GACAp0D,EAAAzmB,UAAAymB,EAAA06C,gBAAA16C,EAAA26C,mBAAA,GACA9qE,EAAA0wC,iBAAA8zB,GAAAxkE,EAAAsqE,QAAA,QAAAxwE,GAAA6H,GACAA,IAAA,aAAAkd,KAAAld,EAAAyjF,gBACAplF,EAAA6wC,oBAAA2zB,GAAA1qE,GACAkG,EAAAsqE,QAAA,KACApG,GAAAlkE,EAAAukF,WAOAt1B,SACAg2B,QAAA,SAAAjlF,EAAAukF,GAEA,IAAA9E,GACA,QAGA,IAAAtkF,KAAAkqF,SACA,MAAAlqF,MAAAkqF,QAOA,IAAA3uF,GAAAsJ,EAAAo4E,WACAp4E,GAAAy8D,oBACAz8D,EAAAy8D,mBAAAziE,QAAA,SAAAuiE,GAAsDiH,GAAA9sE,EAAA6lE,KAEtD+G,GAAA5sE,EAAA6tF,GACA7tF,EAAAyJ,MAAA2jF,QAAA,OACA3oF,KAAA0wD,IAAAuN,YAAA1iE,EACA,IAAAgqD,GAAA2jB,GAAA3tE,EAEA,OADAyE,MAAA0wD,IAAA7rB,YAAAtpC,GACAyE,KAAAkqF,SAAA3kC,EAAA+kB,gBAiCA6f,IACAnB,cACAK,mBAMA3uB,IAAAr6B,OAAAs4B,eACA+B,GAAAr6B,OAAAo3B,iBACAiD,GAAAr6B,OAAAu9C,kBACAljB,GAAAr6B,OAAAm3B,mBACAkD,GAAAr6B,OAAA48B,oBAGA//D,EAAAw9D,GAAAr3D,QAAAwlD,WAAAggC,IACA3rF,EAAAw9D,GAAAr3D,QAAA82D,WAAAgwB,IAGAzvB,GAAAv8D,UAAAujF,UAAAj8B,GAAAq/B,GAAAliF,EAGA83D,GAAAv8D,UAAAqiF,OAAA,SACA37E,EACA4rD,GAGA,MADA5rD,MAAA4gD,GAAAtxC,GAAAtP,OAAAy+C,GACAkN,GAAAxwD,KAAA6E,EAAA4rD,IAKApC,WAAA,WACAhuB,GAAA4yB,UACAA,IACAA,GAAA90B,KAAA,OAAAu8B,KAkBC,EAaD,IAkMA0vB,IAlMAzZ,KAAAlrB,IARA,SAAA4kC,EAAAC,GACA,GAAAx1D,GAAAx3B,SAAAC,cAAA,MAEA,OADAu3B,GAAAooD,UAAA,WAAAmN,EAAA,MACAv1D,EAAAooD,UAAAv/E,QAAA2sF,GAAA,GAKA,cAIAta,GAAA,wBACAua,GAAA,yBAEAxa,GAAAr4B,EAAA,SAAAm4B,GACA,GAAA2a,GAAA3a,EAAA,GAAA1tD,QAAAooE,GAAA,QACAlgE,EAAAwlD,EAAA,GAAA1tD,QAAAooE,GAAA,OACA,WAAAtY,QAAAuY,EAAA,gBAAAngE,EAAA,OAmEAogE,IACA1S,YAAA,eACA5H,iBACAE,YAyCAqa,IACA3S,YAAA,eACA5H,cAAAG,GACAD,QAAAG,IAGAma,IACAF,GACAC,IAmBAE,IACAv2E,SACAke,QACAk+C,SAKAe,GAAArjD,EACA,6FAMAwjD,GAAAxjD,EACA,2DAKAklD,GAAAllD,EACA,mSASA08D,IACAvZ,YAAA,EACAryC,QAAA0rD,GACA9hC,WAAA+hC,GACA3W,YACAzC,cACA7Y,eACAgZ,oBACAla,iBACAD,mBACAugB,WAppPA,SAAA94C,GACA,MAAAA,GAAA//B,OAAA,SAAAy/B,EAAAzzB,GACA,MAAAyzB,GAAA7+B,OAAAoL,EAAA6sE,qBACGjqE,KAAA,MAipPH68E,KAOAG,IACAC,OAAA,SAAAta,GAGA,MAFA2Z,QAAA9sF,SAAAC,cAAA,OACA6sF,GAAAlN,UAAAzM,EACA2Z,GAAAhsB,cAgBA4sB,GAAA,kBACAC,GAAA,QACAC,IAEA,aAAA1vF,OAEA,aAAAA,OAEA,iBAAAA,QAEA23E,GAAA,GAAAlB,QACA,QAAA+Y,GAAAxvF,OACA,WAAAyvF,GAAAzvF,OAAA,WACA0vF,GAAAp9E,KAAA,YAKAq9E,GAAA,wBACAC,GAAA,OAAAD,GAAA,QAAAA,GAAA,IACAlY,GAAA,GAAAhB,QAAA,KAAAmZ,IACAlY,GAAA,aACAf,GAAA,GAAAF,QAAA,QAAAmZ,GAAA,UACAvY,GAAA,qBACAN,GAAA,QACAG,GAAA,QAEAa,IAAA,CACA,KAAApxD,QAAA,kBAAAjX,EAAAmE,GACAkkE,GAAA,KAAAlkE,GAIA,IAkSA2kE,IACAnE,GACAuE,GACAC,GACAC,GACAR,GACAI,GACAC,GAwjBA0D,GACAG,GAl2BApG,GAAAzjD,EAAA,4BACA6jD,MAEAjB,IACAsa,OAAO,IACPC,OAAO,IACPC,SAAS,IACTC,QAAQ,IACRC,QAAQ,MAER3a,GAAA,wBACAD,GAAA,4BAGA6a,GAAAv9D,EAAA,mBACAikD,GAAA,SAAAxnB,EAAA6lB,GAAqD,MAAA7lB,IAAA8gC,GAAA9gC,IAAA,OAAA6lB,EAAA,IAuQrD8G,GAAA,YACAN,GAAA,YACAV,GAAA,2BACAG,GAAA,6CAEAe,GAAA,SACAJ,GAAA,cACAD,GAAA,WAEAhB,GAAA1+B,EAAAozC,GAAAC,QAgiBArT,GAAA,eACAC,GAAA,UAoCAG,GAAApgC,EAAAygC,IA4HAY,GAAA,+CACAF,GAAA,+FAGAvgB,IACAqzB,IAAA,GACAC,IAAA,EACAjhB,MAAA,GACAkhB,MAAA,GACAC,GAAA,GACA9tE,KAAA,GACAG,MAAA,GACA4tE,KAAA,GACA/lD,QAAA,OAMAgmD,GAAA,SAAAprF,GAAqC,YAAAA,EAAA,iBAErCq4E,IACArjC,KAAA,4BACAq2C,QAAA,2BACAtuE,KAAAquE,GAAA,0CACAE,KAAAF,GAAA,mBACAx1E,MAAAw1E,GAAA,oBACAG,IAAAH,GAAA,kBACAI,KAAAJ,GAAA,mBACAhuE,KAAAguE,GAAA,6CACAK,OAAAL,GAAA,6CACA7tE,MAAA6tE,GAAA,8CA4GAM,IACA9/E,MACAhN,KAAA85E,GACAiT,MAAA3pF,GAKA82E,GAAA,SAAAr2E,GACArD,KAAAqD,UACArD,KAAAyT,KAAApQ,EAAAoQ,MAAA+uD,GACAxiE,KAAAo0E,WAAA3R,GAAAp/D,EAAA47B,QAAA,iBACAj/B,KAAAg7E,WAAAvY,GAAAp/D,EAAA47B,QAAA,WACAj/B,KAAA6oD,WAAA3rD,OAAoCovF,IAAAjpF,EAAAwlD,WACpC,IAAA4O,GAAAp0D,EAAAo0D,eAAAga,EACAzxE,MAAAg8E,eAAA,SAAAn3E,GAAuC,OAAA4yD,EAAA5yD,EAAA+lD,MACvC5qD,KAAAw6E,OAAA,EACAx6E,KAAAuD,oBAoqBAipF,IArPA,GAAAva,QAAA,uMAIAh9D,MAAA,KAAAnH,KAAA,kBAGA,GAAAmkE,QAAA,2BAEAh9D,MAAA,KAAAnH,KAAA,8CAqLA,SAAA2+E,GACA,gBAAA5B,GACA,QAAAjO,GACAnJ,EACApwE,GAEA,GAAAqpF,GAAArqF,OAAAsd,OAAAkrE,GACAnO,KACAiQ,IAKA,IAJAD,EAAAj5E,KAAA,SAAAqrB,EAAA8tD,IACAA,EAAAD,EAAAjQ,GAAAz9E,KAAA6/B,IAGAz7B,EAAA,CAEAA,EAAA47B,UACAytD,EAAAztD,SACA4rD,EAAA5rD,aAAAn/B,OAAAuD,EAAA47B,UAGA57B,EAAAwlD,aACA6jC,EAAA7jC,WAAA3rD,EACAmF,OAAAsd,OAAAkrE,EAAAhiC,YACAxlD,EAAAwlD,YAIA,QAAAvsD,KAAA+G,GACA,YAAA/G,GAAA,eAAAA,IACAowF,EAAApwF,GAAA+G,EAAA/G,IAKA,GAAAugF,GAAA4P,EAAAhZ,EAAAiZ,EAMA,OAFA7P,GAAAH,SACAG,EAAA8P,OACA9P,EAGA,OACAD,UACAiQ,mBAAAlQ,GAAAC,MAUA,SACAnJ,EACApwE,GAEA,GAAAo2E,GAAAz5D,GAAAyzD,EAAA5R,OAAAx+D,EACAu0E,IAAA6B,EAAAp2E,EACA,IAAAoiE,GAAA+T,GAAAC,EAAAp2E,EACA,QACAo2E,MACAn2E,OAAAmiE,EAAAniE,OACAC,gBAAAkiE,EAAAliE,oBAMAupF,GAAAN,GAAA3B,IACAgC,GAAAC,GAAAD,mBAIAE,GAAAr1C,EAAA,SAAA1mC,GACA,GAAAnM,GAAAsP,GAAAnD,EACA,OAAAnM,MAAAq4E,YAGA8P,GAAAtyB,GAAAv8D,UAAAqiF,MACA9lB,IAAAv8D,UAAAqiF,OAAA,SACA37E,EACA4rD,GAKA,IAHA5rD,KAAAsP,GAAAtP,MAGAvH,SAAAysF,MAAAllF,IAAAvH,SAAA2vF,gBAIA,MAAAjtF,KAGA,IAAAqD,GAAArD,KAAA+jC,QAEA,KAAA1gC,EAAAC,OAAA,CACA,GAAAmwE,GAAApwE,EAAAowE,QACA,IAAAA,EACA,mBAAAA,GACA,MAAAA,EAAA/7C,OAAA,KACA+7C,EAAAsZ,GAAAtZ,QASO,KAAAA,EAAArzE,SAMP,MAAAJ,KALAyzE,KAAAyJ,cAOKr4E,KACL4uE,EAAAsJ,GAAAl4E,GAEA,IAAA4uE,EAAA,CAMA,GAAAjuC,GAAAqnD,GAAApZ,GACA9C,wBACAd,WAAAxsE,EAAAwsE,WACA4E,SAAApxE,EAAAoxE,UACOz0E,MACPsD,EAAAkiC,EAAAliC,OACAC,EAAAiiC,EAAAjiC,eACAF,GAAAC,SACAD,EAAAE,mBASA,MAAAypF,IAAApxF,KAAAoE,KAAA6E,EAAA4rD,IAiBAiK,GAAAkiB,QAAAiQ,GAEA/uD,EAAA,O1BmvT6BliC,KAAKkiC,EAAqBz5B,EAAoB,MAIrE,SAAUhJ,EAAQC,G2BtknBxB,GAAA4xF,GAAA7xF,EAAAC,SAA6B2mB,QAAA,QAC7B,iBAAAkrE,WAAAD,I3B4knBM,SAAU7xF,EAAQC,EAAS+I,G4B5knBjChJ,EAAAC,SAAA+I,EAAA,eACA,MAAsE,IAAtEhC,OAAA69B,kBAAiC,KAAQz9B,IAAA,WAAgB,YAAamO,K5BolnBhE,SAAUvV,EAAQC,EAAS+I,G6BplnBjC,GAAAyD,GAAAzD,EAAA,EAEAA,GAAA,IAEAA,EAAA,KACAA,EAAA,IAEA,IAAA+oF,GAAA/oF,EAAA,KACA2d,EAAA3d,EAAA,EAEA2d,GAAAkC,eAAApc,EAAA/H,MAAAqtF,EAAA,QAGAprE,EAAAoC,eAAA,SAAA5W,GACAA,EAAA6/E,iBAAA,eAAAr2E,GACAA,EAAA6B,UACAy0E,UAAA,gCAKAjpF,EAAA,K7B6lnBM,SAAUhJ,EAAQC,EAAS+I,G8BxknBjC,QAAAkpF,GAAA9xF,EAAA+R,EAAAmJ,GACA,GAAA62E,GAAAhgF,EAAAmN,aAAA,WACA8yE,EAAAjgF,EAAAmN,aAAA,eAEA+yE,EAAAD,EAAAhrF,IAAA,eACAkrF,IAGAlvF,GAAAkY,EAAAxD,uBAAA,SAAAG,GA0CA,QAAAs6E,GAAAC,EAAAC,EAAAvlD,GACA,GAAAwlD,GAAAxlD,EAAAl0B,MAAArH,SAAA,cAAAygF,GAEAO,EAAAD,EAAAtrF,IAAA,OACA,IAAAurF,IACA,SAAAA,GACAH,GACAI,EAAAF,IAHA,CAQA,MAAAD,IACAA,EAAAC,EAAAtrF,IAAA,mBAGAsrF,EAAAF,EACAK,EACA3lD,EAAA4lD,EAAAV,EAAAjgF,EACAqgF,EAAAC,GAEAC,CAEA,IAAAK,GAAAL,EAAAtrF,IAAA,QACAnG,EAAA+xF,EAAA9lD,EAAAl0B,OACAi6E,EAAAR,GAAAM,GAAA,aAAA7lD,EAAApoC,KAGAouF,EAAA9yF,EAAA+yF,SAAAlyF,IACAA,MACAisC,OACAj1B,WACAy6E,mBACAD,iBACAQ,gBACAF,OACAK,UAAAR,EAAAF,GACAW,gBAEAC,GAAAryF,GAAAiyF,EACA9yF,EAAAmzF,gBAAAN,CAEA,IAAAO,GAAAC,EAAApB,EAAAnlD,EACA,UAAAsmD,EAAA,CACA,GAAAE,GAAApB,EAAAkB,KAAAlB,EAAAkB,IAAyFL,aACzFO,GAAAP,SAAAlyF,GAAAiyF,EACAQ,EAAAC,OAAAtB,EAAAmB,GAAAG,OACAT,EAAAQ,cAvFA,GAAAz7E,EAAA27E,mBAAA,CAIA,GAAAC,GAAAb,EAAA/6E,EAAAe,OACAs6E,EAAAlzF,EAAA0zF,iBAAAD,KACAzzF,GAAA2zF,YAAAF,GAAA57E,CAIA,IAAA+7E,GAAA/7E,EAAAe,MACA85E,EAAAkB,EAAAriF,SAAA,UAAAwgF,EAMA,IAJA/uF,EAAA6U,EAAAg8E,UAAAvvF,EAAA6tF,GAAA,SAIAt6E,EAAAi8E,gBACA/B,GAGAW,EAAA1rF,IAAA,QACA,CAGA,GAAA+sF,GAAA,SAAArB,EAAA1rF,IAAA,WACAgtF,EAAA,UAAAtB,EAAA1rF,IAAA,oBACAitF,EAAAp8E,EAAAi8E,eAAApB,EAAA1rF,IAAA,sBACA+sF,GAAAC,IACAhxF,EAAAixF,EAAAC,SAAA5vF,EACA6tF,GAAA6B,GAAA,QAAAD,IAGAC,GACAhxF,EAAAixF,EAAAE,UAAA7vF,EAAA6tF,EAAA,iBA2DA,QAAAM,GACA3lD,EAAA4lD,EAAAV,EAAAjgF,EAAAqgF,EAAAC,GAEA,GAAA+B,GAAA1B,EAAAnhF,SAAA,eACA8iF,IAEArxF,IAEA,gDACA,mEAEA,SAAAsxF,GACAD,EAAAC,GAAAjoF,EAAAvM,MAAAs0F,EAAAptF,IAAAstF,MAOAD,EAAA1B,KAAA,aAAA7lD,EAAApoC,QAAA2tF,EAIA,UAAA+B,EAAAptF,IAAA,UACAqtF,EAAA3vF,KAAA,OAEA,IAAA6vF,GAAAF,EAAAG,QAAAH,EAAAG,SAIA,IAFA,MAAAD,EAAAnjB,OAAAmjB,EAAAnjB,MAAA,GAEA,UAAAghB,IAEAmC,EAAAnjB,MAAA,GAGAihB,GAAA,CACA,GAAAoC,GAAAJ,EAAAK,UAAAN,EAAAptF,IAAA,aACAytF,IAAApoF,EAAA3K,SACA6yF,EAAAtjF,YAAAsjF,EAAAtjF,cACAwjF,EAAAxjF,WAKA,MAAA67B,GAAAl0B,MAAArH,SACA,cACA,GAAA+X,GAAA+qE,EAAArC,EAAAjgF,IAIA,QAAA4iF,GAAA30F,EAAA+R,GAEAA,EAAAuJ,WAAA,SAAAC,GAGA,GAAA1D,GAAA0D,EAAAgI,iBACAqxE,EAAAr5E,EAAAvU,IAAA,sBACA6tF,EAAAt5E,EAAAvU,IAAA,kBACA6Q,IACA,SAAA+8E,IACA,IAAAA,GACA,SAAAA,IACA,IAAAC,IACA,IAAAt5E,EAAAvU,IAAA,wBAKAhE,EAAAhD,EAAA0zF,iBAAAd,EAAA/6E,EAAAe,QAAA,SAAAk6E,GACA,GAAAhmD,GAAAgmD,EAAAhmD,IACAj1B,GAAAi9E,QAAAhoD,EAAAioD,OAAAjoD,IACAgmD,EAAAG,aAAAzvF,KAAA+X,GACA,MAAAu3E,EAAAkC,kBAAAlC,EAAAkC,gBAAA,GACAlC,EAAAkC,iBAAAz5E,EAAA6B,UAAAyO,YAIStnB,MAiBT,QAAA8uF,GAAApB,EAAAnlD,GAGA,OAFAmoD,GAAAnoD,EAAAl0B,MACAm8E,EAAAjoD,EAAAioD,IACA30F,EAAA,EAAuBA,EAAA6xF,EAAA3xF,OAAwBF,IAAA,CAC/C,GAAA80F,GAAAjD,EAAA7xF,MACA,IAAA+0F,EAAAD,EAAAH,EAAA,UAAAE,EAAA1/E,KACA4/E,EAAAD,EAAAH,EAAA,aAAAE,EAAAv4E,iBACAy4E,EAAAD,EAAAH,EAAA,YAAAE,EAAArrF,MAEA,MAAAxJ,IAKA,QAAA+0F,GAAAC,EAAAC,GACA,cAAAD,GACA/oF,EAAAhL,QAAA+zF,IAAA/oF,EAAAnK,QAAAkzF,EAAAC,IAAA,GACAD,IAAAC,EA4DA,QAAA7C,GAAAF,GACA,QAAAA,EAAAtrF,IAAA,eA7TA,GAAAqF,GAAAzD,EAAA,GACA0gB,EAAA1gB,EAAA,IACA5F,EAAAqJ,EAAArJ,KACAsB,EAAA+H,EAAA/H,MAEAolB,IAIAA,GAAA4rE,QAAA,SAAAvjF,EAAAmJ,GACA,GAAAlb,IAcA+yF,YACAI,gBAAA,EAKAO,oBACAC,eAQA,OALA7B,GAAA9xF,EAAA+R,EAAAmJ,GAGAlb,EAAAmzF,gBAAAwB,EAAA30F,EAAA+R,GAEA/R,GA4NA0pB,EAAA6rE,SAAA,SAAAN,GACA,GAAAnC,GAAAppE,EAAA8rE,YAAAP,EACA,IAAAnC,EAAA,CAIA,GAAAR,GAAAQ,EAAAR,iBACAh8D,EAAAw8D,EAAAhmD,KAAAxW,MACAzV,EAAAyxE,EAAAzxE,OACAvB,EAAAgzE,EAAAtrF,IAAA,UACA5E,EAAAkwF,EAAAtrF,IAAA,QAGA,OAAA5E,IACAA,EAAAk0B,EAAA/R,MAAAniB,GAGA,IAAA4wF,GAAAR,EAAAF,EAGA,OAAAhzE,IACAuB,EAAAvB,OAAA0zE,EAAA,cAGA,IAAA7mD,GAAA7V,EAAAyV,YAAA/mC,OACAmnC,GAAA,GAAAA,EAAA,IAAAA,EAAAspD,WAGA,MAAArzF,GAGAA,EAAA+pC,EAAA,MAGA/pC,EAAA+pC,EAAA,IAEA/pC,EAAA+pC,EAAA,KACA/pC,EAAA+pC,EAAA,IAGAtrB,EAAAze,QAEA4wF,IACAnyE,EAAAvB,OAAAwzE,EAAAhmD,KAAAxW,MAAAo/D,UAAA,iBAIAhsE,EAAA8rE,YAAA,SAAAP,GACA,GAAAvB,IAAAuB,EAAAljF,QAAAmN,aAAA,oBAAmFw0E,gBACnF,OAAAA,MAAAX,SAAAH,EAAAqC,KAGAvrE,EAAAisE,oBAAA,SAAAV,GACA,GAAAnC,GAAAppE,EAAA8rE,YAAAP,EACA,OAAAnC,MAAAR,iBAWA,IAAAM,GAAAlpE,EAAAkpE,QAAA,SAAAh6E,GACA,MAAAA,GAAAlU,KAAA,KAAAkU,EAAArD,GAGA3V,GAAAC,QAAA6pB,G9B4nnBM,SAAU9pB,EAAQC,EAAS+I,GAEjC,Y+Br8nBA,IAAAyD,GAAAzD,EAAA,GACAsmB,EAAAtmB,EAAA,IACAgtF,EAAAhtF,EAAA,IACA+O,EAAA/O,EAAA,IACAwX,EAAAxX,EAAA,IACAitF,EAAAjtF,EAAA,IACAsV,EAAAtV,EAAA,IACA6F,EAAA7F,EAAA,IAEAnD,EAAAmwF,EAAAnwF,IACAuB,EAAA4uF,EAAA5uF,IACAm1B,EAAAjN,EAAAiN,WACAN,EAAA3M,EAAA2M,UAEAxb,EAAAD,EAAA3e,QAEAiD,KAAA,kBAKAmhB,YAAA,EAGAtC,iBAAA,KAMAyd,cAAA,KAOA80D,mBAAA,KAKAC,sBAAA,yBAQA50D,WAAA,KAEAtrB,KAAA,SAAAgL,EAAA8Z,EAAA5oB,EAAAqvB,GAMA78B,KAAAshB,YAAAthB,KAAAmY,eAEAnY,KAAA+8B,qBAAAzgB,EAAA9O,EAEA,IAAAhP,GAAAwB,KAAAyxF,eAAAn1E,EAAA9O,EACA+F,UACAzL,EAAAnH,OAAAnC,EAAA,yCAMA0C,EAAAlB,KAAA,sBAAAxB,GAOAwB,KAAA0f,eAQAqd,qBAAA,SAAAzgB,EAAA9O,GACA,GAAAovB,GAAA58B,KAAA48B,WACAI,EAAAJ,EACA1yB,EAAA+yB,gBAAA3gB,KAEAxU,GAAAtL,MACA8f,EACA9O,EAAA2vB,WAAA16B,IAAAzC,KAAA8T,UAEAhM,EAAAtL,MAAA8f,EAAAtc,KAAAo9B,oBAIAhqB,EAAA0X,gBAAAxO,EAAA2zE,MAAA78E,EAAAiY,eAEArrB,KAAA0xF,kBAAAp1E,EAAA9d,MAEAo+B,GACA1yB,EAAAmzB,iBAAA/gB,EAAA0gB,EAAAJ,IAIAlG,YAAA,SAAAi7D,EAAAnkF,GACAmkF,EAAA7pF,EAAAtL,MAAAwD,KAAAsc,OAAAq1E,GAAA,GACA3xF,KAAA0xF,kBAAAC,EAAAnzF,KAEA,IAAAo+B,GAAA58B,KAAA48B,UACAA,IACA1yB,EAAAmzB,iBAAAr9B,KAAAsc,OAAAq1E,EAAA/0D,EAGA,IAAAp+B,GAAAwB,KAAAyxF,eAAAE,EAAAnkF,EAEAhP,KACA0C,EAAAlB,KAAA,OAAAxB,GACA0C,EAAAlB,KAAA,sBAAAxB,EAAAozF,kBAIAF,kBAAA,SAAAlzF,GAIA,GAAAA,EACA,OAAA3C,GAAA,EAA+BA,EAAA2C,EAAAzC,OAAiBF,IAChD2C,EAAA3C,IAAA2C,EAAA3C,GAAAo0F,OACA78E,EAAA0X,gBAAAtsB,EAAA3C,GAAAo0F,MAAA78E,EAAAiY,gBAUAomE,eAAA,aAMA54E,QAAA,SAAA2I,GACA,GAAAhjB,GAAAiE,EAAAzC,KAAA,OACA,cAAAwhB,EAAAhjB,IAAAqzF,cAAArwE,IAMAswE,QAAA,SAAAtzF,GACA0C,EAAAlB,KAAA,OAAAxB,IAOAuzF,WAAA,WACA,MAAAtvF,GAAAzC,KAAA,wBAeA6vB,kBAAA,SAAAD,GACA,MAAAxc,GAAAyc,kBAAA7vB,KAAA6Y,UAAA+W,IASAL,kBAAA,SAAAC,GACA,MAAApc,GAAAmc,kBAAAvvB,KAAA6Y,UAAA2W,IASAwiE,YAAA,WACA,GAAA1+E,GAAAtT,KAAAgf,gBACA,OAAA1L,MAAA0+E,aAAA1+E,EAAA0+E,eAWA7kE,cAAA,SAAAhmB,EAAA8qF,EAAAzwE,GAqCA,GAAAhjB,GAAAiE,EAAAzC,KAAA,QAEAnC,EAAAmC,KAAA+rB,YAAA5kB,GACA+qF,EAAApqF,EAAAhL,QAAAe,GAvCA,SAAAA,GAgBA,QAAAs0F,GAAAlsE,EAAAmsE,GACA,GAAA1mE,GAAAltB,EAAAmxB,iBAAAyiE,EAEA,IAAA1mE,IAAA,IAAAA,EAAAwE,UAAAmiE,QAAA,CAGA,GAAA1mE,GAAAD,EAAAvrB,KACAmyF,GAAAC,EAAA,MAAA7mE,EAAA8mE,aAAA9mE,EAAArmB,MAAA,UACA,YAAAsmB,EACA1F,EAAA,GACA,SAAA0F,EACAsmE,EAAA,GAAAtnE,EAAAgO,WAAA,sBAAA1S,GACAqR,EAAArR,GAEAqsE,IAAA72F,EAAAwD,KAAA24B,EAAA06D,KA7BA,GAAAC,GAAAzqF,EAAA5I,OAAArB,EAAA,SAAA00F,EAAAtsE,EAAAhP,GACA,GAAAyY,GAAAlxB,EAAAmxB,iBAAA1Y,EACA,OAAAs7E,IAAA7iE,IAAA,IAAAA,EAAA2iE,SAAA,MAAA3iE,EAAA8iE,aACiB,GAEjB/2F,KACAg3F,EAAAr/E,EAAA4c,kBAAAxxB,EAAA,UA0BA,OAxBAi0F,GAAA12F,OACA+L,EAAArJ,KAAAg0F,EAAA,SAAAL,GACAD,EAAA3zF,EAAAiE,IAAA2vF,EAAAjrF,GAAAirF,KAGAtqF,EAAArJ,KAAAZ,EAAAs0F,IAmBAI,EAAA,YAAA92F,EAAAqS,KAAAykF,EAAA,eAOA10F,GAAA+5B,EAAAN,EAAAz5B,IACAwH,EAAA7G,EAAA0tB,QAAA/kB,GAEA1C,EAAAjG,EAAA+gB,cAAApY,EAAA,QACAW,GAAAnL,SAAA8H,MAAAyb,aACAzb,KAAAyb,WAAA,QAAkDzb,OAElDA,KAAA,aAEA,IAAAiuF,GAAA/nE,EAAA+B,iBAAAjoB,GAEA+nB,EAAAxsB,KAAAqF,IASA,OAPA,QAAAmnB,IAEAA,EAAA,IAEAA,IACAoL,EAAApL,IAAAylE,EAAA,cACA,GACAA,EAMAS,EAAAlmE,EAAA0lE,EALA1lE,EAAAkmE,GACArtF,EACAuyB,EAAAvyB,GAAA,KAAA6sF,EACAA,IAQA9qF,mBAAA,WACA,GAAAuS,EAAAC,KACA,QAGA,IAAA+4E,GAAA3yF,KAAAuH,WAAA,YAMA,OALAorF,IACA3yF,KAAA6Y,UAAAyO,QAAAtnB,KAAAuH,WAAA,wBACAorF,GAAA,GAGAA,GAGAjzE,YAAA,WACAxe,EAAAlB,KAAA,OAAAyC,EAAAzC,KAAA,uBAAA4xF,iBAGAgB,oBAAA,SAAAvtF,EAAAq2E,GACA,GAAAluE,GAAAxN,KAAAwN,QAEA/I,EAAA6sF,EAAAsB,oBAAAh3F,KAAAoE,KAAAqF,EAAAq2E,EAIA,OAHAj3E,KACAA,EAAA+I,EAAAolF,oBAAAvtF,EAAAq2E,IAEAj3E,GAWAouF,mBAAA,KAQAC,mBAAA,MAGAhrF,GAAAxJ,MAAAwd,EAAA1I,EAAAyY,iBACA/jB,EAAAxJ,MAAAwd,EAAAw1E,GAEAj2F,EAAAC,QAAAwgB,G/B88nBM,SAAUzgB,EAAQC,EAAS+I,GgC7xoBjC,GAAAyD,GAAAzD,EAAA,EAEAhJ,GAAAC,QAAA,SAAA27B,GAEA,OAAAp7B,GAAA,EAAuBA,EAAAo7B,EAAAl7B,OAAuBF,IAC9Co7B,EAAAp7B,GAAA,KACAo7B,EAAAp7B,GAAA,GAAAo7B,EAAAp7B,GAAA,GAGA,iBAAAk3F,EAAAC,GAEA,OADAhuF,MACAnJ,EAAA,EAA2BA,EAAAo7B,EAAAl7B,OAAuBF,IAAA,CAClD,GAAAo3F,GAAAh8D,EAAAp7B,GAAA,EACA,MAAAk3F,GAAAjrF,EAAAnK,QAAAo1F,EAAAE,IAAA,GACAD,GAAAlrF,EAAAnK,QAAAq1F,EAAAC,GAAA,GADA,CAKA,GAAAhtE,GAAAjmB,KAAAuH,WAAA0rF,EACA,OAAAhtE,IACAjhB,EAAAiyB,EAAAp7B,GAAA,IAAAoqB,IAGA,MAAAjhB,MhCyyoBM,SAAU3J,EAAQC,EAAS+I,GiCxzoBjC,QAAAuiC,GAAAssD,GACAlzF,KAAAmzF,SAAAD,MAOAlzF,KAAAozF,SAAAn1E,UAOAje,KAAAqzF,UAAA,EAEArzF,KAAAsR,MAAAtR,KAAAsR,KAAAzR,MAAAG,KAAAJ,WAtBA,GAAA62B,GAAApyB,EAAA,IAyBAivF,EAAA1sD,EAAAzoC,SAOAm1F,GAAAtzE,MAAA,SAAAiG,GAKA,MAAAA,IAGAqtE,EAAAC,WAAA,SAAAluF,GACA,MAAArF,MAAAmzF,SAAA9tF,IAGAiuF,EAAAjgE,QAAA,SAAApN,GACA,GAAA2hB,GAAA5nC,KAAAozF,OACA,OAAAntE,IAAA2hB,EAAA,IAAA3hB,GAAA2hB,EAAA,IAQA0rD,EAAAr+D,UAAA,SAAAhP,GACA,GAAA2hB,GAAA5nC,KAAAozF,OACA,OAAAxrD,GAAA,KAAAA,EAAA,GACA,IAEA3hB,EAAA2hB,EAAA,KAAAA,EAAA,GAAAA,EAAA,KAQA0rD,EAAAvhE,MAAA,SAAA9L,GACA,GAAA2hB,GAAA5nC,KAAAozF,OACA,OAAAntE,IAAA2hB,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAOA0rD,EAAAE,YAAA,SAAAv4D,GACA,GAAA2M,GAAA5nC,KAAAozF,OACAn4D,GAAA,GAAA2M,EAAA,KAAAA,EAAA,GAAA3M,EAAA,IACAA,EAAA,GAAA2M,EAAA,KAAAA,EAAA,GAAA3M,EAAA,KAUAq4D,EAAAG,oBAAA,SAAAj1F,EAAAgyF,GACAxwF,KAAAwzF,YAAAh1F,EAAAk1F,cAAAlD,GAAA,KAOA8C,EAAA9rD,UAAA,WACA,MAAAxnC,MAAAozF,QAAA3yF,SAQA6yF,EAAAvrD,UAAA,SAAAsc,EAAAmlB,GACA,GAAAmqB,GAAA3zF,KAAAozF,OACA9vE,OAAA+gC,KACAsvC,EAAA,GAAAtvC,GAEA/gC,MAAAkmD,KACAmqB,EAAA,GAAAnqB,IAOA8pB,EAAAlqD,eAAA,WAGA,OAFAV,MACAW,EAAArpC,KAAAspC,WACAztC,EAAA,EAAuBA,EAAAwtC,EAAAttC,OAAkBF,IACzC6sC,EAAAzpC,KAAAe,KAAAypC,SAAAJ,EAAAxtC,IAEA,OAAA6sC,IAOA4qD,EAAAnC,QAAA,WACA,MAAAnxF,MAAA4zF,UAOAN,EAAA7rD,SAAA,SAAA0pD,GACAnxF,KAAA4zF,SAAAzC,GAIA16D,EAAAU,kBAAAyP,GACAnQ,EAAAsD,sBAAA6M,GACAhM,oBAAA,IAGAv/B,EAAAC,QAAAsrC,GjCy0oBQ,CACA,CACA,CACA,CAEF,SAAUvrC,EAAQC,GkCz+oBxB,GAAA4hB,GAAA,CAEA,oBAAAxB,UACAwB,EAAA5U,KAAAE,IAAAkT,OAAAlK,kBAAA,KAOA,IAAA6uB,IAOAwzD,UAAA,EAGAriF,iBAAA0L,EAEA7hB,GAAAC,QAAA+kC,GlCm/oBM,SAAUhlC,EAAQC,EAAS+I,GmCt/oBjC,GAAAyD,GAAAzD,EAAA,GACAyvF,EAAAzvF,EAAA,KACA+D,EAAA/D,EAAA,IAQAuE,EAAA,SAAAgB,GAEAA,QAEAkqF,EAAAl4F,KAAAoE,KAAA4J,EAEA,QAAAtN,KAAAsN,GACAA,EAAArN,eAAAD,KACA0D,KAAA1D,GAAAsN,EAAAtN,GAIA0D,MAAAwkC,aAEAxkC,KAAA+zF,UAAA,KAEA/zF,KAAAqxB,SAAA,EAGAzoB,GAAAzK,WAEAlC,YAAA2M,EAEA2G,SAAA,EAKApP,KAAA,QAQAsU,QAAA,EAKAo2C,SAAA,WACA,MAAA7qD,MAAAwkC,UAAA/jC,SAQAoxC,QAAA,SAAA56B,GACA,MAAAjX,MAAAwkC,UAAAvtB,IAQA+8E,YAAA,SAAA3uF,GAEA,OADAwlD,GAAA7qD,KAAAwkC,UACA3oC,EAAA,EAA2BA,EAAAgvD,EAAA9uD,OAAqBF,IAChD,GAAAgvD,EAAAhvD,GAAAwJ,SACA,MAAAwlD,GAAAhvD,IAQAo4F,WAAA,WACA,MAAAj0F,MAAAwkC,UAAAzoC,QAOAgI,IAAA,SAAAoC,GAQA,MAPAA,QAAAnG,MAAAmG,EAAAvC,SAAA5D,OAEAA,KAAAwkC,UAAAvlC,KAAAkH,GAEAnG,KAAAk0F,OAAA/tF,IAGAnG,MAQAm0F,UAAA,SAAAhuF,EAAA+3D,GACA,GAAA/3D,OAAAnG,MAAAmG,EAAAvC,SAAA5D,MACAk+D,KAAAt6D,SAAA5D,KAAA,CAEA,GAAA6qD,GAAA7qD,KAAAwkC,UACAvtB,EAAA4zC,EAAAltD,QAAAugE,EAEAjnD,IAAA,IACA4zC,EAAAvyC,OAAArB,EAAA,EAAA9Q,GACAnG,KAAAk0F,OAAA/tF,IAIA,MAAAnG,OAGAk0F,OAAA,SAAA/tF,GACAA,EAAAvC,QACAuC,EAAAvC,OAAAwU,OAAAjS,GAGAA,EAAAvC,OAAA5D,IAEA,IAAAyZ,GAAAzZ,KAAA+zF,UACA5iF,EAAAnR,KAAA0F,IACA+T,QAAAtT,EAAA4tF,YAEAt6E,EAAA26E,aAAAjuF,GAEAA,YAAAyC,IACAzC,EAAAkuF,qBAAA56E,IAIAtI,KAAAwiB,WAOAvb,OAAA,SAAAjS,GACA,GAAAgL,GAAAnR,KAAA0F,KACA+T,EAAAzZ,KAAA+zF,UACAlpC,EAAA7qD,KAAAwkC,UAEAvtB,EAAAnP,EAAAnK,QAAAktD,EAAA1kD,EACA,OAAA8Q,GAAA,EACAjX,MAEA6qD,EAAAvyC,OAAArB,EAAA,GAEA9Q,EAAAvC,OAAA,KAEA6V,IAEAA,EAAA66E,eAAAnuF,GAEAA,YAAAyC,IACAzC,EAAAouF,uBAAA96E,IAIAtI,KAAAwiB,UAEA3zB,OAMAw0F,UAAA,WACA,GAEAruF,GACAtK,EAHAgvD,EAAA7qD,KAAAwkC,UACA/qB,EAAAzZ,KAAA+zF,SAGA,KAAAl4F,EAAA,EAAuBA,EAAAgvD,EAAA9uD,OAAqBF,IAC5CsK,EAAA0kD,EAAAhvD,GACA4d,IACAA,EAAA66E,eAAAnuF,GACAA,YAAAyC,IACAzC,EAAAouF,uBAAA96E,IAGAtT,EAAAvC,OAAA,IAIA,OAFAinD,GAAA9uD,OAAA,EAEAiE,MAQAyxC,UAAA,SAAA9yC,EAAAC,GAEA,OADAisD,GAAA7qD,KAAAwkC,UACA3oC,EAAA,EAA2BA,EAAAgvD,EAAA9uD,OAAqBF,IAAA,CAChD,GAAAsK,GAAA0kD,EAAAhvD,EACA8C,GAAA/C,KAAAgD,EAAAuH,EAAAtK,GAEA,MAAAmE,OAQAkG,SAAA,SAAAvH,EAAAC,GACA,OAAA/C,GAAA,EAA2BA,EAAAmE,KAAAwkC,UAAAzoC,OAA2BF,IAAA,CACtD,GAAAsK,GAAAnG,KAAAwkC,UAAA3oC,EACA8C,GAAA/C,KAAAgD,EAAAuH,GAEA,UAAAA,EAAAhG,MACAgG,EAAAD,SAAAvH,EAAAC,GAGA,MAAAoB,OAGAq0F,qBAAA,SAAA56E,GACA,OAAA5d,GAAA,EAA2BA,EAAAmE,KAAAwkC,UAAAzoC,OAA2BF,IAAA,CACtD,GAAAsK,GAAAnG,KAAAwkC,UAAA3oC,EACA4d,GAAA26E,aAAAjuF,GACAA,YAAAyC,IACAzC,EAAAkuF,qBAAA56E,KAKA86E,uBAAA,SAAA96E,GACA,OAAA5d,GAAA,EAA2BA,EAAAmE,KAAAwkC,UAAAzoC,OAA2BF,IAAA,CACtD,GAAAsK,GAAAnG,KAAAwkC,UAAA3oC,EACA4d,GAAA66E,eAAAnuF,GACAA,YAAAyC,IACAzC,EAAAouF,uBAAA96E,KAKAga,MAAA,WAGA,MAFAzzB,MAAAqxB,SAAA,EACArxB,KAAA0F,MAAA1F,KAAA0F,KAAAiuB,UACA3zB,MAMAsK,gBAAA,SAAAmqF,GAOA,OALAxqF,GAAA,KACAyqF,EAAA,GAAAtsF,GAAA,SACAyiD,EAAA4pC,GAAAz0F,KAAAwkC,UACAmwD,KAEA94F,EAAA,EAA2BA,EAAAgvD,EAAA9uD,OAAqBF,IAAA,CAChD,GAAAsK,GAAA0kD,EAAAhvD,EACA,KAAAsK,EAAA0T,SAAA1T,EAAAyuF,UAAA,CAIA,GAAAC,GAAA1uF,EAAAmE,kBACAiE,EAAApI,EAAAmI,kBAAAqmF,EAQApmF,IACAmmF,EAAA1hE,KAAA6hE,GACAH,EAAA1pF,eAAAuD,GACAtE,KAAAyqF,EAAAn5F,QACA0O,EAAA+wB,MAAA05D,KAGAzqF,KAAA4qF,EAAAt5F,QACA0O,EAAA+wB,MAAA65D,KAGA,MAAA5qF,IAAAyqF,IAIA5sF,EAAAhK,SAAA8K,EAAAkrF,GAEAz4F,EAAAC,QAAAsN,GnCihpBM,SAAUvN,EAAQC,EAAS+I,GAEjC,YoCl0pBA,IAAAywF,GAAAzwF,EAAA,IACAy2B,EAAAz2B,EAAA,IACA0wF,EAAA1wF,EAAA,KACA+D,EAAA/D,EAAA,IACA6Y,EAAA7Y,EAAA,IAAAmN,iBAEAwjF,GACAj8D,EAAA,EACA6f,EAAA,EACArM,EAAA,EACA0oD,EAAA,EACA5oD,EAAA,EACA6oD,EAAA,EAEA38C,EAAA,GAaA7vC,KACAF,KACA2sF,KACAC,KACA3sF,EAAAH,KAAAI,IACAH,EAAAD,KAAAE,IACA6sF,EAAA/sF,KAAAklC,IACA8nD,EAAAhtF,KAAAolC,IACAZ,EAAAxkC,KAAA4rB,KACAqhE,EAAAjtF,KAAAsG,IAEA4mF,EAAA,mBAAAhhE,cAMApE,EAAA,SAAAqlE,GAEAz1F,KAAA01F,WAAAD,EAEAz1F,KAAA01F,YAKA11F,KAAAxB,SAGAwB,KAAAvC,KAAA,KAOA2yB,GAAAjyB,WAEAlC,YAAAm0B,EAEAulE,IAAA,EACAC,IAAA,EAEAC,IAAA,EACAC,IAAA,EAEAC,IAAA,EACAC,IAAA,EAEAC,KAAA,EAEAC,UAAA,KAEAC,YAAA,EAEAC,SAAA,EAEAC,SAAA,EAKApkE,SAAA,SAAAuJ,EAAAC,GACAz7B,KAAA+1F,IAAAR,EAAA,EAAAr4E,EAAAse,IAAA,EACAx7B,KAAAg2F,IAAAT,EAAA,EAAAr4E,EAAAue,IAAA,GAGAj+B,WAAA,WACA,MAAAwC,MAAAvC,MAOAy0B,UAAA,SAAAtB,GAmBA,MAjBA5wB,MAAAvC,KAAAmzB,EAEAA,KAAAsB,YAEAtB,IAAA5wB,KAAAkd,IAAA0T,EAAA1T,KAGAld,KAAA01F,YACA11F,KAAAi2F,KAAA,GAGAj2F,KAAAk2F,YACAl2F,KAAAk2F,UAAA,KAEAl2F,KAAAm2F,YAAA,GAGAn2F,MAQAs2F,OAAA,SAAA3rF,EAAAE,GAcA,MAbA7K,MAAAu2F,QAAAvB,EAAAj8D,EAAApuB,EAAAE,GACA7K,KAAAvC,MAAAuC,KAAAvC,KAAA64F,OAAA3rF,EAAAE,GAMA7K,KAAA61F,IAAAlrF,EACA3K,KAAA81F,IAAAjrF,EAEA7K,KAAA21F,IAAAhrF,EACA3K,KAAA41F,IAAA/qF,EAEA7K,MAQAw2F,OAAA,SAAA7rF,EAAAE,GACA,GAAA4rF,GAAAlB,EAAA5qF,EAAA3K,KAAA21F,KAAA31F,KAAA+1F,KACAR,EAAA1qF,EAAA7K,KAAA41F,KAAA51F,KAAAg2F,KAEAh2F,KAAAi2F,KAAA,CAaA,OAXAj2F,MAAAu2F,QAAAvB,EAAAp8C,EAAAjuC,EAAAE,GAEA7K,KAAAvC,MAAAg5F,IACAz2F,KAAA02F,aAAA12F,KAAA22F,cAAAhsF,EAAAE,GACA7K,KAAAvC,KAAA+4F,OAAA7rF,EAAAE,IAEA4rF,IACAz2F,KAAA21F,IAAAhrF,EACA3K,KAAA41F,IAAA/qF,GAGA7K,MAYA42F,cAAA,SAAAnrF,EAAAE,EAAAD,EAAAE,EAAA4iC,EAAAC,GAQA,MAPAzuC,MAAAu2F,QAAAvB,EAAAzoD,EAAA9gC,EAAAE,EAAAD,EAAAE,EAAA4iC,EAAAC,GACAzuC,KAAAvC,OACAuC,KAAA02F,aAAA12F,KAAA62F,gBAAAprF,EAAAE,EAAAD,EAAAE,EAAA4iC,EAAAC,GACAzuC,KAAAvC,KAAAm5F,cAAAnrF,EAAAE,EAAAD,EAAAE,EAAA4iC,EAAAC,IAEAzuC,KAAA21F,IAAAnnD,EACAxuC,KAAA41F,IAAAnnD,EACAzuC,MAUA82F,iBAAA,SAAArrF,EAAAE,EAAAD,EAAAE,GAQA,MAPA5L,MAAAu2F,QAAAvB,EAAAC,EAAAxpF,EAAAE,EAAAD,EAAAE,GACA5L,KAAAvC,OACAuC,KAAA02F,aAAA12F,KAAA+2F,mBAAAtrF,EAAAE,EAAAD,EAAAE,GACA5L,KAAAvC,KAAAq5F,iBAAArrF,EAAAE,EAAAD,EAAAE,IAEA5L,KAAA21F,IAAAjqF,EACA1L,KAAA41F,IAAAhqF,EACA5L,MAYAg3F,IAAA,SAAAtsF,EAAAE,EAAAssC,EAAA+/C,EAAAC,EAAAC,GAQA,MAPAn3F,MAAAu2F,QACAvB,EAAA3oD,EAAA3hC,EAAAE,EAAAssC,IAAA+/C,EAAAC,EAAAD,EAAA,EAAAE,EAAA,KAEAn3F,KAAAvC,MAAAuC,KAAAvC,KAAAu5F,IAAAtsF,EAAAE,EAAAssC,EAAA+/C,EAAAC,EAAAC,GAEAn3F,KAAA21F,IAAAN,EAAA6B,GAAAhgD,EAAAxsC,EACA1K,KAAA41F,IAAAN,EAAA4B,GAAAhgD,EAAAxsC,EACA1K,MAIAo3F,MAAA,SAAA3rF,EAAAE,EAAAD,EAAAE,EAAAyrF,GAIA,MAHAr3F,MAAAvC,MACAuC,KAAAvC,KAAA25F,MAAA3rF,EAAAE,EAAAD,EAAAE,EAAAyrF,GAEAr3F,MAIAiK,KAAA,SAAAU,EAAAE,EAAAooB,EAAA7uB,GAGA,MAFApE,MAAAvC,MAAAuC,KAAAvC,KAAAwM,KAAAU,EAAAE,EAAAooB,EAAA7uB,GACApE,KAAAu2F,QAAAvB,EAAAz8C,EAAA5tC,EAAAE,EAAAooB,EAAA7uB,GACApE,MAMAs3F,UAAA,WACAt3F,KAAAu2F,QAAAvB,EAAAE,EAEA,IAAAtkE,GAAA5wB,KAAAvC,KACA6wC,EAAAtuC,KAAA61F,IACAtnD,EAAAvuC,KAAA81F,GAQA,OAPAllE,KACA5wB,KAAA02F,cAAA12F,KAAA22F,cAAAroD,EAAAC,GACA3d,EAAA0mE,aAGAt3F,KAAA21F,IAAArnD,EACAtuC,KAAA41F,IAAArnD,EACAvuC,MASAiF,KAAA,SAAA2rB,GACAA,KAAA3rB,OACAjF,KAAAu3F,YAOAxyF,OAAA,SAAA6rB,GACAA,KAAA7rB,SACA/E,KAAAu3F,YAQAzlE,YAAA,SAAAH,GACA,GAAAA,YAAAnvB,OAAA,CACAxC,KAAAk2F,UAAAvkE,EAEA3xB,KAAAo2F,SAAA,CAGA,QADAoB,GAAA,EACA37F,EAAA,EAA+BA,EAAA81B,EAAA51B,OAAqBF,IACpD27F,GAAA7lE,EAAA91B,EAEAmE,MAAAq2F,SAAAmB,EAEA,MAAAx3F,OAQAmyB,kBAAA,SAAAslE,GAEA,MADAz3F,MAAAm2F,YAAAsB,EACAz3F,MAOAlE,IAAA,WACA,MAAAkE,MAAAi2F,MAMAnE,QAAA,SAAAtzF,GAEA,GAAA1C,GAAA0C,EAAAzC,MAEAiE,MAAAxB,MAAAwB,KAAAxB,KAAAzC,QAAAD,IAAA05F,IACAx1F,KAAAxB,KAAA,GAAAg2B,cAAA14B,GAGA,QAAAD,GAAA,EAA2BA,EAAAC,EAASD,IACpCmE,KAAAxB,KAAA3C,GAAA2C,EAAA3C,EAGAmE,MAAAi2F,KAAAn6F,GAOA47F,WAAA,SAAAvtF,GACAA,YAAA3H,SACA2H,MAKA,QAHArO,GAAAqO,EAAApO,OACA47F,EAAA,EACAF,EAAAz3F,KAAAi2F,KACAp6F,EAAA,EAA2BA,EAAAC,EAASD,IACpC87F,GAAAxtF,EAAAtO,GAAAC,KAEA05F,IAAAx1F,KAAAxB,eAAAg2B,gBACAx0B,KAAAxB,KAAA,GAAAg2B,cAAAijE,EAAAE,GAEA,QAAA97F,GAAA,EAA2BA,EAAAC,EAASD,IAEpC,OADA+7F,GAAAztF,EAAAtO,GAAA2C,KACA+5B,EAAA,EAA+BA,EAAAq/D,EAAA77F,OAA2Bw8B,IAC1Dv4B,KAAAxB,KAAAi5F,KAAAG,EAAAr/D,EAGAv4B,MAAAi2F,KAAAwB,GAOAlB,QAAA,SAAAsB,GACA,GAAA73F,KAAA01F,UAAA,CAIA,GAAAl3F,GAAAwB,KAAAxB,IACAwB,MAAAi2F,KAAAr2F,UAAA7D,OAAAyC,EAAAzC,SAGAiE,KAAA83F,cACAt5F,EAAAwB,KAAAxB,KAEA,QAAA3C,GAAA,EAA2BA,EAAA+D,UAAA7D,OAAsBF,IACjD2C,EAAAwB,KAAAi2F,QAAAr2F,UAAA/D,EAGAmE,MAAA+3F,SAAAF,IAGAC,YAAA,WAEA,KAAA93F,KAAAxB,eAAAgE,QAAA,CAEA,OADAw1F,MACAn8F,EAAA,EAA+BA,EAAAmE,KAAAi2F,KAAep6F,IAC9Cm8F,EAAAn8F,GAAAmE,KAAAxB,KAAA3C,EAEAmE,MAAAxB,KAAAw5F,IASAtB,WAAA,WACA,MAAA12F,MAAAk2F,WAGAS,cAAA,SAAAlrF,EAAAE,GACA,GAYAssF,GAEAhhF,EAdAihF,EAAAl4F,KAAAq2F,SACAoB,EAAAz3F,KAAAm2F,YACAxkE,EAAA3xB,KAAAk2F,UACAtlE,EAAA5wB,KAAAvC,KAEA6wC,EAAAtuC,KAAA21F,IACApnD,EAAAvuC,KAAA41F,IACAxiD,EAAA3nC,EAAA6iC,EACA+E,EAAA1nC,EAAA4iC,EACA9Y,EAAAqX,EAAAsG,IAAAC,KACA1oC,EAAA2jC,EACAzjC,EAAA0jC,EAEA4pD,EAAAxmE,EAAA51B,MAaA,KAXAq3C,GAAA3d,EACA4d,GAAA5d,EAEAgiE,EAAA,IAEAA,EAAAS,EAAAT,GAEAA,GAAAS,EACAvtF,GAAA8sF,EAAArkD,EACAvoC,GAAA4sF,EAAApkD,EAEAD,EAAA,GAAAzoC,GAAAc,GAAA2nC,EAAA,GAAAzoC,GAAAc,GACA,GAAA2nC,IAAAC,EAAA,GAAAxoC,GAAAc,GAAA0nC,EAAA,GAAAxoC,GAAAc,IACAsL,EAAAjX,KAAAo2F,SACA6B,EAAAtmE,EAAA1a,GACAtM,GAAAyoC,EAAA6kD,EACAptF,GAAAwoC,EAAA4kD,EACAj4F,KAAAo2F,UAAAn/E,EAAA,GAAAkhF,EAEA/kD,EAAA,GAAAzoC,EAAA2jC,GAAA8E,EAAA,GAAAzoC,EAAA2jC,GAAA+E,EAAA,GAAAxoC,EAAA0jC,GAAA8E,EAAA,GAAAxoC,EAAA0jC,GAGA3d,EAAA3Z,EAAA,qBACAm8B,GAAA,EAAA3qC,EAAAkC,EAAAc,GAAAlD,EAAAoC,EAAAc,GACA4nC,GAAA,EAAA5qC,EAAAoC,EAAAc,GAAApD,EAAAsC,EAAAc,GAIAynC,GAAAzoC,EAAAc,EACA4nC,EAAAxoC,EAAAc,EACA3L,KAAAm2F,aAAArpD,EAAAsG,IAAAC,MAIAwjD,gBAAA,SAAAprF,EAAAE,EAAAD,EAAAE,EAAA4iC,EAAAC,GACA,GAOAlZ,GACA6d,EACAC,EAMA1oC,EACAE,EAhBAqtF,EAAAl4F,KAAAq2F,SACAoB,EAAAz3F,KAAAm2F,YACAxkE,EAAA3xB,KAAAk2F,UACAtlE,EAAA5wB,KAAAvC,KAEA6wC,EAAAtuC,KAAA21F,IACApnD,EAAAvuC,KAAA41F,IAIAjqD,EAAAmpD,EAAAnpD,QACAysD,EAAA,EACAnhF,EAAAjX,KAAAo2F,SACA+B,EAAAxmE,EAAA51B,OAKAs8F,EAAA,CAQA,KANAZ,EAAA,IAEAA,EAAAS,EAAAT,GAEAA,GAAAS,EAEA3iE,EAAA,EAAuBA,EAAA,EAAOA,GAAA,GAC9B6d,EAAAzH,EAAA2C,EAAA7iC,EAAAC,EAAA8iC,EAAAjZ,EAAA,IACAoW,EAAA2C,EAAA7iC,EAAAC,EAAA8iC,EAAAjZ,GACA8d,EAAA1H,EAAA4C,EAAA5iC,EAAAC,EAAA6iC,EAAAlZ,EAAA,IACAoW,EAAA4C,EAAA5iC,EAAAC,EAAA6iC,EAAAlZ,GACA6iE,GAAAtrD,EAAAsG,IAAAC,IAIA,MAAkBp8B,EAAAkhF,MAClBE,GAAA1mE,EAAA1a,IACAwgF,GAF+BxgF,KAQ/B,IAFAse,GAAA8iE,EAAAZ,GAAAW,EAEA7iE,GAAA,GAEA5qB,EAAAghC,EAAA2C,EAAA7iC,EAAAC,EAAA8iC,EAAAjZ,GACA1qB,EAAA8gC,EAAA4C,EAAA5iC,EAAAC,EAAA6iC,EAAAlZ,GAIAte,EAAA,EAAA2Z,EAAA0lE,OAAA3rF,EAAAE,GACA+lB,EAAA4lE,OAAA7rF,EAAAE,GAEA0qB,GAAA5D,EAAA1a,GAAAmhF,EAEAnhF,KAAA,GAAAkhF,CAIAlhF,GAAA,MAAA2Z,EAAA4lE,OAAAhoD,EAAAC,GACA2E,EAAA5E,EAAA7jC,EACA0oC,EAAA5E,EAAA5jC,EACA7K,KAAAm2F,aAAArpD,EAAAsG,IAAAC,MAGA0jD,mBAAA,SAAAtrF,EAAAE,EAAAD,EAAAE,GAEA,GAAA4iC,GAAA9iC,EACA+iC,EAAA7iC,CACAF,MAAA,EAAAD,GAAA,EACAG,KAAA,EAAAD,GAAA,EACAF,GAAAzL,KAAA21F,IAAA,EAAAlqF,GAAA,EACAE,GAAA3L,KAAA41F,IAAA,EAAAjqF,GAAA,EAEA3L,KAAA62F,gBAAAprF,EAAAE,EAAAD,EAAAE,EAAA4iC,EAAAC,IAOA8oD,SAAA,WACA,GAAA/4F,GAAAwB,KAAAxB,IACAA,aAAAgE,SACAhE,EAAAzC,OAAAiE,KAAAi2F,KACAT,IACAx1F,KAAAxB,KAAA,GAAAg2B,cAAAh2B,MAQA8L,gBAAA,WACA5B,EAAA,GAAAA,EAAA,GAAAysF,EAAA,GAAAA,EAAA,GAAAvsE,OAAA0vE,UACA9vF,EAAA,GAAAA,EAAA,GAAA4sF,EAAA,GAAAA,EAAA,IAAAxsE,OAAA0vE,SAQA,QANA95F,GAAAwB,KAAAxB,KACA+5F,EAAA,EACAC,EAAA,EACAlqD,EAAA,EACAC,EAAA,EAEA1yC,EAAA,EAA2BA,EAAA2C,EAAAzC,QAAiB,CAC5C,GAAA87F,GAAAr5F,EAAA3C,IAcA,QAZA,GAAAA,IAKA08F,EAAA/5F,EAAA3C,GACA28F,EAAAh6F,EAAA3C,EAAA,GAEAyyC,EAAAiqD,EACAhqD,EAAAiqD,GAGAX,GACA,IAAA7C,GAAAj8D,EAGAuV,EAAA9vC,EAAA3C,KACA0yC,EAAA/vC,EAAA3C,KACA08F,EAAAjqD,EACAkqD,EAAAjqD,EACA4mD,EAAA,GAAA7mD,EACA6mD,EAAA,GAAA5mD,EACA6mD,EAAA,GAAA9mD,EACA8mD,EAAA,GAAA7mD,CACA,MACA,KAAAymD,GAAAp8C,EACAm8C,EAAA0D,SAAAF,EAAAC,EAAAh6F,EAAA3C,GAAA2C,EAAA3C,EAAA,GAAAs5F,EAAAC,GACAmD,EAAA/5F,EAAA3C,KACA28F,EAAAh6F,EAAA3C,IACA,MACA,KAAAm5F,GAAAzoD,EACAwoD,EAAA2D,UACAH,EAAAC,EAAAh6F,EAAA3C,KAAA2C,EAAA3C,KAAA2C,EAAA3C,KAAA2C,EAAA3C,KAAA2C,EAAA3C,GAAA2C,EAAA3C,EAAA,GACAs5F,EAAAC,GAEAmD,EAAA/5F,EAAA3C,KACA28F,EAAAh6F,EAAA3C,IACA,MACA,KAAAm5F,GAAAC,EACAF,EAAA4D,cACAJ,EAAAC,EAAAh6F,EAAA3C,KAAA2C,EAAA3C,KAAA2C,EAAA3C,GAAA2C,EAAA3C,EAAA,GACAs5F,EAAAC,GAEAmD,EAAA/5F,EAAA3C,KACA28F,EAAAh6F,EAAA3C,IACA,MACA,KAAAm5F,GAAA3oD,EAEA,GAAA3hC,GAAAlM,EAAA3C,KACA+O,EAAApM,EAAA3C,KACA+8F,EAAAp6F,EAAA3C,KACAg9F,EAAAr6F,EAAA3C,KACAo7F,EAAAz4F,EAAA3C,KACAq7F,EAAA14F,EAAA3C,KAAAo7F,EAGAE,GADA34F,EAAA3C,KACA,EAAA2C,EAAA3C,KAEA,IAAAA,IAGAyyC,EAAA+mD,EAAA4B,GAAA2B,EAAAluF,EACA6jC,EAAA+mD,EAAA2B,GAAA4B,EAAAjuF,GAGAmqF,EAAA+D,QACApuF,EAAAE,EAAAguF,EAAAC,EAAA5B,EAAAC,EACAC,EAAAhC,EAAAC,GAGAmD,EAAAlD,EAAA6B,GAAA0B,EAAAluF,EACA8tF,EAAAlD,EAAA4B,GAAA2B,EAAAjuF,CACA,MACA,KAAAoqF,GAAAz8C,EACAjK,EAAAiqD,EAAA/5F,EAAA3C,KACA0yC,EAAAiqD,EAAAh6F,EAAA3C,IACA,IAAA2O,GAAAhM,EAAA3C,KACA4O,EAAAjM,EAAA3C,IAEAk5F,GAAA0D,SAAAnqD,EAAAC,EAAAD,EAAA9jC,EAAA+jC,EAAA9jC,EAAA0qF,EAAAC,EACA,MACA,KAAAJ,GAAAE,EACAqD,EAAAjqD,EACAkqD,EAAAjqD,EAKAzT,EAAApyB,QAAAysF,GACAr6D,EAAAtyB,QAAA4sF,GAQA,MAJA,KAAAv5F,IACA6M,EAAA,GAAAA,EAAA,GAAAF,EAAA,GAAAA,EAAA,MAGA,GAAAJ,GACAM,EAAA,GAAAA,EAAA,GAAAF,EAAA,GAAAE,EAAA,GAAAF,EAAA,GAAAE,EAAA,KASA2pB,YAAA,SAAAzB,GAQA,OANA0d,GAAAC,EACAgqD,EAAAC,EACA7tF,EAAAE,EAHAqqB,EAAAl1B,KAAAxB,KAIAu6F,EAAA/4F,KAAA+1F,IACAiD,EAAAh5F,KAAAg2F,IACAl6F,EAAAkE,KAAAi2F,KACAp6F,EAAA,EAA2BA,EAAAC,GAAS,CACpC,GAAA+7F,GAAA3iE,EAAAr5B,IAaA,QAXA,GAAAA,IAKA08F,EAAArjE,EAAAr5B,GACA28F,EAAAtjE,EAAAr5B,EAAA,GAEAyyC,EAAAiqD,EACAhqD,EAAAiqD,GAEAX,GACA,IAAA7C,GAAAj8D,EACAuV,EAAAiqD,EAAArjE,EAAAr5B,KACA0yC,EAAAiqD,EAAAtjE,EAAAr5B,KACA+0B,EAAA0lE,OAAAiC,EAAAC,EACA,MACA,KAAAxD,GAAAp8C,EACAjuC,EAAAuqB,EAAAr5B,KACAgP,EAAAqqB,EAAAr5B,MAEA05F,EAAA5qF,EAAA4tF,GAAAQ,GAAAxD,EAAA1qF,EAAA2tF,GAAAQ,GAAAn9F,IAAAC,EAAA,KACA80B,EAAA4lE,OAAA7rF,EAAAE,GACA0tF,EAAA5tF,EACA6tF,EAAA3tF,EAEA,MACA,KAAAmqF,GAAAzoD,EACA3b,EAAAgmE,cACA1hE,EAAAr5B,KAAAq5B,EAAAr5B,KAAAq5B,EAAAr5B,KAAAq5B,EAAAr5B,KAAAq5B,EAAAr5B,KAAAq5B,EAAAr5B,MAEA08F,EAAArjE,EAAAr5B,EAAA,GACA28F,EAAAtjE,EAAAr5B,EAAA,EACA,MACA,KAAAm5F,GAAAC,EACArkE,EAAAkmE,iBAAA5hE,EAAAr5B,KAAAq5B,EAAAr5B,KAAAq5B,EAAAr5B,KAAAq5B,EAAAr5B,MACA08F,EAAArjE,EAAAr5B,EAAA,GACA28F,EAAAtjE,EAAAr5B,EAAA,EACA,MACA,KAAAm5F,GAAA3oD,EACA,GAAA3hC,GAAAwqB,EAAAr5B,KACA+O,EAAAsqB,EAAAr5B,KACA+8F,EAAA1jE,EAAAr5B,KACAg9F,EAAA3jE,EAAAr5B,KACAuxC,EAAAlY,EAAAr5B,KACAo9F,EAAA/jE,EAAAr5B,KACAq9F,EAAAhkE,EAAAr5B,KACAs9F,EAAAjkE,EAAAr5B,KACAq7C,EAAA0hD,EAAAC,EAAAD,EAAAC,EACAO,EAAAR,EAAAC,EAAA,EAAAD,EAAAC,EACAQ,EAAAT,EAAAC,IAAAD,EAAA,EACAU,EAAAhxF,KAAAsG,IAAAgqF,EAAAC,GAAA,KACA3B,EAAA9pD,EAAA6rD,CACAK,IACA1oE,EAAA8K,UAAAhxB,EAAAE,GACAgmB,EAAAwf,OAAA8oD,GACAtoE,EAAAmB,MAAAqnE,EAAAC,GACAzoE,EAAAomE,IAAA,IAAA9/C,EAAA9J,EAAA8pD,EAAA,EAAAiC,GACAvoE,EAAAmB,MAAA,EAAAqnE,EAAA,EAAAC,GACAzoE,EAAAwf,QAAA8oD,GACAtoE,EAAA8K,WAAAhxB,GAAAE,IAGAgmB,EAAAomE,IAAAtsF,EAAAE,EAAAssC,EAAA9J,EAAA8pD,EAAA,EAAAiC,GAGA,GAAAt9F,IAGAyyC,EAAA+mD,EAAAjoD,GAAAwrD,EAAAluF,EACA6jC,EAAA+mD,EAAAloD,GAAAyrD,EAAAjuF,GAEA2tF,EAAAlD,EAAA6B,GAAA0B,EAAAluF,EACA8tF,EAAAlD,EAAA4B,GAAA2B,EAAAjuF,CACA,MACA,KAAAoqF,GAAAz8C,EACAjK,EAAAiqD,EAAArjE,EAAAr5B,GACA0yC,EAAAiqD,EAAAtjE,EAAAr5B,EAAA,GACA+0B,EAAA3mB,KAAAirB,EAAAr5B,KAAAq5B,EAAAr5B,KAAAq5B,EAAAr5B,KAAAq5B,EAAAr5B,KACA,MACA,KAAAm5F,GAAAE,EACAtkE,EAAA0mE,YACAiB,EAAAjqD,EACAkqD,EAAAjqD,MAMAne,EAAA4kE,MAEA35F,EAAAC,QAAA80B,GpCo1pBM,SAAU/0B,EAAQC,GqCvmrBxBD,EAAAC,QAAA,SAAAkuB,GACA,IACA,QAAAA,IACG,MAAAhjB,GACH,YrC+mrBM,SAAUnL,EAAQC,GsClnrBxB,GAAA0U,GAAA3U,EAAAC,QAAA,mBAAAogB,gBAAApT,WACAoT,OAAA,mBAAAiC,YAAArV,WAAAqV,KAAAjd,SAAA,gBACA,iBAAA64F,WAAAvpF,ItCynrBM,SAAU3U,EAAQC,GuC5nrBxBD,EAAAC,QAAA,SAAAk+F,GACA,sBAAAA,GAAA,OAAAA,EAAA,kBAAAA,KvCmorBM,SAAUn+F,EAAQC,EAAS+I,GAEjC,YwC/nrBA,SAAA6N,KAEAlS,KAAAy5F,sBANA,GAAA3xF,GAAAzD,EAAA,GAEAq1F,IAOAxnF,GAAA/T,WAEAlC,YAAAiW,EAEAyN,OAAA,SAAAnS,EAAAmJ,GACA,GAAAgjF,KACA7xF,GAAArJ,KAAAi7F,EAAA,SAAAE,EAAAz5F,GACA,GAAAmd,GAAAs8E,EAAAj6E,OAAAnS,EAAAmJ,EACAgjF,KAAA75F,OAAAwd,SAGAtd,KAAAy5F,mBAAAE,GAGA3kF,OAAA,SAAAxH,EAAAmJ,GACA7O,EAAArJ,KAAAuB,KAAAy5F,mBAAA,SAAAnmF,GAEAA,EAAA0B,QAAA1B,EAAA0B,OAAAxH,EAAAmJ,MAIAxD,qBAAA,WACA,MAAAnT,MAAAy5F,mBAAAh5F,UAIAyR,EAAA2R,SAAA,SAAA1jB,EAAA05F,GACAH,EAAAv5F,GAAA05F,GAGA3nF,EAAAzP,IAAA,SAAAtC,GACA,MAAAu5F,GAAAv5F,IAGA9E,EAAAC,QAAA4W,GxC4orBM,SAAU7W,EAAQC,EAAS+I,GAEjC,YyCjrrBA,SAAAy1F,GAAAt7F,GAEA,IADA,GAAA3C,GAAA,EACAA,EAAA2C,EAAAzC,QAAA,MAAAyC,EAAA3C,IACAA,GAEA,OAAA2C,GAAA3C,GAEA,QAAAk+F,GAAAv7F,GACA,GAAAw7F,GAAAF,EAAAt7F,EACA,cAAAw7F,IACAlyF,EAAAhL,QAAAwuB,EAAA0uE,IAMA,QAAAC,GAAAz7F,EAAAwY,EAAAxJ,GAIA,GAFAhP,QAEA+U,UACAzL,EAAAhL,QAAA0B,GACA,SAAAsC,OAAA,gBAIA,IAAAo5F,GAAAljF,EAAAvU,IAAA,oBACAoiB,EAAAs1E,EAAAD,GACAE,EAAAx2E,EAAAnhB,IAAAy3F,GACAG,GACAC,UAAAtjF,EAAAvU,IAAA,UACA83F,QAAAvjF,EAAAvU,IAAA,eAIA+rF,EAAA3pE,KAAArmB,EAAAwY,EAAAxJ,EAAA6sF,GACAp2E,EAAAuqE,KAAAvqE,UACAA,KAEAA,EAAAm2E,IACAA,EAAAp2E,kBACAo2E,EAAAp2E,oBACAo2E,EAAAn2E,WAAAxjB,WACA,SACAwjB,EAAAu2E,EAAAv2E,EAAAzlB,EAAA67F,GAGA,IAAAI,GAAAjM,IAAAiM,eAAA,EAEAn9E,EAAA,GAAAwH,GAAAb,EAAAjN,GAEA0jF,EAAAC,EAAAnM,EAAAhwF,GAEAo8F,KACAC,EAAAJ,GAAA,GAAAV,EAAAv7F,GACA,SAAA2tB,EAAA2D,EAAA3oB,EAAA0lB,GAOA,MALAzZ,GAAAoY,iBAAAW,KACA7O,EAAAw9E,eAAA,GAIAjuE,IAAA4tE,EACAtzF,EACAskB,EAAAH,EAAAa,GAAAlI,EAAA4I,KAEA,SAAAV,EAAA2D,EAAA3oB,EAAA0lB,GACA,GAAAhvB,GAAAytB,EAAAa,GACAlG,EAAAwF,EAAA5tB,KAAAgvB,GAAA5I,EAAA4I,GAEAzZ,GAAAoY,iBAAAW,KACA7O,EAAAw9E,eAAA,EAGA,IAAAC,GAAAvM,KAAAuM,kBAcA,OAbAA,MAAAjrE,IAEA,gBAAA7J,KAEA20E,EAAA9qE,GAAA8qE,EAAA9qE,IACAirE,EAAAjrE,GAAAuY,iBACApiB,EAAAne,EAAAnK,QAAAi9F,EAAA9qE,GAAA7J,IACA,IAAA3C,MAAA2C,KAEAA,OAIAA,EAMA,OAHA3I,GAAAw9E,eAAA,EACAx9E,EAAA02C,SAAAx1D,EAAAk8F,EAAAG,GAEAv9E,EAGA,QAAA09E,GAAA5yD,GACA,mBAAAA,GAAA,SAAAA,EAGA,QAAA6yD,GAAA7yD,GACA,mBAAAA,EACA,UACA,SAAAA,EACA,OACA,QA+KA,QAAAuyD,GAAAl/F,EAAA+C,GACA,GAGA08F,GAHAR,KAEAS,EAAA1/F,KAAAwoB,WAAAxoB,EAAAg/F,cAMA,IAJAU,IACAD,EAAAz/F,EAAAs/F,mBAAAI,EAAA91F,OAGA61F,EAAA,CAEA,GAAAN,GAAAM,EAAA7yD,eACA,IAAAuyD,EAAA,CACA,GAAAQ,GAAA58F,EAAAzC,MAKA,IAAA+L,EAAAhL,QAAA0B,EAAA,KAAAA,EAAA,GAAAzC,OAAA,GACA2+F,IACA,QAAA7+F,GAAA,EAAmCA,EAAAu/F,EAAav/F,IAChD6+F,EAAA7+F,GAAA++F,EAAAp8F,EAAA3C,GAAAJ,EAAAg/F,eAAA,QAIAC,GAAAE,EAAAn6F,MAAA,IAKA,MAAAi6F,GA/TA,GAAA51E,GAAAzgB,EAAA,IACAm2F,EAAAn2F,EAAA,IACAyD,EAAAzD,EAAA,GACA+O,EAAA/O,EAAA,IACAuf,EAAAvf,EAAA,IACAinB,EAAAlY,EAAAkY,iBACAG,EAAArY,EAAAqY,gBAkHA0uE,GAEAkB,YAAA,SAAA78F,EAAAwY,EAAAxJ,EAAA6sF,GAEA,GAAAiB,GAAAxzF,EAAA/I,KAAA,0BAAAsG,GACA,MAAAmI,GAAA8hB,iBACAzb,SAAAxO,EACAiP,MAAA0C,EAAAvU,IAAA4C,EAAA,SACA2L,GAAAgG,EAAAvU,IAAA4C,EAAA,QACiB,KAEjBk2F,EAAAD,EAAA,GACAE,EAAAF,EAAA,EAEA,IAAA/nF,QAAA,CACA,IAAAgoF,EACA,SAAAz6F,OAAA,UAAAgH,EAAAvH,SACAyW,EAAAvU,IAAA,cACAuU,EAAAvU,IAAA,WACA,GACA,cAEA,KAAA+4F,EACA,SAAA16F,OAAA,UAAAgH,EAAAvH,SACAyW,EAAAvU,IAAA,cACAuU,EAAAvU,IAAA,WACA,GACA,eAIA,GAAAg5F,GAAAF,EAAA94F,IAAA,QACAi5F,EAAAF,EAAA/4F,IAAA,QAEAwhB,IAEA5e,KAAA,IACAlF,KAAA86F,EAAAQ,GACAE,UAAAX,EAAAS,KAGAp2F,KAAA,IAEAlF,KAAA86F,EAAAS,GACAC,UAAAX,EAAAU,KAIAE,EAAA,aAAAH,EACAI,EAAA,aAAAH,CAEAz3E,GAAAu2E,EAAAv2E,EAAAzlB,EAAA67F,EAEA,IAAAU,KAOA,OANAa,KACAb,EAAApwF,EAAA4wF,GAEAM,IACAd,EAAAlwF,EAAA2wF,IAGAv3E,aACAw2E,cAAAmB,EAAA,EAAAC,EAAA,KACAd,uBAIAe,WAAA,SAAAt9F,EAAAwY,EAAAxJ,EAAA6sF,GAEA,GAAA0B,GAAAvuF,EAAA8hB,iBACAzb,SAAA,aACAS,MAAA0C,EAAAvU,IAAA,mBACAuO,GAAAgG,EAAAvU,IAAA,kBACa,EAEb,IAAA8Q,UACAwoF,EACA,SAAAj7F,OAAA,kCAIA,IAAAk7F,GAAAD,EAAAt5F,IAAA,QACAw5F,EAAA,aAAAD,EAEA/3E,IACA5e,KAAA,SACAlF,KAAA86F,EAAAe,GACAL,UAAAX,EAAAgB,IAGA/3E,GAAAu2E,EAAAv2E,EAAAzlB,EAAA67F,EAEA,IAAAU,KAKA,OAJAkB,KACAlB,EAAAmB,OAAAH,IAIA93E,aACAw2E,cAAAwB,EAAA,KACAlB,uBAIAoB,MAAA,SAAA39F,EAAAwY,EAAAxJ,EAAA6sF,GACA,GAAA+B,GAAA5uF,EAAA8hB,iBACAzb,SAAA,QACAS,MAAA0C,EAAAvU,IAAA,cACAuO,GAAAgG,EAAAvU,IAAA,aACa,GAEb45F,EAAAD,EAAAE,cAAA,aACAC,EAAAH,EAAAE,cAAA,aAEA,IAAA/oF,QAAA,CACA,IAAA8oF,EACA,SAAAv7F,OAAA,6BAEA,KAAAy7F,EACA,SAAAz7F,OAAA,+BAIA,GAAA07F,GAAAD,EAAA95F,IAAA,QACAg6F,EAAAJ,EAAA55F,IAAA,QAEAwhB,IAEA5e,KAAA,SACAlF,KAAA86F,EAAAuB,GACAb,UAAAX,EAAAwB,KAGAn3F,KAAA,QACAlF,KAAA86F,EAAAwB,GACAd,UAAAX,EAAAyB,KAGAC,EAAA,aAAAD,EACAE,EAAA,aAAAH,CAEAv4E,GAAAu2E,EAAAv2E,EAAAzlB,EAAA67F,EAEA,IAAAU,KAOA,OANA4B,KACA5B,EAAA1D,OAAAkF,GAEAG,IACA3B,EAAA6B,MAAAP,IAGAp4E,aACAw2E,cAAAiC,EAAA,EAAAC,EAAA,KACA5B,uBAIA8B,IAAA,SAAAr+F,EAAAwY,EAAAxJ,EAAA6sF,GAGA,OACAp2E,WAAAu2E,IACqBn1F,KAAA,QACAA,KAAA,QACrB7G,EAAA67F,KAsCAh/F,GAAAC,QAAA2+F,GzCmsrBM,SAAU5+F,EAAQC,EAAS+I,G0CtgsBjC,GAAAyD,GAAAzD,EAAA,GACA2d,EAAA3d,EAAA,GACA+gB,EAAApD,EAAAoD,QAEA/gB,GAAA,KACAA,EAAA,KAEA2d,EAAAoC,eAAAtc,EAAA/H,MACAsE,EAAA,8BAEA2d,EAAAkC,eAAApc,EAAA/H,MACAsE,EAAA,cAIA2d,EAAAmB,kBAAAiC,EAAAC,UAAAE,UAAAzd,EAAA/H,MACAsE,EAAA,cAIAA,EAAA,K1C+gsBM,SAAUhJ,EAAQC,EAAS+I,G2ClisBjCA,EAAA,KAEAA,EAAA,KAEAA,EAAA,KAYAA,EAAA,GAAAof,gBAEAtjB,KAAA,UACA4V,MAAA,UACAf,OAAA,2BAGA,cAGA3Q,EAAA,GAAAof,gBAEAtjB,KAAA,UACA4V,MAAA,UACAf,OAAA,2BAGA,e3C6isBM,SAAU3Z,EAAQC,EAAS+I,I4CjlsBjC,SAAA2L,GAiCA,QAAA8sF,GAAAlsF,EAAAC,GACA/I,EAAArJ,KAAAs+F,EAAAj9F,OAAA+Q,EAAAmsF,sBAAA,SAAA/J,GACApiF,EAAAtU,eAAA02F,KACAriF,EAAAqiF,GAAApiF,EAAAoiF,MAIAriF,EAAAosF,iBAAAnsF,EAAAmsF,iBAGA,QAAAC,GAAAC,GACAl9F,KAAAm9F,OAAAD,MAsmBA,QAAAE,GAAAn5E,GAIA,MAHAnc,GAAAhL,QAAAmnB,KACAA,OAEAA,EAsIA,QAAAo5E,GAAA7d,EAAA8d,GACA,GAAAC,GAAA/d,EAAAv7D,WACA3G,EAAA,GAAAwH,GACAhd,EAAA/I,IAAAw+F,EAAA/d,EAAA7vD,iBAAA6vD,GACAA,EAAAge,UAGAV,GAAAx/E,EAAAkiE,EAKA,QAHA/lE,GAAA6D,EAAAmgF,YACAC,EAAAle,EAAAie,SAEA5hG,EAAA,EAAuBA,EAAA0hG,EAAAxhG,OAA0BF,IAAA,CACjD,GAAA20F,GAAA+M,EAAA1hG,GACA8hG,EAAAD,EAAAlN,EACA1oF,GAAAnK,QAAA2/F,EAAA9M,IAAA,EACA/2E,EAAA+2E,GAAA,GAAAmN,GAAA1hG,YACAyhG,EAAAlN,GAAAz0F,QAKA0d,EAAA+2E,GAAAkN,EAAAlN,GAGA,MAAAlzE,GA/yBA,GACAsgF,GAAA,mBAAAliF,QAAA1L,EAAA0L,OACAmiF,MAFA,KAEAD,EAAAC,aACAr7F,MAAAo7F,EAAAC,aACAC,MAJA,KAIAF,EAAAE,WACAt7F,MAAAo7F,EAAAE,WAEAC,GACAC,MAAAH,EACAI,IAAAH,EAEAI,QAAA17F,MACAyiB,OAAAziB,MACA27F,KAAA37F,OAGAuiB,EAAA1gB,EAAA,IACA+5F,EAAA/5F,EAAA,KAEAyD,EAAAzD,EAAA,GACA+O,EAAA/O,EAAA,IACA1H,EAAAmL,EAAAnL,SAEAogG,GACA,6DAiBAE,GAAA9+F,UAAAkgG,MAAA,EAEApB,EAAA9+F,UAAAmpB,MAAA,WACA,MAAAtnB,MAAAm9F,OAAAphG,QAEAkhG,EAAA9+F,UAAAmgG,QAAA,SAAArnF,GACA,MAAAjX,MAAAm9F,OAAAlmF,GAYA,IAAA6N,GAAA,SAAAb,EAAAu5E,GAEAv5E,MAAA,QAIA,QAFAs6E,MACAC,KACA3iG,EAAA,EAAuBA,EAAAooB,EAAAloB,OAAuBF,IAAA,CAC9C,GAAA4iG,GACAC,IACA,iBAAAz6E,GAAApoB,IACA4iG,EAAAx6E,EAAApoB,GACA6iG,GACAr5F,KAAAo5F,EACA7uE,SAAA6uE,EACA1uE,cAAA,EACA4rE,WAAA,EAGAx7F,KAAA,YAIAu+F,EAAAz6E,EAAApoB,GACA4iG,EAAAC,EAAAr5F,KACAq5F,EAAAv+F,KAAAu+F,EAAAv+F,MAAA,SACAu+F,EAAA9uE,WACA8uE,EAAA9uE,SAAA6uE,EACAC,EAAA3uE,cAAA,IAGA2uE,EAAAxuE,UAAAwuE,EAAAxuE,cACAsuE,EAAAv/F,KAAAw/F,GACAF,EAAAE,GAAAC,EAOA1+F,KAAAikB,WAAAu6E,EAMAx+F,KAAA2+F,gBAAAJ,EAKAv+F,KAAAw9F,YAKAx9F,KAAAwhB,SAQAxhB,KAAA4+F,WAOA5+F,KAAAy9F,YAKAz9F,KAAA6+F,aAIA7+F,KAAA8+F,WAOA9+F,KAAA++F,iBAKA/+F,KAAA+Y,UAAA,KAOA/Y,KAAAg/F,WAOAh/F,KAAAi/F,WAOAj/F,KAAAk/F,gBAOAl/F,KAAAm/F,gBAOAn/F,KAAAo/F,eAMAp/F,KAAAq/F,SAMAr/F,KAAAozF,SAGAkM,EAAAx6E,EAAA3mB,SAEAmhG,GAAAn/F,KAAA,OAMAm/F,EAAAxE,eAAA,EASAwE,EAAA7vE,aAAA,SAAA+gE,GAIA,MAHAltE,OAAAktE,KACAA,EAAAxwF,KAAAikB,WAAAusE,OAEAA,GASA8O,EAAA3vE,iBAAA,SAAA6gE,GACA,MAAA1oF,GAAAvM,MAAAyE,KAAA2+F,gBAAA3+F,KAAAyvB,aAAA+gE,MASA8O,EAAAtrC,SAAA,SAAAx1D,EAAAk8F,EAAAG,GACAr8F,OAEA,IAAA+gG,GAAAz3F,EAAAhL,QAAA0B,EAIA,IAHA+gG,IACA/gG,EAAA,GAAAy+F,GAAAz+F,IAEA+U,UACAgsF,IAAA,kBAAA/gG,GAAA8/F,SAAA,kBAAA9/F,GAAA8oB,OACA,SAAAxmB,OAAA,yBAIAd,MAAAq/F,SAAA7gG,CAGA,IAUAghG,GAVA/lF,EAAAzZ,KAAAy9F,YACAmB,EAAA5+F,KAAA4+F,WAEA36E,EAAAjkB,KAAAikB,WACAw7E,EAAAz/F,KAAA2+F,gBAEAe,EAAAlhG,EAAA8oB,QAEAq4E,KACAC,IAGAlF,QAGA,QAAA7+F,GAAA,EAAuBA,EAAAooB,EAAAloB,OAAuBF,IAAA,CAC9C,GAAA6vB,GAAA+zE,EAAAx7E,EAAApoB,GACA,KAAA6vB,EAAAwE,UAAA2vE,WAAAL,EAAA3jG,EACA,IAAAikG,GAAA/B,EAAAryE,EAAAvrB,KACAsZ,GAAAwK,EAAApoB,IAAA,GAAAikG,GAAAJ,GAGA,GAAA/hF,GAAA3d,IACA66F,KACAl9E,EAAAm9E,eAAA,GAGAD,KAAA,SAAAtvE,EAAAuE,EAAA3oB,EAAA0lB,GACA,GAAAhvB,GAAAuV,EAAAkY,iBAAAC,EAKA,OAHAnY,GAAAoY,iBAAAD,KACA5N,EAAAm9E,eAAA,GAEA1nF,EAAAqY,gBACA5tB,YAAA2E,OACA3E,EAAAgvB,GAEAhvB,EACA4hG,EAAA3vE,IAIA,QAAAj0B,GAAA,EAAuBA,EAAA6jG,EAAU7jG,IAAA,CAWjC,OATA0vB,GAAA/sB,EAAA8/F,QAAAziG,GASA08B,EAAA,EAA2BA,EAAAtU,EAAAloB,OAAuBw8B,IAAA,CAClD,GAAAi4D,GAAAvsE,EAAAsU,EACA9e,GAAA+2E,GAEA30F,GAAAg/F,EAAAtvE,EAAAilE,EAAA30F,EAAA08B,GAGAqmE,EAAA3/F,KAAApD,GAIA,OAAAA,GAAA,EAAuBA,EAAA6jG,EAAU7jG,IAAA,CACjC,GAAA0vB,GAAA/sB,EAAA8/F,QAAAziG,IACA6+F,EAAA7+F,IAAA0vB,IACA,MAAAA,EAAAlmB,KACAq1F,EAAA7+F,GAAA0vB,EAAAlmB,KAEA,MAAAm6F,IACA9E,EAAA7+F,GAAA4d,EAAAwK,EAAAu7E,IAAA3jG,IAGA,IAAAwJ,GAAAq1F,EAAA7+F,IAAA,GAEAmV,EAAAua,KAAAva,IAEAA,GAAA3L,IAEAu6F,EAAAv6F,GAAAu6F,EAAAv6F,IAAA,EACA2L,EAAA3L,EACAu6F,EAAAv6F,GAAA,IACA2L,GAAA,SAAA4uF,EAAAv6F,IAEAu6F,EAAAv6F,MAEA2L,IAAA2uF,EAAA9jG,GAAAmV,GAGAhR,KAAA6+F,UAAAnE,EACA16F,KAAA8+F,QAAAa,GAMAL,EAAAh4E,MAAA,WACA,MAAAtnB,MAAA4+F,QAAA7iG,QAUAujG,EAAA78F,IAAA,SAAA+tF,EAAAv5E,EAAA2B,GACA,GAAAa,GAAAzZ,KAAAy9F,SACAt2F,EAAAnH,KAAA4+F,QAAA3nF,EAGA,UAAA9P,IAAAsS,EAAA+2E,GACA,MAAA1pE,IAGA,IAAAjpB,GAAA4b,EAAA+2E,GAAArpF,EAEA,IAAAyR,EAAA,CACA,GAAA8lF,GAAA1+F,KAAA2+F,gBAAAnO,EACA,IAAAkO,KAAA/C,UAEA,IADA,GAAA5iF,GAAA/Y,KAAA+Y,UACAA,GAAA,CAEA,GAAAgnF,GAAAhnF,EAAAtW,IAAA+tF,EAAAv5E,IAEApZ,GAAA,GAAAkiG,EAAA,GACAliG,GAAA,GAAAkiG,EAAA,KAEAliG,GAAAkiG,GAEAhnF,eAIA,MAAAlb,IAUAyhG,EAAAU,UAAA,SAAA/7E,EAAAhN,EAAA2B,GACA,GAAApY,KAEAsH,GAAAhL,QAAAmnB,KACArL,EAAA3B,EACAA,EAAAgN,EACAA,EAAAjkB,KAAAikB,WAGA,QAAApoB,GAAA,EAAAC,EAAAmoB,EAAAloB,OAAgDF,EAAAC,EAASD,IACzD2E,EAAAvB,KAAAe,KAAAyC,IAAAwhB,EAAApoB,GAAAob,EAAA2B,GAGA,OAAApY,IASA8+F,EAAAtrD,SAAA,SAAA/8B,GAGA,OAFAgN,GAAAjkB,KAAAikB,WACAs6E,EAAAv+F,KAAA2+F,gBACA9iG,EAAA,EAAAC,EAAAmoB,EAAAloB,OAAgDF,EAAAC,EAASD,IACzD,GAEA,YAAA0iG,EAAAt6E,EAAApoB,IAAAsE,MACAmjB,MAAAtjB,KAAAyC,IAAAwhB,EAAApoB,GAAAob,IAEA,QAGA,WASAqoF,EAAA5L,cAAA,SAAAlD,EAAA53E,EAAAvZ,GACAmxF,EAAAxwF,KAAAyvB,aAAA+gE,EACA,IAAAyP,GAAAjgG,KAAAy9F,SAAAjN,GACA9kE,EAAA1rB,KAAA2vB,iBAAA6gE,EACA53E,GAAA8S,KAAAiwE,WAAA/iF,CACA,IACA/a,GADAqiG,GAAAlgG,KAAAozF,UAAApzF,KAAAozF,aAA2D5C,IAAA53E,EAE3D,IAAAsnF,EACA,MAAAA,EAGA,IAAAD,EAAA,CAIA,OAHAv3F,GAAAuV,IACAzV,GAAAyV,IAEApiB,EAAA,EAAAC,EAAAkE,KAAAsnB,QAA+CzrB,EAAAC,EAASD,IACxDgC,EAAAmC,KAAAyC,IAAA+tF,EAAA30F,EAAA+c,GAKAvZ,MAAAxB,EAAA2yF,EAAA30F,KACAgC,EAAA6K,MAAA7K,GACAA,EAAA2K,MAAA3K,GAGA,OAAAmC,MAAAozF,QAAA5C,IAAA53E,IAAAlQ,EAAAF,GAGA,OAAAyV,WASAqhF,EAAAa,OAAA,SAAA3P,EAAA53E,GACA,GAAAqnF,GAAAjgG,KAAAy9F,SAAAjN,GACAtoE,EAAA,CACA,IAAA+3E,EACA,OAAApkG,GAAA,EAAAC,EAAAkE,KAAAsnB,QAA+CzrB,EAAAC,EAASD,IAAA,CACxD,GAAAgC,GAAAmC,KAAAyC,IAAA+tF,EAAA30F,EAAA+c,EACA0K,OAAAzlB,KACAqqB,GAAArqB,GAIA,MAAAqqB,IAUAo3E,EAAA3hG,QAAA,SAAA6yF,EAAA3yF,GACA,GAAA4b,GAAAzZ,KAAAy9F,SACAwC,EAAAxmF,EAAA+2E,GACAoO,EAAA5+F,KAAA4+F,OAEA,IAAAqB,EACA,OAAApkG,GAAA,EAAAC,EAAA8iG,EAAA7iG,OAAiDF,EAAAC,EAASD,IAAA,CAC1D,GAAAukG,GAAAxB,EAAA/iG,EACA,IAAAokG,EAAAG,KAAAviG,EACA,MAAAhC,GAIA,UASAyjG,EAAAvwE,YAAA,SAAA1pB,GAIA,OAHAu5F,GAAA5+F,KAAA4+F,QACAlE,EAAA16F,KAAA6+F,UAEAhjG,EAAA,EAAAC,EAAA8iG,EAAA7iG,OAA6CF,EAAAC,EAASD,IAAA,CAEtD,GAAA6+F,EADAkE,EAAA/iG,MACAwJ,EACA,MAAAxJ,GAIA,UASAyjG,EAAAhgF,gBAAA,SAAA8gF,GAEA,GAAAxB,GAAA5+F,KAAA4+F,QAGA5yE,EAAA4yE,EAAAwB,EACA,UAAAp0E,OAAAo0E,EACA,MAAAA,EAKA,KAFA,GAAApiF,GAAA,EACAG,EAAAygF,EAAA7iG,OAAA,EACAiiB,GAAAG,GAAA,CACA,GAAAkiF,IAAAriF,EAAAG,GAAA,GACA,IAAAygF,EAAAyB,GAAAD,EACApiF,EAAAqiF,EAAA,MAEA,MAAAzB,EAAAyB,GAAAD,GAIA,MAAAC,EAHAliF,GAAAkiF,EAAA,GAMA,UAWAf,EAAAgB,iBAAA,SAAA9P,EAAA3yF,EAAA+a,EAAA2nF,GACA,GAAA9mF,GAAAzZ,KAAAy9F,SACAwC,EAAAxmF,EAAA+2E,GACAgQ,IAEA,KAAAP,EACA,MAAAO,EAGA,OAAAD,IACAA,EAAAtiF,IAKA,QAFAwiF,GAAA73E,OAAA0vE,UACAoI,GAAA,EACA7kG,EAAA,EAAAC,EAAAkE,KAAAsnB,QAA2CzrB,EAAAC,EAASD,IAAA,CACpD,GAAA8kG,GAAA9iG,EAAAmC,KAAAyC,IAAA+tF,EAAA30F,EAAA+c,GACA6c,EAAAntB,KAAAsG,IAAA+xF,EACAA,IAAAJ,GAAA9qE,GAAAgrE,KAIAhrE,EAAAgrE,GAAAE,GAAA,GAAAD,EAAA,KACAD,EAAAhrE,EACAirE,EAAAC,EACAH,EAAAzkG,OAAA,GAEAykG,EAAAvhG,KAAApD,IAGA,MAAA2kG,IAQAlB,EAAArzE,YAAA,SAAAhV,GACA,GAAA2pF,GAAA5gG,KAAA4+F,QAAA3nF,EACA,cAAA2pF,GAAA,EAAAA,GAQAtB,EAAAlzE,eAAA,SAAAnV,GACA,MAAAjX,MAAAq/F,SAAAf,QAAAt+F,KAAAisB,YAAAhV,KAQAqoF,EAAApzE,QAAA,SAAAjV,GACA,MAAAjX,MAAA6+F,UAAA7+F,KAAA4+F,QAAA3nF,KAAA,IAQAqoF,EAAAuB,MAAA,SAAA5pF,GACA,MAAAjX,MAAA8+F,QAAA9+F,KAAA4+F,QAAA3nF,KAAAjX,KAAAisB,YAAAhV,GAAA,IAuBAqoF,EAAA7gG,KAAA,SAAAqiG,EAAAniG,EAAAia,EAAAha,GACA,kBAAAkiG,KACAliG,EAAAga,EACAA,EAAAja,EACAA,EAAAmiG,EACAA,MAGAA,EAAAh5F,EAAA/I,IAAAq+F,EAAA0D,GAAA9gG,KAAAyvB,aAAAzvB,KAEA,IAAAnC,MACAkjG,EAAAD,EAAA/kG,OACA6iG,EAAA5+F,KAAA4+F,OAEAhgG,MAAAoB,IAEA,QAAAnE,GAAA,EAAuBA,EAAA+iG,EAAA7iG,OAAoBF,IAE3C,OAAAklG,GACA,OACApiG,EAAA/C,KAAAgD,EAAA/C,EACA,MACA,QACA8C,EAAA/C,KAAAgD,EAAAoB,KAAAyC,IAAAq+F,EAAA,GAAAjlG,EAAA+c,GAAA/c,EACA,MACA,QACA8C,EAAA/C,KAAAgD,EAAAoB,KAAAyC,IAAAq+F,EAAA,GAAAjlG,EAAA+c,GAAA5Y,KAAAyC,IAAAq+F,EAAA,GAAAjlG,EAAA+c,GAAA/c,EACA,MACA,SACA,OAAA08B,GAAA,EAAmCA,EAAAwoE,EAAaxoE,IAChD16B,EAAA06B,GAAAv4B,KAAAyC,IAAAq+F,EAAAvoE,GAAA18B,EAAA+c,EAGA/a,GAAA06B,GAAA18B,EACA8C,EAAAkB,MAAAjB,EAAAf,KAYAyhG,EAAA0B,WAAA,SAAA/8E,EAAAtlB,EAAAia,EAAAha,GACA,kBAAAqlB,KACArlB,EAAAga,EACAA,EAAAja,EACAA,EAAAslB,EACAA,MAGAA,EAAAnc,EAAA/I,IACAq+F,EAAAn5E,GAAAjkB,KAAAyvB,aAAAzvB,KAGA,IAAAihG,MACApjG,KACAkjG,EAAA98E,EAAAloB,OACA6iG,EAAA5+F,KAAA4+F,OAEAhgG,MAAAoB,IAEA,QAAAnE,GAAA,EAAuBA,EAAA+iG,EAAA7iG,OAAoBF,IAAA,CAC3C,GAAAqlG,EAEA,IAAAH,EAGA,OAAAA,EACAG,EAAAviG,EAAA/C,KACAgD,EAAAoB,KAAAyC,IAAAwhB,EAAA,GAAApoB,EAAA+c,GAAA/c,OAGA,CACA,OAAA08B,GAAA,EAA+BA,EAAAwoE,EAAaxoE,IAC5C16B,EAAA06B,GAAAv4B,KAAAyC,IAAAwhB,EAAAsU,GAAA18B,EAAA+c,EAEA/a,GAAA06B,GAAA18B,EACAqlG,EAAAviG,EAAAkB,MAAAjB,EAAAf,OAZAqjG,GAAAviG,EAAA/C,KAAAgD,EAAA/C,EAcAqlG,IACAD,EAAAhiG,KAAA2/F,EAAA/iG,IASA,MALAmE,MAAA4+F,QAAAqC,EAGAjhG,KAAAozF,WAEApzF,MAWAs/F,EAAA6B,SAAA,SAAAl9E,EAAAtlB,EAAAia,EAAAha,GACA,kBAAAqlB,KACArlB,EAAAga,EACAA,EAAAja,EACAA,EAAAslB,EACAA,KAGA,IAAAxoB,KAIA,OAHAuE,MAAAvB,KAAAwlB,EAAA,WACAxoB,EAAAwD,KAAAN,KAAAkB,MAAAG,KAAAJ,aACSgZ,EAAAha,GACTnD,GAuCA6jG,EAAAvgG,IAAA,SAAAklB,EAAAtlB,EAAAia,EAAAha,GACAqlB,EAAAnc,EAAA/I,IACAq+F,EAAAn5E,GAAAjkB,KAAAyvB,aAAAzvB,KAGA,IAAAsd,GAAA+/E,EAAAr9F,KAAAikB,GAGA26E,EAAAthF,EAAAshF,QAAA5+F,KAAA4+F,QAEAnlF,EAAA6D,EAAAmgF,SAEA2D,IAqBA,OApBAphG,MAAAvB,KAAAwlB,EAAA,WACA,GAAAhN,GAAArX,oBAAA7D,OAAA,GACAslG,EAAA1iG,KAAAkB,MAAAG,KAAAJ,UACA,UAAAyhG,EAAA,CAEA,gBAAAA,KACAD,EAAA,GAAAC,EACAA,EAAAD,EAEA,QAAAvlG,GAAA,EAA+BA,EAAAwlG,EAAAtlG,OAAqBF,IAAA,CACpD,GAAA20F,GAAAvsE,EAAApoB,GACA8hG,EAAAlkF,EAAA+2E,GACAoQ,EAAAhC,EAAA3nF,EACA0mF,KACAA,EAAAiD,GAAAS,EAAAxlG,OAIS+c,EAAAha,GAET0e,GAUAgiF,EAAAgC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,GAeA,OAdApkF,GAAA+/E,EAAAr9F,MAAAuhG,IACA9nF,EAAAzZ,KAAAy9F,SACAkE,EAAArkF,EAAAmgF,SAEAmE,EAAA5hG,KAAA4+F,QACAA,EAAAthF,EAAAshF,WAEAiD,KACAC,KACAC,EAAAz5F,KAAA2R,MAAA,EAAAunF,GAEA7D,EAAAgE,EAAAJ,GACAzlG,EAAAkE,KAAAsnB,QAEAzrB,EAAA,EAAuBA,EAAA4d,EAAA8nF,GAAAxlG,OAA+BF,IACtD8lG,EAAAJ,GAAA1lG,GAAA4d,EAAA8nF,GAAA1lG,EAEA,QAAAA,GAAA,EAAuBA,EAAAC,EAASD,GAAAkmG,EAAA,CAEhCA,EAAAjmG,EAAAD,IACAkmG,EAAAjmG,EAAAD,EACAgmG,EAAA9lG,OAAAgmG,EAEA,QAAAxpE,GAAA,EAA2BA,EAAAwpE,EAAexpE,IAAA,CAC1C,GAAAthB,GAAA2qF,EAAA/lG,EAAA08B,EACAspE,GAAAtpE,GAAAolE,EAAA1mF,GACA6qF,EAAAvpE,GAAAthB,EAEA,GAAApZ,GAAA4jG,EAAAI,GACA5qF,EAAA6qF,EAAAJ,EAAAG,EAAAhkG,IAAA,EAEA8/F,GAAA1mF,GAAApZ,EACA+gG,EAAA3/F,KAAAgY,GAGA,MAAAqG,IASAgiF,EAAAtyE,aAAA,SAAA/V,GACA,GAAAumF,GAAAx9F,KAAAw9F,SAEA,OADAvmF,GAAAjX,KAAA4+F,QAAA3nF,GACA,GAAA8N,GAAA/kB,KAAAq/F,SAAAf,QAAArnF,GAAAumF,OAAAhwF,UAQA8xF,EAAAqB,KAAA,SAAAqB,GACA,GAEA/7E,GAFA05E,EAAA3/F,KAAA8+F,QACAmD,EAAAD,KAAAlD,OAMA,WAAAV,GACA4D,IAAApD,WACA5+F,KAAA4+F,QACA,SAAA3nF,GACA,cAAAgP,EAAAg8E,EAAAhrF,IAAAgP,EANA,QAMAhP,GAEA,SAAAA,GACA,cAAAgP,EAAA05E,EAAA1oF,IAAAgP,EATA,QASAhP,KAQAqoF,EAAApgF,UAAA,SAAA5iB,GACA,GAAA2c,GAAAjZ,KAAAg/F,OACA,OAAA/lF,MAAA3c,IAcAgjG,EAAAhS,UAAA,SAAAhxF,EAAA2pB,GACA,GAAAtpB,EAAAL,GACA,OAAA+I,KAAA/I,GACAA,EAAAC,eAAA8I,IACArF,KAAAstF,UAAAjoF,EAAA/I,EAAA+I,QAKArF,MAAAg/F,QAAAh/F,KAAAg/F,YACAh/F,KAAAg/F,QAAA1iG,GAAA2pB,GAQAq5E,EAAA4C,UAAA,SAAA5lG,EAAA2pB,GACA,GAAAtpB,EAAAL,GACA,OAAA+I,KAAA/I,GACAA,EAAAC,eAAA8I,IACArF,KAAAkiG,UAAA78F,EAAA/I,EAAA+I,QAKArF,MAAAi/F,QAAA3iG,GAAA2pB,GAQAq5E,EAAA6C,UAAA,SAAA7lG,GACA,MAAA0D,MAAAi/F,QAAA3iG,IAOAgjG,EAAA8C,cAAA,SAAAnrF,GACA,MAAAjX,MAAAm/F,aAAAloF,IASAqoF,EAAA+C,cAAA,SAAAprF,EAAA/M,EAAA1N,GACAwD,KAAAm/F,aAAAloF,GAAAza,EACAsL,EAAA5K,OAAA8C,KAAAm/F,aAAAloF,OAAwD/M,GACxDA,GAMAo1F,EAAAgD,iBAAA,WACAtiG,KAAAm/F,aAAApjG,OAAA,GASAujG,EAAA//E,cAAA,SAAAtI,EAAA3a,EAAAq6B,GACA,GAAA4rE,GAAAviG,KAAAk/F,aAAAjoF,GACAgP,EAAAs8E,KAAAjmG,EACA,cAAA2pB,GAAA0Q,EAIA1Q,EAFAjmB,KAAAkf,UAAA5iB,IAkBAgjG,EAAAkD,cAAA,SAAAvrF,EAAA3a,EAAAuB,GACA,GAAA0kG,GAAAviG,KAAAk/F,aAAAjoF,MAGA,IAFAjX,KAAAk/F,aAAAjoF,GAAAsrF,EAEA5lG,EAAAL,GACA,OAAA+I,KAAA/I,GACAA,EAAAC,eAAA8I,KACAk9F,EAAAl9F,GAAA/I,EAAA+I,QAKAk9F,GAAAjmG,GAAAuB,GAMAyhG,EAAAj/E,eAAA,WACArgB,KAAAg/F,WACAh/F,KAAAk/F,gBAGA,IAAAuD,GAAA,SAAAt8F,GACAA,EAAAmb,YAAAthB,KAAAshB,YACAnb,EAAAgB,UAAAnH,KAAAmH,UACAhB,EAAAqb,SAAAxhB,KAAAwhB,SAOA89E,GAAAoD,iBAAA,SAAAzrF,EAAApS,GACA,GAAA24F,GAAAx9F,KAAAw9F,SAEA34F,KAGAA,EAAAsC,UAAA8P,EACApS,EAAA2c,SAAAxhB,KAAAwhB,SACA3c,EAAAyc,YAAAk8E,KAAAl8E,YACA,UAAAzc,EAAA1E,MACA0E,EAAAqB,SAAAu8F,EAAA59F,IAIA7E,KAAAo/F,YAAAnoF,GAAApS,GAOAy6F,EAAAqD,iBAAA,SAAA1rF,GACA,MAAAjX,MAAAo/F,YAAAnoF,IAOAqoF,EAAAsD,kBAAA,SAAAjkG,EAAAC,GACAkJ,EAAArJ,KAAAuB,KAAAo/F,YAAA,SAAAv6F,EAAAoS,GACApS,GACAlG,KAAA/C,KAAAgD,EAAAiG,EAAAoS,MASAqoF,EAAA1N,aAAA,WACA,GAAAiR,GAAA/6F,EAAA/I,IAAAiB,KAAAikB,WAAAjkB,KAAA2vB,iBAAA3vB,MACAsd,EAAA,GAAAwH,GAAA+9E,EAAA7iG,KAAAw9F,UAeA,OAZAlgF,GAAAmgF,SAAAz9F,KAAAy9F,SAEAX,EAAAx/E,EAAAtd,MAIAsd,EAAAshF,QAAA5+F,KAAA4+F,QAAAn+F,QAEAT,KAAAozF,UACA91E,EAAA81E,QAAAtrF,EAAA5K,UAA2C8C,KAAAozF,UAG3C91E,GAQAgiF,EAAAwD,WAAA,SAAA/vF,EAAAgwF,GACA,GAAAC,GAAAhjG,KAAA+S,EACA,mBAAAiwF,KAGAhjG,KAAAg9F,iBAAAh9F,KAAAg9F,qBACAh9F,KAAAg9F,iBAAA/9F,KAAA8T,GACA/S,KAAA+S,GAAA,WACA,GAAA4vB,GAAAqgE,EAAAnjG,MAAAG,KAAAJ,UACA,OAAAmjG,GAAAljG,MAAAG,MAAA2iC,GAAA7iC,OAAAgI,EAAArH,MAAAb,gBAMA0/F,EAAA2D,sBAAA,mCAEA3D,EAAA4D,mBAAA,cAEA7nG,EAAAC,QAAAwpB,I5CqlsB6BlpB,KAAKN,EAAS+I,EAAoB,MAIzD,SAAUhJ,EAAQC,EAAS+I,G6CvsuBjC,QAAAm2F,GAAA2I,EAAA3kG,EAAA8N,GAyHA,QAAA82F,GAAAC,EAAAzzE,EAAAG,GACAuzE,EAAA1zE,GACAyzE,EAAAnzE,UAAAN,GAAAG,GAGAszE,EAAAzzE,WACAyzE,EAAAtzE,gBACAwzE,EAAAriG,IAAA0uB,GAAA,IAIA,QAAA4zE,GAAAn+F,EAAAtG,EAAA0kG,GACA,GAAAA,GAAA,MAAA1kG,EAAA0D,IAAA4C,GAAA,CAEA,IADA,GAAAxJ,GAAA,EACA,MAAAkD,EAAA0D,IAAA4C,EAAAxJ,IACAA,GAEAwJ,IAAAxJ,EAGA,MADAkD,GAAAmC,IAAAmE,GAAA,GACAA,EA5IA7G,QACA8N,QACA62F,UAAA1iG,OACA,IAAA85F,IAAAjuF,EAAAiuF,aAAA95F,QACA65F,EAAAxyF,EAAA3G,cAAAmL,EAAAguF,WACAoJ,EAAA57F,EAAA3G,gBACAoiG,EAAAz7F,EAAA3G,gBAEA1F,KAEAkoG,EAAAr3F,EAAAq3F,QACA,UAAAA,EAAA,CACA,GAAAC,GAAAC,EAAArlG,EAAA,GACAmlG,GAAAr7F,KAAAE,IACAV,EAAAhL,QAAA8mG,MAAA7nG,QAAA,EACAonG,EAAApnG,OACAw+F,EAAAx+F,QAEA0C,EAAA0kG,EAAA,SAAAW,GACA,GAAAC,GAAAD,EAAAvJ,OACAwJ,KAAAJ,EAAAr7F,KAAAE,IAAAm7F,EAAAI,EAAAhoG,WAKA,OAAAF,GAAA,EAAuBA,EAAA8nG,EAAc9nG,IAAA,CACrC,GAAAmoG,GAAA9jG,EAAAq6F,EAAA1+F,KAAqDwJ,KAAAk1F,EAAA1+F,IAAiB0+F,EAAA1+F,OACtEooG,EAAAD,EAAA3+F,KACAg+F,EAAA5nG,EAAAI,IAA0Cq0B,aAE1C,OAAA+zE,GAAA,MAAAP,EAAAjhG,IAAAwhG,KAIAZ,EAAAh+F,KAAAg+F,EAAA7Q,YAAAyR,EACAP,EAAAxiG,IAAA+iG,EAAApoG,IAEA,MAAAmoG,EAAA7jG,OAAAkjG,EAAAljG,KAAA6jG,EAAA7jG,MAIAm6F,EAAA77F,KAAA,SAAAylG,EAAAt0E,GACAs0E,EAAA5J,EAAAp5F,IAAA0uB,EAAA/E,EAAAq5E,GAAAzjG,SACAhC,EAAAylG,EAAA,SAAAC,EAAAp0E,GAEA7vB,EAAAikG,OAAAT,EAAAjhG,IAAA0hG,IACA,MAAAA,KAAAR,IACAO,EAAAn0E,GAAAo0E,EACAf,EAAA3nG,EAAA0oG,GAAAv0E,EAAAG,OAMA,IAAAq0E,GAAA,CACA3lG,GAAA0kG,EAAA,SAAAW,EAAAO,GACA,GAAAz0E,GACAk0E,EACAC,EACAO,CACApkG,GAAA4jG,IACAl0E,EAAAk0E,EACAA,OAGAl0E,EAAAk0E,EAAAz+F,KACAy+F,EAAAh8F,EAAAvM,MAAAuoG,GAEAC,EAAAD,EAAAvJ,QACA+J,EAAAR,EAAA5zE,UACA4zE,EAAAz+F,KAAAy+F,EAAAl0E,SAAAk0E,EAAA/zE,cACA+zE,EAAAvJ,QAAAuJ,EAAA5zE,UAAA,KAGA,IAAAg0E,GAAAr5E,EAAAyvE,EAAA73F,IAAAmtB,GAEA,KAAAs0E,EAAAnoG,OACA,OAAAF,GAAA,EAA+BA,GAAAkoG,KAAAhoG,QAAA,GAA0DF,IAAA,CACzF,KAAAuoG,EAAA3oG,EAAAM,QAAA,MAAAN,EAAA2oG,GAAAx0E,UACAw0E,GAEAA,GAAA3oG,EAAAM,QAAAmoG,EAAAjlG,KAAAmlG,KAIA3lG,EAAAylG,EAAA,SAAAC,EAAAp0E,GACA,GAAAszE,GAAA5nG,EAAA0oG,EACAf,GAAAjmG,EAAAkmG,EAAAS,GAAAl0E,EAAAG,GACA,MAAAszE,EAAAh+F,MAAA0+F,IACAV,EAAAh+F,KAAAg+F,EAAA7Q,YAAAuR,EAAAh0E,IAEAu0E,GAAAnnG,EAAAkmG,EAAAnzE,UAAAo0E,MAQA,QAHAC,GAAAj4F,EAAAk4F,aAAA,QAGAL,EAAA,EAAkCA,EAAAR,EAAyBQ,IAAA,CAC3D,GAAAd,GAAA5nG,EAAA0oG,GAAA1oG,EAAA0oG,MAGA,OAFAd,EAAAzzE,WAGAyzE,EAAAzzE,SAAA4zE,EAAAe,EAAAhB,EAAAj3F,EAAAm4F,eACApB,EAAAtzE,cAAA,EACAszE,EAAAqB,cAAA,GAGA,MAAArB,EAAAh+F,OAAAg+F,EAAAh+F,KAAAm+F,EACAH,EAAAzzE,SACA8zE,IAGA,MAAAL,EAAAljG,MAAAwkG,EAAAnmG,EAAA2lG,KACAd,EAAAljG,KAAA,WAGA,MAAA1E,GAgDA,QAAAooG,GAAAtpE,GACA,MAAAzyB,GAAAhL,QAAAy9B,KAAAzyB,EAAAnL,SAAA49B,KAAA18B,MAAA08B,EApNA,GAAAzyB,GAAAzD,EAAA,GACA+O,EAAA/O,EAAA,IACA5F,EAAAqJ,EAAArJ,KACAyB,EAAA4H,EAAA5H,SACA/C,EAAA2K,EAAA3K,SACA0tB,EAAAzX,EAAAyX,iBAEAy4E,GAAsBjR,QAAA,EAAApC,MAAA,EAAA4P,SAAA,GAwLtB8E,EAAAnK,EAAAmK,aAAA,SAAAnmG,EAAAquB,GACA,OAAAhxB,GAAA,EAAAC,EAAA0C,EAAAzC,OAA0CF,EAAAC,EAASD,IAAA,CACnD,GAAAgC,GAAAgmG,EAAArlG,EAAA3C,GAEA,KAAAiM,EAAAhL,QAAAe,GACA,QAGA,IAAAA,KAAAgvB,EAEA,UAAAhvB,GAAAkqB,SAAAlqB,GACA,QAEA,IAAAqC,EAAArC,IAAA,MAAAA,EACA,SAGA,SAOAxC,GAAAC,QAAAk/F,G7CgwuBM,SAAUn/F,EAAQC,EAAS+I,G8Cr9uBjC,GAAA+yB,GAAA/yB,EAAA,GACAsmB,EAAAtmB,EAAA,IACAuiC,EAAAviC,EAAA,IACA8gB,EAAA9gB,EAAA,IAEAugG,EAAAxtE,EAAA/uB,MAMAs+B,EAAAC,EAAA1pC,QAEAiD,KAAA,WAEAkzF,UAAA,EAEAwR,mBAAA,EAEA98D,UAAA,SAAAsc,EAAAmlB,GACA,GAAAmqB,GAAA3zF,KAAAozF,OAEA9vE,OAAA+gC,KACAsvC,EAAA,GAAA9sE,WAAAw9B,IAEA/gC,MAAAkmD,KACAmqB,EAAA,GAAA9sE,WAAA2iD,KAIAgqB,YAAA,SAAAv4D,GACA,GAAA2M,GAAA5nC,KAAAozF,OACAn4D,GAAA,GAAA2M,EAAA,KAAAA,EAAA,GAAA3M,EAAA,IACAA,EAAA,GAAA2M,EAAA,KAAAA,EAAA,GAAA3M,EAAA,IAGA0L,EAAAxoC,UAAA4pC,UAAAnsC,KAAAoE,KAAA4nC,EAAA,GAAAA,EAAA,KAKAk9D,YAAA,WACA,MAAA9kG,MAAAqzF,WAMAnrD,YAAA,SAAA9d,GACApqB,KAAAqzF,UAAAjpE,EAGApqB,KAAA+kG,YAAA/kG,KAAAozF,QAAA3yF,QAEAT,KAAA6kG,mBAAA1/E,EAAA6/E,qBAAA56E,IAMAkf,SAAA,WACA,MAAAnkB,GAAA8/E,sBACAjlG,KAAAqzF,UAAArzF,KAAAozF,QAAApzF,KAAA+kG,YAAA/kG,KAAA6kG,qBAOAz7D,eAAA,WAGA,OAFAV,MACAW,EAAArpC,KAAAspC,WACAztC,EAAA,EAA2BA,EAAAwtC,EAAAttC,OAAkBF,IAC7C6sC,EAAAzpC,KAAAe,KAAAypC,SAAAJ,EAAAxtC,IAEA,OAAA6sC,IAUAe,SAAA,SAAAjrC,EAAA8N,GACA,SAAA9N,EACA,QAGA,IAAAuoB,GAAAza,KAAAya,SAcA,OAZA,OAAAA,EACAA,EAAAqQ,EAAA7P,iBAAA/oB,IAAA,EAEA,SAAAuoB,IAEAA,EAAA/mB,KAAA6kG,oBAKArmG,EAAAomG,EAAApmG,EAAAuoB,GAAA,GAEA4D,EAAA2M,UAAA94B,IASA0mG,UAAA,SAAAr9D,EAAAI,GACAJ,KAAA,CACA,IAAAD,GAAA5nC,KAAAozF,QACAnsD,EAAAW,EAAA,GAAAA,EAAA,EACA,IAAA7f,SAAAkf,GAAA,CAKAA,EAAA,IACAA,KACAW,EAAAspD,UAGA,IAAAz1F,GAAA0pB,EAAAggF,uBAAAv9D,EAAAC,EAAAI,EAEAjoC,MAAA6kG,mBAAAppG,EAAA2pG,kBACAplG,KAAAqzF,UAAA53F,EAAA2uB,SACApqB,KAAA+kG,YAAAtpG,EAAA4pG,iBAWAr9D,WAAA,SAAA17B,GACA,GAAAs7B,GAAA5nC,KAAAozF,OAEA,IAAAxrD,EAAA,KAAAA,EAAA,GACA,OAAAA,EAAA,IAEA,GAAA09D,GAAA19D,EAAA,EAMAt7B,GAAAg7B,OAKAM,EAAA,IAAA09D,EAAA,GAJA19D,EAAA,IAAA09D,EAAA,EACA19D,EAAA,IAAA09D,EAAA,OAOA19D,GAAA,IAGA,IAAAX,GAAAW,EAAA,GAAAA,EAAA,EAEA7f,UAAAkf,KACAW,EAAA,KACAA,EAAA,MAGA5nC,KAAAklG,UAAA54F,EAAAu7B,YAAAv7B,EAAA27B,YAGA,IAAA7d,GAAApqB,KAAAqzF,SAEA/mF,GAAA+6B,SACAO,EAAA,GAAAg9D,EAAAt8F,KAAA2R,MAAA2tB,EAAA,GAAAxd,OAEA9d,EAAAg7B,SACAM,EAAA,GAAAg9D,EAAAt8F,KAAAixC,KAAA3R,EAAA,GAAAxd,SAQAuc,GAAAhnB,OAAA,WACA,UAAAgnB,IAGAtrC,EAAAC,QAAAqrC,G9Co+uBM,SAAUtrC,EAAQC,EAAS+I,G+C3qvBjC,GAAAyD,GAAAzD,EAAA,GACAtG,EAAAsG,EAAA,IAEA+Q,EAAArX,EAAAqX,eAEA0yB,EAAA,EAEAtL,IASAA,GAAAM,OAAA,SAAA38B,GAGA,OAAAA,GAAA,GAAA2nC,IAAAx/B,KAAAi9F,UAAAz3F,KAVA,MAgBA0uB,EAAAoB,uBAAA,SAAA5D,GAEA,GAAAwrE,KAkBA,OAhBAxrE,GAAAyrE,yBAAA,SAAA/tF,EAAAguF,GACAhuF,EAAAtC,EAAAsC,GACA8tF,EAAA9tF,EAAA1B,MAAA0vF,GAGA1rE,EAAA2rE,iBAAA,SAAAjuF,EAAA4E,GACA,GAAAnc,GAAAmc,EAAAnc,IACA,KAAAA,EAAA,CACA,GAAAylG,GAAAxwF,EAAAsC,GAAA1B,IACAgkB,GAAAW,YAAAjjB,IAAA8tF,EAAAI,KACAzlG,EAAAqlG,EAAAI,GAAAtpF,IAGA,MAAAnc,IAGA65B,GAYAwC,EAAAqB,wBAAA,SAAA7D,EAAA6rE,GAsEA,QAAAC,GAAAC,GACA,GAAAC,MACAC,IAwBA,OAtBAn+F,GAAArJ,KAAAsnG,EAAA,SAAA1gG,GAEA,GAAA6gG,GAAAC,EAAAH,EAAA3gG,GACA+gG,EAAAF,EAAAE,aAAAP,EAAAxgG,GAEAghG,EAAAC,EAAAF,EAAAL,EACAG,GAAAK,WAAAF,EAAAtqG,OACA,IAAAmqG,EAAAK,YACAN,EAAAhnG,KAAAoG,GAGAyC,EAAArJ,KAAA4nG,EAAA,SAAAG,GACA1+F,EAAAnK,QAAAuoG,EAAAO,YAAAD,GAAA,GACAN,EAAAO,YAAAxnG,KAAAunG,EAEA,IAAAE,GAAAP,EAAAH,EAAAQ,EACA1+F,GAAAnK,QAAA+oG,EAAAC,UAAAH,GAAA,GACAE,EAAAC,UAAA1nG,KAAAoG,QAKoB2gG,QAAAC,eAGpB,QAAAE,GAAAH,EAAA3gG,GAIA,MAHA2gG,GAAA3gG,KACA2gG,EAAA3gG,IAA+BohG,eAAAE,eAE/BX,EAAA3gG,GAGA,QAAAihG,GAAAF,EAAAL,GACA,GAAAM,KAIA,OAHAv+F,GAAArJ,KAAA2nG,EAAA,SAAAl/C,GACAp/C,EAAAnK,QAAAooG,EAAA7+C,IAAA,GAAAm/C,EAAApnG,KAAAioD,KAEAm/C,EArGArsE,EAAA4sE,kBAAA,SAAAC,EAAAd,EAAA9uC,EAAAr4D,GAgCA,QAAAkoG,GAAAC,GAEA,MADAf,EAAAe,GAAAR,YAEA3tF,EAAA3Z,KAAA8nG,GAUA,QAAAC,GAAAD,GACAE,EAAAF,IAAA,EACAD,EAAAC,GA9CA,GAAAF,EAAA9qG,OAAA,CAIA,GAAAN,GAAAqqG,EAAAC,GACAC,EAAAvqG,EAAAuqG,MACAptF,EAAAnd,EAAAwqG,YAEAgB,IAKA,KAJAn/F,EAAArJ,KAAAooG,EAAA,SAAAxhG,GACA4hG,EAAA5hG,IAAA,IAGAuT,EAAA7c,QAAA,CACA,GAAAmrG,GAAAtuF,EAAAzD,MACAgyF,EAAAnB,EAAAkB,GACAE,IAAAH,EAAAC,EACAE,KACAnwC,EAAAr7D,KAAAgD,EAAAsoG,EAAAC,EAAAf,aAAA3lG,eACAwmG,GAAAC,IAEAp/F,EAAArJ,KACA0oG,EAAAR,UACAS,EAAAJ,EAAAF,GAIAh/F,EAAArJ,KAAAwoG,EAAA,WACA,SAAAnmG,OAAA,qCA4EAzF,EAAAC,QAAAkhC,G/CorvBM,SAAUnhC,EAAQC,EAAS+I,GgD11vBjC,QAAAgjG,KAMArnG,KAAAiR,MAAA,GAAArI,GAMA5I,KAAA28B,IAAAH,EAAAM,OAAA,aAoFA,QAAAwqE,GAAAziG,EAAA25B,GACA,GAAA35B,IACAA,EAAAwR,QAAAmoB,GACA,UAAA35B,EAAA1E,MACA,OAAAtE,GAAA,EAA+BA,EAAAgJ,EAAAovF,aAAqBp4F,IACpDyrG,EAAAziG,EAAAgtC,QAAAh2C,GAAA2iC,GAWA,QAAA+oE,GAAA/oG,EAAAoV,EAAA4qB,GACA,GAAAr3B,GAAAiM,EAAA0b,eAAAtwB,EAAAoV,EAEA,OAAAzM,EACAW,EAAArJ,KAAA2U,EAAAyX,iBAAA1jB,GAAA,SAAAqgG,GACAF,EAAA9oG,EAAAmkG,iBAAA6E,GAAAhpE,KAIAhgC,EAAAokG,kBAAA,SAAA/9F,GACAyiG,EAAAziG,EAAA25B,KAhIA,GAAA51B,GAAAvE,EAAA,IACAm4B,EAAAn4B,EAAA,IACAoyB,EAAApyB,EAAA,IACA+O,EAAA/O,EAAA,IACAyD,EAAAzD,EAAA,EAiBAgjG,GAAAlpG,WAEAgC,KAAA,QAOAmR,KAAA,SAAA9D,EAAAmJ,KASArT,OAAA,SAAA0T,EAAAxJ,EAAAmJ,EAAA/C,KASA6zF,UAAA,SAAAzwF,EAAAxJ,EAAAmJ,EAAA/C,GACA2zF,EAAAvwF,EAAA6B,UAAAjF,EAAA,aAUA8zF,SAAA,SAAA1wF,EAAAxJ,EAAAmJ,EAAA/C,GACA2zF,EAAAvwF,EAAA6B,UAAAjF,EAAA,WAQAwE,OAAA,SAAA5K,EAAAmJ,GACA3W,KAAAiR,MAAAujF,aAQAn8E,QAAA,aAYA,IAAAsvF,GAAAN,EAAAlpG,SACAwpG,GAAAvnF,WACAunF,EAAApnF,aACAonF,EAAArnF,aACA,SAAAtJ,EAAAxJ,EAAAmJ,EAAA/C,GACA5T,KAAAsD,OAAA0T,EAAAxJ,EAAAmJ,EAAA/C,IAwCA6iB,EAAAU,kBAAAkwE,GAAA,YAGA5wE,EAAAsD,sBAAAstE,GAA4CzsE,oBAAA,IAE5Cv/B,EAAAC,QAAA+rG,GhDw2vBQ,CACA,CACA,CAEF,SAAUhsG,EAAQC,GiDz/vBxB,GAAA+T,EAGAA,GAAA,WACA,MAAArP,QAGA,KAEAqP,KAAA3O,SAAA,qBAAAknG,MAAA,QACC,MAAAphG,GAED,gBAAAkV,UACArM,EAAAqM,QAOArgB,EAAAC,QAAA+T,GjDggwBM,SAAUhU,EAAQC,GkD5gwBxB,QAAAusG,GAAAr7D,GAGA,IAFA,GAAA0K,GAAA,EAEA1K,GAAAs7D,GACA5wD,GAAA,EAAA1K,EACAA,IAAA,CAGA,OAAAA,GAAA0K,EAGA,QAAA6wD,GAAAnqG,EAAAoqG,EAAAC,EAAAC,GACA,GAAAC,GAAAH,EAAA,CAEA,IAAAG,IAAAF,EACA,QAGA,IAAAC,EAAAtqG,EAAAuqG,KAAAvqG,EAAAoqG,IAAA,GACA,KAAAG,EAAAF,GAAAC,EAAAtqG,EAAAuqG,GAAAvqG,EAAAuqG,EAAA,OACAA,GAGAC,GAAAxqG,EAAAoqG,EAAAG,OAGA,MAAAA,EAAAF,GAAAC,EAAAtqG,EAAAuqG,GAAAvqG,EAAAuqG,EAAA,QACAA,GAIA,OAAAA,GAAAH,EAGA,QAAAI,GAAAxqG,EAAAoqG,EAAAC,GAGA,IAFAA,IAEAD,EAAAC,GAAA,CACA,GAAA1yE,GAAA33B,EAAAoqG,EACApqG,GAAAoqG,KAAApqG,EAAAqqG,GACArqG,EAAAqqG,KAAA1yE,GAIA,QAAA8yE,GAAAzqG,EAAAoqG,EAAAC,EAAA5jD,EAAA6jD,GAKA,IAJA7jD,IAAA2jD,GACA3jD,IAGcA,EAAA4jD,EAAY5jD,IAAA,CAO1B,IANA,GAIAg8C,GAJAiI,EAAA1qG,EAAAymD,GAEArmC,EAAAgqF,EACA7pF,EAAAkmC,EAGArmC,EAAAG,GACAkiF,EAAAriF,EAAAG,IAAA,EAEA+pF,EAAAI,EAAA1qG,EAAAyiG,IAAA,EACAliF,EAAAkiF,EAGAriF,EAAAqiF,EAAA,CAIA,IAAA7zD,GAAA6X,EAAArmC,CAEA,QAAAwuB,GACA,OACA5uC,EAAAogB,EAAA,GAAApgB,EAAAogB,EAAA,EAEA,QACApgB,EAAAogB,EAAA,GAAApgB,EAAAogB,EAAA,EAEA,QACApgB,EAAAogB,EAAA,GAAApgB,EAAAogB,EACA,MACA,SACA,KAAAwuB,EAAA,GACA5uC,EAAAogB,EAAAwuB,GAAA5uC,EAAAogB,EAAAwuB,EAAA,GACAA,IAIA5uC,EAAAogB,GAAAsqF,GAIA,QAAAC,GAAA1qG,EAAAD,EAAAymD,EAAAtoD,EAAAysG,EAAAN,GACA,GAAAO,GAAA,EACAC,EAAA,EACAjR,EAAA,CAEA,IAAAyQ,EAAArqG,EAAAD,EAAAymD,EAAAmkD,IAAA,GAGA,IAFAE,EAAA3sG,EAAAysG,EAEA/Q,EAAAiR,GAAAR,EAAArqG,EAAAD,EAAAymD,EAAAmkD,EAAA/Q,IAAA,GACAgR,EAAAhR,GACAA,EAAA,GAAAA,GAAA,KAEA,IACAA,EAAAiR,EAIAjR,GAAAiR,IACAjR,EAAAiR,GAGAD,GAAAD,EACA/Q,GAAA+Q,MAEA,CAEA,IADAE,EAAAF,EAAA,EACA/Q,EAAAiR,GAAAR,EAAArqG,EAAAD,EAAAymD,EAAAmkD,EAAA/Q,KAAA,GACAgR,EAAAhR,GACAA,EAAA,GAAAA,GAAA,KAEA,IACAA,EAAAiR,EAGAjR,GAAAiR,IACAjR,EAAAiR,EAGA,IAAAn7D,GAAAk7D,CACAA,GAAAD,EAAA/Q,EACAA,EAAA+Q,EAAAj7D,EAIA,IADAk7D,IACAA,EAAAhR,GAAA,CACA,GAAAvsF,GAAAu9F,GAAAhR,EAAAgR,IAAA,EAEAP,GAAArqG,EAAAD,EAAAymD,EAAAn5C,IAAA,EACAu9F,EAAAv9F,EAAA,EAGAusF,EAAAvsF,EAGA,MAAAusF,GAGA,QAAAkR,GAAA9qG,EAAAD,EAAAymD,EAAAtoD,EAAAysG,EAAAN,GACA,GAAAO,GAAA,EACAC,EAAA,EACAjR,EAAA,CAEA,IAAAyQ,EAAArqG,EAAAD,EAAAymD,EAAAmkD,IAAA,GAGA,IAFAE,EAAAF,EAAA,EAEA/Q,EAAAiR,GAAAR,EAAArqG,EAAAD,EAAAymD,EAAAmkD,EAAA/Q,IAAA,GACAgR,EAAAhR,GACAA,EAAA,GAAAA,GAAA,KAEA,IACAA,EAAAiR,EAIAjR,GAAAiR,IACAjR,EAAAiR,EAGA,IAAAn7D,GAAAk7D,CACAA,GAAAD,EAAA/Q,EACAA,EAAA+Q,EAAAj7D,MAEA,CAGA,IAFAm7D,EAAA3sG,EAAAysG,EAEA/Q,EAAAiR,GAAAR,EAAArqG,EAAAD,EAAAymD,EAAAmkD,EAAA/Q,KAAA,GACAgR,EAAAhR,GACAA,EAAA,GAAAA,GAAA,KAEA,IACAA,EAAAiR,EAIAjR,GAAAiR,IACAjR,EAAAiR,GAGAD,GAAAD,EACA/Q,GAAA+Q,EAKA,IAFAC,IAEAA,EAAAhR,GAAA,CACA,GAAAvsF,GAAAu9F,GAAAhR,EAAAgR,IAAA,EAEAP,GAAArqG,EAAAD,EAAAymD,EAAAn5C,IAAA,EACAusF,EAAAvsF,EAGAu9F,EAAAv9F,EAAA,EAIA,MAAAusF,GAGA,QAAAmR,GAAAhrG,EAAAsqG,GAsBA,QAAAW,GAAAC,EAAAC,GACAC,EAAAC,GAAAH,EACAI,EAAAD,GAAAF,EACAE,GAAA,EAGA,QAAAE,KACA,KAAAF,EAAA,IACA,GAAAz8D,GAAAy8D,EAAA,CAEA,IAAAz8D,GAAA,GAAA08D,EAAA18D,EAAA,IAAA08D,EAAA18D,GAAA08D,EAAA18D,EAAA,IAAAA,GAAA,GAAA08D,EAAA18D,EAAA,IAAA08D,EAAA18D,GAAA08D,EAAA18D,EAAA,GACA08D,EAAA18D,EAAA,GAAA08D,EAAA18D,EAAA,IACAA,QAGA,IAAA08D,EAAA18D,GAAA08D,EAAA18D,EAAA,GACA,KAEA48D,GAAA58D,IAIA,QAAA68D,KACA,KAAAJ,EAAA,IACA,GAAAz8D,GAAAy8D,EAAA,CAEAz8D,GAAA,GAAA08D,EAAA18D,EAAA,GAAA08D,EAAA18D,EAAA,IACAA,IAGA48D,EAAA58D,IAIA,QAAA48D,GAAAvtG,GACA,GAAAytG,GAAAN,EAAAntG,GACA0tG,EAAAL,EAAArtG,GACA2tG,EAAAR,EAAAntG,EAAA,GACA4tG,EAAAP,EAAArtG,EAAA,EAEAqtG,GAAArtG,GAAA0tG,EAAAE,EAEA5tG,IAAAotG,EAAA,IACAD,EAAAntG,EAAA,GAAAmtG,EAAAntG,EAAA,GACAqtG,EAAArtG,EAAA,GAAAqtG,EAAArtG,EAAA,IAGAotG,GAEA,IAAA1wE,GAAAowE,EAAA/qG,EAAA4rG,GAAA5rG,EAAA0rG,EAAAC,EAAA,EAAArB,EACAoB,IAAA/wE,EAGA,KAFAgxE,GAAAhxE,IAQA,KAFAkxE,EAAAlB,EAAA3qG,EAAA0rG,EAAAC,EAAA,GAAA3rG,EAAA4rG,EAAAC,IAAA,EAAAvB,MAMAqB,GAAAE,EACAC,EAAAJ,EAAAC,EAAAC,EAAAC,GAGAE,EAAAL,EAAAC,EAAAC,EAAAC,IAIA,QAAAC,GAAAJ,EAAAC,EAAAC,EAAAC,GACA,GAAA5tG,GAAA,CAEA,KAAAA,EAAA,EAAuBA,EAAA0tG,EAAa1tG,IACpC0xC,EAAA1xC,GAAA+B,EAAA0rG,EAAAztG,EAGA,IAAA+tG,GAAA,EACAC,EAAAL,EACAM,EAAAR,CAIA,IAFA1rG,EAAAksG,KAAAlsG,EAAAisG,KAEA,KAAAJ,EAAA,CAOA,OAAAF,EAAA,CACA,IAAA1tG,EAAA,EAA2BA,EAAA4tG,EAAa5tG,IACxC+B,EAAAksG,EAAAjuG,GAAA+B,EAAAisG,EAAAhuG,EAGA,aADA+B,EAAAksG,EAAAL,GAAAl8D,EAAAq8D,IAOA,IAHA,GACAG,GAAAC,EAAAC,EADAC,EAAAC,IAGA,CACAJ,EAAA,EACAC,EAAA,EACAC,GAAA,CAEA,IACA,GAAA/B,EAAAtqG,EAAAisG,GAAAt8D,EAAAq8D,IAAA,GAKA,GAJAhsG,EAAAksG,KAAAlsG,EAAAisG,KACAG,IACAD,EAAA,EAEA,KAAAN,EAAA,CACAQ,GAAA,CACA,YAOA,IAHArsG,EAAAksG,KAAAv8D,EAAAq8D,KACAG,IACAC,EAAA,EACA,KAAAT,EAAA,CACAU,GAAA,CACA,eAGiBF,EAAAC,GAAAE,EAEjB,IAAAD,EACA,KAGA,IAGA,QAFAF,EAAApB,EAAA/qG,EAAAisG,GAAAt8D,EAAAq8D,EAAAL,EAAA,EAAArB,IAEA,CACA,IAAArsG,EAAA,EAAmCA,EAAAkuG,EAAYluG,IAC/C+B,EAAAksG,EAAAjuG,GAAA0xC,EAAAq8D,EAAA/tG,EAMA,IAHAiuG,GAAAC,EACAH,GAAAG,GACAR,GAAAQ,IACA,GACAE,GAAA,CACA,QAMA,GAFArsG,EAAAksG,KAAAlsG,EAAAisG,KAEA,KAAAJ,EAAA,CACAQ,GAAA,CACA,OAKA,QAFAD,EAAAzB,EAAAh7D,EAAAq8D,GAAAhsG,EAAAisG,EAAAJ,EAAA,EAAAvB,IAEA,CACA,IAAArsG,EAAA,EAAmCA,EAAAmuG,EAAYnuG,IAC/C+B,EAAAksG,EAAAjuG,GAAA+B,EAAAisG,EAAAhuG,EAOA,IAJAiuG,GAAAE,EACAH,GAAAG,EAGA,KAFAP,GAAAO,GAEA,CACAC,GAAA,CACA,QAKA,GAFArsG,EAAAksG,KAAAv8D,EAAAq8D,KAEA,KAAAL,EAAA,CACAU,GAAA,CACA,OAGAC,UACiBH,GAAAK,GAAAJ,GAAAI,EAEjB,IAAAH,EACA,KAGAC,GAAA,IACAA,EAAA,GAGAA,GAAA,EAOA,GAJAC,EAAAD,EAEAC,EAAA,IAAAA,EAAA,GAEA,IAAAZ,EAAA,CACA,IAAA1tG,EAAA,EAA2BA,EAAA4tG,EAAa5tG,IACxC+B,EAAAksG,EAAAjuG,GAAA+B,EAAAisG,EAAAhuG,EAEA+B,GAAAksG,EAAAL,GAAAl8D,EAAAq8D,OAEA,QAAAL,EACA,SAAAzoG,MAIA,KAAAjF,EAAA,EAA2BA,EAAA0tG,EAAa1tG,IACxC+B,EAAAksG,EAAAjuG,GAAA0xC,EAAAq8D,EAAA/tG,QA7HA,KAAAA,EAAA,EAA2BA,EAAA0tG,EAAa1tG,IACxC+B,EAAAksG,EAAAjuG,GAAA0xC,EAAAq8D,EAAA/tG,GAiIA,QAAA8tG,GAAAL,EAAAC,EAAAC,EAAAC,GACA,GAAA5tG,GAAA,CAEA,KAAAA,EAAA,EAAuBA,EAAA4tG,EAAa5tG,IACpC0xC,EAAA1xC,GAAA+B,EAAA4rG,EAAA3tG,EAGA,IAAA+tG,GAAAN,EAAAC,EAAA,EACAM,EAAAJ,EAAA,EACAK,EAAAN,EAAAC,EAAA,EACAY,EAAA,EACAC,EAAA,CAIA,IAFA1sG,EAAAksG,KAAAlsG,EAAAgsG,KAEA,KAAAL,EAAA,CAUA,OAAAE,EAAA,CAMA,IALAK,GAAAP,EACAK,GAAAL,EACAe,EAAAR,EAAA,EACAO,EAAAT,EAAA,EAEA/tG,EAAA0tG,EAAA,EAAqC1tG,GAAA,EAAQA,IAC7C+B,EAAA0sG,EAAAzuG,GAAA+B,EAAAysG,EAAAxuG,EAIA,aADA+B,EAAAksG,GAAAv8D,EAAAs8D,IAMA,IAFA,GAAAK,GAAAC,IAEA,CACA,GAAAJ,GAAA,EACAC,EAAA,EACAC,GAAA,CAEA,IACA,GAAA/B,EAAA36D,EAAAs8D,GAAAjsG,EAAAgsG,IAAA,GAIA,GAHAhsG,EAAAksG,KAAAlsG,EAAAgsG,KACAG,IACAC,EAAA,EACA,KAAAT,EAAA,CACAU,GAAA,CACA,YAOA,IAHArsG,EAAAksG,KAAAv8D,EAAAs8D,KACAG,IACAD,EAAA,EACA,KAAAN,EAAA,CACAQ,GAAA,CACA,eAGiBF,EAAAC,GAAAE,EAEjB,IAAAD,EACA,KAGA,IAGA,QAFAF,EAAAR,EAAAZ,EAAAp7D,EAAAs8D,GAAAjsG,EAAA0rG,EAAAC,IAAA,EAAArB,IAEA,CAOA,IANA4B,GAAAC,EACAH,GAAAG,EACAR,GAAAQ,EACAO,EAAAR,EAAA,EACAO,EAAAT,EAAA,EAEA/tG,EAAAkuG,EAAA,EAA4CluG,GAAA,EAAQA,IACpD+B,EAAA0sG,EAAAzuG,GAAA+B,EAAAysG,EAAAxuG,EAGA,QAAA0tG,EAAA,CACAU,GAAA,CACA,QAMA,GAFArsG,EAAAksG,KAAAv8D,EAAAs8D,KAEA,KAAAJ,EAAA,CACAQ,GAAA,CACA,OAKA,QAFAD,EAAAP,EAAAlB,EAAA3qG,EAAAgsG,GAAAr8D,EAAA,EAAAk8D,IAAA,EAAAvB,IAEA,CAOA,IANA4B,GAAAE,EACAH,GAAAG,EACAP,GAAAO,EACAM,EAAAR,EAAA,EACAO,EAAAR,EAAA,EAEAhuG,EAAA,EAAmCA,EAAAmuG,EAAYnuG,IAC/C+B,EAAA0sG,EAAAzuG,GAAA0xC,EAAA88D,EAAAxuG,EAGA,IAAA4tG,GAAA,GACAQ,GAAA,CACA,QAMA,GAFArsG,EAAAksG,KAAAlsG,EAAAgsG,KAEA,KAAAL,EAAA,CACAU,GAAA,CACA,OAGAC,UACiBH,GAAAK,GAAAJ,GAAAI,EAEjB,IAAAH,EACA,KAGAC,GAAA,IACAA,EAAA,GAGAA,GAAA,EASA,GANAC,EAAAD,EAEAC,EAAA,IACAA,EAAA,GAGA,IAAAV,EAAA,CAMA,IALAK,GAAAP,EACAK,GAAAL,EACAe,EAAAR,EAAA,EACAO,EAAAT,EAAA,EAEA/tG,EAAA0tG,EAAA,EAAqC1tG,GAAA,EAAQA,IAC7C+B,EAAA0sG,EAAAzuG,GAAA+B,EAAAysG,EAAAxuG,EAGA+B,GAAAksG,GAAAv8D,EAAAs8D,OAEA,QAAAJ,EACA,SAAA3oG,MAKA,KADAupG,EAAAP,GAAAL,EAAA,GACA5tG,EAAA,EAA2BA,EAAA4tG,EAAa5tG,IACxC+B,EAAAysG,EAAAxuG,GAAA0xC,EAAA1xC,QAjJA,KAFAwuG,EAAAP,GAAAL,EAAA,GAEA5tG,EAAA,EAA2BA,EAAA4tG,EAAa5tG,IACxC+B,EAAAysG,EAAAxuG,GAAA0xC,EAAA1xC,GA/PA,GAIAmtG,GACAE,EALAiB,EAAAC,EACAruG,EAAA,EAKAktG,EAAA,CAEAltG,GAAA6B,EAAA7B,MAMA,IAAAwxC,KAIAy7D,MACAE,KAiYAlpG,KAAAmpG,YACAnpG,KAAAqpG,iBACArpG,KAAA6oG,UAGA,QAAAzhF,GAAAxpB,EAAAsqG,EAAAF,EAAAC,GACAD,IACAA,EAAA,GAEAC,IACAA,EAAArqG,EAAA7B,OAGA,IAAAwuG,GAAAtC,EAAAD,CAEA,MAAAuC,EAAA,IAIA,GAAArB,GAAA,CAEA,IAAAqB,EAAAzC,EAGA,MAFAoB,GAAAnB,EAAAnqG,EAAAoqG,EAAAC,EAAAC,OACAG,GAAAzqG,EAAAoqG,EAAAC,EAAAD,EAAAkB,EAAAhB,EAIA,IAAAsC,GAAA,GAAA5B,GAAAhrG,EAAAsqG,GAEAuC,EAAA5C,EAAA0C,EAEA,IAEA,IADArB,EAAAnB,EAAAnqG,EAAAoqG,EAAAC,EAAAC,IACAuC,EAAA,CACA,GAAAC,GAAAH,CACAG,GAAAD,IACAC,EAAAD,GAGApC,EAAAzqG,EAAAoqG,IAAA0C,EAAA1C,EAAAkB,EAAAhB,GACAgB,EAAAwB,EAGAF,EAAA3B,QAAAb,EAAAkB,GACAsB,EAAArB,YAEAoB,GAAArB,EACAlB,GAAAkB,QACS,IAAAqB,EAETC,GAAAnB,kBA7pBA,GAAAvB,GAAA,GAEAsC,EAAA,CA8pBA/uG,GAAAC,QAAA8rB,GlD2hwBM,SAAU/rB,EAAQC,EAAS+I,GmDxqxBjC,QAAA8rB,GAAAvmB,GAEAA,QAEAkqF,EAAAl4F,KAAAoE,KAAA4J,EAGA,QAAAvE,KAAAuE,GAEAA,EAAArN,eAAA8I,IACA,UAAAA,IAEArF,KAAAqF,GAAAuE,EAAAvE,GAOArF,MAAAgF,MAAA,GAAA2lG,GAAA/gG,EAAA5E,OAEAhF,KAAA4yB,MAAA,KAEA5yB,KAAA4qG,eApCA,GAAA9iG,GAAAzD,EAAA,GAEAsmG,EAAAtmG,EAAA,KAEAyvF,EAAAzvF,EAAA,KACAwmG,EAAAxmG,EAAA,IAqCA8rB,GAAAhyB,WAEAlC,YAAAk0B,EAEAhwB,KAAA,cAQAkxB,SAAA,EASAujE,WAAA,EAOAx6E,EAAA,EAOAvU,GAAA,EAQAwU,OAAA,EAQAywF,WAAA,EAQAC,UAAA,EAQAt2F,QAAA,EAOAu2F,SAAA,EAOAC,OAAA,UAOAC,WAAA,EAOAlxF,aAAA,EAEAmxF,YAAA,SAAAv6E,KAEAw6E,WAAA,SAAAx6E,KAOAD,MAAA,SAAAC,EAAAC,KAOAvmB,gBAAA,aASA+oB,QAAA,SAAA1oB,EAAAE,GACA,MAAA7K,MAAAqrG,YAAA1gG,EAAAE,IAOA3E,SAAA,SAAAvH,EAAAC,GACAD,EAAA/C,KAAAgD,EAAAoB,OAUAqrG,YAAA,SAAA1gG,EAAAE,GACA,GAAAygG,GAAAtrG,KAAAuzB,sBAAA5oB,EAAAE,EAEA,OADA7K,MAAAsK,kBACA+oB,QAAAi4E,EAAA,GAAAA,EAAA,KAOA73E,MAAA,WACAzzB,KAAAqxB,SAAA,EAEArxB,KAAA4yB,MAAA,KAEA5yB,KAAA0F,MAAA1F,KAAA0F,KAAAiuB,WAsBA43E,aAAA,SAAAz3E,GACA,MAAA9zB,MAAA+zB,QAAA,QAAAD,IAGAE,OAAA,SAAA13B,EAAAuB,GACA,UAAAvB,EACAw3F,EAAA31F,UAAA61B,OAAAp4B,KAAAoE,KAAA1D,EAAAuB,GAGAmC,KAAAgF,MAAA9D,IAAArD,IAQA+H,SAAA,SAAAtJ,EAAAuB,GAGA,MAFAmC,MAAAgF,MAAA9D,IAAA5E,EAAAuB,GACAmC,KAAAyzB,OAAA,GACAzzB,MAOAwrG,SAAA,SAAA9sG,GAGA,MAFAsB,MAAAgF,MAAA,GAAA2lG,GAAAjsG,GACAsB,KAAAyzB,OAAA,GACAzzB,OAIA8H,EAAAhK,SAAAqyB,EAAA2jE,GAEAhsF,EAAAxJ,MAAA6xB,EAAA06E,GAGAxvG,EAAAC,QAAA60B,GnDosxBM,SAAU90B,EAAQC,GoD18xBxB,GAAAmwG,GAAA,SAAAvrF,GAEAlgB,KAAAkgB,iBAGAurF,GAAAttG,WAEAlC,YAAAwvG,EAEAC,aAAA,SAAAjU,EAAAhzF,GACAzE,KAAAkgB,WAAAjhB,MAEAw4F,SAEAhzF,YAKApJ,EAAAC,QAAAmwG,GpDq9xBQ,CAEF,SAAUpwG,EAAQC,GqD9+xBxBD,EAAAC,QAAA,SAAAk+F,GACA,OAAAl2C,IAAAk2C,EAAA,KAAAmS,WAAA,yBAAAnS,EACA,OAAAA,KrDs/xBM,SAAUn+F,EAAQC,EAAS+I,GsDz/xBjC,GAAA2L,GAAA3L,EAAA,IACA6oF,EAAA7oF,EAAA,IACAusB,EAAAvsB,EAAA,KACAunG,EAAAvnG,EAAA,KAGAwnG,EAAA,SAAA1rG,EAAAkF,EAAA7J,GACA,GASAc,GAAAwvG,EAAAr3E,EATAs3E,EAAA5rG,EAAA0rG,EAAA5tG,EACA+tG,EAAA7rG,EAAA0rG,EAAArzD,EACAyzD,EAAA9rG,EAAA0rG,EAAAvzD,EACA4zD,EAAA/rG,EAAA0rG,EAAAM,EACAC,EAAAjsG,EAAA0rG,EAAAv/D,EACA+/D,EAAAlsG,EAAA0rG,EAAAS,EACAhxG,EAAA0wG,EAAA9e,IAAA7nF,KAAA6nF,EAAA7nF,OACAknG,EAAAjxG,EAAA,UACAmB,EAAAuvG,EAAAh8F,EAAAi8F,EAAAj8F,EAAA3K,IAAA2K,EAAA3K,QAAqF,SAErF2mG,KAAAxwG,EAAA6J,EACA,KAAA/I,IAAAd,IAEAswG,GAAAC,GAAAtvG,OAAA6mD,KAAA7mD,EAAAH,KACAA,IAAAhB,KAEAm5B,EAAAq3E,EAAArvG,EAAAH,GAAAd,EAAAc,GAEAhB,EAAAgB,GAAA0vG,GAAA,kBAAAvvG,GAAAH,GAAAd,EAAAc,GAEA8vG,GAAAN,EAAAl7E,EAAA6D,EAAAzkB,GAEAq8F,GAAA5vG,EAAAH,IAAAm4B,EAAA,SAAA8X,GACA,GAAAtuC,GAAA,SAAA2S,EAAAC,EAAAu7B,GACA,GAAApsC,eAAAusC,GAAA,CACA,OAAA3sC,UAAA7D,QACA,iBAAAwwC,EACA,kBAAAA,GAAA37B,EACA,kBAAA27B,GAAA37B,EAAAC,GACW,UAAA07B,GAAA37B,EAAAC,EAAAu7B,GACF,MAAAG,GAAA1sC,MAAAG,KAAAJ,WAGT,OADA3B,GAAA,UAAAsuC,EAAA,UACAtuC,GAEKw2B,GAAAy3E,GAAA,kBAAAz3E,GAAA7D,EAAAlwB,SAAA9E,KAAA64B,KAELy3E,KACA5wG,EAAAkxG,UAAAlxG,EAAAkxG,aAA+ClwG,GAAAm4B,EAE/Ct0B,EAAA0rG,EAAAtzD,GAAAg0D,MAAAjwG,IAAAsvG,EAAAW,EAAAjwG,EAAAm4B,KAKAo3E,GAAA5tG,EAAA,EACA4tG,EAAArzD,EAAA,EACAqzD,EAAAvzD,EAAA,EACAuzD,EAAAM,EAAA,EACAN,EAAAv/D,EAAA,GACAu/D,EAAAS,EAAA,GACAT,EAAAY,EAAA,GACAZ,EAAAtzD,EAAA,IACAl9C,EAAAC,QAAAuwG,GtD+/xBM,SAAUxwG,EAAQC,EAAS+I,GuD1jyBjC,GAAAqoG,GAAAroG,EAAA,IACAhJ,GAAAC,QAAA+G,OAAA,KAAAsqG,qBAAA,GAAAtqG,OAAA,SAAAm3F,GACA,gBAAAkT,EAAAlT,KAAAvkF,MAAA,IAAA5S,OAAAm3F,KvDkkyBM,SAAUn+F,EAAQC,EAAS+I,GwDrkyBjC,GAAAuoG,GAAAvoG,EAAA,KACAwoG,EAAAxoG,EAAA,KACAyoG,EAAAzoG,EAAA,KACA0oG,EAAA1qG,OAAA69B,cAEA5kC,GAAA0uB,EAAA3lB,EAAA,IAAAhC,OAAA69B,eAAA,SAAA8sE,EAAAb,EAAAc,GAIA,GAHAL,EAAAI,GACAb,EAAAW,EAAAX,GAAA,GACAS,EAAAK,GACAJ,EAAA,IACA,MAAAE,GAAAC,EAAAb,EAAAc,GACG,MAAAzmG,IACH,UAAAymG,IAAA,OAAAA,GAAA,KAAAtB,WAAA,2BAEA,OADA,SAAAsB,KAAAD,EAAAb,GAAAc,EAAApvG,OACAmvG,IxD4kyBM,SAAU3xG,EAAQC,GyDzlyBxB,GAAAi+C,GAAAjxC,KAAAixC,KACAt/B,EAAA3R,KAAA2R,KACA5e,GAAAC,QAAA,SAAAk+F,GACA,MAAAl2E,OAAAk2E,MAAA,GAAAA,EAAA,EAAAv/E,EAAAs/B,GAAAigD,KzDimyBM,SAAUn+F,EAAQC,EAAS+I,G0DpmyBjC,GAAA6oG,GAAA7oG,EAAA,IACA8oG,EAAA9oG,EAAA,GACAhJ,GAAAC,QAAA,SAAAk+F,GACA,MAAA0T,GAAAC,EAAA3T,M1D4myBM,SAAUn+F,EAAQC,EAAS+I,G2D9myBjC,GAAA2d,GAAA3d,EAAA,EAEAA,GAAA,KACAA,EAAA,KAEA2d,EAAAiB,qBACA5e,EAAA,MAGA2d,EAAAoC,eAAA/f,EAAA,MACA2d,EAAAkC,eAAA7f,EAAA,O3DwnyBM,SAAUhJ,EAAQC,EAAS+I,G4DznyBjC,QAAA+oG,GAAA5uG,EAAAyY,GACA,GAAAo2F,GAAA7uG,EAAA+gB,cAAAtI,EAAA,aACA,OAAAo2F,aAAA7qG,OACA6qG,EAAA5sG,UACA4sG,MAGA,QAAAC,GAAAD,GACA,OAAAA,EAAA,KAAAA,EAAA,MAUA,QAAA/uB,GAAA9/E,EAAAyY,EAAAs2F,GACA5kG,EAAAC,MAAAhN,KAAAoE,MAEAA,KAAAwtG,WAAAhvG,EAAAyY,EAAAs2F,GAKA,QAAAE,GAAAr6D,EAAAC,GACArzC,KAAA4D,OAAA8pG,MAAAt6D,EAAAC,GAjCA,GAAAvrC,GAAAzD,EAAA,GACAspG,EAAAtpG,EAAA,IACAsE,EAAAtE,EAAA,GACA+yB,EAAA/yB,EAAA,GACAupG,EAAAvpG,EAAA,KA0BAwpG,EAAAvvB,EAAAngF,SAMA0vG,GAAAC,cAAA,SAAAC,EAAAvvG,EAAAyY,EAAAo2F,GAEArtG,KAAAw0F,WAEA,IAAAx9E,GAAAxY,EAAAg/F,UACA/4F,EAAAjG,EAAA+gB,cAAAtI,EAAA,SAQA+2F,EAAAL,EAAAM,aACAF,GAAA,SAAAtpG,EAGAupG,GAAAnmG,MACAhC,GAAA,IACAmlG,SAAA,EACAj5E,OAAA,OAGAi8E,EAAAN,MAAAD,EAEA9kG,EAAAqF,UAAAggG,GACAj8E,MAAAu7E,EAAAD,IACSr2F,EAAAC,GACTjX,KAAAkuG,YAAAH,EAEA/tG,KAAA+D,IAAAiqG,IAOAH,EAAAM,oBAAA,SAAAC,GACApuG,KAAA6xC,QAAA,GAAAjqC,cAAAwmG,IAMAP,EAAAQ,cAAA,WACA,MAAAruG,MAAA6xC,QAAA,IAOAg8D,EAAAP,SAAA,WACA,MAAAttG,MAAA6xC,QAAA,GAAA9f,OAMA87E,EAAApG,UAAA,WACAznG,KAAA6xC,QAAA,GAAAx7B,QAAA,aAMAw3F,EAAAnG,SAAA,WACA1nG,KAAA6xC,QAAA,GAAAx7B,QAAA,WAOAw3F,EAAAS,KAAA,SAAAj0F,EAAAD,GACA,GAAA4zF,GAAAhuG,KAAA6xC,QAAA,EACAm8D,GAAA3zF,SACA2zF,EAAA5zF,KAGAyzF,EAAAU,aAAA,SAAAzD,GACA,GAAAkD,GAAAhuG,KAAA6xC,QAAA,EACAm8D,GAAAlD,YACAkD,EAAA/C,OAAAH,EAAA,kBAQA+C,EAAAL,WAAA,SAAAhvG,EAAAyY,EAAAs2F,GACAvtG,KAAAyU,QAAA,CAEA,IAAAs5F,GAAAvvG,EAAA+gB,cAAAtI,EAAA,oBACAD,EAAAxY,EAAAg/F,UACA6P,EAAAD,EAAA5uG,EAAAyY,EAEA,IAAA82F,IAAA/tG,KAAAkuG,YACAluG,KAAA8tG,cAAAC,EAAAvvG,EAAAyY,EAAAo2F,OAEA,CACA,GAAAW,GAAAhuG,KAAA6xC,QAAA,EACAm8D,GAAAv5F,QAAA,EACA9L,EAAAoF,YAAAigG,GACAj8E,MAAAu7E,EAAAD,IACar2F,EAAAC,GAEbjX,KAAAwuG,cAAAhwG,EAAAyY,EAAAo2F,EAAAE,GACAvtG,KAAAyuG,aAAAz3F,EAIA,IAAA03F,IAAA,sBACAC,GAAA,wBACAC,GAAA,kBACAC,GAAA,mBAEAhB,GAAAW,cAAA,SAAAhwG,EAAAyY,EAAAo2F,EAAAE,GACA,GAAAS,GAAAhuG,KAAA6xC,QAAA,GACA76B,EAAAxY,EAAAg/F,UACA/4F,EAAAjG,EAAA+gB,cAAAtI,EAAA,QAGA,WAAA+2F,EAAA7tG,MACA6tG,EAAAxC,UACAr4E,eAAA,IAIAo6E,KAAA,IAEA,IAAAuB,GAAAvB,KAAAuB,UACAC,EAAAxB,KAAAwB,eACAC,EAAAzB,KAAAyB,aACAC,EAAA1B,KAAA0B,aACAtiG,EAAA4gG,KAAA5gG,WACAuiG,EAAA3B,KAAA2B,gBACAC,EAAA5B,KAAA4B,eACAC,EAAA7B,KAAA6B,WAEA,KAAA7B,GAAA/uG,EAAAs8F,cAAA,CACA,GAAA/tE,GAAAvuB,EAAAwuB,aAAA/V,EAIA63F,GAAA/hF,EAAA/f,SAAA0hG,GAAAW,cAAA,UACAN,EAAAhiF,EAAA/f,SAAA2hG,GAAAU,eAEAL,EAAAjiF,EAAAxlB,WAAA,gBACA0nG,EAAAliF,EAAAxlB,WAAA,gBAEAoF,EAAAogB,EAAA/f,SAAA4hG,GACAM,EAAAniF,EAAA/f,SAAA6hG,GACAM,EAAApiF,EAAAxlB,WAAA,kBACA6nG,EAAAriF,EAAAxlB,WAAA,cAGAwnG,GAAAjnG,EAAA5K,UAA6C6xG,EAG7C,IAAAO,GAAAtB,EAAAhpG,KAEAgpG,GAAAnmG,KAAA,YAAAmnG,GAAA,GAAA1mG,KAAA6gB,GAAA,QAEA8lF,GACAjB,EAAAnmG,KAAA,YACAuvB,EAAA3Q,aAAAwoF,EAAA,GAAA5B,EAAA,IACAj2E,EAAA3Q,aAAAwoF,EAAA,GAAA5B,EAAA,MAIA+B,GAAApB,EAAAnmG,KAAA,SAAAunG,GAGApB,EAAAuB,SAAA9qG,GAEAupG,EAAApoG,SAAAkpG,EAEA,IAAAU,GAAAhxG,EAAA+gB,cAAAtI,EAAA,UACA,OAAAu4F,IACAF,EAAAE,UAGA,IAAAC,GAAA7B,EAAA8B,kBAAAlxG,EACAovG,GAAA+B,eACAnxG,EAAAyY,EAAAw4F,EAAAH,EAAAt4F,EAAArK,EAAAlI,GAEAmpG,EAAA+B,eACAnxG,EAAAyY,EAAAw4F,EAAAV,EAAA/3F,EAAAk4F,EAAAzqG,GAGAupG,EAAAhyF,IAAA,aACAA,IAAA,YACAA,IAAA,YACAA,IAAA,UAEAgyF,EAAA9oG,WAAA6pG,EAEApmG,EAAA0D,cAAA2hG,EAEA,IAAAj8E,GAAAu7E,EAAAD,EAEA,IAAA8B,GAAAn4F,EAAA5P,qBAAA,CACA,GAAAwoG,GAAA,WACA,GAAAC,GAAA99E,EAAA,GAAAA,EAAA,EACA/xB,MAAA2H,WACAoqB,OACAzpB,KAAAE,IAAA,IAAAupB,EAAA,GAAAA,EAAA,MACAzpB,KAAAE,IAAA,IAAAupB,EAAA,GAAAA,EAAA,KAAA89E,KAEiB,mBAEjBC,EAAA,WACA9vG,KAAA2H,WACAoqB,SACiB,kBAEjBi8E,GAAAxhG,GAAA,YAAAojG,GACApjG,GAAA,WAAAsjG,GACAtjG,GAAA,WAAAojG,GACApjG,GAAA,SAAAsjG,KAIAjC,EAAAkC,QAAA,SAAApxG,GACA,GAAAqvG,GAAAhuG,KAAA6xC,QAAA,EAEA7xC,MAAAyU,OAAAu5F,EAAAv5F,QAAA,EAEAu5F,EAAAhpG,MAAAutB,KAAA,GACA5pB,EAAAoF,YAAAigG,GACAj8E,OAAA,MACS/xB,KAAAyuG,aAAAzuG,KAAAmH,UAAAxI,IAGTmJ,EAAAhK,SAAAwgF,EAAA31E,EAAAC,OAEAvN,EAAAC,QAAAgjF,G5D2oyBM,SAAUjjF,EAAQC,EAAS+I,GAEjC,Y6Dj6yBA,IAAAygB,GAAAzgB,EAAA,IACAm2F,EAAAn2F,EAAA,IACA2rG,EAAA3rG,EAAA,KACAyD,EAAAzD,EAAA,GAEA4rG,GAMAC,aAAA,KAKAze,eAAA,SAAAn1E,EAAA9O,GAKA,GAAAotF,GAMAuV,EAJA5U,EAAA/tF,EAAAmN,aAAA,QAAA3a,KAAAyC,IAAA,eACA+4F,EAAAhuF,EAAAmN,aAAA,QAAA3a,KAAAyC,IAAA,eACAg5F,EAAAF,EAAA94F,IAAA,QACAi5F,EAAAF,EAAA/4F,IAAA,OAMA,cAAAg5F,GACAn/E,EAAApS,OAAA,aACA0wF,EAAAW,EAAAlzD,gBACA8nE,GAAA,GAEA,aAAAzU,GACAp/E,EAAApS,OAAA,WACA0wF,EAAAY,EAAAnzD,gBACA8nE,GAAA,GAGA7zF,EAAApS,OAAAoS,EAAApS,QAAA,YAGA,IAAAkmG,IAAA,SACAC,EAAA,eAAA/zF,EAAApS,OAAA,IACAomG,EAAAtwG,KAAAkwG,aAAAE,EAAAC,GACAE,EAAAH,EAAA,EAAAC,GACA7xG,EAAA8d,EAAA9d,IAEA2xG,IAAAroG,EAAArJ,KAAAD,EAAA,SAAAiX,EAAAnB,GACAxM,EAAAhL,QAAA2Y,MAAAslD,QAAAzmD,IAGA,IAAA2P,KACA5e,KAAAirG,EACApgF,WACAmiE,SAAA,GAEAkI,SAAA,UAEAl1F,KAAAkrG,EACAhW,QAAAv6F,KAAAwwG,uBAAA/vG,SAGAwjB,GAAAu2E,EAAAv2E,EAAAzlB,GACA87F,UAAAt6F,KAAAyC,IAAA,UACA83F,QAAAv6F,KAAAyC,IAAA,eAGA,IAAA6a,GAAA,GAAAwH,GAAAb,EAAAjkB,KAGA,OAFAsd,GAAA02C,SAAAx1D,EAAAo8F,IAAAn6F,QAAA,MAEA6c,GAOA00E,YAAA,WACA,GAAAxB,GAAAxwF,KAAAkwG,YACA,OAAAlwG,MAAAwN,QAAAmN,aAAA61E,EAAA,OAAAxwF,KAAAyC,IAAA+tF,EAAA,cAAAjoD,OAKAkoE,GAEAn/F,KAAA,WAMA,GAAAo/F,GAAA1wG,KAAA2wG,gBAAA,GAAAX,GACAhwG,KAAA4wG,kBAEA5wG,MAAAiR,MAAAlN,IAAA2sG,EAAAz/F,QAGA3N,OAAA,SAAA0T,EAAAxJ,EAAAmJ,GACA3W,KAAA2wG,gBAAAnD,WAAAx2F,EAAA6B,YAGAT,OAAA,SAAA5K,GACAxN,KAAA2wG,gBAAAv4F,UAIA/c,GAAAC,SACA20G,mBACAQ,c7D26yBM,SAAUp1G,EAAQC,EAAS+I,G8D9hzBjC,GAAAyD,GAAAzD,EAAA,GACA+O,EAAA/O,EAAA,GAOAhJ,GAAAC,QAAA,SAAA0X,EAAAxF,GACA,GAEAwJ,GAFAnH,KACAyR,EAAAtO,EAAAsO,WAEA,UAAAA,KACAtK,EAAAxJ,EAAA6T,iBAAAC,IAEA,OAAoBzR,SAGpB,IAAArR,GAAAwY,EAAA6B,UACA1R,EAAAiM,EAAA0b,eAAAtwB,EAAAwU,EACA,UAAA7L,GAAAW,EAAAhL,QAAAqK,GACA,OAAoB0I,SAGpB,IAAAhL,GAAArG,EAAAmkG,iBAAAx7F,GACAmM,EAAA0D,EAAAgI,gBAEA,IAAAhI,EAAA87E,mBACAjjF,EAAAmH,EAAA87E,mBAAA3rF,WAEA,IAAAmM,KAAAu9F,YACAhhG,EAAAyD,EAAAu9F,YACAryG,EAAAwhG,UACAl4F,EAAA/I,IAAAuU,EAAA2Q,WAAA,SAAAusE,GACA,MAAAx5E,GAAA6Y,kBAAA2gE,GAAA,KACqBrpF,GAAA,YAIrB,IAAAtC,EAAA,CAEA,GAAAoF,GAAApF,EAAAyF,kBAAA/O,OACA0O,GAAAe,eAAAnG,EAAA0J,WACAsB,GACA5F,EAAAU,EAAAV,EAAAO,MAAA,EACAP,EAAAY,EAAAZ,EAAAQ,OAAA,GAIA,OAAgBoF,QAAAhL,Q9D0izBV,SAAUxJ,EAAQC,EAAS+I,G+D9jzBjC,QAAAysG,GAAA3/F,EAAAwF,GAYA,QAAAo6F,GAAA51F,EAAAxc,GACAwS,EAAA3E,GAAA2O,EAAA,SAAA3U,GACA,GAAAwqG,GAAAC,EAAAt6F,EAEAlY,GAAAgE,EAAA0O,GAAA+/F,QAAA,SAAAC,GACAA,GAAAxyG,EAAAwyG,EAAA3qG,EAAAwqG,EAAAv1F,kBAGA21F,EAAAJ,EAAAK,SAAA16F,KAnBAlU,EAAA0O,GAAAmgG,cAIA7uG,EAAA0O,GAAAmgG,aAAA,EAEAP,EAAA,QAAAjpG,EAAA/H,MAAAwxG,EAAA,UACAR,EAAA,YAAAjpG,EAAA/H,MAAAwxG,EAAA,cAEAR,EAAA,YAAAS,IAeA,QAAAJ,GAAAC,EAAA16F,GACA,GAGA86F,GAHAC,EAAAL,EAAAM,QAAA51G,OACA61G,EAAAP,EAAAQ,QAAA91G,MAGA21G,GACAD,EAAAJ,EAAAM,QAAAD,EAAA,GAEAE,IACAH,EAAAJ,EAAAQ,QAAAD,EAAA,IAEAH,IACAA,EAAAh2F,eAAA,KACA9E,EAAA8E,eAAAg2F,IAIA,QAAAD,GAAAL,EAAA3qG,EAAAiV,GACA01F,EAAA/gG,QAAA,aAAAqL,GAGA,QAAA81F,GAAAO,EAAAX,EAAA3qG,EAAAiV,GACA01F,EAAA/gG,QAAA0hG,EAAAtrG,EAAAiV,GAGA,QAAAw1F,GAAAt6F,GACA,GAAA06F,IACAM,WACAE,YAOAp2F,EAAA,SAAA7H,GACA,GAAAm+F,GAAAV,EAAAz9F,EAAAzT,KACA4xG,GACAA,EAAA9yG,KAAA2U,IAGAA,EAAA6H,iBACA9E,EAAA8E,eAAA7H,IAIA,QACA6H,iBACA41F,YAtGA,GAAA13F,GAAAtV,EAAA,IACAyD,EAAAzD,EAAA,GACA5B,EAAA4B,EAAA,IAAA2qB,aAEAvwB,EAAAqJ,EAAArJ,KAEAuzG,IASAA,GAAAnuF,SAAA,SAAAvnB,EAAAqa,EAAAvG,GACA,IAAAuJ,EAAAC,KAAA,CAIA,GAAAzI,GAAAwF,EAAAyF,OACA3Z,GAAA0O,GAAA+/F,UAAAzuG,EAAA0O,GAAA+/F,YAEAJ,EAAA3/F,EAAAwF,IAEAlU,EAAA0O,GAAA+/F,QAAA50G,KAAAmG,EAAA0O,GAAA+/F,QAAA50G,QACA8T,YAoFA4hG,EAAA7sE,WAAA,SAAA7oC,EAAAqa,GACA,IAAAgD,EAAAC,KAAA,CAGA,GAAAzI,GAAAwF,EAAAyF,SACA3Z,EAAA0O,GAAA+/F,aAA2C50G,KAE3CmG,EAAA0O,GAAA+/F,QAAA50G,GAAA,QAIAjB,EAAAC,QAAA02G,G/DomzBM,SAAU32G,EAAQC,EAAS+I,GAEjC,YgEhozBA,SAAA4tG,GAAA/lG,EAAA1B,EAAAC,EAAAkM,GACA,GAAAu7F,GAAAv7F,EAAAmG,WACAq1F,EAAAx7F,EAAAoG,WACA7Q,GAAA,GAAA5D,KAAAI,IAAAwD,EAAA,GAAA1B,EAAA0nG,GAAA1nG,EACA0B,EAAA,GAAA5D,KAAAI,IAAAwD,EAAA,GAAAzB,EAAA0nG,GAAA1nG,EACAyB,EAAA,GAAA5D,KAAAE,IAAA0D,EAAA,MACAA,EAAA,GAAA5D,KAAAE,IAAA0D,EAAA,MApGA,GAAApE,GAAAzD,EAAA,GACAsE,EAAAtE,EAAA,GACAgzB,EAAAhzB,EAAA,IACAsmB,EAAAtmB,EAAA,IACA4D,EAAA5D,EAAA,IACAwiC,EAAAxiC,EAAA,IACA+tG,EAAA/tG,EAAA,IAEA8gB,IAKAA,GAAAktF,aAAA,SAAAtkB,GACA,GAEA/oF,GAFAstG,EAAAvkB,EAAAtrF,IAAA,QACA8vG,EAAAxkB,EAAA/gF,SAAAslG,EAAA,QAUA,OARA,SAAAA,GACAttG,EAAAutG,EAAAC,eACAxtG,EAAAC,KAAA,MAEA,WAAAqtG,IACAttG,EAAAutG,EAAAE,eACAztG,EAAAD,OAAA,MAEAC,GAMAmgB,EAAAutF,mBAAA,SACAC,EAAAjiB,EAAA3C,EAAAp3E,EAAAi8F,GAEA,GAAA/0G,GAAAkwF,EAAAtrF,IAAA,SACA8vB,EAAApN,EAAA0tF,cACAh1G,EAAA6yF,EAAAnoD,KAAAmoD,EAAAljF,QACAugF,EAAAtrF,IAAA,sBAEAskB,UAAAgnE,EAAAtrF,IAAA,mBACAwqB,UAAA8gE,EAAAtrF,IAAA,qBAGAkK,EAAAohF,EAAA/gF,SAAA,SACAD,EAAAJ,EAAAK,SAAA,aACA8lG,EAAAnoF,EAAAgN,kBAAAhrB,EAAAlK,IAAA,eAEAkmC,EAAA57B,EAAAI,UACAo9B,EAAAlT,EAAA/sB,gBACAioB,EAAAoW,EAAAiqE,EAAA1oE,UAAA0oE,EAAAzoE,cAGAj+B,EAAA0mG,EAAA1mG,SACA1B,EAAA+/B,EAAA//B,MAAAsoG,EAAA,GAAAA,EAAA,GACAroG,EAAA8/B,EAAA9/B,OAAAqoG,EAAA,GAAAA,EAAA,GAGAC,EAAAH,EAAAG,KACA,WAAAA,IAAA7mG,EAAA,IAAA1B,GACA,WAAAuoG,IAAA7mG,EAAA,IAAA1B,EAAA,EACA,IAAAwoG,GAAAJ,EAAAI,aACA,YAAAA,IAAA9mG,EAAA,IAAAzB,GACA,WAAAuoG,IAAA9mG,EAAA,IAAAzB,EAAA,GAGAwnG,EAAA/lG,EAAA1B,EAAAC,EAAAkM,EAEA,IAAAs8F,GAAAtmG,EAAAlK,IAAA,kBACAwwG,IAAA,SAAAA,IACAA,EAAAviB,EAAAjuF,IAAA,6BAGAkwG,EAAA1iB,OACA1kF,OAAoBZ,EAAA,EAAAE,EAAA,EAAAL,QAAAC,SAAAysC,EAAAvqC,EAAAlK,IAAA,iBACpByJ,WAAAzL,QACAuE,OACAutB,OACArlB,SAAAy7B,EACAr7B,SAAAP,EAAAQ,eACAH,aAAA,SACAnI,KAAAguG,EACAluG,OAAA4H,EAAAlK,IAAA,8BACA+I,UAAAmB,EAAAlK,IAAA,kBACAywG,WAAAvmG,EAAAlK,IAAA,cACA0wG,YAAAxmG,EAAAlK,IAAA,eACA2wG,cAAAzmG,EAAAlK,IAAA,iBACA4wG,cAAA1mG,EAAAlK,IAAA,kBAGAoD,GAAA,KAuBAsf,EAAA0tF,cAAA,SAAAh1G,EAAA0qC,EAAA/6B,EAAA8lG,EAAAhnG,GACA,GAAAimB,GAAAgW,EAAAxW,MAAA0X,SAGA5rC,GAAoBkpB,UAAAza,EAAAya,YAEpBkG,EAAA3gB,EAAA2gB,SAEA,IAAAA,EAAA,CACA,GAAA9L,IACAtjB,MAAAgpC,EAAA2C,gBAAAjB,EAAA1qC,GACA01G,cAEAzrG,GAAArJ,KAAA60G,EAAA,SAAAE,GACA,GAAA76F,GAAAnL,EAAA6T,iBAAAmyF,EAAAlyF,aACAna,EAAAqsG,EAAAn0F,gBACAo0F,EAAA96F,KAAA4I,cAAApa,EACAssG,IAAAtyF,EAAAoyF,WAAAt0G,KAAAw0G,KAGA3rG,EAAA5H,SAAA+sB,GACAsF,EAAAtF,EAAA9K,QAAA,UAAiDoQ,GAEjDzqB,EAAA7H,WAAAgtB,KACAsF,EAAAtF,EAAA9L,IAIA,MAAAoR,IAUApN,EAAAuuF,uBAAA,SAAAnrE,EAAA1qC,EAAA81G,GACA,GAAAplG,GAAAtG,EAAA0X,QAIA,OAHA1X,GAAAmoC,OAAA7hC,IAAAolG,EAAAxkG,UACAlH,EAAAyzB,UAAAntB,IAAAolG,EAAAznG,UAEAvD,EAAAqC,gBACAu9B,EAAAqrE,YAAA/1G,IACA81G,EAAA9mG,aAAA,IACA8mG,EAAAE,gBAAA,IAAAF,EAAAG,aAAA,IACAvlG,IAGA4W,EAAA4uF,kCAAA,SACAl2G,EAAA80G,EAAAgB,EAAAjjB,EAAA3C,EAAAp3E,GAEA,GAAAq9F,GAAA5B,EAAA6B,gBACAN,EAAAxkG,SAAA,EAAAwkG,EAAAE,eAEAF,GAAAG,YAAA/lB,EAAAtrF,IAAA,gBACA0iB,EAAAutF,mBAAAC,EAAAjiB,EAAA3C,EAAAp3E,GACAzK,SAAAiZ,EAAAuuF,uBAAAhjB,EAAAnoD,KAAA1qC,EAAA81G,GACAZ,MAAAiB,EAAA9pE,UACA8oE,cAAAgB,EAAAE,qBASA/uF,EAAAgvF,cAAA,SAAAtoE,EAAAC,EAAAsoE,GAEA,MADAA,MAAA,GAEA3oG,GAAAogC,EAAAuoE,GACAzoG,GAAAkgC,EAAA,EAAAuoE,GACA1oG,GAAAogC,EAAAsoE,GACAxoG,GAAAkgC,EAAA,EAAAsoE,KASAjvF,EAAAkvF,cAAA,SAAAC,EAAAC,EAAAH,GAEA,MADAA,MAAA,GAEAzpG,EAAA2pG,EAAAF,GACAvpG,EAAAypG,EAAA,EAAAF,GACA5pG,MAAA+pG,EAAAH,GACA3pG,OAAA8pG,EAAA,EAAAH,KAIAjvF,EAAAqvF,gBAAA,SAAA9pG,EAAAE,EAAA6pG,EAAAv9D,EAAA+/C,EAAAC,GACA,OACAxsF,KACAE,KACA6pG,KACAv9D,IACA+/C,aACAC,WACAwd,WAAA,IAIAr5G,EAAAC,QAAA6pB,GhEuuzBM,SAAU9pB,EAAQC,EAAS+I,GiEp7zBjC,QAAAswG,GAAAjkB,GACA,GAAAjvE,IACA/J,cAAAg5E,EAAA78E,SAGA,OADA4N,GAAAivE,EAAA78E,SAAA,SAAA68E,EAAAv4E,eACAsJ,EA+eA,QAAAmzF,GAAAtoG,EAAAc,EAAAynG,EAAAjtE,GACA,GACAsC,GACAgqE,EAFAY,EAAA9rF,EAAA6rF,EAAAvoG,EAAA6C,UAGA4lG,EAAAntE,EAAA,GAAAA,EAAA,GACAotE,EAAA,UAAA5nG,IAAA2nG,GACA,UAAA3nG,GAAA2nG,CAoBA,OAlBA3rF,GAAA0rF,EAAA3rF,EAAA,IACA+qF,EAAAc,EAAA,eACA9qE,EAAA,UAEA9gB,EAAA0rF,EAAA,IAAA3rF,IACA+qF,EAAAc,EAAA,eACA9qE,EAAA,WAGAgqE,EAAA,SAEAhqE,EADA4qE,EAAA,IAAA3rF,GAAA2rF,EAAA3rF,EAAA,EACA6rF,EAAA,eAGAA,EAAA,iBAKA7lG,SAAA2lG,EACA5qE,YACAgqE,qBAIA,QAAA79D,GAAAq6C,GACA,GAAAukB,GAAAvkB,EAAAjuF,IAAA,UACA,OAAAiuF,GAAAjuF,IAAA,aAGAiuF,EAAAjuF,IAAA,iBAAAwyG,KAAApoC,MAIA,QAAAqoC,GAAAxkB,EAAAykB,GAIA,GAAAC,GAAA1kB,EAAAjuF,IAAA,0BACA4yG,EAAA3kB,EAAAjuF,IAAA,0BACA6yG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,IAAAp5G,OAAA,GACA05G,EAAAN,IAAAp5G,OAAA,IAEA,IAAAq5G,EACAE,EAAAz7F,QAAA,EAEA,MAAA62E,EAAAvpD,UAAAuuE,EAAAJ,EAAAC,KACAH,EAAAG,EAAA17F,QAAA,EAAAy7F,EAAAz7F,QAAA,IAGA,IAAAw7F,EACAG,EAAA37F,QAAA,EAEA,MAAA62E,EAAAtpD,UAAAsuE,EAAAD,EAAAD,KACAH,EAAAI,EAAA57F,QAAA,EAAA27F,EAAA37F,QAAA,GAIA,QAAA67F,GAAA15C,EAAArtB,EAAAgnE,GAEA,GAAAC,GAAA55C,KAAA1xD,kBAAA/O,QACAs6G,EAAAlnE,KAAArkC,kBAAA/O,OAEA,IAAAq6G,GAAAC,EAAA,CAMA,GAAAC,GAAA7tG,EAAAmG,YAMA,OALAnG,GAAAmoC,OAAA0lE,KAAA95C,EAAA7sD,UAEAymG,EAAA5qG,eAAA/C,EAAAoG,OAAAynG,EAAA95C,EAAA1tD,sBACAunG,EAAA7qG,eAAA/C,EAAAoG,OAAAynG,EAAAnnE,EAAArgC,sBAEAsnG,EAAAj6E,UAAAk6E,IAvlBA,GAAA/tG,GAAAzD,EAAA,GACAsmB,EAAAtmB,EAAA,IACAsE,EAAAtE,EAAA,GACA0gB,EAAA1gB,EAAA,IACA+yB,EAAA/yB,EAAA,GACA2kB,EAAAoO,EAAApO,UACAI,EAAAgO,EAAAhO,mBACA0R,EAAAz2B,EAAA,IACA4D,EAAA5D,EAAA,IACA02B,EAAAD,EAAA9vB,eACAzK,EAAAuH,EAAAvH,SAEA4oB,EAAA7gB,KAAA6gB,GAkDAipF,EAAA,SAAA1hB,EAAApkF,GAKAtM,KAAAsM,MAKAtM,KAAA0wF,YAGA5oF,EAAA3K,SACAmP,GAEAO,YAAA,EACAkpG,cAAA,EACAC,cAAA,EACAnC,eAAA,EACAp/F,QAAA,IAOAzU,KAAAiR,MAAA,GAAAtI,GAAAC,KAGA,IAAAqtG,GAAA,GAAAttG,GAAAC,OACAsD,SAAAI,EAAAJ,SAAAzL,QACA0O,SAAA7C,EAAA6C,UAMA8mG,GAAAC,kBACAl2G,KAAAm2G,WAAAF,EAAA1nG,UAEAvO,KAAAo2G,WAAAH,EAGA7D,GAAAj0G,WAEAlC,YAAAm2G,EAEAiE,WAAA,SAAAhxG,GACA,QAAAixG,EAAAjxG,IAGAtB,IAAA,SAAAsB,GACAixG,EAAAjxG,GAAAzJ,KAAAoE,OAGAu2G,SAAA,WACA,MAAAv2G,MAAAiR,OAKA,IAAAqlG,IAKAE,SAAA,WACA,GAAAlqG,GAAAtM,KAAAsM,IACAokF,EAAA1wF,KAAA0wF,SAEA,IAAAA,EAAAjuF,IAAA,kBAIA,GAAAmlC,GAAA5nC,KAAA0wF,UAAAnoD,KAAAf,YAEAv/B,EAAAjI,KAAAm2G,WACAM,GAAA7uE,EAAA,MACA8uE,GAAA9uE,EAAA,KACA3/B,KACA8yB,EAAA07E,IAAAxuG,GACA8yB,EAAA27E,IAAAzuG,IAGAjI,KAAAiR,MAAAlN,IAAA,GAAA4E,GAAAU,KAAAV,EAAAyC,sBAGAoE,KAAA,OAEAjE,OACAE,GAAAgrG,EAAA,GACA9qG,GAAA8qG,EAAA,GACA/qG,GAAAgrG,EAAA,GACA9qG,GAAA8qG,EAAA,IAEA1xG,MAAA8C,EAAA5K,QACqBy5G,QAAA,SACrBjmB,EAAA1jF,SAAA,sBAAAwlG,gBAEA9hF,uBAAApkB,EAAAokB,wBAAA,EACAjc,QAAA,EACA5O,GAAA,QAOA+wG,SAAA,WACA,GAAAlmB,GAAA1wF,KAAA0wF,UACAnoD,EAAAmoD,EAAAnoD,IAEA,IAAAmoD,EAAAjuF,IAAA,mBAAA8lC,EAAAxW,MAAAo/D,UAkBA,OAdA0lB,GAAAnmB,EAAA1jF,SAAA,YACAV,EAAAtM,KAAAsM,IAEAwqG,EAAAD,EAAA7pG,SAAA,aACA+pG,EAAAF,EAAAp0G,IAAA,UAEAu0G,EAAAlS,EAAA+R,EAAAvqG,EAAA2qG,eACAC,EAAA3uE,EAAA4uE,eAAAN,EAAAp0G,IAAA,mBACA4mC,EAAAd,EAAAxW,MAAAuX,WAEAmtE,KACAC,KACAzuG,EAAAjI,KAAAm2G,WAEAt6G,EAAA,EAA2BA,EAAAq7G,EAAAn7G,OAAwBF,IAEnD,IAAAu7G,EAAA7uE,EAAA1sC,EAAAm7G,GAAA,CAIA,GAAA/tE,GAAAiuE,EAAAr7G,EAEA46G,GAAA,GAAAxtE,EACAwtE,EAAA,KACAC,EAAA,GAAAztE,EACAytE,EAAA,GAAApqG,EAAA0pG,cAAAe,EAEA9uG,IACA8yB,EAAA07E,IAAAxuG,GACA8yB,EAAA27E,IAAAzuG,IAGAjI,KAAAiR,MAAAlN,IAAA,GAAA4E,GAAAU,KAAAV,EAAAyC,sBAGAoE,KAAA,QAAA65B,EAAAxtC,GAEA0P,OACAE,GAAAgrG,EAAA,GACA9qG,GAAA8qG,EAAA,GACA/qG,GAAAgrG,EAAA,GACA9qG,GAAA8qG,EAAA,IAEA1xG,MAAA8C,EAAA3K,SACA25G,EAAAtE,gBAEAztG,OAAA2rF,EAAAjuF,IAAA,8BAGAoD,GAAA,EACA4O,QAAA,QAUA4iG,UAAA,WACA,GAAA/qG,GAAAtM,KAAAsM,IACAokF,EAAA1wF,KAAA0wF,UACAnoD,EAAAmoD,EAAAnoD,IAGA,IAFAhoC,EAAA+L,EAAAgrG,cAAA5mB,EAAAjuF,IAAA,qBAEA8lC,EAAAxW,MAAAo/D,UAAA,CAIA,GAAAxkF,GAAA+jF,EAAA1jF,SAAA,aACAD,EAAAJ,EAAAK,SAAA,aACA8mG,EAAAnnG,EAAAlK,IAAA,UACA4mC,EAAAd,EAAAxW,MAAAuX,WACAZ,EAAAgoD,EAAAxnD,qBAGAquE,GACAh3G,EAAA+L,EAAAkrG,YAAA7qG,EAAAlK,IAAA,eACA0mB,EAAA,IAEAwsF,EAAA1B,EAAA3nG,EAAA6C,SAAAooG,EAAAjrG,EAAAunG,gBACA4D,EAAA/mB,EAAAjuF,IAAA,QAEA0yG,KACA1gG,EAAA4hC,EAAAq6C,GACAgnB,EAAAhnB,EAAAjuF,IAAA,eAEAqF,GAAArJ,KAAA4qC,EAAA,SAAAsuE,EAAArjG,GACA,IAAA8iG,EAAA7uE,EAAAj0B,EAAAhI,EAAA2qG,eAAA,CAIA,GAAAW,GAAA7qG,CACA0qG,MAAAE,IAAAF,EAAAE,GAAAjrG,YACAkrG,EAAA,GAAA7yF,GACA0yF,EAAAE,GAAAjrG,UAAAK,EAAA2jF,EAAAljF,SAGA,IAAAqqG,GAAAD,EAAArqG,gBACAmjF,EAAAjuF,IAAA,4BAEAwmC,EAAAV,EAAAqrE,YAAA+D,GACAnoC,GACAvmC,EACA38B,EAAAO,YAAAP,EAAAunG,eAAAC,GAEAgE,EAAAvvE,EAAAxW,MAAA0X,SAAAkuE,GAEAI,EAAA,GAAApvG,GAAAG,MAGA0G,KAAA,SAAAmoG,EAEA3yG,OACAutB,KAAAmW,EAAAp0B,GACA41B,UAAA0tE,EAAAn1G,IAAA,aAAAkzG,EAAAzrE,UACAgqE,kBAAA0D,EAAAn1G,IAAA,gBAAAkzG,EAAAzB,kBACAhnG,SAAA0qG,EAAAzqG,UACAlI,KAAA,kBAAA4yG,GACAA,EAQA,aAAAtvE,EAAApoC,KAAA23G,EAAA,UAAAvvE,EAAApoC,KAAAw3G,EAAA,GAAAA,EACArjG,GAEAujG,GAEA3rG,SAAAsjE,EACArgE,SAAAwmG,EAAAxmG,SACAsF,SACA5O,GAAA,IAIA6xG,KACAK,EAAAt2F,UAAAkzF,EAAAjkB,GACAqnB,EAAAt2F,UAAAu2F,WAAA,YACAD,EAAAt2F,UAAA5jB,MAAAi6G,GAIA93G,KAAAo2G,WAAAryG,IAAAg0G,GACAA,EAAA7B,kBAEAf,EAAAl2G,KAAA84G,GACA/3G,KAAAiR,MAAAlN,IAAAg0G,GAEAA,EAAAE,uBAEaj4G,MAEbk1G,EAAAxkB,EAAAykB,KAMA+C,SAAA,WACA,GAAA5rG,GAAAtM,KAAAsM,IACAokF,EAAA1wF,KAAA0wF,UACArrF,EAAA9E,EAAA+L,EAAA4rG,SAAAxnB,EAAAjuF,IAAA,QAEA,IAAA4C,EAAA,CAIA,GAiBAswG,GAjBAwC,EAAAznB,EAAAjuF,IAAA,gBACAszG,EAAAzpG,EAAAypG,cACAhpG,EAAA2jF,EAAA1jF,SAAA,iBACAqkC,EAAAq/C,EAAAjuF,IAAA,cAEAmlC,EAAA5nC,KAAA0wF,UAAAnoD,KAAAf,YACA4wE,EAAAxwE,EAAA,GAAAA,EAAA,QACA4nC,GACA,UAAA2oC,EACAvwE,EAAA,GAAAwwE,EAAA/mE,EACA,QAAA8mE,EACAvwE,EAAA,GAAAwwE,EAAA/mE,GACAzJ,EAAA,GAAAA,EAAA,MAEA,WAAAuwE,EAAA7rG,EAAAO,YAAAkpG,EAAA1kE,EAAA,GAKAgnE,EAAA3nB,EAAAjuF,IAAA,aACA,OAAA41G,IACAA,IAAAlvF,EAAA,IAGA,IAAAmvF,EAEA,YAAAH,EACAxC,EAAA1B,EACA3nG,EAAA6C,SACA,MAAAkpG,IAAA/rG,EAAA6C,SACA4mG,IAIAJ,EAAAf,EACAtoG,EAAA6rG,EAAAE,GAAA,EAAAzwE,GAIA,OADA0wE,EAAAhsG,EAAAgsG,0BAEAA,EAAAhwG,KAAAsG,IACA0pG,EAAAhwG,KAAAolC,IAAAioE,EAAAxmG,YAEA4Y,SAAAuwF,OAAA,OAIA,IAAAprG,GAAAH,EAAAI,UAEAorG,EAAA7nB,EAAAjuF,IAAA,uBACAkoC,EAAA4tE,EAAA5tE,SACA2G,EAAA/wC,EACA+L,EAAAksG,qBAAAD,EAAAjnE,SAAAgnE,GAEAG,EAAA,MAAA9tE,GAAA,MAAA2G,EACA3mB,EAAAuO,aACA7zB,EAAAisC,EAAApkC,EAAAy9B,GACqBE,QAAA,EAAAG,YAAAutE,EAAAvtE,cAErB3lC,EAEA4vG,EAAAvkB,EAAAjuF,IAAA,cAEAoR,EAAA68E,EAAA78E,SACA6kG,GACAhhG,cAAA7D,EACAxO,OACAsnB,OAAA,QAEA+rF,GAAA7kG,EAAA,SAAA68E,EAAAv4E,cAEA,IAAA4/F,GAAA,GAAApvG,GAAAG,MAGA0G,KAAA,OAEAmpG,WAAAtzG,EACAuzG,gBAAAH,EAEAzzG,OACAutB,KAAAkmF,EACAvrG,WACAjI,KAAA8H,EAAAQ,gBACAmjF,EAAAjuF,IAAA,4BACAynC,UAAAyrE,EAAAzrE,UACAgqE,kBAAAyB,EAAAzB,mBAEAhoG,SAAAsjE,EACArgE,SAAAwmG,EAAAxmG,SACAsF,OAAA4hC,EAAAq6C,GACA7qF,GAAA,EACAwsF,QAAA4iB,KAAApoC,KACA/kE,EAAA5K,QACAmtF,QAAAhlF,EACA4nB,UAAA,WACA,MAAA5nB,IAEAqzG,mBACqBzD,GACrB,MAGAvkB,GAAAjuF,IAAA,kBACAs1G,EAAAt2F,UAAAkzF,EAAAjkB,GACAqnB,EAAAt2F,UAAAu2F,WAAA,WACAD,EAAAt2F,UAAApc,QAIArF,KAAAo2G,WAAAryG,IAAAg0G,GACAA,EAAA7B,kBAEAl2G,KAAAiR,MAAAlN,IAAAg0G,GAEAA,EAAAE,wBAkBAhE,EAAA7B,EAAA6B,gBAAA,SAAA4E,EAAAC,EAAApqG,GACA,GACAw7B,GACAgqE,EAFAY,EAAA9rF,EAAA8vF,EAAAD,EAuBA,OAnBAzvF,GAAA0rF,IACAZ,EAAAxlG,EAAA,iBACAw7B,EAAA,UAEA9gB,EAAA0rF,EAAA3rF,IACA+qF,EAAAxlG,EAAA,iBACAw7B,EAAA,WAGAgqE,EAAA,SAGAhqE,EADA4qE,EAAA,GAAAA,EAAA3rF,EACAza,EAAA,iBAGAA,EAAA,mBAKAS,SAAA2lG,EACA5qE,YACAgqE,sBAgGAkD,EAAAhF,EAAAgF,eAAA,SAAA7uE,EAAA1sC,EAAAuuB,GACA,GAAA2uF,GACAhnF,EAAAwW,EAAAxW,KACA,mBAAAA,EAAA5xB,OAEA,kBAAAiqB,IAEA2uF,EAAAhnF,EAAAuX,WAAAztC,IACAuuB,EAAA2uF,EAAAhnF,EAAA0X,SAAAsvE,KAEAl9G,GAAAuuB,EAAA,KAOA06E,EAAAsN,EAAAtN,YAAA,SAAAzwF,EAAA4iG,GACA,GAAA7sF,GAAA/V,EAAA5R,IAAA,WAIA,OAHA,OAAA2nB,GAAA,QAAAA,IACAA,EAAA6sF,GAEA7sF,EAGA/uB,GAAAC,QAAA82G,GjE48zBM,SAAU/2G,EAAQC,EAAS+I,GkEhg1BjC,QAAA20G,GAAAC,EAAAvoB,EAAAljF,EAAAmJ,EAAA/C,EAAAo6C,GACA,GAAAn2C,GAAAqhG,EAAAC,oBAAAF,EAAAG,iBACA,IAAAvhG,EAAA,CAGA,GAAAk2E,GAAAsrB,EAAAjoB,oBAAAV,EACA3C,IACAkrB,EAAAK,eAAAL,EAAAK,aAAA,GAAAzhG,KACAvU,OAAAotF,EAAA3C,EAAAp3E,EAAAq3C,GACAurD,EAAAN,EAAAtiG,IAGA,QAAA4iG,GAAAN,EAAAzrG,EAAAmJ,GACA,GAAA6iG,GAAAP,EAAAK,YACAE,MAAAnhG,QAAA7K,EAAAmJ,GACAsiG,EAAAK,aAAA,KAlFA,GAAAD,GAAAh1G,EAAA,IAKA60G,EAAA70G,EAAA,GAAAogB,qBAEAtkB,KAAA,OAKAm5G,aAAA,KAMAF,iBAAA,KAKA91G,OAAA,SAAAotF,EAAAljF,EAAAmJ,EAAA/C,GAMA5T,KAAAo5G,kBAAAC,EAAAroB,SAAAN,GAEAwoB,EAAA7/E,WAAAr5B,KAAA,SAAAJ,WAEAo5G,EAAAh5G,KAAA0wF,EAAAljF,EAAAmJ,EAAA/C,GAAA,IAWAolG,kBAAA,SAAAtoB,EAAAljF,EAAAmJ,EAAA/C,EAAA82F,GACAsO,EAAAh5G,KAAA0wF,EAAAljF,EAAAmJ,EAAA/C,GAAA,IAMAwE,OAAA,SAAA5K,EAAAmJ,GACA,GAAA6iG,GAAAx5G,KAAAs5G,YACAE,MAAAphG,OAAAzB,GACAuiG,EAAA7/E,WAAAr5B,KAAA,SAAAJ,YAMAyY,QAAA,SAAA7K,EAAAmJ,GACA4iG,EAAAv5G,KAAA2W,GACAuiG,EAAA7/E,WAAAr5B,KAAA,UAAAJ,cAuBA65G,IAEAP,GAAAQ,yBAAA,SAAAv5G,EAAApC,GACA,GAAAwV,SACAkmG,EAAAt5G,GACA,SAAAW,OAAA,eAAAX,EAAA,UAGAs5G,GAAAt5G,GAAApC,GAGAm7G,EAAAC,oBAAA,SAAAh5G,GACA,MAAAA,IAAAs5G,EAAAt5G,IAGA9E,EAAAC,QAAA49G,GlE4k1BM,SAAU79G,EAAQC,EAAS+I,GmEhr1BjC,GAAAyD,GAAAzD,EAAA,GAEA8gB,IASAA,GAAAjb,OAAA,SAAAyvG,EAAAjpB,EAAApkF,GAwBA,QAAAstG,GAAAppB,EAAAvqE,GACA,GAAA4zF,GAAAC,EAAAvpB,QAAAC,EACA,OAAAqpB,GAAAE,cAAAF,EAAAjG,YAAA,IAzBAtnG,OACA,IAAAwtG,GAAAH,EAAA36F,iBACAupB,EAAAmoD,EAAAnoD,KACAr+B,KAEA8vG,EAAAzxE,EAAAr8B,SACA+tG,EAAA1xE,EAAA2xE,OAAA,SAAAF,EACAG,EAAA5xE,EAAAioD,IAGAvmF,EAAA6vG,EAAAM,UACAC,GAAApwG,EAAAU,EAAAV,EAAAU,EAAAV,EAAAO,MAAAP,EAAAY,EAAAZ,EAAAY,EAAAZ,EAAAQ,QAEA6vG,EAAA5pB,EAAAjuF,IAAA,aAEA83G,GACA5vG,GAAgBuT,IAAAm8F,EAAA,GAAAC,EAAAl8F,OAAAi8F,EAAA,GAAAC,GAChBzvG,GAAgBmT,KAAAq8F,EAAA,GAAAC,EAAAn8F,MAAAk8F,EAAA,GAAAC,GAGhBC,GAAA5vG,EAAAuvG,OAAA5xG,KAAAE,IAAAF,KAAAI,IAAAkxG,EAAA,KAAAW,EAAA5vG,EAAAyT,QAAAm8F,EAAA5vG,EAAAuT,KACAq8F,EAAA1vG,EAAAqvG,OAAA5xG,KAAAE,IAAAF,KAAAI,IAAAkxG,EAAA,KAAAW,EAAA1vG,EAAAsT,OAAAo8F,EAAA1vG,EAAAmT,MAQA9T,EAAAgC,UACA,MAAAiuG,EAAAI,EAAA1vG,EAAAovG,GAAAI,EAAA,GACA,MAAAF,EAAAI,EAAA5vG,EAAAsvG,GAAAI,EAAA,IAIAnwG,EAAAiF,SAAA7G,KAAA6gB,GAAA,SAAAgxF,EAAA,IAGA,IAAAK,IAAsBt8F,KAAA,EAAAE,OAAA,EAAAJ,MAAA,EAAAG,MAAA,EAEtBjU,GAAA2pG,eAAA3pG,EAAA8rG,cAAA9rG,EAAA6rG,cAAAyE,EAAAR,GACA9vG,EAAA2C,YAAA07B,EAAA2xE,OAAAK,EAAAJ,GAAAH,GAAAO,EAAAJ,GAAAD,OAAA,EAEAxpB,EAAAjuF,IAAA,qBACAyH,EAAA8rG,eAAA9rG,EAAA8rG,eAEAluG,EAAAvH,SAAA+L,EAAAmuG,YAAA/pB,EAAAjuF,IAAA,uBACAyH,EAAA2pG,gBAAA3pG,EAAA2pG,eAIA,IAAA2D,GAAA9mB,EAAAjuF,IAAA,mBASA,OARAyH,GAAAstG,YAAA,QAAAyC,GAAAzC,IAGAttG,EAAA+sG,cAAA1uE,EAAAmyE,mBAGAxwG,EAAArE,GAAA,EAEAqE,GAGA7O,EAAAC,QAAA6pB,GnE0r1BM,SAAU9pB,EAAQC,EAAS+I,GAEjC,YoEtw1BA,IAAAsE,GAAAtE,EAAA,GACAyD,EAAAzD,EAAA,GACA2d,EAAA3d,EAAA,EAEAA,GAAA,IAEAA,EAAA,KAGA2d,EAAAyC,qBAEAtkB,KAAA,OAEAmD,OAAA,SAAAq2G,EAAAnsG,GACAxN,KAAAiR,MAAAujF,YACAmlB,EAAAl3G,IAAA,SACAzC,KAAAiR,MAAAlN,IAAA,GAAA4E,GAAAS,MACAmC,MAAAouG,EAAA36F,iBAAAo7F,UACAp1G,MAAA8C,EAAA3K,UACA8H,KAAA00G,EAAAl3G,IAAA,oBACqBk3G,EAAAtK,gBACrB56F,QAAA,EACA5O,IAAA,QAOAmc,EAAAiB,qBAAA,SAAA3G,GAEAA,EAAAq+F,OAAAr+F,EAAAs+F,QAAAt+F,EAAAw9F,OACAx9F,EAAAw9F,YpEix1BM,SAAUz+G,EAAQC,EAAS+I,GqE7y1BjC,QAAAw2G,GAAAjzE,EAAAkzE,GACA,GAAApb,GAAA93D,EAAA,GAAAA,EAAA,GACA9rC,EAAAg/G,EACApoE,EAAAgtD,EAAA5jG,EAAA,CACA8rC,GAAA,IAAA8K,EACA9K,EAAA,IAAA8K,EAVA,GAAAtb,GAAA/yB,EAAA,GACA8hB,EAAAiR,EAAAjR,UACAre,EAAAzD,EAAA,GACAwiC,EAAAxiC,EAAA,IAUA02G,GAAA,KAKA/1F,EAAA,SAAAwrE,EAAAz+D,EAAA6V,GAMA5nC,KAAAwwF,MAMAxwF,KAAA+xB,QAMA/xB,KAAAozF,QAAAxrD,IAAA,KAKA5nC,KAAA+0G,SAAA,EAMA/0G,KAAAg7G,QAAA,EAMAh7G,KAAAi7G,eAGAj2F,GAAA7mB,WAEAlC,YAAA+oB,EAOAqO,QAAA,SAAAi4E,GACA,GAAA1jE,GAAA5nC,KAAAozF,QACA1qF,EAAAJ,KAAAI,IAAAk/B,EAAA,GAAAA,EAAA,IACAp/B,EAAAF,KAAAE,IAAAo/B,EAAA,GAAAA,EAAA,GACA,OAAA0jE,IAAA5iG,GAAA4iG,GAAA9iG,GAQA0yG,YAAA,SAAA18G,GACA,MAAAwB,MAAAqzB,QAAArzB,KAAA4zG,YAAAp1G,KAOAgpC,UAAA,WACA,MAAAxnC,MAAAozF,QAAA3yF,SAQAinB,kBAAA,SAAAC,GACA,MAAAyP,GAAA1P,kBACAC,GAAA3nB,KAAA+xB,MAAAyV,YACAxnC,KAAAozF,UASArrD,UAAA,SAAAsc,EAAAmlB,GACA,GAAA5hC,GAAA5nC,KAAAozF,OACAxrD,GAAA,GAAAyc,EACAzc,EAAA,GAAA4hC,GASAoqC,YAAA,SAAAp1G,EAAA8nB,GACA,GAAAshB,GAAA5nC,KAAAozF,QACArhE,EAAA/xB,KAAA+xB,KAQA,OAPAvzB,GAAAuzB,EAAAkD,UAAAz2B,GAEAwB,KAAAg7G,QAAA,YAAAjpF,EAAA5xB,OACAynC,IAAAnnC,QACAo6G,EAAAjzE,EAAA7V,EAAAzK,UAGAnB,EAAA3nB,EAAAu8G,EAAAnzE,EAAAthB,IASA60F,YAAA,SAAA7P,EAAAhlF,GACA,GAAAshB,GAAA5nC,KAAAozF,QACArhE,EAAA/xB,KAAA+xB,KAEA/xB,MAAAg7G,QAAA,YAAAjpF,EAAA5xB,OACAynC,IAAAnnC,QACAo6G,EAAAjzE,EAAA7V,EAAAzK,SAGA,IAAAiO,GAAApP,EAAAmlF,EAAA1jE,EAAAmzE,EAAAz0F,EAEA,OAAAtmB,MAAA+xB,YAAAwD,IASA6lF,YAAA,SAAAvrG,EAAAyW,KAOA6wF,eAAA,SAAAkE,GACA,GAAAr7G,KAAAg7G,SAAAK,EAAA,CAGA,OAFAC,GAAAt7G,KAAAu7G,WACAC,KACA3/G,EAAA,EAA+BA,EAAAy/G,EAAAv/G,OAAkBF,IACjD2/G,EAAAv8G,KAAAq8G,EAAAz/G,GAAA,GAKA,OAHAy/G,GAAAz/G,EAAA,IACA2/G,EAAAv8G,KAAAq8G,EAAAz/G,EAAA,OAEA2/G,EAGA,MAAA1zG,GAAA/I,IAAAiB,KAAA+xB,MAAAuX,WAAAtpC,KAAA4zG,YAAA5zG,OAQAy7G,gBAAA,WACA,MAAA3zG,GAAA/I,IAAAiB,KAAA+xB,MAAAuX,WAAAtpC,KAAA4zG,YAAA5zG,OAYAu7G,SAAA,WAQA,OAPA3zE,GAAA5nC,KAAAwnC,YACA8zE,KACAx/G,EAAAkE,KAAA+xB,MAAAzK,QACA+8B,EAAAzc,EAAA,GACA4hC,EAAA5hC,EAAA,GACAX,EAAAuiC,EAAAnlB,EAEAxoD,EAAA,EAA2BA,EAAAC,EAASD,IACpCy/G,EAAAr8G,MACAgoC,EAAAprC,EAAAC,EAAAuoD,EACApd,GAAAprC,EAAA,GAAAC,EAAAuoD,GAGA,OAAAi3D,IAOAI,aAAA,WACA,GAAAC,GAAA37G,KAAAozF,QACAzrE,EAAA3nB,KAAA+xB,MAAAyV,YAEA1rC,EAAA6rB,EAAA,GAAAA,EAAA,IAAA3nB,KAAAg7G,OAAA,IAEA,KAAAl/G,MAAA,EAEA,IAAA4jG,GAAAp3F,KAAAsG,IAAA+sG,EAAA,GAAAA,EAAA,GAEA,OAAArzG,MAAAsG,IAAA8wF,GAAA5jG,GAOA4+G,iBAAA,WACA,GAAAzD,GAAAj3G,KAAAi7G,cACA,KAAAhE,EAAA,CACA,GAAAvmB,GAAA1wF,KAAAqU,MACA1H,EAAA+jF,EAAA1jF,SAAA,aACAod,EAAAzd,EAAAlK,IAAA,WACA,cAAAzC,KAAAG,MAAA,SAAAiqB,EACA6sF,EAAA,SAAA7sF,EAAA,EAAAA,EAEApqB,KAAA47G,eACA3E,EAAApwE,EAAA2B,qBACA1gC,EAAA/I,IAAAiB,KAAA+xB,MAAAuX,WAAAtpC,KAAA4zG,YAAA5zG,MACA0wF,EAAAxnD,qBACAv8B,EAAAK,SAAA,aAAAG,UACAnN,KAAA47G,iBAGA57G,KAAAi7G,eAAAhE,EAEA,MAAAA,KAKA57G,EAAAC,QAAA0pB,GrE2z1BM,SAAU3pB,EAAQC,EAAS+I,GsE5j2BjC,QAAA6nB,GAAAxtB,GACA,MAAAoJ,GAAAnL,SAAA+B,IAAA,MAAAA,EAAAb,MACAa,EAAAb,MAGAa,EAAA,GARA,GAAAoJ,GAAAzD,EAAA,GACAwiC,EAAAxiC,EAAA,GAWAhJ,GAAAC,SAMA4tC,mBAAA,WACA,MAAArC,GAAAqC,mBACAlpC,KAAAuoC,KACAvoC,KAAAyC,IAAA,yBAOA4lC,cAAA,WACA,mBAAAroC,KAAAyC,IAAA,SACAqF,EAAA/I,IAAAiB,KAAAyC,IAAA,QAAAypB,IAOAib,OAAA,SAAA00E,GACA,GAAAv/F,GAAAtc,KAAAsc,OACA5T,EAAAmzG,GAAA,MAAAv/F,EAAAw/F,WACAx/F,EAAA5T,IAAA4T,EAAAw/F,UAKA,OAHA97G,MAAAuoC,MAAA,MAAA7/B,GAAA,YAAAA,IAAAZ,EAAAxH,MAAAoI,KACAA,EAAA1I,KAAAuoC,KAAAxW,MAAA/R,MAAAtX,IAEAA,GAOA0+B,OAAA,SAAAy0E,GACA,GAAAv/F,GAAAtc,KAAAsc,OACA9T,EAAAqzG,GAAA,MAAAv/F,EAAAy/F,SACAz/F,EAAA9T,IAAA8T,EAAAy/F,QAKA,OAHA/7G,MAAAuoC,MAAA,MAAA//B,GAAA,YAAAA,IAAAV,EAAAxH,MAAAkI,KACAA,EAAAxI,KAAAuoC,KAAAxW,MAAA/R,MAAAxX,IAEAA,GAMAk/B,iBAAA,WACA,GAAAprB,GAAAtc,KAAAsc,MACA,cAAAA,EAAAw/F,YAAA,MAAAx/F,EAAAy/F,WACAz/F,EAAAyV,OAOAiqF,iBAAAl0G,EAAAlF,KAMAq5G,SAAA,SAAAH,EAAAC,GACA/7G,KAAAsc,OAAAw/F,aACA97G,KAAAsc,OAAAy/F,YAMAG,WAAA,WAEAl8G,KAAAsc,OAAAw/F,WAAA97G,KAAAsc,OAAAy/F,SAAA,QtE0k2BM,SAAU1gH,EAAQC,EAAS+I,GAEjC,YuEpn2BA,SAAA83G,GAAAhC,EAAA79F,GAEA,MAAAA,GAAAnc,OAAAmc,EAAA9d,KAAA,oBArDA,GAAAqd,GAAAxX,EAAA,IACAyD,EAAAzD,EAAA,GACA+3G,EAAA/3G,EAAA,KAEAg4G,EAAAxgG,EAAA3e,QAEAiD,KAAA,kBAKAooC,KAAA,KAKAj3B,KAAA,WACA+qG,EAAAhjF,WAAAr5B,KAAA,OAAAJ,WACAI,KAAAk8G,cAMAxlF,YAAA,WACA2lF,EAAAhjF,WAAAr5B,KAAA,cAAAJ,WACAI,KAAAk8G,cAMAx8F,YAAA,WACA28F,EAAAhjF,WAAAr5B,KAAA,cAAAJ,WACAI,KAAAk8G,cAOAF,iBAAA,WACA,MAAAh8G,MAAAwN,QAAA8hB,iBACAzb,SAAA,OACAS,MAAAtU,KAAAsc,OAAAggG,UACAtrG,GAAAhR,KAAAsc,OAAAigG,SACa,KAUbz0G,GAAAtL,MAAA6/G,EAAAl+G,UAAAkG,EAAA,IAEA,IAAAm4G,IAKA/kB,OAAA,EAGA2kB,GAAA,IAAAC,EAAAF,EAAAK,GACAJ,EAAA,IAAAC,EAAAF,EAAAK,GAEAnhH,EAAAC,QAAA+gH,GvEgr2BM,SAAUhhH,EAAQC,EAAS+I,GwE9t2BjC,QAAAo4G,GAAA/rB,EAAAipB,EAAAnsG,GACA,MAAAkjF,GAAAsrB,qBAAArC,EAGA,QAAA+C,GAAAn0E,GACA,GAGAt+B,GAHAymF,EAAAnoD,EAAAl0B,MACAq0B,EAAAgoD,EAAAxnD,qBACAn8B,EAAA2jF,EAAA1jF,SAAA,uBAEAg8B,EAAA,EACA2zE,EAAAj0E,EAAA3sC,MACA4gH,GAAA,KAEA3zE,EAAA1gC,KAAAixC,KAAAojE,EAAA,IAEA,QAAA9gH,GAAA,EAAuBA,EAAA8gH,EAAgB9gH,GAAAmtC,EACvC,IAAAT,EAAAq0E,eAAA/gH,GAAA,CACA,GAAAghH,GAAA9vG,EAAAk9B,YAAAvB,EAAA7sC,GAEAoO,KAAA+wB,MAAA6hF,GAAA5yG,EAAA4yG,EAGA,MAAA5yG,GAGA,QAAA6yG,GAAAnD,EAAAnsG,EAAAmJ,GAKA3W,KAAA+8G,cAMA/8G,KAAAg9G,eAMAh9G,KAAAi9G,YAMAj9G,KAAAk9G,aAEAl9G,KAAAm9G,eAAAxD,EAAAnsG,EAAAmJ,GAEA3W,KAAAqU,MAAAslG,EA2aA,QAAAyD,GAAA70E,EAAA80E,GACA,GAAA1B,GAAApzE,EAAAf,YACA81E,EAAA3B,EAAA,GAAAA,EAAA,EAGApzE,GAAAwxE,cAAA,MAAAxxE,EAAAioD,IACA,SAAA8a,GACA,MAAAA,GAAA+R,GAEA,SAAA/R,GACA,MAAAgS,GAAAhS,EAAA+R,GAEA90E,EAAAg1E,aAAA,MAAAh1E,EAAAioD,IACA,SAAA8a,GACA,MAAAA,GAAA+R,GAEA,SAAA/R,GACA,MAAAgS,GAAAhS,EAAA+R,GAQA,QAAAG,GAAAxmG,EAAAxJ,GACA,MAAA1F,GAAA/I,IAAA0+G,EAAA,SAAAr1E,GACA,GAAAsoD,GAAA15E,EAAA2mB,uBAAAyK,GAAA,EAEA,IAAA70B,UACAm9E,EACA,SAAA5vF,OAAAsnC,EAAA,KAAAtgC,EAAAvH,SACAyW,EAAAvU,IAAA2lC,EAAA,SACApxB,EAAAvU,IAAA2lC,EAAA,MACA,GACA,cAGA,OAAAsoD,KAOA,QAAAgtB,GAAA1mG,GACA,sBAAAA,EAAAvU,IAAA,oBAliBA,GAEAyH,GAAA7F,EAAA,IACAwiC,EAAAxiC,EAAA,IAEAyD,EAAAzD,EAAA,GACAs5G,EAAAt5G,EAAA,KACAu5G,EAAAv5G,EAAA,KAEA5F,EAAAqJ,EAAArJ,KAEA6pC,EAAAzB,EAAAyB,gBACAX,EAAAd,EAAAc,eAGAtjC,GAAA,IA6DA,IAAAw5G,GAAAf,EAAA3+G,SAEA0/G,GAAA19G,KAAA,OAEA09G,EAAA5uB,oBAAA,EAEA4uB,EAAAzD,QAAA,WACA,MAAAp6G,MAAA4yB,OAGAirF,EAAA7oG,OAAA,SAAAxH,EAAAmJ,GAMA,QAAAmnG,GAAAvN,GACA,GAAAwN,GAAAC,EAAAzN,EACA,QAAAt5F,KAAA8mG,GACA,GAAAA,EAAAxhH,eAAA0a,GAAA,CACA,GAAAsxB,GAAAw1E,EAAA9mG,EACA,IAAAsxB,IACA,aAAAA,EAAApoC,MAAA,SAAAooC,EAAApoC,OAAAmoC,EAAAC,IAEA,SAIA,SAhBA,GAAAy1E,GAAAh+G,KAAAi9G,QAEAj9G,MAAAi+G,aAAAzwG,EAAAxN,KAAAqU,OAiBA5V,EAAAu/G,EAAArzG,EAAA,SAAAgwG,GACAhzE,EAAAgzE,EAAA5oF,MAAA4oF,EAAAtmG,SAEA5V,EAAAu/G,EAAAnzG,EAAA,SAAA+vG,GACAjzE,EAAAizE,EAAA7oF,MAAA6oF,EAAAvmG,SAGA5V,EAAAu/G,EAAArzG,EAAA,SAAAgwG,GAIAmD,EAAA,OACAnD,EAAAT,QAAA,KAGAz7G,EAAAu/G,EAAAnzG,EAAA,SAAA+vG,GACAkD,EAAA,OACAlD,EAAAV,QAAA,KAMAl6G,KAAAuS,OAAAvS,KAAAqU,MAAAsC,IAQAknG,EAAAtrG,OAAA,SAAAonG,EAAAhjG,EAAAunG,GAoCA,QAAAC,KACA1/G,EAAA2/G,EAAA,SAAA71E,GACA,GAAAqzE,GAAArzE,EAAAqzE,eACAh0E,EAAAg0E,GAAA,EAAAyC,EAAA7zG,QAAA,EAAA6zG,EAAA5zG,QACAwM,EAAAsxB,EAAAwsE,QAAA,GACAxsE,GAAAR,UAAAH,EAAA3wB,GAAA2wB,EAAA,EAAA3wB,IACAmmG,EAAA70E,EAAAqzE,EAAAyC,EAAA1zG,EAAA0zG,EAAAxzG,KAxCA,GAAAwzG,GAAAn0G,EAAA0oC,cACA+mE,EAAA2E,sBACA9zG,MAAAmM,EAAAmG,WACArS,OAAAkM,EAAAoG,aAGA/c,MAAA4yB,MAAAyrF,CAEA,IAAAD,GAAAp+G,KAAAk9G,SAEAiB,MAGAD,GAAAvE,EAAAl3G,IAAA,kBACAhE,EAAA2/G,EAAA,SAAA71E,GACA,IAAAA,EAAAl0B,MAAA5R,IAAA,qBACA,GAAA87G,GAAA7B,EAAAn0E,EACA,IAAAg2E,EAAA,CACA,GAAA/tB,GAAAjoD,EAAAqzE,eAAA,iBACAlpE,EAAAnK,EAAAl0B,MAAA5R,IAAA,mBACA47G,GAAA7tB,IAAA+tB,EAAA/tB,GAAA99C,EACA,QAAAnK,EAAAr8B,SACAmyG,EAAAxzG,GAAA0zG,EAAA9zG,OAAAioC,EAEA,SAAAnK,EAAAr8B,WACAmyG,EAAA1zG,GAAA4zG,EAAA/zG,MAAAkoC,OAMAyrE,MAkBAN,EAAAttB,QAAA,SAAAnoD,EAAAo2E,GACA,GAAAC,GAAAz+G,KAAAi9G,SAAA70E,EACA,UAAAq2E,EAAA,CACA,SAAAD,EAEA,OAAAn5G,KAAAo5G,GACA,GAAAA,EAAAliH,eAAA8I,GACA,MAAAo5G,GAAAp5G,EAIA,OAAAo5G,GAAAD,KAOAX,EAAAvuB,QAAA,WACA,MAAAtvF,MAAAk9G,UAAAz8G,SAaAo9G,EAAAa,aAAA,SAAAC,EAAAC,GACA,SAAAD,GAAA,MAAAC,EAAA,CACA,GAAAtiH,GAAA,IAAAqiH,EAAA,IAAAC,CACA,OAAA5+G,MAAA+8G,WAAAzgH,GAGAwL,EAAAnL,SAAAgiH,KACAC,EAAAD,EAAAC,WACAD,eAGA,QAAA9iH,GAAA,EAAAgjH,EAAA7+G,KAAAg9G,YAAqDnhH,EAAAgjH,EAAA9iH,OAAsBF,IAC3E,GAAAgjH,EAAAhjH,GAAA00F,QAAA,KAAAj8E,QAAAqqG,GACAE,EAAAhjH,GAAA00F,QAAA,KAAAj8E,QAAAsqG,EAEA,MAAAC,GAAAhjH,IAKAgiH,EAAAiB,cAAA,WACA,MAAA9+G,MAAAg9G,YAAAv8G,SAOAo9G,EAAAj/F,eAAA,SAAApR,EAAAwF,EAAAnV,GACA,GAAApB,GAAAuD,KAAA++G,mBAAAvxG,EAAAwF,EAEA,OAAAvW,GAAAuiH,UACAviH,EAAAuiH,UAAAnO,YAAAhzG,GACApB,EAAA8rC,KACA9rC,EAAA8rC,KAAAwxE,cAAAt9G,EAAA8rC,KAAAqrE,YAAA/1G,IACA,MAOAggH,EAAAh/F,iBAAA,SAAArR,EAAAwF,EAAAnV,GACA,GAAApB,GAAAuD,KAAA++G,mBAAAvxG,EAAAwF,EAEA,OAAAvW,GAAAuiH,UACAviH,EAAAuiH,UAAA5D,YAAAv9G,GACApB,EAAA8rC,KACA9rC,EAAA8rC,KAAA4yE,YAAA1+G,EAAA8rC,KAAAg1E,aAAA1/G,IACA,MAMAggH,EAAAkB,mBAAA,SAAAvxG,EAAAwF,GACA,GAOAgsG,GACAz2E,EARAvxB,EAAAhE,EAAAgE,YACAukF,EAAAvoF,EAAAuoF,YACAvkF,KAAA2mB,uBAAA,YACA69D,EAAAxoF,EAAAwoF,YACAxkF,KAAA2mB,uBAAA,YACAg8E,EAAA3mG,EAAA2mG,UACAsF,EAAAj/G,KAAAg9G,WAIA,IAAAhmG,EACAgoG,EAAAhoG,EAAAgI,iBACAlX,EAAAnK,QAAAshH,EAAAD,GAAA,IAAAA,EAAA,UAEA,IAAAzjB,GAAAC,EACAwjB,EAAAh/G,KAAA0+G,aAAAnjB,EAAApjF,eAAAqjF,EAAArjF,oBAEA,IAAAojF,EACAhzD,EAAAvoC,KAAAuwF,QAAA,IAAAgL,EAAApjF,oBAEA,IAAAqjF,EACAjzD,EAAAvoC,KAAAuwF,QAAA,IAAAiL,EAAArjF,oBAGA,IAAAwhG,EAAA,CACA,GAAAG,GAAAH,EAAA36F,gBACA86F,KAAA95G,OACAg/G,EAAAh/G,KAAAg9G,YAAA,IAIA,OAAgBgC,YAAAz2E,SAOhBs1E,EAAA5+F,aAAA,SAAApP,GACA,GAAAy7F,GAAAtrG,KAAAg9G,YAAA,EACA,IAAA1R,EACA,MAAAA,GAAArsF,aAAApP,IAQAguG,EAAAV,eAAA,SAAAxD,EAAAnsG,EAAAmJ,GA+CA,QAAAuoG,GAAA92E,GACA,gBAAAsoD,EAAAz5E,GACA,GAAAwlG,EAAA/rB,EAAAipB,EAAAnsG,GAAA,CAIA,GAAAysG,GAAAvpB,EAAAjuF,IAAA,WACA,OAAA2lC,EAEA,QAAA6xE,GAAA,WAAAA,IAEAA,EAAA,SACAkF,EAAAlF,KACAA,EAAA,QAAAA,EAAA,iBAMA,SAAAA,GAAA,UAAAA,IAEAA,EAAA,OACAkF,EAAAlF,KACAA,EAAA,SAAAA,EAAA,iBAIAkF,EAAAlF,IAAA,CAEA,IAAA1xE,GAAA,GAAAq1E,GACAx1E,EAAAvB,EAAAsB,mBAAAuoD,IACA,KACAA,EAAAjuF,IAAA,QACAw3G,GAGAhe,EAAA,aAAA1zD,EAAApoC,IACAooC,GAAAyyE,OAAA/e,GAAAvL,EAAAjuF,IAAA,eACA8lC,EAAAwsE,QAAArkB,EAAAjuF,IAAA,WAEA8lC,EAAA2xE,OAAAxpB,EAAAjuF,IAAA,mBAGAiuF,EAAAnoD,OAGAA,EAAAl0B,MAAAq8E,EAGAnoD,EAAAuxE,KAAA95G,KAGAuoC,EAAAj0B,MAAA2C,EAEAjX,KAAAk9G,UAAAj+G,KAAAspC,GAEAy1E,EAAA51E,GAAAnxB,GAAAsxB,EACA62E,EAAAh3E,OAvGA,GAAA+2E,IACAnhG,MAAA,EACAG,OAAA,EACAD,KAAA,EACAE,QAAA,GAGA4/F,GACArzG,KACAE,MAEAu0G,GACAz0G,EAAA,EACAE,EAAA,EAOA,IAHA2C,EAAA4G,cAAA,QAAA8qG,EAAA,KAAAl/G,MACAwN,EAAA4G,cAAA,QAAA8qG,EAAA,KAAAl/G,OAEAo/G,EAAAz0G,IAAAy0G,EAAAv0G,EAIA,MAFA7K,MAAAi9G,iBACAj9G,KAAAk9G,aAIAl9G,MAAAi9G,SAAAe,EAGAv/G,EAAAu/G,EAAArzG,EAAA,SAAAgwG,EAAAgE,GACAlgH,EAAAu/G,EAAAnzG,EAAA,SAAA+vG,EAAAgE,GACA,GAAAtiH,GAAA,IAAAqiH,EAAA,IAAAC,EACAI,EAAA,GAAArB,GAAArhH,EAEA0iH,GAAAlF,KAAA95G,KACAg/G,EAAA3qG,MAAAslG,EAEA35G,KAAA+8G,WAAAzgH,GAAA0iH,EACAh/G,KAAAg9G,YAAA/9G,KAAA+/G,GAEAA,EAAAK,QAAA1E,GACAqE,EAAAK,QAAAzE,IACa56G,OACJA,OAqET69G,EAAAI,aAAA,SAAAzwG,EAAAmsG,GA+BA,QAAAnmB,GAAAh1F,EAAA+pC,EAAAvxB,GACAvY,EAAAuY,EAAA6Y,kBAAA0Y,EAAAioD,KAAA,SAAAA,GACAjoD,EAAAxW,MAAA0hE,oBAAAj1F,EAAAgyF,KA/BA1oF,EAAArJ,KAAAuB,KAAAk9G,UAAA,SAAA30E,GACAA,EAAAxW,MAAAgW,UAAA9pB,YAEAzQ,EAAAuJ,WAAA,SAAAC,GACA,GAAA0mG,EAAA1mG,GAAA,CACA,GAAAskF,GAAAkiB,EAAAxmG,EAAAxJ,GACA+tF,EAAAD,EAAA,GACAE,EAAAF,EAAA,EAEA,KAAAmhB,EAAAlhB,EAAAoe,EAAAnsG,KACAivG,EAAAjhB,EAAAme,EAAAnsG,GAEA,MAGA,IAAAwxG,GAAAh/G,KAAA0+G,aACAnjB,EAAApjF,eAAAqjF,EAAArjF,gBAEA3Z,EAAAwY,EAAA6B,UACA8hG,EAAAqE,EAAAzuB,QAAA,KACAqqB,EAAAoE,EAAAzuB,QAAA,IAEA,UAAA/xF,EAAA2B,OACAqzF,EAAAh1F,EAAAm8G,EAAA3jG,GACAw8E,EAAAh1F,EAAAo8G,EAAA5jG,MAGShX,OAaT69G,EAAAtuB,eAAA,SAAAiB,GACA,GAAAb,MACAC,IAUA,OARAnxF,GAAAuB,KAAA8+G,gBAAA,SAAAE,GACA,GAAAM,GAAA,MAAA9uB,GAAA,SAAAA,EACAwuB,EAAAzuB,QAAAC,GAAAwuB,EAAAhtB,cACAutB,EAAAP,EAAAQ,aAAAF,EACAx3G,GAAAnK,QAAAgyF,EAAA2vB,GAAA,GAAA3vB,EAAA1wF,KAAAqgH,GACAx3G,EAAAnK,QAAAiyF,EAAA2vB,GAAA,GAAA3vB,EAAA3wF,KAAAsgH,MAGgB5vB,WAAAC,aA2BhB,IAAA6tB,IAAA,gBA4BAX,GAAAn9F,OAAA,SAAAnS,EAAAmJ,GACA,GAAA8oG,KA+CA,OA9CAjyG,GAAA4G,cAAA,gBAAAulG,EAAA1iG,GACA,GAAA6iG,GAAA,GAAAgD,GAAAnD,EAAAnsG,EAAAmJ,EACAmjG,GAAAz0G,KAAA,QAAA4R,EAGA6iG,EAAAvnG,OAAAonG,EAAAhjG,GAAA,GAEAgjG,EAAA36F,iBAAA86F,EAEA2F,EAAAxgH,KAAA66G,KAIAtsG,EAAAuJ,WAAA,SAAAC,GACA,GAAA0mG,EAAA1mG,GAAA,CAIA,GAAAskF,GAAAkiB,EAAAxmG,EAAAxJ,GACA+tF,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAEAqe,EAAApe,EAAAygB,kBAEA,IAAAzoG,QAAA,CACA,IAAAomG,EACA,SAAA74G,OACA,SAAAgH,EAAAvH,SACAg7F,EAAA94F,IAAA,aACA84F,EAAA94F,IAAA,UACA,GACA,cAGA,IAAA84F,EAAAygB,qBAAAxgB,EAAAwgB,mBACA,SAAAl7G,OAAA,0CAIA,GAAAg5G,GAAAH,EAAA36F,gBAEAhI,GAAAgI,iBAAA86F,EAAA4E,aACAnjB,EAAApjF,eAAAqjF,EAAArjF,mBAIAsnG,GAIA3C,EAAA74F,WAAA64F,EAAA3+G,UAAA8lB,WAAA05F,EAAAx/G,UAAA8lB,WAEA5f,EAAA,IAAAwf,SAAA,cAAAi5F,GAEAzhH,EAAAC,QAAAwhH,GxE+v2BM,SAAUzhH,EAAQC,EAAS+I,GyE/13BjC,GAAAgtF,GAAAhtF,EAAA,IACAnD,EAAAmwF,EAAAnwF,IACAuB,EAAA4uF,EAAA5uF,GAEApH,GAAAC,SACA+d,kBAAA,WACAnY,EAAAlB,KAAA,cACAkB,EAAAlB,KAAA,oBAGA4yF,oBAAA,SAAAvtF,EAAAq2E,GACAA,KAAA17E,IACA,IAAA0/G,GAAAj9G,EAAAi5E,EAAA,eACAikC,EAAAl9G,EAAAi5E,EAAA,iBAAAx6E,EAAAw6E,EAAA,kBAEA,IAAAikC,EAAApjH,eAAA8I,GACA,MAAAs6G,GAAAt6G,EAEA,IAAAu6G,GAAA5/G,KAAAyC,IAAA,eACA,IAAAm9G,EAAA7jH,OAAA,CAIA,GAAA0I,GAAAm7G,EAAAF,EAMA,OALAr6G,KACAs6G,EAAAt6G,GAAAZ,GAEAvD,EAAAw6E,EAAA,YAAAgkC,EAAA,GAAAE,EAAA7jH,QAEA0I,MzE023BM,SAAUpJ,EAAQC,EAAS+I,G0Ez13BjC,QAAAiiB,GAAA++E,EAAApuF,EAAA2wB,GACAy9D,EAAApuF,GAAA3O,KAAAE,IAAAF,KAAAI,IAAA28F,EAAApuF,GAAA2wB,EAAA,IAAAA,EAAA,IA5CA,GAAAxQ,GAAA/yB,EAAA,GAEAugG,EAAAxtE,EAAA/uB,MAEA8c,IASAA,GAAAggF,uBAAA,SAAAv9D,EAAAC,EAAAI,GACA,GAAAxsC,MACAwrC,EAAAW,EAAA,GAAAA,EAAA,GAEAxd,EAAA3uB,EAAA2uB,SAAAgN,EAAAxN,KAAAqd,EAAAY,GAAA,EACA,OAAAI,GAAA7d,EAAA6d,IACA7d,EAAA3uB,EAAA2uB,SAAA6d,EAGA,IAAAlhB,GAAAtrB,EAAA2pG,kBAAAjgF,EAAA6/E,qBAAA56E,GAEAi7E,EAAA5pG,EAAA4pG,gBACAT,EAAAt8F,KAAAixC,KAAA3R,EAAA,GAAAxd,KAAArD,GACA69E,EAAAt8F,KAAA2R,MAAA2tB,EAAA,GAAAxd,KAAArD,GAKA,OAFA5B,GAAA06F,UAAAxa,EAAAz9D,GAEAnsC,GAOA0pB,EAAA6/E,qBAAA,SAAA56E,GAEA,MAAAgN,GAAA7P,iBAAA6C,GAAA,GAQAjF,EAAA06F,UAAA,SAAAxa,EAAAz9D,IACA7f,SAAAs9E,EAAA,MAAAA,EAAA,GAAAz9D,EAAA,KACA7f,SAAAs9E,EAAA,MAAAA,EAAA,GAAAz9D,EAAA,IACAthB,EAAA++E,EAAA,EAAAz9D,GACAthB,EAAA++E,EAAA,EAAAz9D,GACAy9D,EAAA,GAAAA,EAAA,KACAA,EAAA,GAAAA,EAAA,KAIAlgF,EAAA8/E,sBAAA,SAAA76E,EAAAwd,EAAAy9D,EAAAD,GACA,GAAA/7D,KAGA,KAAAjf,EACA,MAAAif,EAMAzB,GAAA,GAAAy9D,EAAA,IACAh8D,EAAApqC,KAAA2oC,EAAA,GAIA,KAFA,GAAA2B,GAAA87D,EAAA,GAEA97D,GAAA87D,EAAA,KACAh8D,EAAApqC,KAAAsqC,IAEAA,EAAAq7D,EAAAr7D,EAAAnf,EAAAg7E,MACA/7D,IAAAttC,OAAA,KAKA,GAAAstC,EAAAttC,OAhBA,IAiBA,QASA,OAJA6rC,GAAA,IAAAyB,EAAAttC,OAAAstC,IAAAttC,OAAA,GAAAspG,EAAA,KACAh8D,EAAApqC,KAAA2oC,EAAA,IAGAyB,GAGAhuC,EAAAC,QAAA6pB,G1Eg53BM,SAAU9pB,EAAQC,EAAS+I,GAEjC,Y2En/3BA,IAAAsE,GAAAtE,EAAA,GACA+D,EAAA/D,EAAA,IAMAy7G,EAAAn3G,EAAAgB,aACAxJ,KAAA,WACAoL,OACAb,GAAA,EACAE,GAAA,EACAJ,MAAA,EACAC,OAAA,GAEA2nB,UAAA,SAAAjoB,EAAAoB,GACA,GAAAb,GAAAa,EAAAb,GACAE,EAAAW,EAAAX,GACAJ,EAAAe,EAAAf,MAAA,EACAC,EAAAc,EAAAd,OAAA,CACAN,GAAAmsF,OAAA5rF,EAAAE,EAAAH,GACAN,EAAAqsF,OAAA9rF,EAAAF,EAAAI,EAAAH,GACAN,EAAAqsF,OAAA9rF,EAAAF,EAAAI,EAAAH,GACAN,EAAAmtF,eAOAyoB,EAAAp3G,EAAAgB,aACAxJ,KAAA,UACAoL,OACAb,GAAA,EACAE,GAAA,EACAJ,MAAA,EACAC,OAAA,GAEA2nB,UAAA,SAAAjoB,EAAAoB,GACA,GAAAb,GAAAa,EAAAb,GACAE,EAAAW,EAAAX,GACAJ,EAAAe,EAAAf,MAAA,EACAC,EAAAc,EAAAd,OAAA,CACAN,GAAAmsF,OAAA5rF,EAAAE,EAAAH,GACAN,EAAAqsF,OAAA9rF,EAAAF,EAAAI,GACAT,EAAAqsF,OAAA9rF,EAAAE,EAAAH,GACAN,EAAAqsF,OAAA9rF,EAAAF,EAAAI,GACAT,EAAAmtF,eAQA0oB,EAAAr3G,EAAAgB,aACAxJ,KAAA,MACAoL,OAEAZ,EAAA,EACAE,EAAA,EACAL,MAAA,EACAC,OAAA,GAGA2nB,UAAA,SAAAjoB,EAAAoB,GACA,GAAAZ,GAAAY,EAAAZ,EACAE,EAAAU,EAAAV,EACAooB,EAAA1nB,EAAAf,MAAA,IAEApG,EAAAkE,KAAAE,IAAAyqB,EAAA1nB,EAAAd,QACAysC,EAAAjkB,EAAA,EAGAogB,EAAA6D,KAAA9yC,EAAA8yC,GACAtsC,EAAAC,EAAAzG,EAAA8yC,EAAA7D,EACAupD,EAAAt0F,KAAA23G,KAAA5sE,EAAA6D,GAEA9D,EAAA9qC,KAAAklC,IAAAovD,GAAA1lD,EAEAgpE,EAAA53G,KAAAolC,IAAAkvD,GACAujB,EAAA73G,KAAAklC,IAAAovD,EAEAzyF,GAAA6sF,IACArsF,EAAAC,EAAAssC,EACA5uC,KAAA6gB,GAAAyzE,EACA,EAAAt0F,KAAA6gB,GAAAyzE,EAGA,IAAAwjB,GAAA,GAAAlpE,EACAmpE,EAAA,GAAAnpE,CACA/sC,GAAAysF,cACAjsF,EAAAyoC,EAAA8sE,EAAAE,EAAAx1G,EAAAyoC,EAAA8sE,EAAAC,EACAz1G,EAAAE,EAAAw1G,EACA11G,EAAAE,GAEAV,EAAAysF,cACAjsF,EAAAE,EAAAw1G,EACA11G,EAAAyoC,EAAA8sE,EAAAE,EAAAx1G,EAAAyoC,EAAA8sE,EAAAC,EACAz1G,EAAAyoC,EAAAxoC,EAAAyoC,GAEAlpC,EAAAmtF,eAQAgpB,EAAA33G,EAAAgB,aAEAxJ,KAAA,QAEAoL,OACAZ,EAAA,EACAE,EAAA,EACAL,MAAA,EACAC,OAAA,GAGA2nB,UAAA,SAAAxB,EAAArlB,GACA,GAAAd,GAAAc,EAAAd,OACAD,EAAAe,EAAAf,MACAG,EAAAY,EAAAZ,EACAE,EAAAU,EAAAV,EACAuoC,EAAA5oC,EAAA,GACAomB,GAAA0lE,OAAA3rF,EAAAE,GACA+lB,EAAA4lE,OAAA7rF,EAAAyoC,EAAAvoC,EAAAJ,GACAmmB,EAAA4lE,OAAA7rF,EAAAE,EAAAJ,EAAA,KACAmmB,EAAA4lE,OAAA7rF,EAAAyoC,EAAAvoC,EAAAJ,GACAmmB,EAAA4lE,OAAA7rF,EAAAE,GACA+lB,EAAA0mE,eAQAipB,GACAC,KAAA73G,EAAAU,KAEAY,KAAAtB,EAAAS,KAEAq3G,UAAA93G,EAAAS,KAEAg5D,OAAAz5D,EAAAS,KAEAs3G,OAAA/3G,EAAAI,OAEA43G,QAAAZ,EAEAa,IAAAZ,EAEAa,MAAAP,EAEAQ,SAAAhB,GAGAiB,GAEAP,KAAA,SAAA71G,EAAAE,EAAAooB,EAAA7uB,EAAAmH,GAEAA,EAAAE,GAAAd,EACAY,EAAAI,GAAAd,EAAAzG,EAAA,EACAmH,EAAAG,GAAAf,EAAAsoB,EACA1nB,EAAAK,GAAAf,EAAAzG,EAAA,GAGA6F,KAAA,SAAAU,EAAAE,EAAAooB,EAAA7uB,EAAAmH,GACAA,EAAAZ,IACAY,EAAAV,IACAU,EAAAf,MAAAyoB,EACA1nB,EAAAd,OAAArG,GAGAq8G,UAAA,SAAA91G,EAAAE,EAAAooB,EAAA7uB,EAAAmH,GACAA,EAAAZ,IACAY,EAAAV,IACAU,EAAAf,MAAAyoB,EACA1nB,EAAAd,OAAArG,EACAmH,EAAA2rC,EAAA5uC,KAAAI,IAAAuqB,EAAA7uB,GAAA,GAGAg+D,OAAA,SAAAz3D,EAAAE,EAAAooB,EAAA7uB,EAAAmH,GACA,GAAAm0F,GAAAp3F,KAAAI,IAAAuqB,EAAA7uB,EACAmH,GAAAZ,IACAY,EAAAV,IACAU,EAAAf,MAAAk1F,EACAn0F,EAAAd,OAAAi1F,GAGAghB,OAAA,SAAA/1G,EAAAE,EAAAooB,EAAA7uB,EAAAmH,GAEAA,EAAAb,GAAAC,EAAAsoB,EAAA,EACA1nB,EAAAX,GAAAC,EAAAzG,EAAA,EACAmH,EAAA2rC,EAAA5uC,KAAAI,IAAAuqB,EAAA7uB,GAAA,GAGAu8G,QAAA,SAAAh2G,EAAAE,EAAAooB,EAAA7uB,EAAAmH,GACAA,EAAAb,GAAAC,EAAAsoB,EAAA,EACA1nB,EAAAX,GAAAC,EAAAzG,EAAA,EACAmH,EAAAf,MAAAyoB,EACA1nB,EAAAd,OAAArG,GAGAw8G,IAAA,SAAAj2G,EAAAE,EAAAooB,EAAA7uB,EAAAmH,GACAA,EAAAZ,IAAAsoB,EAAA,EACA1nB,EAAAV,IAAAzG,EAAA,EACAmH,EAAAf,MAAAyoB,EACA1nB,EAAAd,OAAArG,GAGAy8G,MAAA,SAAAl2G,EAAAE,EAAAooB,EAAA7uB,EAAAmH,GACAA,EAAAZ,IAAAsoB,EAAA,EACA1nB,EAAAV,IAAAzG,EAAA,EACAmH,EAAAf,MAAAyoB,EACA1nB,EAAAd,OAAArG,GAGA08G,SAAA,SAAAn2G,EAAAE,EAAAooB,EAAA7uB,EAAAmH,GACAA,EAAAb,GAAAC,EAAAsoB,EAAA,EACA1nB,EAAAX,GAAAC,EAAAzG,EAAA,EACAmH,EAAAf,MAAAyoB,EACA1nB,EAAAd,OAAArG,IAIA48G,IACA,QAAA37G,KAAAk7G,GACAA,EAAAhkH,eAAA8I,KACA27G,EAAA37G,GAAA,GAAAk7G,GAAAl7G,GAIA,IAAAi5E,GAAA31E,EAAAgB,aAEAxJ,KAAA,SAEAoL,OACAwiG,WAAA,GACApjG,EAAA,EACAE,EAAA,EACAL,MAAA,EACAC,OAAA,GAGA0gG,YAAA,WACA,GAAAnmG,GAAAhF,KAAAgF,KAGA,SAFAhF,KAAAuL,MAEAwiG,YAAA,WAAA/oG,EAAAoI,eACApI,EAAAoI,cAAA,aACApI,EAAAklC,UAAA,SACAllC,EAAAkvG,kBAAA,WAIA9hF,UAAA,SAAAxB,EAAArlB,EAAAmnB,GACA,GAAAq7E,GAAAxiG,EAAAwiG,WACAkT,EAAAD,EAAAjT,EACA,UAAAxiG,EAAAwiG,aACAkT,IAEAlT,EAAA,OACAkT,EAAAD,EAAAjT,IAEAgT,EAAAhT,GACAxiG,EAAAZ,EAAAY,EAAAV,EAAAU,EAAAf,MAAAe,EAAAd,OAAAw2G,EAAA11G,OAEA01G,EAAA7uF,UAAAxB,EAAAqwF,EAAA11G,MAAAmnB,OAMAwuF,EAAA,SAAAz8G,GACA,aAAAzE,KAAAG,KAAA,CACA,GAAAghH,GAAAnhH,KAAAgF,MACAo8G,EAAAphH,KAAAuL,KACA61G,IAAA,SAAAA,EAAArT,WACAoT,EAAAp8G,OAAAN,EAEAzE,KAAAqhH,gBACAF,EAAAp8G,OAAAN,EACA08G,EAAAl8G,KAAA,SAIAk8G,EAAAl8G,OAAAk8G,EAAAl8G,KAAAR,GACA08G,EAAAp8G,SAAAo8G,EAAAp8G,OAAAN,IAEAzE,KAAAyzB,OAAA,KAIAk6E,GAUAM,aAAA,SAAAF,EAAApjG,EAAAE,EAAAooB,EAAA7uB,EAAAK,GAGA,GAAAqyB,GAAA,IAAAi3E,EAAApwG,QAAA,QACAm5B,KACAi3E,IAAA90E,OAAA,KAAA5oB,cAAA09F,EAAA90E,OAAA,GAEA,IAAA+0E,EAkCA,OA/BAA,GADA,IAAAD,EAAApwG,QAAA,YACA,GAAAgL,GAAAE,OACA7D,OACA0Z,MAAAqvF,EAAAttG,MAAA,GACAkK,IACAE,IACAL,MAAAyoB,EACAxoB,OAAArG,KAIA,IAAA2pG,EAAApwG,QAAA,WACAgL,EAAAqB,SAAA+jG,EAAAttG,MAAA,MAAqE,GAAA2H,GAAAuC,EAAAE,EAAAooB,EAAA7uB,IAGrE,GAAAk6E,IACA/yE,OACAwiG,aACApjG,IACAE,IACAL,MAAAyoB,EACAxoB,OAAArG,KAKA4pG,EAAAqT,eAAAvqF,EAEAk3E,EAAAuB,SAAA2R,EAEAlT,EAAAuB,SAAA9qG,GAEAupG,GAIA3yG,GAAAC,QAAAqyG,G3E6/3BM,SAAUtyG,EAAQC,G4E914BxB,GAAAgmH,MAEAC,EAAA,2BACAC,EAAA,kBAYAF,GAAA5vG,SAAA,SAAAgtB,EAAA0vB,EAAAqzD,GAaA,QAAAj4F,KACAk4F,GAAA,GAAA5/F,OAAA6/F,UACAC,EAAA,KACAljF,EAAA7+B,MAAA67E,EAAAh8E,OAdA,GAAAmiH,GAIAlhB,EACAjlB,EACAh8E,EACAoiH,EANAC,EAAA,EACAL,EAAA,EACAE,EAAA,IAMAxzD,MAAA,CAQA,IAAAzvD,GAAA,WACAkjH,GAAA,GAAA//F,OAAA6/F,UACAjmC,EAAA17E,KACAN,EAAAE,SACA,IAAAoiH,GAAAF,GAAA1zD,EACA6zD,EAAAH,GAAAL,CACAK,GAAA,KACAnhB,EAAAkhB,GAAAI,EAAAF,EAAAL,GAAAM,EAEAE,aAAAN,GAEAK,EACAL,EAAAvzD,WAAA7kC,EAAAw4F,GAGArhB,GAAA,EACAn3E,IAGAo4F,EAAAvzD,WAAA7kC,GAAAm3E,GAIAohB,EAAAF,EAqBA,OAdAljH,GAAAijB,MAAA,WACAggG,IACAM,aAAAN,GACAA,EAAA,OAOAjjH,EAAAmjH,iBAAA,SAAAK,GACAL,EAAAK,GAGAxjH,GA8BA2iH,EAAAc,eAAA,SAAA1jH,EAAA2jH,EAAA7gB,EAAA8gB,GACA,GAAA5jF,GAAAhgC,EAAA2jH,EAEA,IAAA3jF,EAAA,CAIA,GAAA6jF,GAAA7jF,EAAA6iF,IAAA7iF,EACA8jF,EAAA9jF,EAhHA,mBAmHA,IAFAA,EAAA8iF,KAEAhgB,GAAAghB,IAAAF,EAAA,CACA,SAAA9gB,IAAA8gB,EACA,MAAA5jH,GAAA2jH,GAAAE,CAGA7jF,GAAAhgC,EAAA2jH,GAAAf,EAAA5vG,SACA6wG,EAAA/gB,EAAA,aAAA8gB,GAEA5jF,EAAA6iF,GAAAgB,EACA7jF,EA5HA,oBA4HA4jF,EACA5jF,EAAA8iF,GAAAhgB,EAGA,MAAA9iE,KAUA4iF,EAAA1/F,MAAA,SAAAljB,EAAA2jH,GACA,GAAA3jF,GAAAhgC,EAAA2jH,EACA3jF,MAAA6iF,KACA7iH,EAAA2jH,GAAA3jF,EAAA6iF,KAIAlmH,EAAAC,QAAAgmH,G5Eu24BQ,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACC,CACA,CACA,CACA,CACA,CACA,CAEH,SAAUjmH,EAAQC,EAAS+I,GAEjC,Y6Ezg5BA,IAAAo+G,GAAAp+G,EAAA,KACAiM,EAAAjM,EAAA,IACA8D,EAAA9D,EAAA,KACAq+G,EAAAr+G,EAAA,KACAyD,EAAAzD,EAAA,GASAyvF,EAAA,SAAAlqF,GAEAzB,EAAAvM,KAAAoE,KAAA4J,GACA0G,EAAA1U,KAAAoE,KAAA4J,GACA84G,EAAA9mH,KAAAoE,KAAA4J,GAMA5J,KAAAgR,GAAApH,EAAAoH,IAAAyxG,IAGA3uB,GAAA31F,WAOAgC,KAAA,UAOAkF,KAAA,GAQAK,KAAA,KASAmU,QAAA,EASA8oG,SAAA,KAOAjV,MAAA,SAAAt6D,EAAAC,GACA,OAAArzC,KAAA8qG,WACA,iBACAz3D,EAAA,CACA,MACA,gBACAD,EAAA,EAIA,GAAAloC,GAAAlL,KAAAuO,SACArD,KACAA,EAAAlL,KAAAuO,WAAA,cAEArD,EAAA,IAAAkoC,EACAloC,EAAA,IAAAmoC,EAEArzC,KAAAi4G,qBACAj4G,KAAAyzB,OAAA,IAMAm2D,aAAA,aAIAg5B,YAAA,aAIA5tG,OAAA,WACAhV,KAAAk2G,mBAOAhwG,SAAA,SAAAvH,EAAAC,KAKAo1B,OAAA,SAAA13B,EAAAuB,GACA,gBAAAvB,GAAA,UAAAA,GAAA,WAAAA,GAEA,GAAAuB,EAAA,CACA,GAAApB,GAAAuD,KAAA1D,EACAG,KACAA,EAAAuD,KAAA1D,OAEAG,EAAA,GAAAoB,EAAA,GACApB,EAAA,GAAAoB,EAAA,QAIAmC,MAAA1D,GAAAuB,GAOA+tG,KAAA,WACA5rG,KAAA6Z,QAAA,EACA7Z,KAAA0F,MAAA1F,KAAA0F,KAAAiuB,WAMAk5C,KAAA,WACA7sE,KAAA6Z,QAAA,EACA7Z,KAAA0F,MAAA1F,KAAA0F,KAAAiuB,WAOA9rB,KAAA,SAAAvL,EAAAuB,GACA,mBAAAvB,GACA0D,KAAAg0B,OAAA13B,EAAAuB,OAEA,IAAAiK,EAAAnL,SAAAL,GACA,OAAA+I,KAAA/I,GACAA,EAAAC,eAAA8I,IACArF,KAAAg0B,OAAA3uB,EAAA/I,EAAA+I,GAOA,OAFArF,MAAAyzB,OAAA,GAEAzzB,MAMA6iH,YAAA,SAAAF,GACA,GAAAxxG,GAAAnR,KAAA0F,IACAyL,IACAwxG,EAAAG,YAAA3xG,GAIAnR,KAAA2iH,UAAA3iH,KAAA2iH,cACA3iH,KAAA+iH,iBAGA/iH,KAAA2iH,WACAA,EAAAj9G,KAAAyL,EACAwxG,EAAA/uF,aAAA5zB,KAEAA,KAAAyzB,OAAA,IAKAsvF,eAAA,WACA,GAAAJ,GAAA3iH,KAAA2iH,QACAA,KACAA,EAAAj9G,MACAi9G,EAAAK,iBAAAL,EAAAj9G,MAGAi9G,EAAAj9G,KAAA,KACAi9G,EAAA/uF,aAAA,KACA5zB,KAAA2iH,SAAA,KAEA3iH,KAAAyzB,OAAA,KASAqvF,YAAA,SAAA3xG,GACAnR,KAAA0F,KAAAyL,CAEA,IAAA8xG,GAAAjjH,KAAAijH,SACA,IAAAA,EACA,OAAApnH,GAAA,EAA+BA,EAAAonH,EAAAlnH,OAAsBF,IACrDsV,EAAAyB,UAAAswG,YAAAD,EAAApnH,GAIAmE,MAAA2iH,UACA3iH,KAAA2iH,SAAAG,YAAA3xG,IASA6xG,iBAAA,SAAA7xG,GACAnR,KAAA0F,KAAA,IAEA,IAAAu9G,GAAAjjH,KAAAijH,SACA,IAAAA,EACA,OAAApnH,GAAA,EAA+BA,EAAAonH,EAAAlnH,OAAsBF,IACrDsV,EAAAyB,UAAAuwG,eAAAF,EAAApnH,GAIAmE,MAAA2iH,UACA3iH,KAAA2iH,SAAAK,iBAAA7xG,KAKArJ,EAAAxJ,MAAAw1F,EAAA4uB,GACA56G,EAAAxJ,MAAAw1F,EAAA3rF,GACAL,EAAAxJ,MAAAw1F,EAAAxjF,GAEAjV,EAAAC,QAAAw4F,G7Eqh5BM,SAAUz4F,EAAQC,EAAS+I,G8E9w5BjC,QAAA++G,GAAA3mH,EAAAH,GACA,MAAAG,GAAAH,GAGA,QAAA+mH,GAAA5mH,EAAAH,EAAAuB,GACApB,EAAAH,GAAAuB,EASA,QAAAylH,GAAA13E,EAAAC,EAAAnlB,GACA,OAAAmlB,EAAAD,GAAAllB,EAAAklB,EASA,QAAA23E,GAAA33E,EAAAC,EAAAnlB,GACA,MAAAA,GAAA,GAAAmlB,EAAAD,EAUA,QAAA43E,GAAA53E,EAAAC,EAAAnlB,EAAA+N,EAAAgvF,GACA,GAAA3nH,GAAA8vC,EAAA7vC,MACA,OAAA0nH,EACA,OAAA5nH,GAAA,EAA2BA,EAAAC,EAASD,IACpC44B,EAAA54B,GAAAynH,EAAA13E,EAAA/vC,GAAAgwC,EAAAhwC,GAAA6qB,OAKA,QADAg9F,GAAA5nH,GAAA8vC,EAAA,GAAA7vC,OACAF,EAAA,EAA2BA,EAAAC,EAASD,IACpC,OAAA2yB,GAAA,EAA+BA,EAAAk1F,EAAUl1F,IACzCiG,EAAA54B,GAAA2yB,GAAA80F,EACA13E,EAAA/vC,GAAA2yB,GAAAqd,EAAAhwC,GAAA2yB,GAAA9H,GASA,QAAAi9F,GAAAC,EAAAC,EAAAJ,GACA,GAAAK,GAAAF,EAAA7nH,OACAgoH,EAAAF,EAAA9nH,MACA,IAAA+nH,IAAAC,EAAA,CAGA,GADAD,EAAAC,EAGAH,EAAA7nH,OAAAgoH,MAIA,QAAAloH,GAAAioH,EAAqCjoH,EAAAkoH,EAAaloH,IAClD+nH,EAAA3kH,KACA,IAAAwkH,EAAAI,EAAAhoH,GAAAmoH,EAAApoH,KAAAioH,EAAAhoH,KAOA,OADA6nH,GAAAE,EAAA,IAAAA,EAAA,GAAA7nH,OACAF,EAAA,EAAuBA,EAAA+nH,EAAA7nH,OAAiBF,IACxC,OAAA4nH,EACAngG,MAAAsgG,EAAA/nH,MACA+nH,EAAA/nH,GAAAgoH,EAAAhoH,QAIA,QAAA2yB,GAAA,EAA+BA,EAAAk1F,EAAUl1F,IACzClL,MAAAsgG,EAAA/nH,GAAA2yB,MACAo1F,EAAA/nH,GAAA2yB,GAAAq1F,EAAAhoH,GAAA2yB,IAaA,QAAAy1F,GAAAL,EAAAC,EAAAJ,GACA,GAAAG,IAAAC,EACA,QAEA,IAAA/nH,GAAA8nH,EAAA7nH,MACA,IAAAD,IAAA+nH,EAAA9nH,OACA,QAEA,QAAA0nH,GACA,OAAA5nH,GAAA,EAA2BA,EAAAC,EAASD,IACpC,GAAA+nH,EAAA/nH,KAAAgoH,EAAAhoH,GACA,aAMA,QADA6nH,GAAAE,EAAA,GAAA7nH,OACAF,EAAA,EAA2BA,EAAAC,EAASD,IACpC,OAAA2yB,GAAA,EAA+BA,EAAAk1F,EAAUl1F,IACzC,GAAAo1F,EAAA/nH,GAAA2yB,KAAAq1F,EAAAhoH,GAAA2yB,GACA,QAKA,UAeA,QAAA01F,GACAt4E,EAAAC,EAAAC,EAAAC,EAAAxW,EAAAqX,EAAAe,EAAAlZ,EAAAgvF,GAEA,GAAA3nH,GAAA8vC,EAAA7vC,MACA,OAAA0nH,EACA,OAAA5nH,GAAA,EAA2BA,EAAAC,EAASD,IACpC44B,EAAA54B,GAAAsoH,EACAv4E,EAAA/vC,GAAAgwC,EAAAhwC,GAAAiwC,EAAAjwC,GAAAkwC,EAAAlwC,GAAA05B,EAAAqX,EAAAe,OAMA,QADA+1E,GAAA93E,EAAA,GAAA7vC,OACAF,EAAA,EAA2BA,EAAAC,EAASD,IACpC,OAAA2yB,GAAA,EAA+BA,EAAAk1F,EAAUl1F,IACzCiG,EAAA54B,GAAA2yB,GAAA21F,EACAv4E,EAAA/vC,GAAA2yB,GAAAqd,EAAAhwC,GAAA2yB,GAAAsd,EAAAjwC,GAAA2yB,GAAAud,EAAAlwC,GAAA2yB,GACA+G,EAAAqX,EAAAe,GAkBA,QAAAw2E,GAAAv4E,EAAAC,EAAAC,EAAAC,EAAAxW,EAAAqX,EAAAe,GACA,GAAAy2E,GAAA,IAAAt4E,EAAAF,GACAlX,EAAA,IAAAqX,EAAAF,EACA,WAAAA,EAAAC,GAAAs4E,EAAA1vF,GAAAiZ,IACA,GAAA9B,EAAAC,GAAA,EAAAs4E,EAAA1vF,GAAAkY,EACAw3E,EAAA7uF,EAAAsW,EAGA,QAAAw4E,GAAAxmH,GACA,GAAAU,EAAAV,GAAA,CACA,GAAA/B,GAAA+B,EAAA9B,MACA,IAAAwC,EAAAV,EAAA,KAEA,OADA47B,MACA59B,EAAA,EAA+BA,EAAAC,EAASD,IACxC49B,EAAAx6B,KAAA+kH,EAAApoH,KAAAiC,EAAAhC,IAEA,OAAA49B,GAGA,MAAAuqF,GAAApoH,KAAAiC,GAGA,MAAAA,GAGA,QAAAymH,GAAAnsE,GAKA,MAJAA,GAAA,GAAA7vC,KAAA2R,MAAAk+B,EAAA,IACAA,EAAA,GAAA7vC,KAAA2R,MAAAk+B,EAAA,IACAA,EAAA,GAAA7vC,KAAA2R,MAAAk+B,EAAA,IAEA,QAAAA,EAAArqC,KAAA,SAGA,QAAAy2G,GAAAC,GACA,GAAAC,GAAAD,IAAAzoH,OAAA,GAAA8B,KACA,OAAAU,GAAAkmH,KAAA,QAGA,QAAAC,GAAAC,EAAAC,EAAAC,EAAAL,EAAAvxB,GACA,GAAAtxD,GAAAgjF,EAAAG,QACAz9D,EAAAs9D,EAAAI,QACAC,EAAA,WAAAJ,EAEAK,EAAAT,EAAAzoH,MACA,IAAAkpH,EAAA,CAIA,GAQAC,GARAC,EAAAX,EAAA,GAAA3mH,MACAunH,EAAA7mH,EAAA4mH,GACAE,GAAA,EACAC,GAAA,EAGA7B,EAAA2B,EAAAb,EAAAC,GAAA,CAIAA,GAAAp9F,KAAA,SAAAxW,EAAAC,GACA,MAAAD,GAAAutF,KAAAttF,EAAAstF,OAGA+mB,EAAAV,EAAAS,EAAA,GAAA9mB,IAOA,QALAonB,MAEAC,KACAC,EAAAjB,EAAA,GAAA3mH,MACA6nH,GAAA,EACA7pH,EAAA,EAAuBA,EAAAopH,EAAcppH,IAAA,CACrC0pH,EAAAtmH,KAAAulH,EAAA3oH,GAAAsiG,KAAA+mB,EAEA,IAAArnH,GAAA2mH,EAAA3oH,GAAAgC,KAUA,IAPAunH,GAAAnB,EAAApmH,EAAA4nH,EAAAhC,KACA2B,GAAAvnH,IAAA4nH,IACAC,GAAA,GAEAD,EAAA5nH,EAGA,gBAAAA,GAAA,CACA,GAAA8nH,GAAAlhH,EAAAub,MAAAniB,EACA8nH,IACA9nH,EAAA8nH,EACAN,GAAA,GAGAC,GAAA,EAGAE,EAAAvmH,KAAApB,GAEA,IAAA6nH,EAAA,CAMA,OAFAjB,GAAAe,EAAAP,EAAA,GAEAppH,EAAA,EAAuBA,EAAAopH,EAAA,EAAkBppH,IACzCupH,EACAzB,EAAA6B,EAAA3pH,GAAA4oH,EAAAhB,IAGAngG,MAAAkiG,EAAA3pH,KAAAynB,MAAAmhG,IAAAa,GAAAD,IACAG,EAAA3pH,GAAA4oH,EAIAW,IAAAzB,EAAAhiF,EAAAgjF,EAAA/+D,QAAAqtC,GAAAwxB,EAAAhB,EAIA,IAEAp/D,GACApxB,EACA2Y,EACAC,EACAC,EACAC,EAPA65E,EAAA,EACAC,EAAA,CAQA,IAAAR,EACA,GAAAltE,IAAA,QAGA,IAAA2tE,GAAA,SAAArpH,EAAAiqB,GAIA,GAAAq/F,EAEA,IAAAr/F,EAAA,EACAq/F,EAAA,MAEA,IAAAr/F,EAAAm/F,EAAA,CAIA,IADAxhE,EAAA/7C,KAAAI,IAAAk9G,EAAA,EAAAX,EAAA,GACAc,EAAA1hE,EAAmC0hE,GAAA,KACnCR,EAAAQ,IAAAr/F,GAD+Cq/F,KAM/CA,EAAAz9G,KAAAI,IAAAq9G,EAAAd,EAAA,OAEA,CACA,IAAAc,EAAAH,EAAuCG,EAAAd,KACvCM,EAAAQ,GAAAr/F,GADyDq/F,KAKzDA,EAAAz9G,KAAAI,IAAAq9G,EAAA,EAAAd,EAAA,GAEAW,EAAAG,EACAF,EAAAn/F,CAEA,IAAAL,GAAAk/F,EAAAQ,EAAA,GAAAR,EAAAQ,EACA,QAAA1/F,EAMA,GAFA4M,GAAAvM,EAAA6+F,EAAAQ,IAAA1/F,EAEA2+F,EAKA,GAJAn5E,EAAA25E,EAAAO,GACAn6E,EAAA45E,EAAA,IAAAO,MAAA,GACAj6E,EAAA05E,EAAAO,EAAAd,EAAA,EAAAA,EAAA,EAAAc,EAAA,GACAh6E,EAAAy5E,EAAAO,EAAAd,EAAA,EAAAA,EAAA,EAAAc,EAAA,GACAX,EACAlB,EACAt4E,EAAAC,EAAAC,EAAAC,EAAA9Y,YACA0O,EAAAllC,EAAAw2F,GACAwwB,OAGA,CACA,GAAA5lH,EACA,IAAAwnH,EACAxnH,EAAAqmH,EACAt4E,EAAAC,EAAAC,EAAAC,EAAA9Y,YACAklB,EAAA,GAEAt6C,EAAAymH,EAAAnsE,OAEA,IAAAmtE,EAEA,MAAA/B,GAAA13E,EAAAC,EAAA7Y,EAGAp1B,GAAAsmH,EACAv4E,EAAAC,EAAAC,EAAAC,EAAA9Y,aAGAo0B,EACA5qD,EACAw2F,EACAp1F,OAKA,IAAAunH,EACA5B,EACAgC,EAAAO,GAAAP,EAAAO,EAAA,GAAA9yF,EACA0O,EAAAllC,EAAAw2F,GACAwwB,OAGA,CACA,GAAA5lH,EACA,IAAAwnH,EACA7B,EACAgC,EAAAO,GAAAP,EAAAO,EAAA,GAAA9yF,EACAklB,EAAA,GAEAt6C,EAAAymH,EAAAnsE,OAEA,IAAAmtE,EAEA,MAAA/B,GAAAiC,EAAAO,GAAAP,EAAAO,EAAA,GAAA9yF,EAGAp1B,GAAAylH,EAAAkC,EAAAO,GAAAP,EAAAO,EAAA,GAAA9yF,GAEAo0B,EACA5qD,EACAw2F,EACAp1F,KAMAmoH,EAAA,GAAAC,IACAxpH,OAAAkoH,EAAA/+D,QACAsgE,KAAAhB,EACApxF,KAAA6wF,EAAAwB,MACA/3D,MAAAu2D,EAAAyB,OACAN,UACAO,UAAAxB,GAOA,OAJAD,IAAA,WAAAA,IACAoB,EAAApB,UAGAoB,IA9aA,GAAAC,GAAA5hH,EAAA,KACAI,EAAAJ,EAAA,IACA3G,EAAA2G,EAAA,GACA9F,EAAAb,EAAAa,YAEAylH,EAAAxhH,MAAArE,UAAAsC,MAobA6lH,EAAA,SAAA7pH,EAAAq3B,EAAA6N,EAAA0lB,GACArnD,KAAAumH,WACAvmH,KAAA4lD,QAAAnpD,EAEAuD,KAAAmmH,MAAAryF,IAAA,EAEA9zB,KAAA8kH,QAAAnjF,GAAAyhF,EACApjH,KAAA+kH,QAAA19D,GAAAg8D,EAEArjH,KAAAwmH,WAAA,EAEAxmH,KAAAomH,OAAA,EAEApmH,KAAAymH,aAEAzmH,KAAA0mH,gBAEA1mH,KAAA2mH,aAGAL,GAAAnoH,WAOAyoH,KAAA,SAAAzoB,EAAAl3F,GACA,GAAA4/G,GAAA7mH,KAAAumH,OACA,QAAAtzB,KAAAhsF,GACA,GAAAA,EAAA1K,eAAA02F,GAAA,CAIA,IAAA4zB,EAAA5zB,GAAA,CACA4zB,EAAA5zB,KAEA,IAAAp1F,GAAAmC,KAAA8kH,QAAA9kH,KAAA4lD,QAAAqtC,EACA,UAAAp1F,EAEA,QAMA,KAAAsgG,GACA0oB,EAAA5zB,GAAAh0F,MACAk/F,KAAA,EACAtgG,MAAAwmH,EAAAxmH,KAIAgpH,EAAA5zB,GAAAh0F,MACAk/F,OACAtgG,MAAAoJ,EAAAgsF,KAGA,MAAAjzF,OAOA8mH,OAAA,SAAA7vD,GAEA,MADAj3D,MAAA0mH,aAAAznH,KAAAg4D,GACAj3D,MAGA+mH,MAAA,WACA,OAAAlrH,GAAA,EAA2BA,EAAAmE,KAAA2mH,UAAA5qH,OAA2BF,IACtDmE,KAAA2mH,UAAA9qH,GAAAkrH,OAEA/mH,MAAAgnH,SAAA,GAGAC,OAAA,WACA,OAAAprH,GAAA,EAA2BA,EAAAmE,KAAA2mH,UAAA5qH,OAA2BF,IACtDmE,KAAA2mH,UAAA9qH,GAAAorH,QAEAjnH,MAAAgnH,SAAA,GAGAE,SAAA,WACA,QAAAlnH,KAAAgnH,SAGAG,cAAA,WAEAnnH,KAAAumH,WAEAvmH,KAAA2mH,UAAA5qH,OAAA,CAIA,QAFAqrH,GAAApnH,KAAAymH,UACA3qH,EAAAsrH,EAAArrH,OACAF,EAAA,EAA2BA,EAAAC,EAASD,IACpCurH,EAAAvrH,GAAAD,KAAAoE,OASAqkD,MAAA,SAAAugE,GAEA,GAUAyC,GAVA1pG,EAAA3d,KACAsnH,EAAA,EAEAzC,EAAA,aACAyC,GAEA3pG,EAAAwpG,gBAKA,QAAAl0B,KAAAjzF,MAAAumH,QACA,GAAAvmH,KAAAumH,QAAAhqH,eAAA02F,GAAA,CAGA,GAAA+yB,GAAAtB,EACA1kH,KAAA4kH,EAAAC,EACA7kH,KAAAumH,QAAAtzB,KAEA+yB,KACAhmH,KAAA2mH,UAAA1nH,KAAA+mH,GACAsB,IAGAtnH,KAAA4S,WACA5S,KAAA4S,UAAA20G,QAAAvB,GAGAqB,EAAArB,GAKA,GAAAqB,EAAA,CACA,GAAAG,GAAAH,EAAAvB,OACAuB,GAAAvB,QAAA,SAAArpH,EAAAiqB,GACA8gG,EAAA/qH,EAAAiqB,EAEA,QAAA7qB,GAAA,EAAmCA,EAAA8hB,EAAA+oG,aAAA3qH,OAA8BF,IACjE8hB,EAAA+oG,aAAA7qH,GAAAY,EAAAiqB,IAQA,MAHA4gG,IACAtnH,KAAAmnH,gBAEAnnH,MAMA41C,KAAA,SAAA6xE,GAGA,OAFAC,GAAA1nH,KAAA2mH,UACA/zG,EAAA5S,KAAA4S,UACA/W,EAAA,EAA2BA,EAAA6rH,EAAA3rH,OAAqBF,IAAA,CAChD,GAAAmqH,GAAA0B,EAAA7rH,EACA4rH,IAEAzB,EAAAF,QAAA9lH,KAAA4lD,QAAA,GAEAhzC,KAAA+0G,WAAA3B,GAEA0B,EAAA3rH,OAAA,GAOAqyD,MAAA,SAAA+vC,GAEA,MADAn+F,MAAAomH,OAAAjoB,EACAn+F,MAOA4nH,KAAA,SAAAjpH,GAIA,MAHAA,IACAqB,KAAAymH,UAAAxnH,KAAAN,GAEAqB,MAMA6nH,SAAA,WACA,MAAA7nH,MAAA2mH,YAIAtrH,EAAAC,QAAAgrH,G9Eiy5BM,SAAUjrH,EAAQC,G+Ex66BxBD,EAAAC,QAAA,mBAAAogB,UACAA,OAAAipE,uBAAAjpE,OAAAipE,sBAAAnlF,KAAAkc,SAEAA,OAAAosG,yBAAApsG,OAAAosG,wBAAAtoH,KAAAkc,SACAA,OAAAqsG,0BACArsG,OAAAssG,8BAEA,SAAAvoH,GACA4uD,WAAA5uD,EAAA,M/Em76BM,SAAUpE,EAAQC,GgF376BxB,GAAA2sH,GAAA,EAAA3/G,KAAA6gB,EACA9tB,GAAAC,SACA4sH,gBAAA,SAAAtrB,GAKA,MAJAA,IAAAqrB,EACArrB,EAAA,IACAA,GAAAqrB,GAEArrB,KhFs86BM,SAAUvhG,EAAQC,GiFv86BxB,GAAA6sH,GAAA,WAKAnoH,KAAAooH,KAAA,KAKApoH,KAAAqoH,KAAA,KAEAroH,KAAAi2F,KAAA,GAGAqyB,EAAAH,EAAAhqH,SAMAmqH,GAAA1nC,OAAA,SAAA36D,GACA,GAAA0f,GAAA,GAAA4iF,GAAAtiG,EAEA,OADAjmB,MAAAwoH,YAAA7iF,GACAA,GAOA2iF,EAAAE,YAAA,SAAA7iF,GACA3lC,KAAAooH,MAIApoH,KAAAqoH,KAAA15E,KAAAhJ,EACAA,EAAA+I,KAAA1uC,KAAAqoH,KACA1iF,EAAAgJ,KAAA,KACA3uC,KAAAqoH,KAAA1iF,GANA3lC,KAAAooH,KAAApoH,KAAAqoH,KAAA1iF,EAQA3lC,KAAAi2F,QAOAqyB,EAAAlwG,OAAA,SAAAutB,GACA,GAAA+I,GAAA/I,EAAA+I,KACAC,EAAAhJ,EAAAgJ,IACAD,GACAA,EAAAC,OAIA3uC,KAAAooH,KAAAz5E,EAEAA,EACAA,EAAAD,OAIA1uC,KAAAqoH,KAAA35E,EAEA/I,EAAAgJ,KAAAhJ,EAAA+I,KAAA,KACA1uC,KAAAi2F,QAMAqyB,EAAAxsH,IAAA,WACA,MAAAkE,MAAAi2F,MAMAqyB,EAAA1mG,MAAA,WACA5hB,KAAAooH,KAAApoH,KAAAqoH,KAAA,KACAroH,KAAAi2F,KAAA,EAOA,IAAAsyB,GAAA,SAAAtiG,GAIAjmB,KAAAnC,MAAAooB,EAKAjmB,KAAA2uC,KAKA3uC,KAAA0uC,MAQAsL,EAAA,SAAAyuE,GAEAzoH,KAAA0oH,MAAA,GAAAP,GAEAnoH,KAAA2oH,QAEA3oH,KAAA4oH,SAAAH,GAAA,GAEAzoH,KAAA6oH,kBAAA,MAGAC,EAAA9uE,EAAA77C,SAOA2qH,GAAArxE,IAAA,SAAAn7C,EAAAuB,GACA,GAAAyf,GAAAtd,KAAA0oH,MACA3pH,EAAAiB,KAAA2oH,KACAj/B,EAAA,IACA,UAAA3qF,EAAAzC,GAAA,CACA,GAAAR,GAAAwhB,EAAAxhB,MAEA6pC,EAAA3lC,KAAA6oH,iBAEA,IAAA/sH,GAAAkE,KAAA4oH,UAAA9sH,EAAA,GAEA,GAAAitH,GAAAzrG,EAAA8qG,IACA9qG,GAAAlF,OAAA2wG,SACAhqH,GAAAgqH,EAAAzsH,KAEAotF,EAAAq/B,EAAAlrH,MACAmC,KAAA6oH,kBAAAE,EAGApjF,EACAA,EAAA9nC,QAGA8nC,EAAA,GAAA4iF,GAAA1qH,GAEA8nC,EAAArpC,MACAghB,EAAAkrG,YAAA7iF,GACA5mC,EAAAzC,GAAAqpC,EAGA,MAAA+jD,IAOAo/B,EAAArmH,IAAA,SAAAnG,GACA,GAAAqpC,GAAA3lC,KAAA2oH,KAAArsH,GACAghB,EAAAtd,KAAA0oH,KACA,UAAA/iF,EAOA,MALAA,KAAAroB,EAAA+qG,OACA/qG,EAAAlF,OAAAutB,GACAroB,EAAAkrG,YAAA7iF,IAGAA,EAAA9nC,OAOAirH,EAAAlnG,MAAA,WACA5hB,KAAA0oH,MAAA9mG,QACA5hB,KAAA2oH,SAGAttH,EAAAC,QAAA0+C,GjFs96BM,SAAU3+C,EAAQC,GkFlp7BxB,GAAA0tH,GAAA,IAEA3tH,GAAAC,QAAA,WACA,MAAA0tH,OlFkq7BM,SAAU3tH,EAAQC,EAAS+I,GmF3q7BjC,GAAAg8B,GAAAh8B,EAAA,GAMAhJ,GAAAC,QAAA,WACA,OAAA+kC,EAAAwzD,UAGA,MAAAxzD,EAAAwzD,UACA,OAAAt7D,KAAA34B,WACA,SAAAkB,OAAAlB,UAAA24B,QAGA,IAAA8H,EAAAwzD,UAAA,EACA,OAAAt7D,KAAA34B,WACA4T,QAAAoJ,IAAAhd,UAAA24B,MnFgs7BM,SAAUl9B,EAAQC,EAAS+I,GoF/r7BjC,QAAA4kH,GAAAr/G,GACAumB,EAAAv0B,KAAAoE,KAAA4J,GAbA,GAAAumB,GAAA9rB,EAAA,IACA+D,EAAA/D,EAAA,IACAyD,EAAAzD,EAAA,GAEA21C,EAAA31C,EAAA,KACA6kH,EAAA,GAAAlvE,GAAA,GAWAivE,GAAA9qH,WAEAlC,YAAAgtH,EAEA9oH,KAAA,QAEAwwB,MAAA,SAAAC,EAAAC,GACA,GAEAnS,GAFA1Z,EAAAhF,KAAAgF,MACAihD,EAAAjhD,EAAA0Z,KAcA,IAVA1Z,EAAAxF,KAAAoxB,EAAA5wB,KAAA6wB,KAGAnS,EADA,gBAAAunC,GACAjmD,KAAAmpH,OAIAljE,IAGAA,EAAA,CAEA,GAAAmjE,GAAAF,EAAAzmH,IAAAwjD,EACA,KAAAmjE,EAgBA,MAdA1qG,GAAA,GAAA7V,OACA6V,EAAA2qG,OAAA,WACA3qG,EAAA2qG,OAAA,IACA,QAAAxtH,GAAA,EAAuCA,EAAAutH,EAAA5qC,QAAAziF,OAAiCF,IACxEutH,EAAA5qC,QAAA3iF,GAAA43B,SAGA21F,GACA1qG,QACA8/D,SAAAx+E,OAEA0e,EAAAunC,MACAijE,EAAAzxE,IAAAwO,EAAAmjE,QACAppH,KAAAmpH,OAAAzqG,EAOA,IAHAA,EAAA0qG,EAAA1qG,MACA1e,KAAAmpH,OAAAzqG,GAEAA,EAAAlU,QAAAkU,EAAAjU,OAEA,WADA2+G,GAAA5qC,QAAAv/E,KAAAe,MAMA,GAAA0e,EAAA,CASA,GAAA/T,GAAA3F,EAAA2F,GAAA,EACAE,EAAA7F,EAAA6F,GAAA,CAEA,KAAA6T,EAAAlU,QAAAkU,EAAAjU,OACA,MAEA,IAAAD,GAAAxF,EAAAwF,MACAC,EAAAzF,EAAAyF,OACAF,EAAAmU,EAAAlU,MAAAkU,EAAAjU,MAgBA,IAfA,MAAAD,GAAA,MAAAC,EAEAD,EAAAC,EAAAF,EAEA,MAAAE,GAAA,MAAAD,EACAC,EAAAD,EAAAD,EAEA,MAAAC,GAAA,MAAAC,IACAD,EAAAkU,EAAAlU,MACAC,EAAAiU,EAAAjU,QAIAzK,KAAAoxB,aAAAR,GAEA5rB,EAAAskH,QAAAtkH,EAAAukH,QAAA,CACA,GAAA/tF,GAAAx2B,EAAAw2B,IAAA,EACAC,EAAAz2B,EAAAy2B,IAAA,CACA7K,GAAA44F,UACA9qG,EACA8c,EAAAC,EAAAz2B,EAAAskH,OAAAtkH,EAAAukH,QACA5+G,EAAAE,EAAAL,EAAAC,OAGA,IAAAzF,EAAAw2B,IAAAx2B,EAAAy2B,GAAA,CACA,GAAAD,GAAAx2B,EAAAw2B,GACAC,EAAAz2B,EAAAy2B,GACA6tF,EAAA9+G,EAAAgxB,EACA+tF,EAAA9+G,EAAAgxB,CACA7K,GAAA44F,UACA9qG,EACA8c,EAAAC,EAAA6tF,EAAAC,EACA5+G,EAAAE,EAAAL,EAAAC,OAIAmmB,GAAA44F,UAAA9qG,EAAA/T,EAAAE,EAAAL,EAAAC,EAGAzK,MAAAsyB,iBAAA1B,GAGA,MAAA5rB,EAAAutB,MACAvyB,KAAAwyB,aAAA5B,EAAA5wB,KAAAsK,qBAMAA,gBAAA,WACA,GAAAtF,GAAAhF,KAAAgF,KAMA,OALAhF,MAAA4yB,QACA5yB,KAAA4yB,MAAA,GAAAxqB,GACApD,EAAA2F,GAAA,EAAA3F,EAAA6F,GAAA,EAAA7F,EAAAwF,OAAA,EAAAxF,EAAAyF,QAAA,IAGAzK,KAAA4yB,QAIA9qB,EAAAhK,SAAAmrH,EAAA94F,GAEA90B,EAAAC,QAAA2tH,GpFyt7BM,SAAU5tH,EAAQC,GqFp37BxB,GAAAg1B,GAAA,SAAA5R,EAAA+qG,GAIAzpH,KAAA0e,QACA1e,KAAAypH,SAGAzpH,KAAAG,KAAA,UAGAmwB,GAAAnyB,UAAAoyB,iBAAA,SAAAK,GACA,MAAAA,GAAA84F,cAAA1pH,KAAA0e,MAAA1e,KAAAypH,QAAA,WAGApuH,EAAAC,QAAAg1B,GrF637BM,SAAUj1B,EAAQC,GsF737BxB,QAAAquH,GAAA/4F,EAAAlyB,EAAAuL,GACA,GAAAU,GAAA,MAAAjM,EAAAiM,EAAA,EAAAjM,EAAAiM,EACAe,EAAA,MAAAhN,EAAAgN,GAAA,EAAAhN,EAAAgN,GACAb,EAAA,MAAAnM,EAAAmM,EAAA,EAAAnM,EAAAmM,EACAe,EAAA,MAAAlN,EAAAkN,GAAA,EAAAlN,EAAAkN,EAWA,OATAlN,GAAAsR,SACArF,IAAAV,EAAAO,MAAAP,EAAAU,EACAe,IAAAzB,EAAAO,MAAAP,EAAAU,EACAE,IAAAZ,EAAAQ,OAAAR,EAAAY,EACAe,IAAA3B,EAAAQ,OAAAR,EAAAY,GAGA+lB,EAAA+4F,qBAAAh/G,EAAAE,EAAAa,EAAAE,GAKA,QAAAg+G,GAAAh5F,EAAAlyB,EAAAuL,GACA,GAAAO,GAAAP,EAAAO,MACAC,EAAAR,EAAAQ,OACA/B,EAAAJ,KAAAI,IAAA8B,EAAAC,GAEAE,EAAA,MAAAjM,EAAAiM,EAAA,GAAAjM,EAAAiM,EACAE,EAAA,MAAAnM,EAAAmM,EAAA,GAAAnM,EAAAmM,EACAqsC,EAAA,MAAAx4C,EAAAw4C,EAAA,GAAAx4C,EAAAw4C,CASA,OARAx4C,GAAAsR,SACArF,IAAAH,EAAAP,EAAAU,EACAE,IAAAJ,EAAAR,EAAAY,EACAqsC,GAAAxuC,GAGAkoB,EAAAg5F,qBAAAj/G,EAAAE,EAAA,EAAAF,EAAAE,EAAAqsC,GA5CA,GAAA2yE,KACA,gFACA,0DAMAlf,EAAA,SAAA/gG,GACA5J,KAAAo0B,WAAAxqB,GAyCA+gG,GAAAxsG,WAEAlC,YAAA0uG,EAKA1lG,KAAA,UAKAF,OAAA,KAKAyqG,QAAA,EAKA79E,SAAA,KAKAC,eAAA,EAKAshF,WAAA,EAKAE,cAAA,EAKAC,cAAA,EAKA7nG,UAAA,EAMA2nB,eAAA,EAOAZ,KAAA,KAKAjlB,SAAA,OAKAw8G,WAAA,KAQA18G,aAAA,SAMA28G,iBAAA,KAMA18G,WAAA,KAKA88B,aAAA,KAKAD,UAAA,KAKAgqE,kBAAA,KAMAjnG,aAAA,EAMA+8G,eAAA,EAMAC,kBAAA,EAMAC,kBAAA,EAOAC,eAAA,EAMArR,aAAA,EAMAsR,MAAA,KAKA5qH,KAAA,SAAAoxB,EAAA/rB,EAAAgsB,GAKA,OAJA7rB,GAAAhF,KACAqqH,EAAAx5F,KAAA7rB,MACAslH,GAAAD,EAEAxuH,EAAA,EAA2BA,EAAAguH,EAAA9tH,OAA+BF,IAAA,CAC1D,GAAAuC,GAAAyrH,EAAAhuH,GACA0uH,EAAAnsH,EAAA,IAEAksH,GAAAtlH,EAAAulH,KAAAF,EAAAE,MAEA35F,EAAA25F,GAAAvlH,EAAAulH,IAAAnsH,EAAA,IAiBA,IAbAksH,GAAAtlH,EAAAC,OAAAolH,EAAAplH,QACA2rB,EAAAa,UAAAzsB,EAAAC,OAEAqlH,GAAAtlH,EAAAD,SAAAslH,EAAAtlH,UACA6rB,EAAAc,YAAA1sB,EAAAD,SAEAulH,GAAAtlH,EAAAwqG,UAAA6a,EAAA7a,WACA5+E,EAAA45F,YAAA,MAAAxlH,EAAAwqG,QAAA,EAAAxqG,EAAAwqG,UAGA8a,GAAAtlH,EAAAolH,QAAAC,EAAAD,SACAx5F,EAAA65F,yBAAAzlH,EAAAolH,OAAA,eAEApqH,KAAA8wB,YAAA,CACA,GAAAtlB,GAAAxG,EAAAwG,SACAolB,GAAAplB,aACAxL,KAAAmzB,eAAAtuB,KAAAuuB,aAAAvuB,EAAAuuB,eAAA,KAKArC,QAAA,WACA,GAAA9rB,GAAAjF,KAAAiF,IACA,cAAAA,GAAA,SAAAA,GAGA6rB,UAAA,WACA,GAAA/rB,GAAA/E,KAAA+E,MACA,cAAAA,GAAA,SAAAA,GAAA/E,KAAAwL,UAAA,GAQA4oB,WAAA,SAAAs2F,EAAAhuH,GACA,GAAAguH,EAAA,CACA,GAAAjuH,GAAAuD,IACA,QAAAqF,KAAAqlH,IACAA,EAAAnuH,eAAA8I,KACA3I,GAAAD,EAAAF,eAAA8I,KAEA5I,EAAA4I,GAAAqlH,EAAArlH,MAWAnE,IAAA,SAAAxC,EAAAb,GACA,gBAAAa,GACAsB,KAAAtB,GAAAb,EAGAmC,KAAAo0B,WAAA11B,GAAA,IAQAnD,MAAA,WACA,GAAA0sE,GAAA,GAAAjoE,MAAA/D,WAEA,OADAgsE,GAAA7zC,WAAAp0B,MAAA,GACAioE,GAGA12C,YAAA,SAAAX,EAAAlyB,EAAAuL,GAIA,OAHAiG,GAAA,WAAAxR,EAAAyB,KAAAypH,EAAAD,EACAgB,EAAAz6G,EAAA0gB,EAAAlyB,EAAAuL,GACAiW,EAAAxhB,EAAAwhB,WACArkB,EAAA,EAA2BA,EAAAqkB,EAAAnkB,OAAuBF,IAClD8uH,EAAAjf,aACAxrF,EAAArkB,GAAA47F,OAAAv3E,EAAArkB,GAAA4I,MAGA,OAAAkmH,IAKA,QADAC,GAAAjgB,EAAAxsG,UACAtC,EAAA,EAAmBA,EAAAguH,EAAA9tH,OAA+BF,IAAA,CAClD,GAAAuC,GAAAyrH,EAAAhuH,EACAuC,GAAA,IAAAwsH,KACAA,EAAAxsH,EAAA,IAAAA,EAAA,IAKAusG,EAAAp5E,YAAAq5F,EAAAr5F,YAEAl2B,EAAAC,QAAAqvG,GtFq57BM,SAAUtvG,EAAQC,EAAS+I,GuFnt8BjC,GAAAwmH,GAAAxmH,EAAA,KACAymH,EAAAzmH,EAAA,IAEAhJ,GAAAC,SACA82B,UAAA,SAAAxB,EAAArlB,EAAA+rF,GACA,GAAA1nF,GAAArE,EAAAqE,OACAm7G,EAAAx/G,EAAAw/G,MACA,IAAAn7G,KAAA7T,QAAA,GACA,GAAAgvH,GAAA,WAAAA,EAAA,CACA,GAAAC,GAAAF,EACAl7G,EAAAm7G,EAAAzzB,EAAA/rF,EAAA0/G,iBAGAr6F,GAAA0lE,OAAA1mF,EAAA,MAAAA,EAAA,MAEA,QADA9T,GAAA8T,EAAA7T,OACAF,EAAA,EAAmCA,GAAAy7F,EAAAx7F,IAAA,GAAiCD,IAAA,CACpE,GAAAqvH,GAAAF,EAAA,EAAAnvH,GACAsvH,EAAAH,EAAA,EAAAnvH,EAAA,GACAm7C,EAAApnC,GAAA/T,EAAA,GAAAC,EACA80B,GAAAgmE,cACAs0B,EAAA,GAAAA,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAn0E,EAAA,GAAAA,EAAA,SAIA,CACA,WAAA+zE,IACAn7G,EAAAi7G,EAAAj7G,EAAA0nF,IAGA1mE,EAAA0lE,OAAA1mF,EAAA,MAAAA,EAAA,MACA,QAAA/T,GAAA,EAAAguC,EAAAj6B,EAAA7T,OAAsDF,EAAAguC,EAAOhuC,IAC7D+0B,EAAA4lE,OAAA5mF,EAAA/T,GAAA,GAAA+T,EAAA/T,GAAA,IAIAy7F,GAAA1mE,EAAA0mE,gBvF+t8BM,SAAUj8F,EAAQC,EAAS+I,GAEjC,YwFxv8BA,SAAAqnC,GAAAzlB,GACA,MAAAA,GAAAwlB,GAAAxlB,GAAAwlB,EAPA,GAAAxjC,GAAA5D,EAAA,IACA6D,EAAA7D,EAAA,IACA+mH,EAAAnjH,EAAAmG,SAEAq9B,EAAA,KAUAtjC,EAAA,SAAAyB,GACAA,QAEAA,EAAAsC,WAMAlM,KAAAkM,UAAA,MAEA,MAAAtC,EAAAuF,WAMAnP,KAAAmP,SAAA,GAEAvF,EAAAmoB,QAMA/xB,KAAA+xB,OAAA,MAOA/xB,KAAA67G,OAAA77G,KAAA67G,QAAA,MAGAwP,EAAAljH,EAAAhK,SACAktH,GAAA98G,UAAA,KAMA88G,EAAAn4E,mBAAA,WACA,MAAAxH,GAAA1rC,KAAAmP,WACAu8B,EAAA1rC,KAAAkM,SAAA,KACAw/B,EAAA1rC,KAAAkM,SAAA,KACAw/B,EAAA1rC,KAAA+xB,MAAA,OACA2Z,EAAA1rC,KAAA+xB,MAAA,OAGAs5F,EAAAnV,gBAAA,WACA,GAAAtyG,GAAA5D,KAAA4D,OACA0nH,EAAA1nH,KAAA2K,UACA2kC,EAAAlzC,KAAAkzC,qBAEAhoC,EAAAlL,KAAAuO,SACA,KAAA2kC,IAAAo4E,EAEA,YADApgH,GAAAkgH,EAAAlgH,GAIAA,MAAAjD,EAAA0X,SAEAuzB,EACAlzC,KAAAsO,kBAAApD,GAGAkgH,EAAAlgH,GAIAogH,IACAp4E,EACAjrC,EAAAoG,IAAAnD,EAAAtH,EAAA2K,UAAArD,GAGAjD,EAAA+qB,KAAA9nB,EAAAtH,EAAA2K,YAIAvO,KAAAuO,UAAArD,EAEAlL,KAAAurH,aAAAvrH,KAAAurH,cAAAtjH,EAAA0X,SACA1X,EAAAuG,OAAAxO,KAAAurH,aAAArgH,IAGAmgH,EAAA/8G,kBAAA,SAAApD,GACA,MAAA/C,GAAAmG,kBAAAtO,KAAAkL,IAOAmgH,EAAAj6F,aAAA,SAAAR,GACA,GAAA1lB,GAAAlL,KAAAuO,UACA2O,EAAA0T,EAAA1T,KAAA,CACAhS,GACA0lB,EAAAQ,aAAAlU,EAAAhS,EAAA,GAAAgS,EAAAhS,EAAA,GAAAgS,EAAAhS,EAAA,GAAAgS,EAAAhS,EAAA,GAAAgS,EAAAhS,EAAA,GAAAgS,EAAAhS,EAAA,IAGA0lB,EAAAQ,aAAAlU,EAAA,IAAAA,EAAA,MAIAmuG,EAAA/4F,iBAAA,SAAA1B,GACA,GAAA1T,GAAA0T,EAAA1T,KAAA,CACA0T,GAAAQ,aAAAlU,EAAA,IAAAA,EAAA,KAGA,IAAAsuG,KAKAH,GAAApT,mBAAA,WACA,GAAAj4G,KAAAuO,UAAA,CAGA,GAAA3K,GAAA5D,KAAA4D,OACAsH,EAAAlL,KAAAuO,SACA3K,MAAA2K,YAEAtG,EAAAoG,IAAAm9G,EAAA5nH,EAAA2nH,aAAArgH,GACAA,EAAAsgH,EAEA,IAAAhwF,GAAAtwB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAuwB,EAAAvwB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAgB,EAAAlM,KAAAkM,SACA6lB,EAAA/xB,KAAA+xB,KACA2Z,GAAAlQ,EAAA,KACAA,EAAAlzB,KAAA4rB,KAAAsH,IAEAkQ,EAAAjQ,EAAA,KACAA,EAAAnzB,KAAA4rB,KAAAuH,IAEAvwB,EAAA,OACAswB,MAEAtwB,EAAA,OACAuwB,MAEAvvB,EAAA,GAAAhB,EAAA,GACAgB,EAAA,GAAAhB,EAAA,GACA6mB,EAAA,GAAAyJ,EACAzJ,EAAA,GAAA0J,EACAz7B,KAAAmP,SAAA7G,KAAAmjH,OAAAvgH,EAAA,GAAAuwB,EAAAvwB,EAAA,GAAAswB,KAOA6vF,EAAAr5F,eAAA,WACA,GAAA9mB,GAAAlL,KAAAuO,SACA,KAAArD,EACA,WAEA,IAAAswB,GAAAlzB,KAAA4rB,KAAAhpB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAuwB,EAAAnzB,KAAA4rB,KAAAhpB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAOA,OANAA,GAAA,OACAswB,MAEAtwB,EAAA,OACAuwB,OAEAD,EAAAC,IASA4vF,EAAA93F,sBAAA,SAAA5oB,EAAAE,GACA,GAAA8pB,IAAAhqB,EAAAE,GACA0gH,EAAAvrH,KAAAurH,YAIA,OAHAA,IACArjH,EAAA8C,eAAA2pB,IAAA42F,GAEA52F,GAUA02F,EAAAK,uBAAA,SAAA/gH,EAAAE,GACA,GAAA8pB,IAAAhqB,EAAAE,GACA0D,EAAAvO,KAAAuO,SAIA,OAHAA,IACArG,EAAA8C,eAAA2pB,IAAApmB,GAEAomB,GAWAxsB,EAAAmG,kBAAA,SAAA7R,EAAAyO,GACAA,QACAkgH,EAAAlgH,EAEA,IAAA2wG,GAAAp/G,EAAAo/G,OACA9pF,EAAAt1B,EAAAs1B,QAAA,KACA5iB,EAAA1S,EAAA0S,UAAA,EACAjD,EAAAzP,EAAAyP,WAAA,IAoBA,OAlBA2vG,KAEA3wG,EAAA,IAAA2wG,EAAA,GACA3wG,EAAA,IAAA2wG,EAAA,IAEA5zG,EAAA8pB,MAAA7mB,IAAA6mB,GACA5iB,GACAlH,EAAAmoC,OAAAllC,IAAAiE,GAEA0sG,IAEA3wG,EAAA,IAAA2wG,EAAA,GACA3wG,EAAA,IAAA2wG,EAAA,IAGA3wG,EAAA,IAAAgB,EAAA,GACAhB,EAAA,IAAAgB,EAAA,GAEAhB,GAGA7P,EAAAC,QAAA6M,GxF4w8BS,CACA,CAEH,SAAU9M,EAAQyiC,EAAqBz5B,GAE7C,YyFvg9BA,SAAAsnH,GAAAC,GAEA5rH,KAAAw+B,MAAAqtF,EACA7rH,KAAAnC,UAAAylD,GACAtjD,KAAA8rH,WAEA,IAAAC,GAAA/rH,IAEA,KACA4rH,EAAA,SAAAjhH,GACAohH,EAAAjpF,QAAAn4B,IACS,SAAAusC,GACT60E,EAAA79D,OAAAhX,KAEK,MAAA1wC,GACLulH,EAAA79D,OAAA1nD,IAiKA,QAAAwlH,GAAAJ,EAAAhtH,GAEAgtH,YAAA/oF,SACA7iC,KAAA+rH,QAAAH,EAEA5rH,KAAA+rH,QAAA,GAAAlpF,SAAA+oF,EAAApsH,KAAAZ,IAGAoB,KAAApB,UAkFA,QAAA6U,GAAAqrB,GACA,mBAAAtrB,UAAAy4G,GACAz4G,QAAAC,KAAA,uBAAAqrB,GAIA,QAAAsD,GAAAtD,GACA,mBAAAtrB,UACAA,QAAA4uB,MAAAtD,GAIA,QAAA6B,GAAAhiC,EAAAiyB,GACA,MAAAs7F,GAAAvtH,EAAAiyB,GAGA,QAAAixC,GAAA97C,GACA,MAAAA,KAAA5D,QAAA,oBAGA,QAAAgqG,GAAApmG,EAAAssD,GAEA,MAAAtsD,QAAAu9B,KAAA+uB,EACAtsD,EAAA5D,QAAA,WAGA4D,GAAAssD,EAIAtsD,EAAA5D,QAAA,GAAA8vD,QAAA,IAAAI,EAAA,WAHAtsD,EAMA,QAAAqmG,GAAArmG,GACA,MAAAA,KAAA1V,cAAA,GAGA,QAAAg8G,GAAAtmG,GACA,MAAAA,KAAAxD,cAAA,GAKA,QAAAriB,GAAA+lB,GACA,sBAAAA,GAKA,QAAAhmB,GAAAgmB,GACA,wBAAAA,GAGA,QAAAtpB,GAAA+B,GACA,cAAAA,GAAA,gBAAAA,GAGA,QAAAglD,GAAAhlD,GACA,MAAA/B,GAAA+B,IAAA2D,OAAAiqH,eAAA5tH,IAAA2D,OAAAlE,UAGA,QAAAouH,GAAA7tH,GACA,yBAAA8tH,OAAA9tH,YAAA8tH,MAGA,QAAAC,GAAA/tH,GACA,yBAAAguH,WAAAhuH,YAAAguH,UAGA,QAAA9F,GAAA/oH,EAAA8uH,EAAAC,GAEA,GAAAb,GAAAC,EAAAlpF,QAAAjlC,EAEA,OAAA+B,WAAA7D,OAAA,EACAgwH,EAGAA,EAAAltF,KAAA8tF,EAAAC,GAGA,QAAAvpH,GAAAq7B,EAAAhgC,EAAAkL,GAQA,MANAA,SAEA3J,EAAA2J,KACAA,IAAAhO,KAAA8C,IAGAlC,EAAAkiC,EAAAl/B,MAA0BqtH,IAAAnuH,EAAAqlC,SAAAn6B,IAAyB80B,GAAQqF,SAAAn6B,IAG3D,QAAAnL,GAAAC,EAAAouH,GAEA,GAAAjxH,GAAAS,CAEA,IAAAQ,GAAA4B,GACA,IAAA7C,EAAA,EAAmBA,EAAA6C,EAAA3C,OAAgBF,IACnCixH,EAAAlxH,KAAA8C,EAAA7C,GAAA6C,EAAA7C,UAEK,IAAAc,EAAA+B,GACL,IAAApC,IAAAoC,GACAnC,EAAAX,KAAA8C,EAAApC,IACAwwH,EAAAlxH,KAAA8C,EAAApC,GAAAoC,EAAApC,KAKA,OAAAoC,GAKA,QAAAlC,GAAAC,GAQA,MANAgE,GAAA7E,KAAAgE,UAAA,GAEAf,QAAA,SAAArD,GACAuxH,EAAAtwH,EAAAjB,GAAA,KAGAiB,EAGA,QAAAU,GAAAV,GAcA,MAZAgE,GAAA7E,KAAAgE,UAAA,GAEAf,QAAA,SAAArD,GAEA,OAAAc,KAAAd,OACA8nD,KAAA7mD,EAAAH,KACAG,EAAAH,GAAAd,EAAAc,MAMAG,EAGA,QAAAw0C,GAAAx0C,GAQA,MANAgE,GAAA7E,KAAAgE,UAAA,GAEAf,QAAA,SAAArD,GACAuxH,EAAAtwH,EAAAjB,KAGAiB,EAGA,QAAAswH,GAAAtwH,EAAAjB,EAAA4nC,GACA,OAAA9mC,KAAAd,GACA4nC,IAAAsgB,EAAAloD,EAAAc,KAAAQ,GAAAtB,EAAAc,MACAonD,EAAAloD,EAAAc,MAAAonD,EAAAjnD,EAAAH,MACAG,EAAAH,OAEAQ,GAAAtB,EAAAc,MAAAQ,GAAAL,EAAAH,MACAG,EAAAH,OAEAywH,EAAAtwH,EAAAH,GAAAd,EAAAc,GAAA8mC,QACSkgB,KAAA9nD,EAAAc,KACTG,EAAAH,GAAAd,EAAAc,IA+CA,QAAA0wH,GAAApvG,EAAAuD,EAAA8rG,GAEA,GAAAC,GAAAltG,EAAApC,GAAAuvG,EAAAD,EAAAF,OAAA7rG,EAMA,OAJA8rG,IACAA,EAAAhuH,KAAAY,MAAAotH,EAAAC,EAAAE,MAGAD,EAGA,QAAAntG,GAAAyzD,GAEA,GAAA45C,IAAA,oBAA2C,SAAAJ,IAE3C,QACAG,KAAAH,EACAD,OAAA,SAAApuH,GACA,MAAA60E,GAAAtxD,QAAA,6BAA2D,SAAAugD,EAAAZ,EAAAwrD,GAC3D,GAAAxrD,EAAA,CAEA,GAAAyrD,GAAA,KAAA/sH,IAaA,KAXA,IAAA6sH,EAAA1vH,QAAAmkE,EAAApqC,OAAA,MACA61F,EAAAzrD,EAAApqC,OAAA,GACAoqC,IAAA7oC,OAAA,IAGA6oC,EAAA7sD,MAAA,MAAApW,QAAA,SAAA2uH,GACA,GAAAjgF,GAAA,4BAAA/jB,KAAAgkG,EACAhtH,GAAAvB,KAAAY,MAAAW,EAAAw/F,EAAAphG,EAAA2uH,EAAAhgF,EAAA,GAAAA,EAAA,IAAAA,EAAA,KACA0/E,EAAAhuH,KAAAsuC,EAAA,MAGAggF,GAAA,MAAAA,EAAA,CAEA,GAAAE,GAAA,GAQA,OANA,MAAAF,EACAE,EAAA,IACyB,MAAAF,IACzBE,EAAAF,IAGA,IAAA/sH,EAAAzE,OAAAwxH,EAAA,IAAA/sH,EAAAsN,KAAA2/G,GAEA,MAAAjtH,GAAAsN,KAAA,KAIA,MAAA4/G,GAAAJ,OAOA,QAAAttB,GAAAphG,EAAA2uH,EAAAjxH,EAAAqxH,GAEA,GAAA9vH,GAAAe,EAAAtC,GAAAb,IAEA,IAAAmyH,EAAA/vH,IAAA,KAAAA,EACA,mBAAAA,IAAA,gBAAAA,IAAA,iBAAAA,GACAA,IAAAyE,WAEAqrH,GAAA,MAAAA,IACA9vH,IAAA8mE,UAAA,EAAA9tB,SAAA82E,EAAA,MAGAlyH,EAAAwD,KAAA4uH,EAAAN,EAAA1vH,EAAAiwH,EAAAP,GAAAjxH,EAAA,WAEA,UAAAqxH,EACAnrH,MAAA1F,QAAAe,GACAA,EAAAwB,OAAAuuH,GAAA/uH,QAAA,SAAAhB,GACApC,EAAAwD,KAAA4uH,EAAAN,EAAA1vH,EAAAiwH,EAAAP,GAAAjxH,EAAA,SAGA+F,OAAAs8B,KAAA9gC,GAAAgB,QAAA,SAAA05B,GACAq1F,EAAA/vH,EAAA06B,KACA98B,EAAAwD,KAAA4uH,EAAAN,EAAA1vH,EAAA06B,aAIa,CACb,GAAAgV,KAEA/qC,OAAA1F,QAAAe,GACAA,EAAAwB,OAAAuuH,GAAA/uH,QAAA,SAAAhB,GACA0vC,EAAAtuC,KAAA4uH,EAAAN,EAAA1vH,MAGAwE,OAAAs8B,KAAA9gC,GAAAgB,QAAA,SAAA05B,GACAq1F,EAAA/vH,EAAA06B,MACAgV,EAAAtuC,KAAA8uH,mBAAAx1F,IACAgV,EAAAtuC,KAAA4uH,EAAAN,EAAA1vH,EAAA06B,GAAAj2B,gBAKAwrH,EAAAP,GACA9xH,EAAAwD,KAAA8uH,mBAAAzxH,GAAA,IAAAixC,EAAAz/B,KAAA,MACiB,IAAAy/B,EAAAxxC,QACjBN,EAAAwD,KAAAsuC,EAAAz/B,KAAA,UAKA,MAAAy/G,EACA9xH,EAAAwD,KAAA8uH,mBAAAzxH,IACS,KAAAuB,GAAA,MAAA0vH,GAAA,MAAAA,EAEA,KAAA1vH,GACTpC,EAAAwD,KAAA,IAFAxD,EAAAwD,KAAA8uH,mBAAAzxH,GAAA,IAMA,OAAAb,GAGA,QAAAmyH,GAAA/vH,GACA,WAAAylD,KAAAzlD,GAAA,OAAAA,EAGA,QAAAiwH,GAAAP,GACA,YAAAA,GAA0B,MAAAA,GAAA,MAAAA,EAG1B,QAAAM,GAAAN,EAAA1vH,EAAAvB,GAIA,MAFAuB,GAAA,MAAA0vH,GAAA,MAAAA,EAAAG,EAAA7vH,GAAAkwH,mBAAAlwH,GAEAvB,EACAyxH,mBAAAzxH,GAAA,IAAAuB,EAEAA,EAIA,QAAA6vH,GAAA3nG,GACA,MAAAA,GAAA9Q,MAAA,sBAAsClW,IAAA,SAAAivH,GAItC,MAHA,eAAAtqG,KAAAsqG,KACAA,EAAAC,UAAAD,IAEAA,IACKlgH,KAAA,IAsBL,QAAAogH,GAAAtwG,EAAAuD,GAEA,GAAyB5S,GAAzBoP,EAAA3d,SAAyBmuH,EAAAvwG,CAoBzB,OAlBA1d,GAAA0d,KACAuwG,GAAsBvwG,MAAAuD,WAGtBgtG,EAAA3xH,KAAyB0xH,EAAA7qH,QAAAsa,EAAAomB,SAAAoqF,GAEzBD,EAAA95C,WAAAv1E,QAAA,SAAAuR,GAEAlQ,EAAAkQ,KACAA,EAAA89G,EAAA3/G,UAAA6B,IAGAnQ,EAAAmQ,KACA7B,EAAA++C,EAAAl9C,EAAA7B,EAAAoP,EAAAkvG,QAKAt+G,EAAA4/G,GA6EA,QAAA7gE,GAAAl9C,EAAAu+B,EAAA2W,GACA,gBAAA6oE,GACA,MAAA/9G,GAAAxU,KAAA0pD,EAAA6oE,EAAAx/E,IAIA,QAAAy/E,GAAAjtG,EAAAziB,EAAAg9E,GAEA,GAAAhvB,GAAA9uD,EAAAd,GAAA4B,GAAA09B,EAAAsnB,EAAAhlD,EAEAD,GAAAC,EAAA,SAAAb,EAAAvB,GAEAowD,EAAA/vD,EAAAkB,IAAAf,GAAAe,GAEA69E,IACAp/E,EAAAo/E,EAAA,KAAAt/C,GAAAswB,EAAApwD,EAAA,UAGAo/E,GAAA99E,EACAujB,EAAApd,IAAAlG,EAAAwH,KAAAxH,SACS6uD,EACT0hE,EAAAjtG,EAAAtjB,EAAAvB,GAEA6kB,EAAApd,IAAAzH,EAAAuB,KA+HA,QAAAwwH,GAAAtoG,GAEA,GAAAs+B,GAAAt+B,EAAAa,MAAA,iBAAuC4iD,GAAY8kD,IAAA,KAAAC,IAAa,KAEhE,OAAAlqE,IAAAmlB,EAAAnlB,EAAA,IAAA3gC,KAAAqC,GAsRA,QAAAyoG,GAAAC,EAAA3rF,GAIAA,GAFA2rF,EAAAC,SAAAjpE,GAAAkpE,GAAAC,KAEAH,IA8DA,QAAAviG,GAAAntB,EAAAsG,GACA,MAAAhD,QAAAs8B,KAAA5/B,GAAAG,OAAA,SAAAwvC,EAAApkB,GACA,MAAA8hG,GAAA/mH,KAAA+mH,EAAA9hG,KAAAokB,GACK,MAGL,QAAAmgF,GAAAxpH,GAEA,gCAAAqe,KAAAre,GACA,SAAAsmG,WAAA,yCAGA,OAAA9pC,GAAAx8D,GA2DA,QAAAypH,GAAA/kC,GACA,UAAAiiC,GAAA,SAAAlpF,GAEA,GAAAisF,GAAA,GAAAC,WAEAD,GAAAE,WAAAllC,GACAglC,EAAA1F,OAAA,WACAvmF,EAAAisF,EAAAtzH,WAMA,QAAAyzH,GAAAnlC,GACA,WAAAA,EAAA5pF,KAAAxC,QAAA,cAAAosF,EAAA5pF,KAAAxC,QAAA,QAwCA,QAAAwxH,GAAAhB,GAEA,GAAAxwG,GAAA3d,SAAyB0uH,EAAAU,GAAAzxG,EAAAkvG,IAgBzB,OAdA1vH,GAAAgxH,MAA6BxwG,EAAAomB,SAAAorF,EAAA9rH,SAE7B8rH,EAAAE,aAAAxwH,QAAA,SAAAuR,GAEAlQ,EAAAkQ,KACAA,EAAA++G,EAAAG,YAAAl/G,IAGAnQ,EAAAmQ,IACAs+G,EAAA9zD,IAAAxqD,KAKAs+G,EAAA,GAAAa,IAAApB,IAAAtvF,KAAA,SAAA2wF,GAEA,MAAAA,GAAAC,GAAAD,EAAAxD,EAAA99D,OAAAshE,IAEK,SAAAA,GAML,MAJAA,aAAA1uH,QACAshC,EAAAotF,GAGAxD,EAAA99D,OAAAshE,KAsCA,QAAAE,GAAA9xG,EAAAuD,EAAAtM,EAAAs5G,GAEA,GAAAxwG,GAAA3d,SAAyB2vH,IAgBzB,OAdA96G,GAAA+6G,MACAF,EAAA76G,QACAA,GAGApW,EAAAoW,EAAA,SAAAiB,EAAAzQ,GAEAyQ,EAAAtZ,GAAwBohB,MAAAuD,OAAAyuG,MAA2BzuG,IAAUgtG,EAAAr4G,GAE7D65G,EAAAtqH,GAAA,WACA,OAAAsY,EAAAkyG,OAAAV,GAAAvlH,EAAAkM,EAAAlW,eAIA+vH,EAGA,QAAA/lH,GAAAkM,EAAApW,GAEA,GAAoDqqF,GAApDokC,EAAAyB,MAA8B95G,GAAAqL,IAE9B,QAAAzhB,EAAA3D,QAEA,OAEAolB,EAAAzhB,EAAA,GACAqqF,EAAArqF,EAAA,EAEA,MAEA,QAEA,sBAAAgkB,KAAAyqG,EAAAj+G,QACA65E,EAAArqF,EAAA,GAEAyhB,EAAAzhB,EAAA,EAGA,MAEA,QAEA,KAEA,SAEA,uDAAAA,EAAA3D,OAAA,aAMA,MAHAoyH,GAAApkC,OACAokC,EAAAhtG,OAAAyuG,MAAiCzB,EAAAhtG,UAEjCgtG,EAkBA,QAAA1oF,GAAArF,GAEAqF,EAAAqqF,YAIAC,GAAA3vF,GAEAA,EAAAxiB,IAAAswG,EACA9tF,EAAA4vF,KAAAb,EACA/uF,EAAAuvF,SAAAD,EACAtvF,EAAAyC,QAAAmpF,EAEA3pH,OAAAigC,iBAAAlC,EAAAjiC,WAEA8xH,MACAxtH,IAAA,WACA,MAAAY,GAAA+8B,EAAAxiB,IAAA5d,UAAA+jC,SAAAnmB,OAIAiyG,OACAptH,IAAA,WACA,MAAAY,GAAA+8B,EAAA4vF,KAAAhwH,UAAA+jC,SAAAisF,QAIAE,WACAztH,IAAA,WACA,MAAA29B,GAAAuvF,SAAAnwH,KAAAQ,QAIAmwH,UACA1tH,IAAA,WACA,GAAAwiC,GAAAjlC,IAEA,iBAAA4rH,GAA4C,UAAAxrF,GAAAyC,QAAA+oF,EAAA3mF;;;;;AAxgD5C,GAEA4mF,GAAA,CAqBAF,GAAAz9D,OAAA,SAAAhX,GACA,UAAAy0E,GAAA,SAAA7oF,EAAAorB,GACAA,EAAAhX,MAIAy0E,EAAA7oF,QAAA,SAAAn4B,GACA,UAAAghH,GAAA,SAAA7oF,EAAAorB,GACAprB,EAAAn4B,MAIAghH,EAAAhlG,IAAA,SAAAypG,GACA,UAAAzE,GAAA,SAAA7oF,EAAAorB,GACA,GAAA5mC,GAAA,EAAA7rB,IAEA,KAAA20H,EAAAr0H,QACA+mC,EAAArnC,EAcA,QAAAI,GAAA,EAAuBA,EAAAu0H,EAAAr0H,OAAqBF,GAAA,EAC5C8vH,EAAA7oF,QAAAstF,EAAAv0H,IAAAgjC,KAZA,SAAAhjC,GACA,gBAAA8O,GACAlP,EAAAI,GAAA8O,GACA2c,GAAA,KAEA8oG,EAAAr0H,QACA+mC,EAAArnC,KAMAI,GAAAqyD,MAKAy9D,EAAA0E,KAAA,SAAAD,GACA,UAAAzE,GAAA,SAAA7oF,EAAAorB,GACA,OAAAryD,GAAA,EAAuBA,EAAAu0H,EAAAr0H,OAAqBF,GAAA,EAC5C8vH,EAAA7oF,QAAAstF,EAAAv0H,IAAAgjC,KAAAiE,EAAAorB,KAKA,IAAAoiE,GAAA3E,EAAAxtH,SAEAmyH,GAAAxtF,QAAA,SAAAn4B,GACA,GAAAohH,GAAA/rH,IAEA,IAAA+rH,EAAAvtF,QAAAqtF,EAAA,CACA,GAAAlhH,IAAAohH,EACA,SAAApgB,WAAA,+BAGA,IAAA7mD,IAAA,CAEA,KACA,GAAAjmB,GAAAl0B,KAAA,IAEA,WAAAA,GAAA,gBAAAA,IAAA,kBAAAk0B,GAaA,WAZAA,GAAAjjC,KAAA+O,EAAA,SAAAA,GACAm6C,GACAinE,EAAAjpF,QAAAn4B,GAEAm6C,GAAA,GAEiB,SAAA5N,GACjB4N,GACAinE,EAAA79D,OAAAhX,GAEA4N,GAAA,IAIS,MAAAt+C,GAIT,YAHAs+C,GACAinE,EAAA79D,OAAA1nD,IAKAulH,EAAAvtF,MAzGA,EA0GAutF,EAAAluH,MAAA8M,EACAohH,EAAArkE,WAIA4oE,EAAApiE,OAAA,SAAAC,GACA,GAAA49D,GAAA/rH,IAEA,IAAA+rH,EAAAvtF,QAAAqtF,EAAA,CACA,GAAA19D,IAAA49D,EACA,SAAApgB,WAAA,+BAGAogB,GAAAvtF,MAtHA,EAuHAutF,EAAAluH,MAAAswD,EACA49D,EAAArkE,WAIA4oE,EAAA5oE,OAAA,WACA,GAAAqkE,GAAA/rH,IAEA2gC,GAAA,WACA,GAAAorF,EAAAvtF,QAAAqtF,EACA,KAAAE,EAAAD,SAAA/vH,QAAA,CACA,GAAA+vH,GAAAC,EAAAD,SAAAt1G,QACA+5G,EAAAzE,EAAA,GACA0E,EAAA1E,EAAA,GACAhpF,EAAAgpF,EAAA,GACA59D,EAAA49D,EAAA,EAEA,KAzIA,IA0IAC,EAAAvtF,MAEAsE,EADA,kBAAAytF,GACAA,EAAA30H,SAAA0nD,GAAAyoE,EAAAluH,OAEAkuH,EAAAluH,OA7IA,IA+IqBkuH,EAAAvtF,QACrB,kBAAAgyF,GACA1tF,EAAA0tF,EAAA50H,SAAA0nD,GAAAyoE,EAAAluH,QAEAqwD,EAAA69D,EAAAluH,QAGiB,MAAA2I,GACjB0nD,EAAA1nD,QAOA8pH,EAAAzxF,KAAA,SAAA0xF,EAAAC,GACA,GAAAzE,GAAA/rH,IAEA,WAAA2rH,GAAA,SAAA7oF,EAAAorB,GACA69D,EAAAD,SAAA7sH,MAAAsxH,EAAAC,EAAA1tF,EAAAorB,IACA69D,EAAArkE,YAIA4oE,EAAAvtF,MAAA,SAAAytF,GACA,MAAAxwH,MAAA6+B,SAAAykB,GAAAktE,IAOA,mBAAA3tF,WACAnnB,OAAAmnB,QAAA8oF,GAcAK,EAAArlG,IAAA,SAAAypG,EAAAxxH,GACA,UAAAotH,GAAAnpF,QAAAlc,IAAAypG,GAAAxxH,IAGAotH,EAAAlpF,QAAA,SAAAjlC,EAAAe,GACA,UAAAotH,GAAAnpF,QAAAC,QAAAjlC,GAAAe,IAGAotH,EAAA99D,OAAA,SAAAC,EAAAvvD,GACA,UAAAotH,GAAAnpF,QAAAqrB,OAAAC,GAAAvvD,IAGAotH,EAAAqE,KAAA,SAAAD,EAAAxxH,GACA,UAAAotH,GAAAnpF,QAAAwtF,KAAAD,GAAAxxH,GAGA,IAAAo4C,GAAAg1E,EAAA7tH,SAEA64C,GAAAx3C,KAAA,SAAAZ,GAEA,MADAoB,MAAApB,UACAoB,MAGAg3C,EAAAnY,KAAA,SAAA8tF,EAAAC,GAUA,MARAD,MAAAntH,MAAAQ,KAAApB,UACA+tH,IAAAntH,KAAAQ,KAAApB,UAGAguH,KAAAptH,MAAAQ,KAAApB,UACAguH,IAAAptH,KAAAQ,KAAApB,UAGA,GAAAotH,GAAAhsH,KAAA+rH,QAAAltF,KAAA8tF,EAAAC,GAAA5sH,KAAApB,UAGAo4C,EAAAjU,MAAA,SAAA6pF,GAMA,MAJAA,MAAAptH,MAAAQ,KAAApB,UACAguH,IAAAptH,KAAAQ,KAAApB,UAGA,GAAAotH,GAAAhsH,KAAA+rH,QAAAhpF,MAAA6pF,GAAA5sH,KAAApB,UAGAo4C,EAAAy5E,QAAA,SAAAx5D,GAEA,MAAAj3D,MAAA6+B,KAAA,SAAAhhC,GAEA,MADAo5D,GAAAr7D,KAAAoE,MACAnC,GACS,SAAAswD,GAET,MADA8I,GAAAr7D,KAAAoE,MACA6iC,QAAAqrB,OAAAC,KASA,IAMA+9D,GANA1mF,KACAjpC,EAAAipC,EAAAjpC,eAEAuwF,KACArsF,EAAAqsF,EAAArsF,MACAwrH,GAAA,EAGAxmE,GAAA,mBAAA/pC,QAEAq0G,GAAA,SAAAvqF,GACA,GAAAnF,GAAAmF,EAAAnF,OACAM,EAAA6E,EAAA7E,QAEAurF,GAAAvrF,EACAsrF,EAAA5rF,EAAA4rF,QAAA5rF,EAAA5rB,QA4CA3X,GAAA0F,MAAA1F,QAqEA8yH,GAAAvtH,OAAAutH,QAAA3+E,EA6DAtR,GAAA,SAAAwuF,EAAAx/E,GAEA,GAAA/wB,GAAA+wB,EAAAw/E,EAMA,OAJAjuH,GAAAiuH,EAAAxuF,QAAA,gBAAAjc,KAAA9F,KACAA,EAAAuuG,EAAAgC,EAAAxuF,KAAA,SAAA/hB,GAGAA,GAOAzJ,GAAA,SAAAg6G,EAAAx/E,GAEA,GAAA+hF,GAAAruH,OAAAs8B,KAAAuvF,EAAA7qH,QAAA8d,QAAAhN,KAA+DyJ,EAAA+wB,EAAAw/E,EAc/D,OAZA1vH,GAAA0vH,EAAAhtG,OAAA,SAAAtjB,EAAAvB,IACA,IAAAo0H,EAAA/yH,QAAArB,KACA6X,EAAA7X,GAAAuB,KAIAsW,EAAA+5G,EAAA/sG,OAAAhN,GAEAA,IACAyJ,KAAA,GAAAA,EAAAjgB,QAAA,cAAAwW,GAGAyJ,GA8JA61D,GAAA,SAAApwE,GAEA,GAAA4pH,MAAArvG,EAAAovG,EAAA3pH,EAAAua,IAAAva,EAAA8d,OAAA8rG,EAMA,OAJAA,GAAApuH,QAAA,SAAAvC,SACA+G,GAAA8d,OAAA7kB,KAGAshB,EAoCAswG,GAAA7qH,SACAua,IAAA,GACA+hB,KAAA,KACAxe,WAOA+sG,EAAA3/G,WAAiBklE,YAAAt/D,SAAAwrB,SACjBuuF,EAAA95C,YAAA,2BAQA85C,EAAA/sG,OAAA,SAAAziB,GAEA,GAAAyiB,MAAAwvG,EAAA5C,kBAiBA,OAfA5sG,GAAApd,IAAA,SAAAzH,EAAAuB,GAEAoC,EAAApC,KACAA,OAGA,OAAAA,IACAA,EAAA,IAGAmC,KAAAf,KAAA0xH,EAAAr0H,GAAA,IAAAq0H,EAAA9yH,KAGAuwH,EAAAjtG,EAAAziB,GAEAyiB,EAAArT,KAAA,KAAAqU,QAAA,aASA+rG,EAAAluG,MAAA,SAAApC,GAEA,GAAA/Y,GAAAvH,SAAAC,cAAA,IASA,OAPAD,UAAAszH,eACA/rH,EAAAgsH,KAAAjzG,EACAA,EAAA/Y,EAAAgsH,MAGAhsH,EAAAgsH,KAAAjzG,GAGAizG,KAAAhsH,EAAAgsH,KACAC,SAAAjsH,EAAAisH,SAAAjsH,EAAAisH,SAAA3uG,QAAA,YACA4uG,KAAAlsH,EAAAksH,KACAx3F,KAAA10B,EAAA00B,KACAy3F,SAAAnsH,EAAAmsH,SACAC,SAAA,MAAApsH,EAAAosH,SAAAv5F,OAAA,GAAA7yB,EAAAosH,SAAA,IAAApsH,EAAAosH,SACAC,OAAArsH,EAAAqsH,OAAArsH,EAAAqsH,OAAA/uG,QAAA,aACAuqC,KAAA7nD,EAAA6nD,KAAA7nD,EAAA6nD,KAAAvqC,QAAA,aAoCA,IAAAgvG,IAAA,SAAA1C,GACA,UAAAzC,GAAA,SAAAlpF,GAEA,GAAAsuF,GAAA,GAAAC,gBAAAjhH,EAAA,SAAAo1B,GACA,GAAArlC,GAAAqlC,EAAArlC,KAGA4a,EAAA,CAEA,UAAA5a,EACA4a,EAAA,IACa,UAAA5a,IACb4a,EAAA,KAGA+nB,EAAA2rF,EAAA6C,YAAAF,EAAAG,cAA2Dx2G,YAG3D0zG,GAAA+C,MAAA,WAAqC,MAAAJ,GAAAI,SAErCJ,EAAA5mC,KAAAikC,EAAAv+G,OAAAu+G,EAAAgD,UAEAhD,EAAAngE,UACA8iE,EAAA9iE,QAAAmgE,EAAAngE,SAGA8iE,EAAA/H,OAAAj5G,EACAghH,EAAAM,QAAAthH,EACAghH,EAAAO,QAAAvhH,EACAghH,EAAAQ,UAAAxhH,EACAghH,EAAAS,WAAA,aACAT,EAAAU,KAAArD,EAAAsD,cAQAC,GAAAvsE,IAAA,uBAAAwsE,gBAEAC,GAAA,SAAAzD,EAAA9/E,GAEA,GAAA8W,GAAA,CAEA,GAAA0sE,GAAAjE,EAAAluG,MAAAoyG,SAAAvB,MACAwB,EAAAnE,EAAAluG,MAAAyuG,EAAAgD,SAEAY,GAAAvB,WAAAqB,EAAArB,UAAAuB,EAAA94F,OAAA44F,EAAA54F,OAEAk1F,EAAA6D,aAAA,EACA7D,EAAA8D,aAAA,EAEAP,KACAvD,EAAAC,OAAAyC,KAKAxiF,KAOA6jF,GAAA,SAAA/D,EAAA9/E,GAEA89E,EAAAgC,EAAA1kC,MAEA0kC,EAAAgE,QAAAzsF,OAAA,gBAEKrpC,EAAA8xH,EAAA1kC,OAAA0kC,EAAAiE,cAELjE,EAAA1kC,KAAAmkC,EAAA/sG,OAAAstG,EAAA1kC,MACA0kC,EAAAgE,QAAAvxH,IAAA,qDAGAytC,KAOAgkF,GAAA,SAAAlE,EAAA9/E,GAEA,GAAAxuC,GAAAsuH,EAAAgE,QAAAhwH,IAAA,mBAEA9F,GAAA8xH,EAAA1kC,OAAA,IAAA5pF,EAAAxC,QAAA,sBACA8wH,EAAA1kC,KAAAjmC,KAAA7jC,UAAAwuG,EAAA1kC,OAGAp7C,EAAA,SAAA6gF,GAEA,MAAAA,GAAAoD,SAAAhM,EAAA4I,EAAAj9F,OAAA,SAAAA,GAIA,GAFApyB,EAAAqvH,EAAAiD,QAAAhwH,IAAA,oBAEA,IAAAtC,EAAAxC,QAAA,qBAAA0wH,EAAA97F,GAEA,IACAi9F,EAAAzlC,KAAAjmC,KAAA9jC,MAAAuS,GACiB,MAAA/rB,GACjBgpH,EAAAzlC,KAAA,SAIAylC,GAAAzlC,KAAAx3D,CAGA,OAAAi9F,KAESA,KAgBTqD,GAAA,SAAApE,GACA,UAAAzC,GAAA,SAAAlpF,GAEA,GAAA1yB,GAAA0iH,EAAAztH,EAAAopH,EAAAsE,OAAA,WAAA97D,EAAAw3D,EAAAuE,eAAA,SAAA1qH,KAAAi9F,SAAAjjG,SAAA,IAAA22B,OAAA,GAAA8wD,EAAA,IAEA35E,GAAA,SAAAo1B,GACA,GAAArlC,GAAAqlC,EAAArlC,KAGA4a,EAAA,CAEA,UAAA5a,GAAA,OAAA4pF,EACAhvE,EAAA,IACa,UAAA5a,IACb4a,EAAA,KAGAA,GAAAW,OAAAu7C,WACAv7C,QAAAu7C,GACA35D,SAAAysF,KAAAllD,YAAAiuF,IAGAhwF,EAAA2rF,EAAA6C,YAAAvnC,GAA+ChvE,aAG/CW,OAAAu7C,GAAA,SAAAx7D,GACAsuF,EAAAjmC,KAAA7jC,UAAAxkB,IAGAgzH,EAAA+C,MAAA,WACAphH,GAAqBjQ,KAAA,WAGrBsuH,EAAAttG,OAAA9b,GAAA4xD,EAEAw3D,EAAAngE,SACAD,WAAAogE,EAAA+C,MAAA/C,EAAAngE,SAGAwkE,EAAAx1H,SAAAC,cAAA,UACAu1H,EAAA7sE,IAAAwoE,EAAAgD,SACAqB,EAAA3yH,KAAA,kBACA2yH,EAAAG,OAAA,EACAH,EAAAzJ,OAAAj5G,EACA0iH,EAAAnB,QAAAvhH,EAEA9S,SAAAysF,KAAA9rB,YAAA60D,MAQAC,GAAA,SAAAtE,EAAA9/E,GAEA,SAAA8/E,EAAAv+G,SACAu+G,EAAAC,OAAAmE,IAGAlkF,KAOAukF,GAAA,SAAAzE,EAAA9/E,GAEA1uC,EAAAwuH,EAAAyE,SACAzE,EAAAyE,OAAAt3H,KAAAoE,KAAAyuH,GAGA9/E,KAOAz+B,GAAA,SAAAu+G,EAAA9/E,GAEA8/E,EAAA8D,aAAA,wBAAA7uG,KAAA+qG,EAAAv+G,UACAu+G,EAAAgE,QAAAvxH,IAAA,yBAAAutH,EAAAv+G,QACAu+G,EAAAv+G,OAAA,QAGAy+B,KAOAwkF,GAAA,SAAA1E,EAAA9/E,GAOAlwC,EALAmxH,MAA2BT,EAAAsD,QAAAW,OAC3B3E,EAAA6D,eAAAnD,EAAAsD,QAAAY,OACAlE,EAAAsD,QAAArG,EAAAqC,EAAAv+G,UAGA,SAAArS,EAAAwH,GACAopH,EAAAgE,QAAA/nG,IAAArlB,IACAopH,EAAAgE,QAAAvxH,IAAAmE,EAAAxH,KAIA8wC,KAOAggF,GAAA,SAAAF,GACA,UAAAzC,GAAA,SAAAlpF,GAEA,GAAAwwF,GAAA,GAAArB,gBAAA7hH,EAAA,SAAA2F,GAEA,GAAAy5G,GAAAf,EAAA6C,YACA,YAAAgC,KAAA9D,SAAA8D,EAAA/B,cACAx2G,OAAA,OAAAu4G,EAAAv4G,OAAA,IAAAu4G,EAAAv4G,OACAw4G,WAAA,OAAAD,EAAAv4G,OAAA,aAAA8mD,EAAAyxD,EAAAC,aAIA90H,GAAAojE,EAAAyxD,EAAAE,yBAAAv+G,MAAA,eAAAw+G,GACAjE,EAAAiD,QAAAiB,OAAAD,EAAAhzH,MAAA,EAAAgzH,EAAA91H,QAAA,MAAA81H,EAAAhzH,MAAAgzH,EAAA91H,QAAA,WAGAmlC,EAAA0sF,GAGAf,GAAA+C,MAAA,WAAqC,MAAA8B,GAAA9B,SAErC/C,EAAAkF,WACA,QAAAlF,EAAAv+G,OACAojH,EAAA/9E,iBAAA,WAAAk5E,EAAAkF,UACa,gBAAAjwG,KAAA+qG,EAAAv+G,SACbojH,EAAAM,OAAAr+E,iBAAA,WAAAk5E,EAAAkF,WAIAL,EAAA9oC,KAAAikC,EAAAv+G,OAAAu+G,EAAAgD,UAAA,GAEAhD,EAAAngE,UACAglE,EAAAhlE,QAAAmgE,EAAAngE,SAGAmgE,EAAAoF,cAAA,gBAAAP,KACAA,EAAAO,aAAApF,EAAAoF,eAGApF,EAAAqF,iBAAArF,EAAAsF,eACAT,EAAAQ,iBAAA,GAGArF,EAAA6D,aACA7D,EAAAgE,QAAAvxH,IAAA,qCAGAutH,EAAAgE,QAAA5zH,QAAA,SAAAhB,EAAAwH,GACAiuH,EAAAU,iBAAA3uH,EAAAxH,KAGAy1H,EAAAjK,OAAAj5G,EACAkjH,EAAA5B,QAAAthH,EACAkjH,EAAA3B,QAAAvhH,EACAkjH,EAAA1B,UAAAxhH,EACAkjH,EAAAxB,KAAArD,EAAAsD,cAQAnD,GAAA,SAAAH,GAEA,GAAAC,GAAArqH,EAAA,IAEA,WAAA2nH,GAAA,SAAAlpF,GAEA,GAGwB1yB,GAHxBwN,EAAA6wG,EAAAgD,SACA1nC,EAAA0kC,EAAAsD,UACA7hH,EAAAu+G,EAAAv+G,OACAuiH,IAEAhE,GAAAgE,QAAA5zH,QAAA,SAAAhB,EAAAwH,GACAotH,EAAAptH,GAAAxH,IAGA6wH,EAAA9wG,GAAqBmsE,OAAA75E,SAAAuiH,YAA6C5zF,KAAAzuB,EAAA,SAAA6jH,GAElE,GAAAzE,GAAAf,EAAA6C,YAAA2C,EAAAlqC,MACAhvE,OAAAk5G,EAAAC,WACAX,WAAA1xD,EAAAoyD,EAAAE,gBAIA11H,GAAAw1H,EAAAxB,QAAA,SAAA50H,EAAAwH,GACAmqH,EAAAiD,QAAAvxH,IAAAmE,EAAAxH,KAGAilC,EAAA0sF,IAES,SAAA4E,GAAuB,MAAAhkH,GAAAgkH,EAAA5E,eAQhCJ,GAAA,SAAAxwH,GAQA,QAAAwwH,GAAAX,GACA,UAAAzC,GAAA,SAAAlpF,EAAAorB,GAEA,QAAA1kC,KAEApZ,EAAAikH,EAAAl/G,MAEAlV,EAAAmQ,GACAA,EAAAxU,KAAAgD,EAAA6vH,EAAA9/E,IAEAl7B,EAAA,qCAAArD,GAAA,wBACAu+B,KAIA,QAAAA,GAAA6gF,GAEA,GAAAvvH,EAAAuvH,GAEA8E,EAAAv5D,QAAAy0D,OAEiB,IAAA7yH,EAAA6yH,GAUjB,MARA8E,GAAAz1H,QAAA,SAAAuR,GACAo/G,EAAA5I,EAAA4I,EAAA,SAAAA,GACA,MAAAp/G,GAAAxU,KAAAgD,EAAA4wH,OACyBthE,SAGzB04D,GAAA4I,EAAA1sF,EAAAorB,EAKA1kC,KAGAA,KAES5qB,GA7CT,GAAAwR,GAAAikH,GAAA7F,GAAA8F,IAoDA,OAlDA33H,GAAAiC,KACAA,EAAA,MA6CAwwH,EAAAx0D,IAAA,SAAAxqD,GACAikH,EAAAp1H,KAAAmR,IAGAg/G,GAcAmF,GAAA,SAAA9B,GACA,GAAAxtF,GAAAjlC,IAGAA,MAAAjB,OAEAN,EAAAg0H,EAAA,SAAA50H,EAAAwH,GAA0C,MAAA4/B,GAAAyuF,OAAAruH,EAAAxH,KAG1C02H,IAAAp2H,UAAAusB,IAAA,SAAArlB,GACA,cAAA6mB,EAAAlsB,KAAAjB,IAAAsG,IAGAkvH,GAAAp2H,UAAAsE,IAAA,SAAA4C,GAEA,GAAAiY,GAAAtd,KAAAjB,IAAAmtB,EAAAlsB,KAAAjB,IAAAsG,GAEA,OAAAiY,KAAAxP,OAAA,MAGAymH,GAAAp2H,UAAAq2H,OAAA,SAAAnvH,GACA,MAAArF,MAAAjB,IAAAmtB,EAAAlsB,KAAAjB,IAAAsG,SAGAkvH,GAAAp2H,UAAA+C,IAAA,SAAAmE,EAAAxH,GACAmC,KAAAjB,IAAA8vH,EAAA3iG,EAAAlsB,KAAAjB,IAAAsG,SAAAw8D,EAAAhkE,KAGA02H,GAAAp2H,UAAAu1H,OAAA,SAAAruH,EAAAxH,GAEA,GAAAyf,GAAAtd,KAAAjB,IAAAmtB,EAAAlsB,KAAAjB,IAAAsG,GAEAiY,GACAA,EAAAre,KAAA4iE,EAAAhkE,IAEAmC,KAAAkB,IAAAmE,EAAAxH,IAIA02H,GAAAp2H,UAAA6nC,OAAA,SAAA3gC,SACArF,MAAAjB,IAAAmtB,EAAAlsB,KAAAjB,IAAAsG,KAGAkvH,GAAAp2H,UAAAs2H,UAAA,WACAz0H,KAAAjB,QAGAw1H,GAAAp2H,UAAAU,QAAA,SAAAo4D,EAAAy9D,GACA,GAAAzvF,GAAAjlC,IAEAvB,GAAAuB,KAAAjB,IAAA,SAAAue,EAAAjY,GACA5G,EAAA6e,EAAA,SAAAzf,GAAqC,MAAAo5D,GAAAr7D,KAAA84H,EAAA72H,EAAAwH,EAAA4/B,OAuBrC,IAAA0vF,IAAA,SAAA5qC,EAAAvkD,GACA,GAAA5nB,GAAA4nB,EAAA5nB,IACA60G,EAAAjtF,EAAAitF,QACA13G,EAAAyqB,EAAAzqB,OACAw4G,EAAA/tF,EAAA+tF,UAGAvzH,MAAA4d,MACA5d,KAAAyvH,GAAA10G,GAAA,KAAAA,EAAA,IACA/a,KAAA+a,UAAA,EACA/a,KAAAuzH,cAAA,GACAvzH,KAAAyyH,QAAA,GAAA8B,IAAA9B,GACAzyH,KAAA+pF,OAEA7pF,EAAA6pF,GAEA/pF,KAAA4yH,SAAA7oC,EAEKwiC,EAAAxiC,KAEL/pF,KAAA40H,SAAA7qC,EAEAmlC,EAAAnlC,KACA/pF,KAAA4yH,SAAA9D,EAAA/kC,KAKA4qC,IAAAx2H,UAAA02H,KAAA,WACA,MAAAjO,GAAA5mH,KAAA40H,WAGAD,GAAAx2H,UAAAo0B,KAAA,WACA,MAAAq0F,GAAA5mH,KAAA4yH,WAGA+B,GAAAx2H,UAAAw0H,KAAA,WACA,MAAA/L,GAAA5mH,KAAAuyB,OAAA,SAAAA,GAA8C,MAAAuxB,MAAA9jC,MAAAuS,MAG9ClwB,OAAA69B,eAAAy0F,GAAAx2H,UAAA,QAEAsE,IAAA,WACA,MAAAzC,MAAA+pF,MAGA7oF,IAAA,SAAA6oF,GACA/pF,KAAA+pF,SA0BA,IAAAwlC,IAAA,SAAApB,GAEAnuH,KAAA+pF,KAAA,KACA/pF,KAAAmhB,UAEAyuG,GAAA5vH,KAAAmuH,GACAj+G,OAAAm8G,EAAA8B,EAAAj+G,QAAA,SAGAlQ,KAAAyyH,kBAAA8B,MACAv0H,KAAAyyH,QAAA,GAAA8B,IAAAv0H,KAAAyyH,UAIAlD,IAAApxH,UAAAszH,OAAA,WACA,MAAAvD,GAAAluH,OAGAuvH,GAAApxH,UAAA4zH,QAAA,WACA,MAAA/xH,MAAA+pF,MAGAwlC,GAAApxH,UAAAmzH,YAAA,SAAAvnC,EAAAokC,GACA,UAAAwG,IAAA5qC,EAAA6lC,GAAAzB,OAAwDvwG,IAAA5d,KAAAyxH,YAOxD,IAAAqD,KAAsBC,OAAA,qCACtBC,IAAyBC,eAAA,iCAkCzB9F,GAAA9rH,WAEA8rH,EAAAsD,SACAh7E,IAAAu9E,GACAE,KAAAF,GACAlwC,MAAAkwC,GACAhvF,OAAAgvF,GACA5B,OAAA0B,GACAzB,WAGAlE,EAAAG,aAAoB4D,UAAAhjH,UAAA6iH,SAAAJ,QAAAH,QAAAW,UAAAjB,SACpB/C,EAAAE,cAAA,0DAEA,+BAAAxwH,QAAA,SAAAs2H,GAEAhG,EAAAgG,GAAA,SAAAv3G,EAAAuwG,GACA,MAAAnuH,MAAA4vH,GAAAzB,OAA8CvwG,MAAA1N,OAAAilH,SAK9C,sBAAAt2H,QAAA,SAAAs2H,GAEAhG,EAAAgG,GAAA,SAAAv3G,EAAAmsE,EAAAokC,GACA,MAAAnuH,MAAA4vH,GAAAzB,OAA8CvwG,MAAA1N,OAAAilH,EAAAprC,aAoE9C2lC,EAAA76G,SAEApS,KAAUyN,OAAA,OACVklH,MAAWllH,OAAA,QACXiE,OAAYjE,OAAA,OACZ8E,QAAa9E,OAAA,OACbkI,QAAalI,OAAA,UACb81B,QAAa91B,OAAA,WAoDb,mBAAAwL,gBAAA0kB,KACA1kB,OAAA0kB,IAAAw6B,IAAAn1B,GAGA3H,EAAA,KzF8h9BS,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAUziC,EAAQC,EAAS+I,G0F9ngCjChJ,EAAAC,SAAkB8H,QAAAiB,EAAA,KAAAoiC,YAAA,I1FoogCZ,SAAUprC,EAAQC,EAAS+I,G2FpogCjChJ,EAAAC,SAAkB8H,QAAAiB,EAAA,KAAAoiC,YAAA,I3F0ogCZ,SAAUprC,EAAQC,EAAS+I,GAEjC,Y4F1ogCA/I,GAAAmrC,YAAA,CAEA,IAAA4uF,GAAAhxH,EAAA,KAEAixH,EAEA,SAAA52H,GAAsC,MAAAA,MAAA+nC,WAAA/nC,GAAuC0E,QAAA1E,IAF7E22H,EAIA/5H,GAAA8H,QAAA,SAAA1E,EAAApC,EAAAuB,GAYA,MAXAvB,KAAAoC,IACA,EAAA42H,EAAAlyH,SAAA1E,EAAApC,GACAuB,QACAsiC,YAAA,EACA+kB,cAAA,EACAD,UAAA,IAGAvmD,EAAApC,GAAAuB,EAGAa,I5FkpgCM,SAAUrD,EAAQC,EAAS+I,G6FxqgCjC,GAAA6oF,GAAA7oF,EAAA,IACAkxH,EAAAroC,EAAAppC,OAAAopC,EAAAppC,MAAuC7jC,UAAA6jC,KAAA7jC,WACvC5kB,GAAAC,QAAA,SAAAk+F,GACA,MAAA+7B,GAAAt1G,UAAApgB,MAAA01H,EAAA31H,a7F+qgCM,SAAUvE,EAAQC,EAAS+I,G8FlrgCjCA,EAAA,KACAhJ,EAAAC,QAAA+I,EAAA,IAAAhC,OAAAutH,Q9FwrgCM,SAAUv0H,EAAQC,EAAS+I,G+FzrgCjCA,EAAA,IACA,IAAAmxH,GAAAnxH,EAAA,IAAAhC,MACAhH,GAAAC,QAAA,SAAAk+F,EAAAl9F,EAAAm5H,GACA,MAAAD,GAAAt1F,eAAAs5D,EAAAl9F,EAAAm5H,K/FgsgCM,SAAUp6H,EAAQC,GgGnsgCxBD,EAAAC,QAAA,SAAAk+F,GACA,qBAAAA,GAAA,KAAAmS,WAAAnS,EAAA,sBACA,OAAAA,KhG0sgCM,SAAUn+F,EAAQC,EAAS+I,GiG5sgCjC,GAAA1H,GAAA0H,EAAA,GACAhJ,GAAAC,QAAA,SAAAk+F,GACA,IAAA78F,EAAA68F,GAAA,KAAAmS,WAAAnS,EAAA,qBACA,OAAAA,KjGmtgCM,SAAUn+F,EAAQC,EAAS+I,GkGptgCjC,GAAAqxH,GAAArxH,EAAA,IACAsxH,EAAAtxH,EAAA,KACAuxH,EAAAvxH,EAAA,IACAhJ,GAAAC,QAAA,SAAAu6H,GACA,gBAAAC,EAAAjxH,EAAAkxH,GACA,GAGAl4H,GAHAmvG,EAAA0oB,EAAAI,GACA/5H,EAAA45H,EAAA3oB,EAAAjxG,QACAuY,EAAAshH,EAAAG,EAAAh6H,EAGA,IAAA85H,GAAAhxH,MAAA,KAAA9I,EAAAuY,GAEA,IADAzW,EAAAmvG,EAAA14F,OACAzW,EAAA,aAEK,MAAW9B,EAAAuY,EAAeA,IAAA,IAAAuhH,GAAAvhH,IAAA04F,KAC/BA,EAAA14F,KAAAzP,EAAA,MAAAgxH,IAAAvhH,GAAA,CACK,QAAAuhH,IAAA,KlG8tgCC,SAAUx6H,EAAQC,GmGhvgCxB,GAAAgH,MAAiBA,QAEjBjH,GAAAC,QAAA,SAAAk+F,GACA,MAAAl3F,GAAA1G,KAAA49F,GAAA/4F,MAAA,QnGuvgCM,SAAUpF,EAAQC,EAAS+I,GoGzvgCjC,GAAA2xH,GAAA3xH,EAAA,IACAhJ,GAAAC,QAAA,SAAAojC,EAAAu3F,EAAAl6H,GAEA,GADAi6H,EAAAt3F,OACA4kB,KAAA2yE,EAAA,MAAAv3F,EACA,QAAA3iC,GACA,uBAAA6U,GACA,MAAA8tB,GAAA9iC,KAAAq6H,EAAArlH,GAEA,wBAAAA,EAAAC,GACA,MAAA6tB,GAAA9iC,KAAAq6H,EAAArlH,EAAAC,GAEA,wBAAAD,EAAAC,EAAAu7B,GACA,MAAA1N,GAAA9iC,KAAAq6H,EAAArlH,EAAAC,EAAAu7B,IAGA,kBACA,MAAA1N,GAAA7+B,MAAAo2H,EAAAr2H,cpGkwgCM,SAAUvE,EAAQC,EAAS+I,GqGnxgCjC,GAAA1H,GAAA0H,EAAA,IACA/G,EAAA+G,EAAA,IAAA/G,SAEAg6D,EAAA36D,EAAAW,IAAAX,EAAAW,EAAAC,cACAlC,GAAAC,QAAA,SAAAk+F,GACA,MAAAliC,GAAAh6D,EAAAC,cAAAi8F,QrG0xgCM,SAAUn+F,EAAQC,GsG9xgCxBD,EAAAC,QAAA,gGAEA2Z,MAAA,MtGqygCM,SAAU5Z,EAAQC,GuGxygCxB,GAAAiB,MAAuBA,cACvBlB,GAAAC,QAAA,SAAAk+F,EAAAl9F,GACA,MAAAC,GAAAX,KAAA49F,EAAAl9F,KvG+ygCM,SAAUjB,EAAQC,EAAS+I,GwGjzgCjC,GAAA0oG,GAAA1oG,EAAA,IACA6xH,EAAA7xH,EAAA,IACAhJ,GAAAC,QAAA+I,EAAA,aAAA8xH,EAAA75H,EAAAuB,GACA,MAAAkvG,GAAA/iF,EAAAmsG,EAAA75H,EAAA45H,EAAA,EAAAr4H,KACC,SAAAs4H,EAAA75H,EAAAuB,GAED,MADAs4H,GAAA75H,GAAAuB,EACAs4H,IxGwzgCM,SAAU96H,EAAQC,EAAS+I,GyG9zgCjChJ,EAAAC,SAAA+I,EAAA,MAAAA,EAAA,eACA,MAAmG,IAAnGhC,OAAA69B,eAAA77B,EAAA,iBAAsE5B,IAAA,WAAgB,YAAamO,KzGq0gC7F,SAAUvV,EAAQC,EAAS+I,GAEjC,Y0Gt0gCA,IAAA+xH,GAAA/xH,EAAA,KACAgyH,EAAAhyH,EAAA,KACAiyH,EAAAjyH,EAAA,KACAmgD,EAAAngD,EAAA,KACA6oG,EAAA7oG,EAAA,IACAkyH,EAAAl0H,OAAAutH,MAGAv0H,GAAAC,SAAAi7H,GAAAlyH,EAAA,eACA,GAAAgoC,MACAC,KACAgM,EAAAgmC,SACA3xC,EAAA,sBAGA,OAFAN,GAAAiM,GAAA,EACA3L,EAAA13B,MAAA,IAAApW,QAAA,SAAA05B,GAAkC+T,EAAA/T,OACf,GAAnBg+F,KAAmBlqF,GAAAiM,IAAAj2C,OAAAs8B,KAAA43F,KAAsCjqF,IAAAx+B,KAAA,KAAA6+B,IACxD,SAAAlwC,EAAAjB,GAMD,IALA,GAAA2xC,GAAAqX,EAAA/nD,GACA+5H,EAAA52H,UAAA7D,OACAuY,EAAA,EACAmiH,EAAAJ,EAAArsG,EACA0sG,EAAAJ,EAAAtsG,EACAwsG,EAAAliH,GAMA,IALA,GAIAhY,GAJAg8C,EAAA40D,EAAAttG,UAAA0U,MACAqqB,EAAA83F,EAAAL,EAAA99E,GAAAx4C,OAAA22H,EAAAn+E,IAAA89E,EAAA99E,GACAv8C,EAAA4iC,EAAA5iC,OACAyyB,EAAA,EAEAzyB,EAAAyyB,GAAAkoG,EAAA96H,KAAA08C,EAAAh8C,EAAAqiC,EAAAnQ,QAAA2e,EAAA7wC,GAAAg8C,EAAAh8C,GACG,OAAA6wC,IACFopF,G1G60gCK,SAAUl7H,EAAQC,G2G72gCxBA,EAAA0uB,EAAA3nB,OAAAs0H,uB3Gm3gCM,SAAUt7H,EAAQC,EAAS+I,G4Gn3gCjC,GAAAqmB,GAAArmB,EAAA,KACAqxH,EAAArxH,EAAA,IACAuyH,EAAAvyH,EAAA,SACAwyH,EAAAxyH,EAAA,gBAEAhJ,GAAAC,QAAA,SAAA66H,EAAAziF,GACA,GAGAp3C,GAHA0wG,EAAA0oB,EAAAS,GACAt6H,EAAA,EACAJ,IAEA,KAAAa,IAAA0wG,GAAA1wG,GAAAu6H,GAAAnsG,EAAAsiF,EAAA1wG,IAAAb,EAAAwD,KAAA3C,EAEA,MAAAo3C,EAAA33C,OAAAF,GAAA6uB,EAAAsiF,EAAA1wG,EAAAo3C,EAAA73C,SACA+6H,EAAAn7H,EAAAa,IAAAb,EAAAwD,KAAA3C,GAEA,OAAAb,K5G03gCM,SAAUJ,EAAQC,EAAS+I,G6Gx4gCjC,GAAAyyH,GAAAzyH,EAAA,KACA0yH,EAAA1yH,EAAA,IAEAhJ,GAAAC,QAAA+G,OAAAs8B,MAAA,SAAAquE,GACA,MAAA8pB,GAAA9pB,EAAA+pB,K7Gg5gCM,SAAU17H,EAAQC,G8Gr5gCxBA,EAAA0uB,KAAc2iF,sB9G25gCR,SAAUtxG,EAAQC,G+G35gCxBD,EAAAC,QAAA,SAAA07H,EAAAn5H,GACA,OACAsiC,aAAA,EAAA62F,GACA9xE,eAAA,EAAA8xE,GACA/xE,WAAA,EAAA+xE,GACAn5H,W/Gm6gCM,SAAUxC,EAAQC,EAAS+I,GgHx6gCjC,GAAA4yH,GAAA5yH,EAAA,aACAs4B,EAAAt4B,EAAA,IACAhJ,GAAAC,QAAA,SAAAgB,GACA,MAAA26H,GAAA36H,KAAA26H,EAAA36H,GAAAqgC,EAAArgC,MhH+6gCM,SAAUjB,EAAQC,EAAS+I,GiHl7gCjC,GAAA2L,GAAA3L,EAAA,IAEA25B,EAAAhuB,EADA,wBACAA,EADA,yBAEA3U,GAAAC,QAAA,SAAAgB,GACA,MAAA0hC,GAAA1hC,KAAA0hC,EAAA1hC,SjHy7gCM,SAAUjB,EAAQC,EAAS+I,GkH77gCjC,GAAA6yH,GAAA7yH,EAAA,IACAmE,EAAAF,KAAAE,IACAE,EAAAJ,KAAAI,GACArN,GAAAC,QAAA,SAAAgZ,EAAAvY,GAEA,MADAuY,GAAA4iH,EAAA5iH,GACAA,EAAA,EAAA9L,EAAA8L,EAAAvY,EAAA,GAAA2M,EAAA4L,EAAAvY,KlHo8gCM,SAAUV,EAAQC,EAAS+I,GmHx8gCjC,GAAA6yH,GAAA7yH,EAAA,IACAqE,EAAAJ,KAAAI,GACArN,GAAAC,QAAA,SAAAk+F,GACA,MAAAA,GAAA,EAAA9wF,EAAAwuH,EAAA19B,GAAA,sBnHg9gCM,SAAUn+F,EAAQC,EAAS+I,GoHn9gCjC,GAAA8oG,GAAA9oG,EAAA,GACAhJ,GAAAC,QAAA,SAAAk+F,GACA,MAAAn3F,QAAA8qG,EAAA3T,MpH29gCM,SAAUn+F,EAAQC,EAAS+I,GqH79gCjC,GAAA1H,GAAA0H,EAAA,GAGAhJ,GAAAC,QAAA,SAAAk+F,EAAAlhD,GACA,IAAA37C,EAAA68F,GAAA,MAAAA,EACA,IAAA96D,GAAAzY,CACA,IAAAqyB,GAAA,mBAAA5Z,EAAA86D,EAAAl3F,YAAA3F,EAAAspB,EAAAyY,EAAA9iC,KAAA49F,IAAA,MAAAvzE,EACA,uBAAAyY,EAAA86D,EAAA29B,WAAAx6H,EAAAspB,EAAAyY,EAAA9iC,KAAA49F,IAAA,MAAAvzE,EACA,KAAAqyB,GAAA,mBAAA5Z,EAAA86D,EAAAl3F,YAAA3F,EAAAspB,EAAAyY,EAAA9iC,KAAA49F,IAAA,MAAAvzE,EACA,MAAA0lF,WAAA,6CrHq+gCM,SAAUtwG,EAAQC,GsH/+gCxB,GAAA0V,GAAA,EACAomH,EAAA9uH,KAAAi9F,QACAlqG,GAAAC,QAAA,SAAAgB,GACA,gBAAAwD,WAAAwjD,KAAAhnD,EAAA,GAAAA,EAAA,QAAA0U,EAAAomH,GAAA90H,SAAA,OtHs/gCM,SAAUjH,EAAQC,EAAS+I,GuHx/gCjC,GAAAwnG,GAAAxnG,EAAA,GAEAwnG,KAAAvzD,EAAAuzD,EAAA5tG,EAAA,UAA0C2xH,OAAAvrH,EAAA,QvH+/gCpC,SAAUhJ,EAAQC,EAAS+I,GwHlghCjC,GAAAwnG,GAAAxnG,EAAA,GAEAwnG,KAAAvzD,EAAAuzD,EAAA5tG,GAAAoG,EAAA,cAAuE67B,eAAA77B,EAAA,IAAA2lB,KxHwghCjE,SAAU3uB,EAAQC,EAAS+I,GAEjC,YyHhghCA,SAAAmW,GAAA68G,GACAvvH,EAAArJ,KAAA64H,EAAA,SAAAjyH,GACArF,KAAAqF,GAAAyC,EAAAtI,KAAA63H,EAAAhyH,GAAAgyH,IACSr3H,MAZT,GAAA8H,GAAAzD,EAAA,GAEAizH,GACA,4FACA,qEACA,iDAUAj8H,GAAAC,QAAAkf,GzHkhhCM,SAAUnf,EAAQC,EAAS+I,G0HlihCjChJ,EAAAC,QAAA+I,EAAA,KAAAnH,QAEAiD,KAAA,aAEA+hB,cAAA,gBAEAq1G,cAAA,U1H4ihCM,SAAUl8H,EAAQC,EAAS+I,GAEjC,Y2Hl4gCA,SAAAmzH,GAAArwH,EAAAswH,EAAA5yH,GAEAA,EAAAG,MAAAutB,KAAA,GACA5pB,EAAAoF,YAAAlJ,GACA0G,OACAf,MAAA,IAESitH,EAAAtwH,EAAA,WACTtC,EAAAjB,QAAAiB,EAAAjB,OAAAwU,OAAAvT,KAIA,QAAA6yH,GAAAvwH,EAAAswH,EAAA5yH,GAEAA,EAAAG,MAAAutB,KAAA,GACA5pB,EAAAoF,YAAAlJ,GACA0G,OACA2rC,EAAAryC,EAAA0G,MAAAkpG,KAESgjB,EAAAtwH,EAAA,WACTtC,EAAAjB,QAAAiB,EAAAjB,OAAAwU,OAAAvT,KAiCA,QAAA+iE,GACA/iE,EAAArG,EAAA2I,EAAA4lB,EAAA7iB,EAAA8M,EAAA4kG,EAAA+b,GAEA,GAAAlzH,GAAAjG,EAAA+gB,cAAApY,EAAA,SACAqoG,EAAAhxG,EAAA+gB,cAAApY,EAAA,WACAywH,EAAA7qG,EAAA/f,SAAA,oBACA9H,EAAA6nB,EAAA/f,SAAA,sBAAA6qH,iBAEAF,IACA9yH,EAAAovB,SAAA,IAAA2jG,EAAAn1H,IAAA,uBAGAoC,EAAA2mG,SAAA1jG,EAAA3K,UAEA8H,KAAAR,EACA+qG,WAEAooB,EAAAC,mBAGA,IAAAzoB,GAAAriF,EAAAxlB,WAAA,SACA6nG,IAAAvqG,EAAAgD,KAAA,SAAAunG,EAEA,IAAA0oB,GAAAlc,EACA1xG,EAAAO,OAAA,iBACAP,EAAAM,MAAA,gBAEAmtH,IACAxyG,EAAA4yG,SACAlzH,EAAAG,MAAAE,EAAA6nB,EAAAtoB,EACAuS,EAAA7P,EAAA2wH,GAIAnvH,EAAA0D,cAAAxH,EAAAK,GAIA,QAAA8yH,GAAAjrG,EAAAkrG,GACA,GAAAzsH,GAAAuhB,EAAAtqB,IAAAy1H,IAAA,CACA,OAAA5vH,MAAAI,IAAA8C,EAAAlD,KAAAsG,IAAAqpH,EAAAztH,OAAAlC,KAAAsG,IAAAqpH,EAAAxtH,SA9QA,GAAA3C,GAAAzD,EAAA,GACAsE,EAAAtE,EAAA,GACA8gB,EAAA9gB,EAAA,KAEA6zH,GAAA,sCAIApwH,GAAA5K,OAAAmH,EAAA,IAAAlG,UAAAkG,EAAA,KAEA,IAAA8zH,GAAA9zH,EAAA,GAAAsgB,iBAEAxkB,KAAA,MAEAmD,OAAA,SAAA0T,EAAAxJ,EAAAmJ,GACA,GAAAyhH,GAAAphH,EAAAvU,IAAA,mBAWA,OATA,gBAAA21H,GACA,UAAAA,EAEAp4H,KAAA8wD,QAAA95C,EAAAxJ,EAAAmJ,GAEApD,SACAC,QAAAC,KAAA,iDAGAzT,KAAAiR,OAGAoH,QAAAvQ,EAAAlF,KAEAkuD,QAAA,SAAA95C,EAAAxJ,EAAAmJ,GACA,GAMA0hH,GANApnH,EAAAjR,KAAAiR,MACAzS,EAAAwY,EAAA6B,UACAsoD,EAAAnhE,KAAA0gC,MAEA4qE,EAAAt0F,EAAAgI,iBACAsgG,EAAAhU,EAAAtZ,aAGA,iBAAAsZ,EAAAnrG,KACAk4H,EAAA/Y,EAAA1D,eAEA,UAAAtQ,EAAAnrG,OACAk4H,EAAA,UAAA/Y,EAAA9uB,IAGA,IAAAinC,GAAAzgH,EAAA5P,qBAAA4P,EAAA,IAEAxY,GAAAmiG,KAAAx/B,GACAp9D,IAAA,SAAAoD,GACA,GAAA3I,EAAAw1C,SAAA7sC,GAAA,CAIA,GAAA4lB,GAAAvuB,EAAAwuB,aAAA7lB,GACA+C,EAAAi4F,EAAAmJ,EAAAnrG,MAAA3B,EAAA2I,EAAA4lB,GACAloB,EAAAyzH,EAAAhtB,EAAAnrG,MACA3B,EAAA2I,EAAA4lB,EAAA7iB,EAAAmuH,EAAAZ,EAEAj5H,GAAAkkG,iBAAAv7F,EAAAtC,GACAoM,EAAAlN,IAAAc,GAEA+iE,EACA/iE,EAAArG,EAAA2I,EAAA4lB,EAAA7iB,EACA8M,EAAAqhH,EAAA,UAAA/sB,EAAAnrG,SAGA6U,OAAA,SAAAujH,EAAAC,GACA,GAAA3zH,GAAAs8D,EAAAwhC,iBAAA61B,EAEA,KAAAh6H,EAAAw1C,SAAAukF,GAEA,WADAtnH,GAAAmH,OAAAvT,EAIA,IAAAkoB,GAAAvuB,EAAAwuB,aAAAurG,GACAruH,EAAAi4F,EAAAmJ,EAAAnrG,MAAA3B,EAAA+5H,EAAAxrG,EAEAloB,GACA8D,EAAAoF,YAAAlJ,GAAiD0G,MAAArB,GAAcutH,EAAAc,GAG/D1zH,EAAAyzH,EAAAhtB,EAAAnrG,MACA3B,EAAA+5H,EAAAxrG,EAAA7iB,EAAAmuH,EAAAZ,GAAA,GAIAj5H,EAAAkkG,iBAAA61B,EAAA1zH,GAEAoM,EAAAlN,IAAAc,GAEA+iE,EACA/iE,EAAArG,EAAA+5H,EAAAxrG,EAAA7iB,EACA8M,EAAAqhH,EAAA,UAAA/sB,EAAAnrG,QAGAiY,OAAA,SAAAjR,GACA,GAAAtC,GAAAs8D,EAAAwhC,iBAAAx7F,EACA,iBAAAmkG,EAAAnrG,KACA0E,GAAA2yH,EAAArwH,EAAAswH,EAAA5yH,GAGAA,GAAA6yH,EAAAvwH,EAAAswH,EAAA5yH,KAGA4zH,UAEAz4H,KAAA0gC,MAAAliC,GAGA4Z,OAAA,SAAA5K,EAAAmJ,GACA,GAAA1F,GAAAjR,KAAAiR,MACAzS,EAAAwB,KAAA0gC,KACAlzB,GAAA/K,IAAA,aACAjE,GACAA,EAAAokG,kBAAA,SAAA/9F,GACA,WAAAA,EAAA1E,KACAu3H,EAAA7yH,EAAAsC,UAAAqG,EAAA3I,GAGA2yH,EAAA3yH,EAAAsC,UAAAqG,EAAA3I,KAMAoM,EAAAujF,eAKA8jC,GAEAj9B,YAAA,SACA78F,EAAA2I,EAAA4lB,EAAA7iB,EAAA0xG,EACA6b,EAAAzwH,GAEA,GAAAiD,GAAA,GAAAtB,GAAAS,MAAyCmC,MAAAzD,EAAA5K,UAAuBgN,IAGhE,IAAAutH,EAAA,CACA,GAAAiB,GAAAzuH,EAAAsB,MACAotH,EAAA/c,EAAA,iBACAgd,IACAF,GAAAC,GAAA,EACAC,EAAAD,GAAAzuH,EAAAyuH,GACAhwH,EAAA3B,EAAA,2BAAAiD,GACAsB,MAAAqtH,GACiBnB,EAAAtwH,GAGjB,MAAA8C,IAGAkyF,MAAA,SACA39F,EAAA2I,EAAA4lB,EAAA7iB,EAAA2uH,EACApB,EAAAzwH,GAEA,GAAA8xH,GAAA,GAAAnwH,GAAAK,QAA6CuC,MAAAzD,EAAA5K,UAAuBgN,IAGpE,IAAAutH,EAAA,CACA,GAAAsB,GAAAD,EAAAvtH,MACAotH,EAAAE,EAAA,eACAD,IACAG,GAAAJ,GAAAE,EAAA,EAAA3uH,EAAA+sF,WACA2hC,EAAAD,GAAAzuH,EAAAyuH,GACAhwH,EAAA3B,EAAA,2BAAA8xH,GACAvtH,MAAAqtH,GACiBnB,EAAAtwH,GAGjB,MAAA2xH,KA4BA32B,GACA9G,YAAA,SAAA78F,EAAA2I,EAAA4lB,GACA,GAAA7iB,GAAA1L,EAAA4jG,cAAAj7F,GACA6xH,EAAAhB,EAAAjrG,EAAA7iB,GAGA+uH,EAAA/uH,EAAAM,MAAA,OACA0uH,EAAAhvH,EAAAO,OAAA,MACA,QACAE,EAAAT,EAAAS,EAAAsuH,EAAAD,EAAA,EACAnuH,EAAAX,EAAAW,EAAAquH,EAAAF,EAAA,EACAxuH,MAAAN,EAAAM,MAAAyuH,EAAAD,EACAvuH,OAAAP,EAAAO,OAAAyuH,EAAAF,IAIA78B,MAAA,SAAA39F,EAAA2I,EAAA4lB,GACA,GAAA7iB,GAAA1L,EAAA4jG,cAAAj7F,EACA,QACAuD,GAAAR,EAAAQ,GACAE,GAAAV,EAAAU,GACA6pG,GAAAvqG,EAAAuqG,GACAv9D,EAAAhtC,EAAAgtC,EACA+/C,WAAA/sF,EAAA+sF,WACAC,SAAAhtF,EAAAgtF,WAgDA77F,GAAAC,QAAA68H,G3H4jhCM,SAAU98H,EAAQC,EAAS+I,GAEjC,Y4H/0hCA,IAAAyX,GAAAzX,EAAA,IACA41F,EAAA51F,EAAA,GAEAhJ,GAAAC,QAAAwgB,EAAA5e,QAEAiD,KAAA,sBAEAsxF,eAAA,SAAAn1E,EAAA9O,GACA,MAAAysF,GAAA39E,EAAA9d,KAAAwB,KAAAwN,IAGA2rH,kBAAA,SAAAt7H,GACA,GAAAyV,GAAAtT,KAAAgf,gBACA,IAAA1L,EAAA,CAEA,GAAA8lH,GAAA9lH,EAAAu9F,YAAAhzG,GAAA,GACAW,EAAAwB,KAAA6Y,UACA4+E,EAAAj5F,EAAA2jG,UAAA,UACAzC,EAAAlhG,EAAA2jG,UAAA,OAGA,OADAi3B,GADA9lH,EAAA0+E,cAAA4pB,eAAA,MACAnkB,EAAAiI,EAAA,EACA05B,EAEA,OAAAtyG,UAGA2V,eACApiB,OAAA,EACAD,EAAA,EACA4E,iBAAA,cACAq6G,iBAAA,EAQAC,aAAA,EAEAC,YAAA,EAeAzqB,WACA3jF,UAGAF,iB5H21hCM,SAAU5vB,EAAQC,EAAS+I,G6Ht5hCjC,GAAAwzH,GAAAxzH,EAAA,MAEA,iBACA,yBACA,4BAEA,4BACA,+BACA,YACA,eACA,kBACA,kBACA,gBAGAhJ,GAAAC,SACAu8H,gBAAA,SAAA9kC,GACA,GAAA/tF,GAAA6yH,EAAAj8H,KAAAoE,KAAA+yF,EACA,IAAA/yF,KAAAw5H,kBAAA,CACA,GAAA7nG,GAAA3xB,KAAAw5H,mBACA7nG,KAAA3sB,EAAA2sB,YAEA,MAAA3sB,M7Hk6hCM,SAAU3J,EAAQC,EAAS+I,G8Hj5hCjC,QAAA0zH,GAAA/yH,EAAAqP,EAAA5P,EAAAg1H,EAAA3B,GACAnvH,EAAA8D,QAAAzH,EAAAqP,EAAA5P,GACAO,EAAAutB,KAAAknG,EACA,YAAAz0H,EAAAoI,eACApI,EAAAoI,aAAA0qH,GA5CA,GAAAhwH,GAAAzD,EAAA,GACAsE,EAAAtE,EAAA,GAEA8gB,IAEAA,GAAA4yG,SAAA,SACA3yH,EAAAF,EAAA6nB,EAAAtoB,EAAAuS,EAAA7P,EAAA2wH,GAEA,GAAAnrH,GAAAogB,EAAA/f,SAAA,gBACAkiG,EAAAniF,EAAA/f,SAAA,iBAEAL,GAAAlK,IAAA,QACAs1H,EACA3yH,EAAAuH,EAAAlI,EACAqD,EAAAvH,SACAyW,EAAA4V,kBAAAzlB,EAAA,UACA6P,EAAA+U,YAAA5kB,IAEA2wH,GAIA1yH,EAAAmtB,KAAA,GAGA28E,EAAAzsG,IAAA,QACAs1H,EACA7yH,EAAAgqG,EAAAzqG,EACAqD,EAAAvH,SACAyW,EAAA4V,kBAAAzlB,EAAA,YACA6P,EAAA+U,YAAA5kB,IAEA2wH,GAIA5yH,EAAAqtB,KAAA,IAYAl3B,EAAAC,QAAA6pB,G9Hk8hCM,SAAU9pB,EAAQC,EAAS+I,GAEjC,Y+Hn/hCA,IAAAyD,GAAAzD,EAAA,GACAyX,EAAAzX,EAAA,IACAq1H,EAAAr1H,EAAA,IAEAs1H,EAAA79G,EAAA5e,QAEAiD,KAAA,qBAEA+hB,cAAA,wBAKAsuF,wBAAA,mCAMAvsF,WAAA,KAKAwY,eACApiB,OAAA,EACAD,EAAA,EACA4E,iBAAA,cACAq6G,iBAAA,EAEAlqB,gBAAA,EAKAjlG,OAAA,KAEA4kG,WACA3jF,QACA1mB,MAAA,UACAm1H,OAAA,UACAC,YAAA,EAGAC,YAAA,UACAC,aAAA,WAEA9uG,UACA4uG,YAAA,IAIAG,YAAA,KACAC,YAAA,KACAC,SAAA,KAEAC,iBAAA,EACA3yH,gBAAA,SACA4yH,kBAAA,KAOAC,aAAA,WACA,cAGA9C,cAAA,SAAApwH,EAAA3I,EAAA87H,GACA,GAAAC,GAAA/7H,EAAA4jG,cAAAj7F,EACA,OAAAmzH,GAAArwH,KAAAswH,EAAAC,aAKA1yH,GAAAxJ,MAAAq7H,EAAAD,EAAAzpB,kBAAA,GAEA50G,EAAAC,QAAAq+H,G/H6/hCM,SAAUt+H,EAAQC,EAAS+I,GAEjC,YgIvjiCA,SAAAujE,GAAA6yD,EAAAj8H,EAAAyY,GACA,GAAA8V,GAAAvuB,EAAAwuB,aAAA/V,GACAyjH,EAAA3tG,EAAA/f,SAAA0hG,GACAjqG,EAAAjG,EAAA+gB,cAAAtI,EAAA,SACA6iH,EAAAt7H,EAAA+gB,cAAAtI,EAAA,gBAAAxS,EAIAqqG,EAAA4rB,EAAArrB,cACA,gDAGAsrB,EAAAF,EAAA5oF,QAAA4oF,EAAAG,aACAD,GAAAnvB,SAAAsD,GACA6rB,EAAA31H,MAAAD,OAAA+0H,CAEA,IAAAe,GAAAJ,EAAA5oF,QAAA4oF,EAAAK,UACAD,GAAArvB,SAAAsD,GACA+rB,EAAA71H,MAAAC,KAAAR,EACAo2H,EAAA71H,MAAAD,OAAA+0H,CAEA,IAAA50H,GAAA6nB,EAAA/f,SAAA2hG,GAAAU,cACA1mG,GAAA0D,cAAAouH,EAAAv1H,GA5CA,GAAA4C,GAAAzD,EAAA,GACA2T,EAAA3T,EAAA,IACAsE,EAAAtE,EAAA,GACAq1H,EAAAr1H,EAAA,IAEA02H,EAAA/iH,EAAA9a,QAEAiD,KAAA,cAEAywG,gBAAA,WACA,MAAAhpC,IAGAvvD,QAAAvQ,EAAAlF,MAGAkF,GAAAxJ,MAAAy8H,EAAArB,EAAAjpB,WAAA,EAGA,IAAA/B,IAAA,sBACAC,GAAA,uBA4BAtzG,GAAAC,QAAAy/H,GhIuliCM,SAAU1/H,EAAQC,EAAS+I,GiI5hiCjC,QAAA22H,GAAAhkH,EAAAxY,GACA,GACAopC,GADA03E,EAAAtoG,EAAAg7E,cAGAipC,EAAA,aAAA3b,EAAAn/G,KACAm/G,EAAA5D,gBAEA9zE,EAAA03E,EAAA93E,YACAl/B,KAAAsG,IAAAg5B,EAAA,GAAAA,EAAA,IAAAppC,EAAA8oB,SAGA0yG,EAAAvzG,EACAlmB,EAAAyW,EAAAvU,IAAA,eAAAw4H,GACAA,GAEAhB,EAAAxzG,EACAlmB,EAAAyW,EAAAvU,IAAA,kBACAw4H,GAEAf,EAAAljH,EAAAvU,IAAA,WACA,cAAAy3H,EACAzzG,EAAAyzG,EAAAe,GAEA3yH,KAAAE,IAAAF,KAAAI,IAAAuyH,EAAA,EAAAjB,GAAAC,GAnIA,GAAAnyH,GAAAzD,EAAA,GACA9D,EAAA8D,EAAA,GAAA9D,SACAkmB,EAAApiB,EAAA,GAAAoiB,YAEAprB,GAAAC,QAAA,SAAAkS,GAEAA,EAAA6/E,iBAAA,uBAAAr2E,GAEA,GAQAkkH,GARA5nH,EAAA0D,EAAAgI,iBACAxgB,EAAAwY,EAAA6B,UACAsiH,EAAAH,EAAAhkH,EAAAxY,GACA48H,EAAApkH,EAAAvU,IAAA,UACA44H,EAAA,eAAAD,EAAA,IACAE,EAAA,EAAAD,EACAjrB,GAAA,SACAmrB,IAGAzzH,GAAArJ,KAAAD,EAAAylB,WAAA,SAAA6L,GACA,GAAApE,GAAAltB,EAAAmxB,iBAAAG,GACAF,EAAAlE,EAAAkE,QACAA,KAAAwgF,EAAAkrB,GACAC,EAAAt8H,KAAA6wB,GAEAF,IAAAwgF,EAAAirB,KACAH,EAAAprG,KAIA,MAAAorG,GAAAK,EAAAx/H,OAAA,GAIAyC,EAAAC,MAAAy8H,GAAAp7H,OAAAy7H,GAAA,WAqCA,QAAAC,GAAAv1G,GACA,GAAA+wB,KAGA,OAFAA,GAAAqkF,GAAAI,EACAzkF,EAAAskF,GAAAr1G,EACA3C,MAAAm4G,IAAAn4G,MAAA2C,IACAa,SACAxT,EAAAu9F,YAAA75D,GAGA,QAAA0kF,GAAA7rH,EAAAw0C,GACA,GAAAs3E,GAAA9rH,EAAApP,QACAm7H,EAAA/rH,EAAApP,OACAk7H,GAAAN,IAAAF,EAAA,EACAS,EAAAP,IAAAF,EAAA,EACA92E,EACAw3E,EAAA58H,KAAA08H,EAAAC,GACAC,EAAA58H,KAAA28H,EAAAD,GApDA,GAAAj8H,GAAAE,UACA67H,EAAA/7H,EAAA,GACAuX,EAAAvX,EAAA67H,EAAAx/H,OAAA,GAEA+/H,EAAAp8H,EAAA,GACAq8H,EAAAr8H,EAAA,GACAs8H,EAAAt8H,EAAA,GACAu8H,EAAAv8H,EAAA,GAEAw8H,EAAA5zH,KAAAI,IAAAozH,EAAAC,GACAI,EAAA7zH,KAAAE,IAAAszH,EAAAC,GAEAK,EAAAZ,EAAAU,GACAG,EAAAb,EAAAW,GACAG,EAAAd,EAAAQ,GACAO,EAAAf,EAAAS,GAEAO,IACAD,EAAAF,IACAC,EAAAF,IAGAP,IACAH,GAAAW,EAAA,GACAX,EAAAU,EAAA,GAEA59H,EAAA6jG,cAAAprF,GACAmkH,cACAqB,KAAAX,EAAAC,GAAA,EAAAD,EAAAC,EAAA,IACAW,aAAAZ,EAAAC,EACAM,EAAAf,GAAAc,EAAAd,GACAO,WACAW,cACAhC,UAsBA,WACA,GAAAmC,GAAAnB,EAAAlzH,KAAAI,IAAAozH,EAAAC,EAAAC,EAAAC,IACAW,EAAApB,EAAAlzH,KAAAE,IAAAszH,EAAAC,EAAAC,EAAAC,GAKA,OAHAU,GAAAtB,IAAAF,EAAA,EACAyB,EAAAvB,IAAAF,EAAA,GAGAxwH,EAAAgyH,EAAA,GACA9xH,EAAA8xH,EAAA,GACAnyH,MAAA8wH,EAAAH,EAAAyB,EAAA,GAAAD,EAAA,GACAlyH,OAAA6wH,EAAAsB,EAAA,GAAAD,EAAA,GAAAxB,UAIa,OjI8qiCP,SAAU9/H,EAAQC,GkItxiCxB,GAAAuhI,IAAA,oCACAC,GAAA,qCACAC,GAAA,8BACAC,GAAA,8BAEA3hI,GAAAC,QAAA,SAAAkS,EAAAmJ,GAEAnJ,EAAAyvH,oBAAA,uBAAAjmH,GAEA,GAAAxY,GAAAwY,EAAA6B,SAEAra,GAAA8uF,WACA4vC,aAAA,cAIA1vH,EAAA2vH,iBAAAnmH,IACAxY,EAAAC,KAAA,SAAAwY,GACA,GAAA8V,GAAAvuB,EAAAwuB,aAAA/V,GACAwlH,EAAAj+H,EAAA4jG,cAAAnrF,GAAAwlH,IAEAj+H,GAAAgkG,cACAvrF,GAEAxS,MAAAsoB,EAAAtqB,IACAg6H,EAAA,EAAAM,EAAAC,GAEAlD,YAAA/sG,EAAAtqB,IACAg6H,EAAA,EAAAI,EAAAC,WlIuyiCM,SAAUzhI,EAAQC,EAAS+I,GmIn0iCjC,GAAAyD,GAAAzD,EAAA,EAEAhJ,GAAAC,QAAA,SAAAghB,GACAA,GAAAxU,EAAAhL,QAAAwf,EAAA3D,SAKA7Q,EAAArJ,KAAA6d,EAAA3D,OAAA,SAAAykH,GACAt1H,EAAAnL,SAAAygI,IAAA,MAAAA,EAAAj9H,OACAi9H,EAAAj9H,KAAA,mBnIg1iCM,SAAU9E,EAAQC,EAAS+I,GoI/0iCjC,QAAAg5H,GAAAC,GACAt9H,KAAAiR,MAAA,GAAAtI,GAAAC,MAEA5I,KAAAu9H,YAAAD,GAAAh/C,EAKA,QAAAk/C,GAAAh/H,EAAAyY,EAAAwmH,GACA,GAAA5tH,GAAArR,EAAA4jG,cAAAnrF,EAKA,OAAApH,KAAAyT,MAAAzT,EAAA,MAAAyT,MAAAzT,EAAA,OAAA4tH,KAAAxmH,KACA,SAAAzY,EAAA+gB,cAAAtI,EAAA,UAvBA,GAAAtO,GAAAtE,EAAA,GACAi6E,EAAAj6E,EAAA,IAaAq5H,EAAAL,EAAAl/H,SAgBAu/H,GAAAlwB,WAAA,SAAAhvG,EAAAi/H,GACA,GAAAxsH,GAAAjR,KAAAiR,MACA+F,EAAAxY,EAAAg/F,UACAr8B,EAAAnhE,KAAA0gC,MAEAi9F,EAAA39H,KAAAu9H,YAEAhwB,GACAuB,UAAA93F,EAAAhK,SAAA,oBAAAqiG,cAAA,UACAN,eAAA/3F,EAAAhK,SAAA,sBAAAqiG,eACAL,aAAAh4F,EAAAvU,IAAA,gBACAwsG,aAAAj4F,EAAAvU,IAAA,gBACA0sG,eAAAn4F,EAAAvU,IAAA,kBAEAkK,WAAAqK,EAAAhK,SAAA,gBACAkiG,gBAAAl4F,EAAAhK,SAAA,kBACAoiG,YAAAp4F,EAAAvU,IAAA,UAGAjE,GAAAmiG,KAAAx/B,GACAp9D,IAAA,SAAA65H,GACA,GAAA/tH,GAAArR,EAAA4jG,cAAAw7B,EACA,IAAAJ,EAAAh/H,EAAAo/H,EAAAH,GAAA,CACA,GAAAI,GAAA,GAAAF,GAAAn/H,EAAAo/H,EAAArwB,EACAswB,GAAAh2H,KAAA,WAAAgI,GACArR,EAAAkkG,iBAAAk7B,EAAAC,GACA5sH,EAAAlN,IAAA85H,MAGA7oH,OAAA,SAAA4oH,EAAAE,GACA,GAAAD,GAAA18D,EAAAwhC,iBAAAm7B,GACAjuH,EAAArR,EAAA4jG,cAAAw7B,EACA,KAAAJ,EAAAh/H,EAAAo/H,EAAAH,GAEA,WADAxsH,GAAAmH,OAAAylH,EAGAA,IAKAA,EAAArwB,WAAAhvG,EAAAo/H,EAAArwB,GACA5kG,EAAAoF,YAAA8vH,GACA3xH,SAAA2D,GACqBmH,KAPrB6mH,EAAA,GAAAF,GAAAn/H,EAAAo/H,GACAC,EAAAh2H,KAAA,WAAAgI,IAUAoB,EAAAlN,IAAA85H,GAEAr/H,EAAAkkG,iBAAAk7B,EAAAC,KAEAzlH,OAAA,SAAA0lH,GACA,GAAAj5H,GAAAs8D,EAAAwhC,iBAAAm7B,EACAj5H,MAAAkrG,QAAA,WACA9+F,EAAAmH,OAAAvT,OAGA4zH,UAEAz4H,KAAA0gC,MAAAliC,GAGAk/H,EAAAn9G,aAAA,WACA,GAAA/hB,GAAAwB,KAAA0gC,KACAliC,IAEAA,EAAAokG,kBAAA,SAAA/9F,EAAAoS,GACA,GAAApH,GAAArR,EAAA4jG,cAAAnrF,EACApS,GAAAgD,KAAA,WAAAgI,MAKA6tH,EAAAtlH,OAAA,SAAA2lH,GACA,GAAA9sH,GAAAjR,KAAAiR,MACAzS,EAAAwB,KAAA0gC,KACAliC,KACAu/H,EACAv/H,EAAAokG,kBAAA,SAAA/9F,GACAA,EAAAkrG,QAAA,WACA9+F,EAAAmH,OAAAvT,OAKAoM,EAAAujF,cAKAn5F,EAAAC,QAAA+hI,GpIm2iCM,SAAUhiI,EAAQC,EAAS+I,GqI97iCjC,QAAA25H,GAAAx/H,EAAAyY,EAAAgnH,EAAAzgG,GACA70B,EAAAC,MAAAhN,KAAAoE,MAMAA,KAAA86H,UAMA96H,KAAA46H,aAKA56H,KAAAi+H,eAEAj+H,KAAAk+H,eAAA1/H,EAAAyY,EAAAumB,GAEAx9B,KAAAwtG,WAAAhvG,EAAAyY,EAAAumB,GAMAx9B,KAAAyuG,aAkCA,QAAA0vB,GAAAvuH,EAAA4gF,EAAA+pC,GACA,MAAAzyH,GAAA/I,IAAA6Q,EAAA,SAAAC,GAGA,MAFAA,KAAApP,QACAoP,EAAA2gF,GAAA+pC,EAAAmC,aACA7sH,IAIA,QAAAuuH,GAAA5B,GAEA,GAAAjxH,KAIA,OAHAzD,GAAArJ,KAAA+9H,EAAA,SAAA6B,EAAAxiI,GACA0P,EAAA,OAAA1P,GAAAwiI,IAEA9yH,EAmCA,QAAAykG,GAAAiuB,GACAj+H,KAAAiR,MAAA,GAAAtI,GAAAC,MACA5I,KAAAi+H,eA/IA,GAAAn2H,GAAAzD,EAAA,GACAsE,EAAAtE,EAAA,GACA2D,EAAA3D,EAAA,IAEAi6H,EAAAt2H,EAAA9K,QAEAiD,KAAA,eAEAoL,SAEA6mB,UAAA,SAAAxB,EAAArlB,GACA,OAAA1P,KAAA0P,GACA,GAAAA,EAAAhP,eAAAV,IAAA,IAAAA,EAAA8B,QAAA,SACA,GAAA4gI,GAAAhzH,EAAA1P,EACA+0B,GAAA0lE,OAAAioC,EAAA,MAAAA,EAAA,OACA3tG,EAAA4lE,OAAA+nC,EAAA,MAAAA,EAAA,WA8CAC,EAAAR,EAAA7/H,SAEAqgI,GAAAN,eAAA,SAAA1/H,EAAAyY,EAAAumB,GACA,GAAA+8F,GAAA/7H,EAAA4jG,cAAAnrF,GACAqkH,EAAA,eAAAf,EAAAa,YAAA,IACA9zG,EAAA,CAGAtnB,MAAA+D,IAAA,GAAA4E,GAAAO,SACAqC,OACAqE,OAAA4tB,EACA2gG,EAAA5D,EAAAsB,SAAAP,EAAAf,GACAA,EAAAsB,UAEA72H,OAAoBmuB,eAAA,GACpBttB,GAAA,OAEA7F,KAAA86H,UAAAxzG,GAGA,IAAAk1G,GAAA10H,EAAA/I,IAAAw7H,EAAAiC,YAAA,SAAA6B,GACA,MAAA7gG,GAAA2gG,EAAAE,EAAA/C,EAAAf,GAAA8D,GAEAr+H,MAAA+D,IAAA,GAAAu6H,IACA/yH,MAAA6yH,EAAA5B,GACAx3H,OAAoBmuB,eAAA,GACpBttB,GAAA,OAEA7F,KAAA46H,aAAAtzG,KAyBAk3G,EAAAhxB,WAAA,SAAAhvG,EAAAyY,EAAAumB,GACA,GAAAxmB,GAAAhX,KAAAyuG,aAAAjwG,EAAAg/F,UACA+8B,EAAA/7H,EAAA4jG,cAAAnrF,GACA/B,EAAAvM,EAAA60B,EAAA,0BAGAtoB,GACAlV,KAAA6xC,QAAA7xC,KAAA86H,YACavvH,OAAQqE,OAAA2qH,EAAAsB,WACrB7kH,EAAAC,GAEA/B,EACAlV,KAAA6xC,QAAA7xC,KAAA46H,eACarvH,MAAA6yH,EAAA7D,EAAAiC,cACbxlH,EAAAC,GAGAjX,KAAAi+H,aAAAriI,KAAA,KAAAoE,KAAAxB,EAAAyY,IAGAnP,EAAAhK,SAAAkgI,EAAAr1H,EAAAC,MAYA,IAAA61H,GAAAzuB,EAAA7xG,SAMAsgI,GAAAjxB,WAAA,SAAAhvG,GACA,GAAAyS,GAAAjR,KAAAiR,MACAkwD,EAAAnhE,KAAA0gC,MACAu9F,EAAAj+H,KAAAi+H,YAEAz/H,GAAAmiG,KAAAx/B,GACAp9D,IAAA,SAAA65H,GACA,GAAAp/H,EAAAw1C,SAAA4pF,GAAA,CACA,GAAAC,GAAA,GAAAG,GAAAx/H,EAAAo/H,EAAAK,GAAA,EACAz/H,GAAAkkG,iBAAAk7B,EAAAC,GACA5sH,EAAAlN,IAAA85H,MAGA7oH,OAAA,SAAA4oH,EAAAE,GACA,GAAAD,GAAA18D,EAAAwhC,iBAAAm7B,EAGA,KAAAt/H,EAAAw1C,SAAA4pF,GAEA,WADA3sH,GAAAmH,OAAAylH,EAIAA,GAIAA,EAAArwB,WAAAhvG,EAAAo/H,GAHAC,EAAA,GAAAG,GAAAx/H,EAAAo/H,EAAAK,GAOAhtH,EAAAlN,IAAA85H,GAEAr/H,EAAAkkG,iBAAAk7B,EAAAC,KAEAzlH,OAAA,SAAA0lH,GACA,GAAAj5H,GAAAs8D,EAAAwhC,iBAAAm7B,EACAj5H,IAAAoM,EAAAmH,OAAAvT,KAEA4zH,UAEAz4H,KAAA0gC,MAAAliC,GAOAigI,EAAArmH,OAAA,WACA,GAAAnH,GAAAjR,KAAAiR,MACAzS,EAAAwB,KAAA0gC,KACA1gC,MAAA0gC,MAAA,KACAliC,KAAAokG,kBAAA,SAAA/9F,GACAA,GAAAoM,EAAAmH,OAAAvT,MAIAxJ,EAAAC,QAAA00G,GrIw+iCM,SAAU30G,EAAQC,EAAS+I,GsIxrjCjC,GAAAsE,GAAAtE,EAAA,GACAyD,EAAAzD,EAAA,GACA+O,EAAA/O,EAAA,IAEA8gB,IAEAA,GAAAuqF,kBAAA,SAAAlxG,GACA,GAAAixG,GACAivB,EAAAtrH,EAAA4c,kBAAAxxB,EAAA,QAEA,IAAAkgI,EAAA3iI,OACA0zG,EAAAivB,EAAA,OAMA,KAFA,GACAl9G,GADAyC,EAAAzlB,EAAAylB,WAAAxjB,QAEAwjB,EAAAloB,SACA0zG,EAAAxrF,EAAA9O,MAEA,aADAqM,EAAAhjB,EAAAmxB,iBAAA8/E,GAAAtvG,OACA,SAAAqhB,KAIA,MAAAiuF,IAGAtqF,EAAAwqF,eAAA,SACAnxG,EAAA2I,EAAAsoG,EAAAH,EAAAt4F,EAAArK,EAAAlI,GAEA,MAAAgrG,GAAA9iG,EAAApF,WAAA,SACAoB,EAAA8D,QAAA6iG,EAAA3iG,EAAAlI,GACA6qG,EAAA/8E,KAAAzqB,EAAAvH,SACAyW,EAAA4V,kBAAAzlB,EAAA,UACA3I,EAAAiE,IAAAgtG,EAAAtoG,KAIAmoG,EAAA/8E,KAAA,IAIAl3B,EAAAC,QAAA6pB,GtIosjCM,SAAU9pB,EAAQC,EAAS+I,GAEjC,YuIlvjCA,IAAA41F,GAAA51F,EAAA,IACAyX,EAAAzX,EAAA,GAEAhJ,GAAAC,QAAAwgB,EAAA5e,QAEAiD,KAAA,cAEA+hB,cAAA,gBAEAuvE,eAAA,SAAAn1E,EAAA9O,GACA,GAAA+F,QAAA,CACA,GAAAD,GAAAgJ,EAAA0C,gBACA,cAAA1L,GAAA,gBAAAA,EACA,SAAAxS,OAAA,iEAGA,MAAAm5F,GAAA39E,EAAA9d,KAAAwB,KAAAwN,IAGAivB,eACApiB,OAAA,EACAD,EAAA,EACA4E,iBAAA,cACAq6G,iBAAA,EAEAlqB,gBAAA,EAQAwvB,cAAA,EAGA1uC,OACA9kE,QACAjf,SAAA,QAOAikF,WACAhlE,QACA3gB,MAAA,EACArK,KAAA,UAKA6oC,MAAA,EAGA+hF,QAAA,EACA6T,eAAA,KAEAC,OAAA,cAEAxxB,WAAA,EAEA2B,aAAA,KAGA8vB,YAAA,EAEAC,eAAA,EAGAC,cAAA,EAGAC,SAAA,OAEAz3H,gBAAA,SAGAwS,YAAA,EACAklH,oBAAAjhH,QvI6vjCM,SAAU5iB,EAAQC,EAAS+I,GAEjC,YwIr0jCA,SAAA86H,GAAAC,EAAAC,GACA,GAAAD,EAAArjI,SAAAsjI,EAAAtjI,OAAA,CAGA,OAAAF,GAAA,EAAuBA,EAAAujI,EAAArjI,OAAoBF,IAAA,CAC3C,GAAAgwC,GAAAuzF,EAAAvjI,GACAiwC,EAAAuzF,EAAAxjI,EACA,IAAAgwC,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,GACA,OAGA,UAGA,QAAAwzF,GAAAvU,GACA,yBAAAA,IAAA,KAGA,QAAAwU,GAAAh3F,GACA,GAAAX,GAAAW,EAAAi3F,iBACA,IAAAj3F,EAAAyyE,OAAA,CAEA,GAAAykB,GAAAl3F,EAAAmzE,eAAA,IACAx8C,EAAAt3B,EAAA,GAAAA,EAAA,OACAA,GAAA,IAAAs3B,EAAAugE,EACA73F,EAAA,IAAAs3B,EAAAugE,EAEA,MAAA73F,GAGA,QAAA60F,GAAAx2G,GACA,MAAAA,IAAA,OAQA,QAAAy5G,GAAApsH,EAAA9U,GACA,GAAA8gH,GAAAhsG,EAAA0+E,cACA2tC,EAAArsH,EAAAksG,aAAAF,GACAsgB,EAAAtgB,EAAApF,OACA,EAAAylB,EAAA5tG,MAAAyV,YAAA,GAEAioE,EAAAkwB,EAAAnvC,IAEAqvC,EAAA,MAAApwB,GAAA,WAAAA,EAAA,GAEA,OAAAjxG,GAAA2iG,UAAAsO,GAAA,SAAAxpF,EAAAhP,GAIA,IAHA,GAAA6oH,GACA/mH,EAAAva,EAAAua,UAEAA,GACA0jH,EAAA1jH,EAAAtW,IAAAgtG,EAAAx4F,MAAAwlH,EAAAx2G,IACA,CACA65G,EAAA/mH,CACA,OAEA,GAAAgnH,KAKA,OAJAA,GAAAF,GAAArhI,EAAAiE,IAAA68G,EAAA9uB,IAAAv5E,GACA8oH,EAAA,EAAAF,GAAAC,EACAA,EAAAr9H,IAAAgtG,EAAAx4F,GAAA,GAAA2oH,EAEAtsH,EAAAu9F,YAAAkvB,KACS,GAGT,QAAAC,GAAAhhB,EAAAihB,EAAAjpH,GACA,GAAAkpH,GAAAX,EAAAvgB,EAAAzuB,QAAA,MACA4vC,EAAAZ,EAAAvgB,EAAAzuB,QAAA,MACAqrB,EAAAoD,EAAAhtB,cAAA4pB,eAEAjxG,EAAArC,KAAAI,IAAAw3H,EAAA,GAAAA,EAAA,IACAr1H,EAAAvC,KAAAI,IAAAy3H,EAAA,GAAAA,EAAA,IACA31H,EAAAlC,KAAAE,IAAA03H,EAAA,GAAAA,EAAA,IAAAv1H,EACAF,EAAAnC,KAAAE,IAAA23H,EAAA,GAAAA,EAAA,IAAAt1H,EACAW,EAAAwL,EAAAvU,IAAA,6BAEA6iG,EAAAtuF,EAAAvU,IAAA,gBAAA+I,EAAA,EAAAlD,KAAAE,IAAAgC,EAAAC,EACAmxG,IACA/wG,GAAAy6F,EACA76F,GAAA,EAAA66F,IAGA36F,GAAA26F,EACA96F,GAAA,EAAA86F,EAGA,IAAAqd,GAAA,GAAAh6G,GAAAS,MACAmC,OACAZ,IACAE,IACAL,QACAC,WAcA,OAVAw1H,KACAtd,EAAAp3G,MAAAqwG,EAAA,oBACAjzG,EAAAqF,UAAA20G,GACAp3G,OACAf,QACAC,WAEauM,IAGb2rG,EAGA,QAAAyd,GAAAjkC,EAAA8jC,EAAAjpH,GACA,GAAAqpH,GAAAlkC,EAAAmkC,eACAC,EAAApkC,EAAAqkC,gBAEAC,EAAAF,EAAA/4F,YACAk5F,EAAAL,EAAA74F,YAEAm5F,EAAAr4H,KAAA6gB,GAAA,IAEAw5F,EAAA,GAAAh6G,GAAAK,QACAuC,OACAb,GAAAyxF,EAAAzxF,GACAE,GAAAuxF,EAAAvxF,GACA6pG,GAAAgsB,EAAA,GACAvpF,EAAAupF,EAAA,GACAxpC,YAAAypC,EAAA,GAAAC,EACAzpC,UAAAwpC,EAAA,GAAAC,EACAjsB,UAAA2rB,EAAAtrB,UAaA,OATAkrB,KACAtd,EAAAp3G,MAAA2rF,UAAAwpC,EAAA,GAAAC,EACAh4H,EAAAqF,UAAA20G,GACAp3G,OACA2rF,UAAAwpC,EAAA,GAAAC,IAEa3pH,IAGb2rG,EAGA,QAAAie,GAAAttH,EAAA2sH,EAAAjpH,GACA,gBAAA1D,EAAAnT,KACAigI,EAAA9sH,EAAA2sH,EAAAjpH,GACAgpH,EAAA1sH,EAAA2sH,EAAAjpH,GAGA,QAAA6pH,GAAAjxH,EAAA0D,EAAAwtH,GAKA,OAJAxhB,GAAAhsG,EAAA0+E,cACA+uC,EAAA,MAAAzhB,EAAA9uB,KAAA,WAAA8uB,EAAA9uB,IAAA,IAEAwwC,KACAnlI,EAAA,EAAuBA,EAAA+T,EAAA7T,OAAA,EAAuBF,IAAA,CAC9C,GAAAolI,GAAArxH,EAAA/T,EAAA,GACAu9H,EAAAxpH,EAAA/T,EACAmlI,GAAA/hI,KAAAm6H,EAEA,IAAA8H,KACA,QAAAJ,GACA,UACAI,EAAAH,GAAAE,EAAAF,GACAG,EAAA,EAAAH,GAAA3H,EAAA,EAAA2H,GAEAC,EAAA/hI,KAAAiiI,EACA,MACA,cAEA,GAAA70C,IAAA+sC,EAAA2H,GAAAE,EAAAF,IAAA,EACAI,IACAD,GAAAH,GAAAI,EAAAJ,GAAA10C,EACA60C,EAAA,EAAAH,GAAA3H,EAAA,EAAA2H,GACAI,EAAA,EAAAJ,GAAAE,EAAA,EAAAF,GACAC,EAAA/hI,KAAAiiI,GACAF,EAAA/hI,KAAAkiI,EACA,MACA,SACAD,EAAAH,GAAA3H,EAAA2H,GACAG,EAAA,EAAAH,GAAAE,EAAA,EAAAF,GAEAC,EAAA/hI,KAAAiiI,IAKA,MADAtxH,GAAA/T,IAAAmlI,EAAA/hI,KAAA2Q,EAAA/T,IACAmlI,EAGA,QAAAI,GAAA5iI,EAAA8U,GACA,GAAA+tH,GAAA7iI,EAAA0gB,UAAA,aACA,IAAAmiH,KAAAtlI,QAAAyC,EAAA8oB,QAAA,CAMA,OADAg6G,GACAzlI,EAAAwlI,EAAAtlI,OAAA,EAA+CF,GAAA,EAAQA,IAEvD,GAAAwlI,EAAAxlI,GAAA0lG,UAAA,GACA+/B,EAAAD,EAAAxlI,EACA,OAGA,IAAAylI,GAAA,gBAAAhuH,EAAAnT,KAIA,YAHAoT,SACAC,QAAAC,KAAA,2DAYA,IAAA8tF,GAAA+/B,EAAA//B,UACAzxE,EAAAtxB,EAAAylB,WAAAs9E,GACAh5D,EAAAj1B,EAAAi9E,QAAAzgE,GAGA5P,EAAApY,EAAA/I,IAAAuiI,EAAAC,MAAA,SAAA3rF,GACA,OACA01D,MAAA/iE,EAAAwxE,cAAAxxE,EAAAqrE,YAAAh+D,EAAA/3C,QACA4G,MAAAmxC,EAAAnxC,SAGA+8H,EAAAthH,EAAAnkB,OACA0lI,EAAAH,EAAAG,YAAAhhI,OAEA+gI,IAAAthH,EAAA,GAAAorF,MAAAprF,EAAAshH,EAAA,GAAAl2B,QACAprF,EAAAgxE,UACAuwC,EAAAvwC,UAGA,IACAwwC,GAAAxhH,EAAA,GAAAorF,MADA,GAEAq2B,EAAAzhH,EAAAshH,EAAA,GAAAl2B,MAFA,GAGAs2B,EAAAD,EAAAD,CAEA,IAAAE,EAAA,KACA,mBAGA95H,GAAArJ,KAAAyhB,EAAA,SAAA01B,GACAA,EAAA6hD,QAAA7hD,EAAA01D,MAAAo2B,GAAAE,IAEA1hH,EAAAjhB,MACAw4F,OAAA+pC,EAAAthH,EAAAshH,EAAA,GAAA/pC,OAAA,GACAhzF,MAAAg9H,EAAA,oBAEAvhH,EAAA66C,SACA08B,OAAA+pC,EAAAthH,EAAA,GAAAu3E,OAAA,GACAhzF,MAAAg9H,EAAA,mBAQA,IAAAI,GAAA,GAAAl5H,GAAAc,eAAA,QAAAyW,GAAA,EAIA,OAHA2hH,GAAA/xG,GAAA4xG,EACAG,EAAA/xG,EAAA,KAAA6xG,EAEAE,GArRA,GAAA/5H,GAAAzD,EAAA,GACAg5H,EAAAh5H,EAAA,KACAi6E,EAAAj6E,EAAA,IACAy9H,EAAAz9H,EAAA,KACAsE,EAAAtE,EAAA,GACA+O,EAAA/O,EAAA,IACA09H,EAAA19H,EAAA,KACA2T,EAAA3T,EAAA,GAiRAhJ,GAAAC,QAAA0c,EAAA9a,QAEAiD,KAAA,OAEAmR,KAAA,WACA,GAAA0wH,GAAA,GAAAr5H,GAAAC,MAEAq5H,EAAA,GAAA5E,EACAr9H,MAAAiR,MAAAlN,IAAAk+H,EAAAhxH,OAEAjR,KAAAkiI,YAAAD,EACAjiI,KAAAmiI,WAAAH,GAGA1+H,OAAA,SAAA0T,EAAAxJ,EAAAmJ,GACA,GAAArD,GAAA0D,EAAAgI,iBACA/N,EAAAjR,KAAAiR,MACAzS,EAAAwY,EAAA6B,UACAi+F,EAAA9/F,EAAAhK,SAAA,oBACAo1H,EAAAprH,EAAAhK,SAAA,oBAEA4C,EAAApR,EAAA2iG,SAAA3iG,EAAA4jG,eAAA,GAEAigC,EAAA,UAAA/uH,EAAAnT,KACAmiI,EAAAtiI,KAAAuiI,UAEAN,EAAAjiI,KAAAkiI,YACAM,EAAAxiI,KAAAyiI,UACAC,EAAA1iI,KAAA2iI,SAEAX,EAAAhiI,KAAAmiI,WAEAlC,EAAAjpH,EAAAvU,IAAA,aAEAmgI,GAAAR,EAAAtrG,UACA+rG,EAAAnD,EAAApsH,EAAA9U,GAEAsgI,EAAA9nH,EAAAvU,IAAA,cAEAqgI,EAAAhE,IAAAuD,IAAArrH,EAAAvU,IAAA,kBACAzC,KAAA+iI,qBAAAvkI,EAAA8U,GAGA6tD,EAAAnhE,KAAA0gC,KACAygC,MAAAyhC,kBAAA,SAAA/9F,EAAAoS,GACApS,EAAAm+H,SACA/xH,EAAAmH,OAAAvT,GACAs8D,EAAAuhC,iBAAAzrF,EAAA,SAKA6nH,GACAmD,EAAA7pH,SAGAnH,EAAAlN,IAAAi+H,EAGA,IAAAh5F,IAAAq5F,GAAArrH,EAAAvU,IAAA,OAGA+/H,IAAAF,EAAAniI,OAAAmT,EAAAnT,MAAA6oC,IAAAhpC,KAAAijI,OAoBAL,IAAAF,EAEAA,EAAA1iI,KAAAkjI,YACAtzH,EAAAizH,EACAvvH,EAAA2sH,GAGAyC,IAAAE,IAEAZ,EAAA5pH,OAAAsqH,GACAA,EAAA1iI,KAAA2iI,SAAA,MAIAX,EAAAnf,YAAA+d,EAAAttH,GAAA,EAAA0D,IAIA8nH,GAAAmD,EAAAz0B,WAAAhvG,EAAAskI,GAIAtkI,EAAAokG,kBAAA,SAAA/9F,GACAA,EAAA+C,eAAA,KAKAu3H,EAAAn/H,KAAAmjI,iBAAAN,IACA1D,EAAAn/H,KAAAojI,QAAAxzH,KAEAqwH,EACAjgI,KAAAqjI,iBACA7kI,EAAAqkI,EAAAvvH,EAAAqD,EAAAqyB,IAKAA,IAEAp5B,EAAAixH,EAAAjxH,EAAA0D,EAAA01B,GACA65F,EAAAhC,EAAAgC,EAAAvvH,EAAA01B,IAGAw5F,EAAAvuG,UACArkB,WAEA8yH,KAAAzuG,UACArkB,SACAizH,wBAnEA/D,GAAAmD,EAAAz0B,WAAAhvG,EAAAskI,GAEA95F,IAEAp5B,EAAAixH,EAAAjxH,EAAA0D,EAAA01B,GACA65F,EAAAhC,EAAAgC,EAAAvvH,EAAA01B,IAGAw5F,EAAAxiI,KAAAsjI,aAAA1zH,EAAA0D,EAAA2sH,GACA2C,IACAF,EAAA1iI,KAAAkjI,YACAtzH,EAAAizH,EACAvvH,EAAA2sH,IAGA+B,EAAAnf,YAAA+d,EAAAttH,GAAA,EAAA0D,IA0DA,IAAAusH,GAAAnC,EAAA5iI,EAAA8U,IAAA9U,EAAA0gB,UAAA,QAEAsjH,GAAAh3B,SAAA1jG,EAAA3K,SAEA25G,EAAAtE,gBAEAvtG,KAAA,OACAF,OAAAw+H,EACAC,SAAA,UAIA,IAAAzY,GAAA/zG,EAAAvU,IAAA,SAQA,IAPAsoH,EAAAuU,EAAAtoH,EAAAvU,IAAA,WACA+/H,EAAAvuG,UACA82F,SACA6T,eAAA5nH,EAAAvU,IAAA,kBACAu8H,aAAAhoH,EAAAvU,IAAA,kBAGAigI,EAAA,CACA,GAAA3pH,GAAAva,EAAAua,UACA0qH,EAAA,CAWA,IATAf,EAAAl3B,SAAA1jG,EAAA3K,SACAilI,EAAA3vB,gBAEAxtG,KAAAs+H,EACA/zB,QAAA,GACAg0B,SAAA,WAIAzqH,EAAA,CAEA0qH,EAAAnE,EADAvmH,EAAAykF,UACA/6F,IAAA,WAGAigI,EAAAzuG,UACA82F,SACA0Y,kBACA7E,eAAA5nH,EAAAvU,IAAA,kBACAu8H,aAAAhoH,EAAAvU,IAAA,kBAIAzC,KAAA0gC,MAAAliC,EAEAwB,KAAAuiI,UAAAjvH,EACAtT,KAAAmjI,iBAAAN,EACA7iI,KAAAojI,QAAAxzH,EACA5P,KAAAijI,MAAAj6F,GAGA3wB,QAAA,aAEAovF,UAAA,SAAAzwF,EAAAxJ,EAAAmJ,EAAA/C,GACA,GAAApV,GAAAwY,EAAA6B,UACA1R,EAAAiM,EAAA0b,eAAAtwB,EAAAoV,EAEA,MAAAzM,YAAA3E,SAAA,MAAA2E,MAAA,GACA,GAAA03H,GAAArgI,EAAAmkG,iBAAAx7F,EACA,KAAA03H,EAAA,CAEA,GAAAzF,GAAA56H,EAAA4jG,cAAAj7F,EACA,KAAAiyH,EAEA,MAEAyF,GAAA,GAAAvgD,GAAA9/E,EAAA2I,GACA03H,EAAA3yH,SAAAktH,EACAyF,EAAAvwB,KACAt3F,EAAAvU,IAAA,UACAuU,EAAAvU,IAAA,MAEAo8H,EAAAhlH,OAAAyJ,MAAA81G,EAAA,KAAA91G,MAAA81G,EAAA,IACAyF,EAAAmE,QAAA,EACAxkI,EAAAkkG,iBAAAv7F,EAAA03H,GAGAA,EAAA1wB,qBAAA,GAEAnuG,KAAAiR,MAAAlN,IAAA86H,GAEAA,EAAAp3B,gBAIAzvF,GAAA7Z,UAAAspG,UAAA7rG,KACAoE,KAAAgX,EAAAxJ,EAAAmJ,EAAA/C,IAKA8zF,SAAA,SAAA1wF,EAAAxJ,EAAAmJ,EAAA/C,GACA,GAAApV,GAAAwY,EAAA6B,UACA1R,EAAAiM,EAAA0b,eAAAtwB,EAAAoV,EACA,UAAAzM,MAAA,GACA,GAAA03H,GAAArgI,EAAAmkG,iBAAAx7F,EACA03H,KACAA,EAAAmE,QACAxkI,EAAAkkG,iBAAAv7F,EAAA,MACAnH,KAAAiR,MAAAmH,OAAAymH,IAGAA,EAAAn3B,gBAQA1vF,GAAA7Z,UAAAupG,SAAA9rG,KACAoE,KAAAgX,EAAAxJ,EAAAmJ,EAAA/C,IAUA0vH,aAAA,SAAA1zH,GACA,GAAA4yH,GAAAxiI,KAAAyiI,SAkBA,OAhBAD,IACAxiI,KAAAmiI,WAAA/pH,OAAAoqH,GAGAA,EAAA,GAAAT,GAAA54H,UACAoC,OACAqE,UAEA6E,QAAA,EACA5O,GAAA,KAGA7F,KAAAmiI,WAAAp+H,IAAAy+H,GAEAxiI,KAAAyiI,UAAAD,EAEAA,GASAU,YAAA,SAAAtzH,EAAAizH,GACA,GAAAH,GAAA1iI,KAAA2iI,QAiBA,OAfAD,IACA1iI,KAAAmiI,WAAA/pH,OAAAsqH,GAGAA,EAAA,GAAAX,GAAA74H,SACAqC,OACAqE,SACAizH,mBAEApuH,QAAA,IAGAzU,KAAAmiI,WAAAp+H,IAAA2+H,GAEA1iI,KAAA2iI,SAAAD,EACAA,GAKAK,qBAAA,SAAAvkI,EAAA8U,GACA,GAAAowH,GAAApwH,EAAAqwH,eAAA,aAEA,IAAAD,KAAA9mB,eACA,MAAA90G,GAAAtI,KAAAkkI,EAAA9mB,eAAA8mB,IAQAL,iBAAA,SAAA7kI,EAAAqkI,EAAAvvH,EAAAqD,EAAAqyB,GACA,GAAAw5F,GAAAxiI,KAAAyiI,UACAC,EAAA1iI,KAAA2iI,SACA3rH,EAAAxY,EAAAg/F,UAEAmD,EAAAmhC,EACA9hI,KAAA0gC,MAAAliC,EACAwB,KAAAmjI,iBAAAN,EACA7iI,KAAAuiI,UAAAjvH,GAGA0oD,EAAA2kC,EAAA3kC,QACA4nE,EAAAjjC,EAAAijC,iBACAj1F,EAAAgyD,EAAAhyD,KACAk1F,EAAAljC,EAAAkjC,aACA76F,KAEAgzB,EAAA6kE,EAAAlgC,EAAA3kC,QAAA1oD,EAAA01B,GACA46F,EAAA/C,EAAAlgC,EAAAijC,iBAAAtwH,EAAA01B,GACA2F,EAAAkyF,EAAAlgC,EAAAhyD,KAAAr7B,EAAA01B,GACA66F,EAAAhD,EAAAlgC,EAAAkjC,cAAAvwH,EAAA01B,IAKAw5F,EAAAj3H,MAAAu4H,SAAAnjC,EAAA3kC,QACAwmE,EAAAj3H,MAAAqE,OAAAosD,EAEArzD,EAAAoF,YAAAy0H,GACAj3H,OACAqE,OAAA++B,IAEa33B,GAEb0rH,IACAA,EAAAzuG,UACArkB,OAAAosD,EACA6mE,gBAAAe,IAEAj7H,EAAAoF,YAAA20H,GACAn3H,OACAqE,OAAA++B,EACAk0F,gBAAAgB,IAEiB7sH,GAMjB,QAHA+sH,MACAC,EAAArjC,EAAA5lF,OAEAlf,EAAA,EAA2BA,EAAAmoI,EAAAjoI,OAAuBF,IAAA,CAElD,SADAmoI,EAAAnoI,GAAAg8F,IACA,CACA,GAAAhzF,GAAArG,EAAAmkG,iBAAAqhC,EAAAnoI,GAAAooI,KACAp/H,IACAk/H,EAAA9kI,MACA4F,KACAq/H,MAAAroI,KAMA2mI,EAAAvf,WAAAuf,EAAAvf,UAAAlnH,QACAymI,EAAAvf,UAAA,GAAA6D,OAAA,WACA,OAAAjrH,GAAA,EAAmCA,EAAAkoI,EAAAhoI,OAA4BF,IAAA,CAC/DkoI,EAAAloI,GAAAgJ,GACAgD,KAAA,WAAA26H,EAAAj3H,MAAAu4H,SAAAC,EAAAloI,GAAAqoI,YAMA9rH,OAAA,SAAA5K,GACA,GAAAyD,GAAAjR,KAAAiR,MACAkwD,EAAAnhE,KAAA0gC,KACA1gC,MAAAmiI,WAAA3tC,YACAx0F,KAAAkiI,YAAA9pH,QAAA,GAEA+oD,KAAAyhC,kBAAA,SAAA/9F,EAAAoS,GACApS,EAAAm+H,SACA/xH,EAAAmH,OAAAvT,GACAs8D,EAAAuhC,iBAAAzrF,EAAA,SAIAjX,KAAAyiI,UACAziI,KAAA2iI,SACA3iI,KAAAuiI,UACAviI,KAAAojI,QACApjI,KAAAmjI,iBACAnjI,KAAA0gC,MAAA,SxI01jCM,SAAUrlC,EAAQC,GyI/glCxB,QAAAmhI,GAAAx2G,GACA,MAAAA,IAAA,OAGA,QAAAk+G,GAAA7wH,EAAA9U,EAAAyY,GAaA,IAZA,GAQA6oH,GARAxgB,EAAAhsG,EAAA0+E,cACA2tC,EAAArsH,EAAAksG,aAAAF,GACAsgB,EAAAtgB,EAAApF,OACA,EAAAylB,EAAA5tG,MAAAyV,YAAA,GAEAioE,EAAAkwB,EAAAnvC,IACAqvC,EAAA,MAAApwB,GAAA,WAAAA,EAAA,IAGA12F,EAAAva,EAAAua,UACAkN,EAAAznB,EAAAiE,IAAAgtG,EAAAx4F,GAEA8B,GACA0jH,EAAA1jH,EAAAtW,IAAAgtG,EAAAx4F,MAAAwlH,EAAAx2G,IACA,CACA65G,EAAA/mH,CACA,OAEA,GAAAgnH,KAKA,OAJAA,GAAAF,GAAArhI,EAAAiE,IAAA68G,EAAA9uB,IAAAv5E,GACA8oH,EAAA,EAAAF,GAAAC,EACAA,EAAAr9H,IAAAgtG,EAAAx4F,GAAA,GAAA2oH,EAEAtsH,EAAAu9F,YAAAkvB,GA0BA,QAAAqE,GAAAjjE,EAAA62B,GACA,GAAAqsC,KAcA,OAZArsC,GAAA2I,KAAAx/B,GACAp9D,IAAA,SAAAkT,GACAotH,EAAAplI,MAAiC44F,IAAA,IAAA5gF,UAEjCjC,OAAA,SAAA4oH,EAAAE,GACAuG,EAAAplI,MAAiC44F,IAAA,IAAA5gF,IAAA6mH,EAAAmG,KAAArG,MAEjCxlH,OAAA,SAAAnB,GACAotH,EAAAplI,MAAiC44F,IAAA,IAAA5gF,UAEjCwhH,UAEA4L,EAGAhpI,EAAAC,QAAA,SACA6lE,EAAA62B,EACAssC,EAAAC,EACAC,EAAAC,GAsBA,OApBA9jC,GAAAyjC,EAAAjjE,EAAA62B,GAUA0sC,KACAC,KAEAC,KACAC,KAEA9pH,KACA+pH,KACAC,KACAjkC,EAAA2jC,EAAAxgH,WACApoB,EAAA,EAAuBA,EAAA8kG,EAAA5kG,OAAiBF,IAAA,CACxC,GAAAmpI,GAAArkC,EAAA9kG,GACAopI,GAAA,CAIA,QAAAD,EAAAntC,KACA,QACA,GAAAqtC,GAAA/jE,EAAAihC,cAAA4iC,EAAA/tH,KACAgqH,EAAAjpC,EAAAoK,cAAA4iC,EAAAf,OAEA3gH,MAAA4hH,EAAA,KAAA5hH,MAAA4hH,EAAA,OACAA,EAAAjE,EAAAxgI,SAEAikI,EAAAzlI,KAAAimI,GACAP,EAAA1lI,KAAAgiI,GAEA2D,EAAA3lI,KAAAqlI,EAAAU,EAAA/tH,MACA4tH,EAAA5lI,KAAAslI,EAAAS,EAAAf,OAEAc,EAAA9lI,KAAA+4F,EAAA/rE,YAAA+4G,EAAAf,MACA,MACA,SACA,GAAAhtH,GAAA+tH,EAAA/tH,GACAytH,GAAAzlI,KACAulI,EAAA3zB,aACA7Y,EAAAv1F,IAAAq+F,EAAA,GAAA7pF,GAAA,GAAA+gF,EAAAv1F,IAAAq+F,EAAA,GAAA7pF,GAAA,MAIA0tH,EAAA1lI,KAAA+4F,EAAAoK,cAAAnrF,GAAAxW,SAEAmkI,EAAA3lI,KACAklI,EAAAK,EAAAxsC,EAAA/gF,IAEA4tH,EAAA5lI,KAAAslI,EAAAttH,IAEA8tH,EAAA9lI,KAAA+4F,EAAA/rE,YAAAhV,GACA,MACA,SACA,GAAAA,GAAA+tH,EAAA/tH,IACAmpF,EAAAj/B,EAAAl1C,YAAAhV,EAGAmpF,KAAAnpF,GACAytH,EAAAzlI,KAAAkiE,EAAAihC,cAAAnrF,IACA0tH,EAAA1lI,KAAAwlI,EAAA5zB,aACA1vC,EAAA1+D,IAAAq+F,EAAA,GAAA7pF,GAAA,GAAAkqD,EAAA1+D,IAAAq+F,EAAA,GAAA7pF,GAAA,MAGA2tH,EAAA3lI,KAAAqlI,EAAArtH,IACA4tH,EAAA5lI,KACAklI,EACAM,EAAAtjE,EAAAlqD,IAIA8tH,EAAA9lI,KAAAmhG,IAGA6kC,GAAA,EAKAA,IACAlqH,EAAA9b,KAAA+lI,GACAF,EAAA7lI,KAAA6lI,EAAA/oI,SAMA+oI,EAAA19G,KAAA,SAAAxW,EAAAC,GACA,MAAAk0H,GAAAn0H,GAAAm0H,EAAAl0H,IAUA,QAPAs0H,MACAC,KAEAC,KACAC,KAEAC,KACA1pI,EAAA,EAAuBA,EAAAipI,EAAA/oI,OAA0BF,IAAA,CACjD,GAAAob,GAAA6tH,EAAAjpI,EACAspI,GAAAtpI,GAAA6oI,EAAAztH,GACAmuH,EAAAvpI,GAAA8oI,EAAA1tH,GAEAouH,EAAAxpI,GAAA+oI,EAAA3tH,GACAquH,EAAAzpI,GAAAgpI,EAAA5tH,GAEAsuH,EAAA1pI,GAAAkf,EAAA9D,GAGA,OACA+kD,QAAAmpE,EACAx2F,KAAAy2F,EAEAxB,iBAAAyB,EACAxB,cAAAyB,EAEAvqH,OAAAwqH,KzI8hlCM,SAAUlqI,EAAQC,EAAS+I,G0I1tlCjC,QAAAmhI,GAAAxuF,GACA,MAAA1zB,OAAA0zB,EAAA,KAAA1zB,MAAA0zB,EAAA,IAGA,QAAAyuF,GACA70G,EAAAhhB,EAAAy0C,EAAAqhF,EAAAC,EACAzmE,EAAA0mE,EAAAC,EAAA9a,EAAA6T,EAAAI,GAIA,OAFA8G,GAAA,EACA7uH,EAAAotC,EACA9rB,EAAA,EAAuBA,EAAAmtG,EAAYntG,IAAA,CACnC,GAAAye,GAAApnC,EAAAqH,EACA,IAAAA,GAAA0uH,GAAA1uH,EAAA,EACA,KAEA,IAAAuuH,EAAAxuF,GAAA,CACA,GAAAgoF,EAAA,CACA/nH,GAAAioD,CACA,UAEA,MAGA,GAAAjoD,IAAAotC,EACAzzB,EAAAsuC,EAAA,qBAAAloB,EAAA,GAAAA,EAAA,IACA+uF,EAAAC,EAAAhvF,OAGA,IAAA+zE,EAAA,GACA,GAAAkb,GAAAhvH,EAAAioD,EACAgnE,EAAAt2H,EAAAq2H,EACA,IAAAjH,EAEA,KAAAkH,GAAAV,EAAA51H,EAAAq2H,KACAA,GAAA/mE,EACAgnE,EAAAt2H,EAAAq2H,EAIA,IAAAE,GAAA,GACAC,EAAAx2H,EAAAk2H,GACAI,EAAAt2H,EAAAq2H,EAEA,KAAAC,GAAAV,EAAAU,GACAH,EAAA7a,EAAAl0E,OAEA,CAEAwuF,EAAAU,KAAAlH,IACAkH,EAAAlvF,GAGAlc,EAAA7kB,IAAAwU,EAAAy7G,EAAAE,EAEA,IAAAC,GACAC,CACA,UAAA1H,GAAA,MAAAA,EAAA,CACA,GAAApuC,GAAA,MAAAouC,EAAA,GACAyH,GAAA/9H,KAAAsG,IAAAooC,EAAAw5C,GAAA41C,EAAA51C,IACA81C,EAAAh+H,KAAAsG,IAAAooC,EAAAw5C,GAAA01C,EAAA11C,QAGA61C,GAAAvrG,EAAArF,KAAAuhB,EAAAovF,GACAE,EAAAxrG,EAAArF,KAAAuhB,EAAAkvF,EAIAC,GAAAG,KAAAD,GAEAzxG,EAAAs2F,EAAAl0E,EAAAvsB,GAAAsgG,GAAA,EAAAob,IAGAI,EAAAP,IAAAH,GACAW,EAAAR,IAAAJ,GACAW,EAAArb,IAAA2a,GACAW,EAAAtb,IAAA0a,GAEAh1G,EAAAgmE,cACAovC,EAAA,GAAAA,EAAA,GACA9a,EAAA,GAAAA,EAAA,GACAl0E,EAAA,GAAAA,EAAA,IAGApiB,EAAAoxG,EAAAhvF,EAAAvsB,EAAAsgG,EAAAob,OAGAv1G,GAAA4lE,OAAAx/C,EAAA,GAAAA,EAAA,GAIA8uF,GAAA7uH,EACAA,GAAAioD,EAGA,MAAA3mC,GAGA,QAAAkuG,GAAA72H,EAAAq7G,GACA,GAAAyb,IAAAzoH,SACA0oH,IAAA1oH,SACA,IAAAgtG,EACA,OAAApvH,GAAA,EAA2BA,EAAA+T,EAAA7T,OAAmBF,IAAA,CAC9C,GAAAu9H,GAAAxpH,EAAA/T,EACAu9H,GAAA,GAAAsN,EAAA,KAAuCA,EAAA,GAAAtN,EAAA,IACvCA,EAAA,GAAAsN,EAAA,KAAuCA,EAAA,GAAAtN,EAAA,IACvCA,EAAA,GAAAuN,EAAA,KAAuCA,EAAA,GAAAvN,EAAA,IACvCA,EAAA,GAAAuN,EAAA,KAAuCA,EAAA,GAAAvN,EAAA,IAGvC,OACA1wH,IAAAuiH,EAAAyb,EAAAC,EACAn+H,IAAAyiH,EAAA0b,EAAAD,GA7HA,GAAA1+H,GAAA3D,EAAA,IACAy2B,EAAAz2B,EAAA,IAEAkiI,EAAAzrG,EAAApyB,IACA89H,EAAA1rG,EAAAtyB,IAEAosB,EAAAkG,EAAAlG,YACAmxG,EAAAjrG,EAAA9H,KAGAvI,KACAu7G,KACA9a,IAqHA7vH,GAAAC,SAEA6N,SAAAnB,EAAA9K,QAEAiD,KAAA,cAEAoL,OACAqE,UAEAm7G,OAAA,EAEAE,kBAAA,EAEA2T,eAAA,KAEAI,cAAA,GAGAh6H,OACAC,KAAA,KAEAF,OAAA,QAGAqtB,UAAA,SAAAxB,EAAArlB,GACA,GAAAqE,GAAArE,EAAAqE,OAEA/T,EAAA,EACAC,EAAA8T,EAAA7T,OAEAN,EAAAgrI,EAAA72H,EAAArE,EAAA0/G,iBAEA,IAAA1/G,EAAAyzH,aAAA,CAEA,KAA0BljI,EAAA,GAC1B0pI,EAAA51H,EAAA9T,EAAA,IADmCA,KAKnC,KAA0BD,EAAAC,GAC1B0pI,EAAA51H,EAAA/T,IADmCA,MAMnC,KAAAA,EAAAC,GACAD,GAAA4pI,EACA70G,EAAAhhB,EAAA/T,EAAAC,IACA,EAAAL,EAAAiN,IAAAjN,EAAA+M,IAAA+C,EAAAw/G,OACAx/G,EAAAqzH,eAAArzH,EAAAyzH,cACA,KAKA91H,QAAAlB,EAAA9K,QAEAiD,KAAA,aAEAoL,OACAqE,UAGAizH,mBAEA9X,OAAA,EAEA0Y,gBAAA,EAEAxY,kBAAA,EAEA2T,eAAA,KAEAI,cAAA,GAGA5sG,UAAA,SAAAxB,EAAArlB,GACA,GAAAqE,GAAArE,EAAAqE,OACAizH,EAAAt3H,EAAAs3H,gBAEAhnI,EAAA,EACAC,EAAA8T,EAAA7T,OACA6iI,EAAArzH,EAAAqzH,eACA7pC,EAAA0xC,EAAA72H,EAAArE,EAAA0/G,kBACA2b,EAAAH,EAAA5D,EAAAt3H,EAAA0/G,iBAEA,IAAA1/G,EAAAyzH,aAAA,CAEA,KAA0BljI,EAAA,GAC1B0pI,EAAA51H,EAAA9T,EAAA,IADmCA,KAKnC,KAA0BD,EAAAC,GAC1B0pI,EAAA51H,EAAA/T,IADmCA,MAMnC,KAAAA,EAAAC,GAAA,CACA,GAAAy8B,GAAAktG,EACA70G,EAAAhhB,EAAA/T,EAAAC,IACA,EAAAi5F,EAAArsF,IAAAqsF,EAAAvsF,IAAA+C,EAAAw/G,OACA6T,EAAArzH,EAAAyzH,aAEAyG,GACA70G,EAAAiyG,EAAAhnI,EAAA08B,EAAA,EAAAA,EAAAz8B,GACA,EAAA8qI,EAAAl+H,IAAAk+H,EAAAp+H,IAAA+C,EAAAk4H,gBACA7E,EAAArzH,EAAAyzH,cAEAnjI,GAAA08B,EAAA,EAEA3H,EAAA0mE,kB1IsvlCM,SAAUj8F,EAAQC,EAAS+I,GAEjC,Y2Ix+lCAA,GAAA,IAEAA,EAAA,M3Ik/lCM,SAAUhJ,EAAQC,EAAS+I,G4It/lCjC,GAAA2d,GAAA3d,EAAA,GACAg1G,EAAAh1G,EAAA,IACAwiI,EAAAxiI,EAAA,KACAyD,EAAAzD,EAAA,EAEAA,GAAA,KACAA,EAAA,KAKAA,EAAA,KAEA2d,EAAAiB,qBAAA,SAAA3G,GAEA,GAAAA,EAAA,GACAA,EAAAk9F,aAAA,IAAAl9F,EAAAk9F,YAAAz9G,UACAugB,EAAAk9F,eAEA,IAAAstB,GAAAxqH,EAAAk9F,YAAAstB,IAIAA,KAAAh/H,EAAAhL,QAAAgqI,KACAxqH,EAAAk9F,YAAAstB,aAOA9kH,EAAAmB,kBAAAnB,EAAAoD,SAAAC,UAAAE,UAAA,SAAA/X,EAAAmJ,GAGAnJ,EAAAmN,aAAA,eAAAw0E,iBACAkqB,EAAAtoB,QAAAvjF,EAAAmJ,KAIAqL,EAAAyB,gBACAtjB,KAAA,oBACA4V,MAAA,oBACAf,OAAA,sBACK6xH,I5IggmCC,SAAUxrI,EAAQC,EAAS+I,G6I3imCjC,GAAA2d,GAAA3d,EAAA,GAEA0iI,EAAA/kH,EAAAwC,sBAEArkB,KAAA,cAEAgvF,iBAAA,KAEA1yD,eAEAowC,KAAA,OAEAm6D,UAAA,KAEA3sH,OAAA,EACAD,EAAA,GAEAja,KAAA,OAGAiuF,MAAA,EACAN,gBAAA,EAEAjwF,MAAA,KACAkd,OAAA,KAaA+rH,QAIAl0H,UAAA,KACAq0H,wBAAA,IAEA92C,WACA1rF,MAAA,OACA+F,MAAA,EACArK,KAAA,SAGA+mI,aACAziI,MAAA,yBAGAwrF,OACApjB,MAAA,EACA5/C,UAAA,KACAlG,UAAA,OACA2rB,OAAA,EACAhmC,WACAjI,MAAA,QAEA0iI,SAAA,SACA9pH,gBAAA,OACAy8G,YAAA,KACAD,YAAA,EACA3mB,WAAA,EACAC,YAAA,QAOAi0B,QACAv6D,MAAA,EACAw6D,KAAA,2MACA3nC,KAAA,GAEAhtD,OAAA,GAGAjuC,MAAA,OACAyuG,WAAA,EACAC,YAAA,OACAC,cAAA,EACAC,cAAA,EAGA3hG,SAAA,MAMArW,GAAAC,QAAAyrI,G7IqjmCM,SAAU1rI,EAAQC,EAAS+I,G8IppmCjC,GAAA2tG,GAAA3tG,EAAA,IAEAijI,EAAAjjI,EAAA,GAAAogB,qBAEAtkB,KAAA,cAEAmD,OAAA,SAAAmqF,EAAAjgF,EAAAmJ,GACA,GAAA62E,GAAAhgF,EAAAmN,aAAA,WACAqsH,EAAAv5C,EAAAhrF,IAAA,cACA+qF,KAAA/qF,IAAA,+BAIAuvG,GAAAnuF,SACA,cACAlN,EACA,SAAAm7F,EAAAtrG,EAAAiV,GAEA,SAAAurH,IACA,UAAAl1B,GAAAk1B,EAAArpI,QAAAm0G,IAAA,IAEAr2F,GACAtb,KAAA,oBACA2xG,cACAnnG,EAAAnE,KAAAiuC,QACA5pC,EAAArE,KAAAquC,aAUAz8B,OAAA,SAAA5K,EAAAmJ,GACAq7F,EAAAu1B,QAAA5wH,EAAAyF,QAAA,eACAkrH,EAAAjuG,WAAAr5B,KAAAiT,OAAA,SAAArT,YAMAyY,QAAA,SAAA7K,EAAAmJ,GACAq7F,EAAA7sE,WAAA,cAAAxuB,GACA2wH,EAAAjuG,WAAAr5B,KAAAiT,OAAA,UAAArT,e9IiqmCM,SAAUvE,EAAQC,EAAS+I,GAEjC,Y+IhsmCA,SAAAmjI,MA8bA,QAAAz5H,GAAA0pH,EAAAgQ,EAAA5iI,EAAAoC,GAEAygI,EAAAjlI,EAAAoC,GAAA8iI,SAAA1gI,KACAxE,EAAAoC,GAAA8iI,SAAA1gI,EACAwgI,EACA9+H,EAAAoF,YAAAlJ,EAAAoC,EAAAwwH,IACA5yH,EAAA+C,gBAAA/C,EAAAgD,KAAAZ,KAIA,QAAAygI,GAAAE,EAAAC,GACA,GAAA//H,EAAAnL,SAAAirI,IAAA9/H,EAAAnL,SAAAkrI,GAAA,CACA,GAAAC,IAAA,CAIA,OAHAhgI,GAAArJ,KAAAopI,EAAA,SAAApyH,EAAAnZ,GACAwrI,GAAAJ,EAAAE,EAAAtrI,GAAAmZ,OAEAqyH,EAGA,MAAAF,KAAAC,EAIA,QAAAE,GAAAC,EAAAj6C,GACAi6C,EAAAj6C,EAAAtrF,IAAA,+BAGA,QAAAwlI,GAAAC,GACA,OACAh8H,SAAAg8H,EAAAh8H,SAAAzL,QACA0O,SAAA+4H,EAAA/4H,UAAA,GAIA,QAAAg5H,GAAAC,EAAAj2E,GACA,GAAAk2E,GAAAD,EAAA3lI,IAAA,QACAuC,GACA2F,GAAA,EAAAE,GAAA,EAAAL,MAAA,EAAAC,OAAA,GAEA6B,EAAAxE,EAAA5K,QACA8H,OACAmuB,eAAA,GAEA+3E,WAAA,EACAD,OAAA,OACAH,WAAA,GACS34C,EAET,YAAAk2E,EAAA1qI,QAAA,aAEAqH,EAAA0Z,MAAA2pH,EAAA5nI,MAAA,GACA6L,EAAAtH,QACA,GAAA2D,GAAAE,MAAAyD,IAEA3D,EAAAqB,SACAq+H,EAAAlmH,QAAA,cACA7V,EACAtH,EACA,UAIA,QAAAsjI,GAAAr3H,EAAA88E,EAAAt5E,GACA,GAAA2F,GAAA2zE,EAAAtrF,IAAA,KACA4X,EAAA0zE,EAAAtrF,IAAA,SAEAwO,MAAA/K,SAAA,SAAArB,GACA,UAAAA,EAAA1E,OACA,MAAAia,IAAAvV,EAAAuV,KACA,MAAAC,IAAAxV,EAAAwV,UACAxV,EAAA4P,YAnhBA,GAAA3M,GAAAzD,EAAA,GACAoyB,EAAApyB,EAAA,IACAsE,EAAAtE,EAAA,GACA5B,EAAA4B,EAAA,IAAA2qB,aACAqqF,EAAAh1G,EAAA,IACAkkI,EAAAlkI,EAAA,IACAqN,EAAArN,EAAA,IAEA9I,EAAAuM,EAAAvM,MACAiE,EAAAsI,EAAAtI,IASAgoI,GAAArpI,WAKAqqI,OAAA,KAKAC,gBAAA,KAKAC,QAAA,KAKAC,WAAA,EAKAC,WAAA,KAKAC,YAAA,KAKAC,aAAA,KAOAC,mBAAA,GAKAzlI,OAAA,SAAAotF,EAAA3C,EAAAp3E,EAAAq3C,GACA,GAAAnwD,GAAAkwF,EAAAtrF,IAAA,SACAsY,EAAAgzE,EAAAtrF,IAAA,SAWA,IAPAzC,KAAAgpI,WAAAt4C,EACA1wF,KAAAipI,kBAAAl7C,EACA/tF,KAAAmS,KAAAwE,EAKAq3C,GACAhuD,KAAA4oI,aAAA/qI,GACAmC,KAAA6oI,cAAA9tH,EAFA,CAMA/a,KAAA4oI,WAAA/qI,EACAmC,KAAA6oI,YAAA9tH,CAEA,IAAA9J,GAAAjR,KAAAwoI,OACApB,EAAApnI,KAAA0oI,OAEA,KAAA3tH,GAAA,SAAAA,EAIA,MAFA9J,MAAA26F,YACAw7B,KAAAx7B,OAGA36F,MAAA47D,OACAu6D,KAAAv6D,MAGA,IAAA8lC,KACA3yG,MAAAkpI,aAAAv2B,EAAA90G,EAAA6yF,EAAA3C,EAAAp3E,EAGA,IAAAwyH,GAAAx2B,EAAAw2B,UACAA,KAAAnpI,KAAAyoI,iBACAzoI,KAAA4hB,MAAAjL,GAEA3W,KAAAyoI,gBAAAU,CAEA,IAAA1B,GAAAznI,KAAAopI,eACAppI,KAAAqpI,mBAAA34C,EAAA3C,EAEA,IAAA98E,EAMA,CACA,GAAAq4H,GAAAxhI,EAAA/H,MAAAgO,EAAAggF,EAAA05C,EACAznI,MAAAupI,gBAAAt4H,EAAA0hG,EAAA22B,EAAAv7C,GACA/tF,KAAAwpI,cAAAv4H,EAAA0hG,EAAA22B,EAAAv7C,OARA98E,GAAAjR,KAAAwoI,OAAA,GAAA7/H,GAAAC,MACA5I,KAAAypI,gBAAAx4H,EAAA0hG,EAAAjiB,EAAA3C,GACA/tF,KAAA0pI,cAAAz4H,EAAA0hG,EAAAjiB,EAAA3C,GACAp3E,EAAAyF,QAAArY,IAAAkN,EAQAq3H,GAAAr3H,EAAA88E,GAAA,GAEA/tF,KAAA2pI,cAAA9rI,KAMAua,OAAA,SAAAzB,GACA3W,KAAA4hB,MAAAjL,IAMA0B,QAAA,SAAA1B,GACA3W,KAAA4hB,MAAAjL,IAMA0yH,mBAAA,SAAA34C,EAAA3C,GACA,GAAAn7E,GAAAm7E,EAAAtrF,IAAA,aACA8lC,EAAAmoD,EAAAnoD,KACAqhG,EAAA,aAAArhG,EAAApoC,KACA0pI,EAAA97C,EAAAtrF,IAAA,OAGA,KAAAonI,IAAAD,EACA,QAGA,aAAAh3H,GAAA,MAAAA,EAAA,CACA,GAAAm2H,GAAA/oI,KAAA+oI,kBACA,IAAAa,GAAArhG,EAAAmzE,eAAAqtB,EACA,QAMA,IAAAc,EAAA,CACA,GAAAp5C,GAAA4oB,EAAApoB,YAAAP,GAAAD,gBACAkrB,EAAApzE,EAAAf,WAEA,OAAAl/B,MAAAsG,IAAA+sG,EAAA,GAAAA,EAAA,IAAAlrB,EAAAs4C,EAGA,SAGA,WAAAn2H,GAOAs2H,aAAA,SAAAv2B,EAAA90G,EAAA6yF,EAAA3C,EAAAp3E,KAOA8yH,gBAAA,SAAAx4H,EAAA0hG,EAAAjiB,EAAA3C,GACA,GAAA+7C,GAAAn3B,EAAAo3B,OACA,IAAAD,EAAA,CACA,GAAAE,GAAAvnI,EAAAwO,GAAA+4H,UAAA,GAAArhI,GAAAmhI,EAAA3pI,MACA5E,EAAAo3G,EAAAo3B,SAEA94H,GAAAlN,IAAAimI,KAOAN,cAAA,SAAAz4H,EAAA0hG,EAAAjiB,EAAA3C,GACA,GAAA4kB,EAAA1iB,MAAA,CACA,GAAA+3C,GAAAvlI,EAAAwO,GAAA+2H,QAAA,GAAAr/H,GAAAS,KACA7N,EAAAo3G,EAAA1iB,OAGAh/E,GAAAlN,IAAAikI,GACAD,EAAAC,EAAAj6C,KAOAw7C,gBAAA,SAAAt4H,EAAA0hG,EAAA5kG,GACA,GAAAi8H,GAAAvnI,EAAAwO,GAAA+4H,SACAA,KACAA,EAAApkI,SAAA+sG,EAAAo3B,QAAA/kI,OACA+I,EAAAi8H,GAAwCz+H,MAAAonG,EAAAo3B,QAAAx+H,UAOxCi+H,cAAA,SAAAv4H,EAAA0hG,EAAA5kG,EAAAggF,GACA,GAAAi6C,GAAAvlI,EAAAwO,GAAA+2H,OACAA,KACAA,EAAApiI,SAAA+sG,EAAA1iB,MAAAjrF,OACA+I,EAAAi6H,GAGAz8H,MAAAonG,EAAA1iB,MAAA1kF,MACAW,SAAAymG,EAAA1iB,MAAA/jF,WAGA67H,EAAAC,EAAAj6C,KAOA47C,cAAA,SAAA9rI,GACA,IAAAmC,KAAA2oI,WAAA3oI,KAAAiqI,sBAAA,CAIA,GAAAl8C,GAAA/tF,KAAAipI,kBACA93H,EAAAnR,KAAAmS,KAAAiK,QACAgrH,EAAApnI,KAAA0oI,QACAN,EAAAr6C,EAAA/gF,SAAA,UAEA+N,EAAAgzE,EAAAtrF,IAAA,SACA,KAAA2lI,EAAA3lI,IAAA,UAAAsY,GAAA,SAAAA,EAGA,MAFAqsH,IAAAj2H,EAAAiH,OAAAgvH,QACApnI,KAAA0oI,QAAA,KAIA,IAAAlrG,EACAx9B,MAAA0oI,UACAlrG,GAAA,EACA4pG,EAAApnI,KAAA0oI,QAAAP,EAAAC,GACA8B,YAAA,SAAA1jI,GAEA+hI,EAAA3yF,KAAApvC,EAAAuP,QAEAo0H,YAAA3qI,EAAAQ,KAAAoqI,kBAAApqI,KAAA,KACA0tG,MAAAluG,EAAAQ,KAAAoqI,kBAAApqI,MACAqqI,UAAA7qI,EAAAQ,KAAAsqI,iBAAAtqI,QAEAmR,EAAApN,IAAAqjI,IAGAkB,EAAAlB,EAAAr5C,GAAA,EAGA,IAAAw8C,IACA,8CACA,2DAEAnD,GAAAxhI,SAAAwiI,EAAA/4B,aAAA,KAAAk7B,GAGA,IAAAC,GAAApC,EAAA3lI,IAAA,OACAqF,GAAAhL,QAAA0tI,KACAA,SAEApD,EAAAv/H,KAAA,SAAA2iI,EAAA,KAAAA,EAAA,OAEA94H,EAAA0wG,eACApiH,KACA,yBACAooI,EAAA3lI,IAAA,eACA,WAGAzC,KAAAyqI,mBAAA5sI,EAAA2/B,KAMAitG,mBAAA,SAAA5sI,EAAA2/B,GACAzvB,EACA/N,KAAAipI,mBACAzrG,GAAAx9B,KAAAopI,eACAppI,KAAA0oI,QACAT,EAAAjoI,KAAA0qI,mBACA7sI,EAAAmC,KAAAgpI,WAAAhpI,KAAAipI,sBAQAmB,kBAAA,SAAAh3F,EAAAC,GACA,GAAA+zF,GAAApnI,KAAA0oI,OACA,IAAAtB,EAAA,CAIApnI,KAAA2oI,WAAA,CAGA,IAAAT,GAAAloI,KAAAiqI,sBACAhC,EAAAb,IACAh0F,EAAAC,GACArzC,KAAAgpI,WACAhpI,KAAAipI,kBAEAjpI,MAAA8oI,aAAAZ,EAEAd,EAAAx/H,gBACAw/H,EAAAv/H,KAAAogI,EAAAC,IACAzlI,EAAA2kI,GAAAO,SAAA,KAEA3nI,KAAA2qI,2BAOAA,uBAAA,WAEA,GADA3qI,KAAA0oI,QACA,CAIA,GAAAkC,GAAA5qI,KAAA8oI,aACAp4C,EAAA1wF,KAAAgpI,UACAhpI,MAAAmS,KAAAsJ,gBACAtb,KAAA,oBACAwK,EAAAigI,EAAAC,YAAA,GACAhgI,EAAA+/H,EAAAC,YAAA,GACAC,cAAAF,EAAAE,cACAt8C,WACA2rB,QAAAzpB,EAAAnoD,KAAAioD,IACAguB,UAAA9tB,EAAAv4E,qBAQAmyH,iBAAA,SAAA7C,GAGA,GAFAznI,KAAA2oI,WAAA,EACA3oI,KAAA0oI,QACA,CAIA,GAAA7qI,GAAAmC,KAAAipI,kBAAAxmI,IAAA,QAIAzC,MAAAyqI,mBAAA5sI,GAIAmC,KAAAmS,KAAAsJ,gBACAtb,KAAA,cAYAuqI,mBAAA,KAWAT,sBAAA,KAKAroH,MAAA,SAAAjL,GACA3W,KAAA4oI,WAAA,KACA5oI,KAAA6oI,YAAA,IAEA,IAAA13H,GAAAwF,EAAAyF,QACAnL,EAAAjR,KAAAwoI,OACApB,EAAApnI,KAAA0oI,OACAv3H,IAAAF,IACAjR,KAAAyoI,gBAAA,KACAx3H,GAAAE,EAAAiH,OAAAnH,GACAm2H,GAAAj2H,EAAAiH,OAAAgvH,GACApnI,KAAAwoI,OAAA,KACAxoI,KAAA0oI,QAAA,KACA1oI,KAAA8oI,aAAA,OAOAiC,QAAA,aAUAC,WAAA,SAAA12B,EAAAC,EAAAH,GAEA,MADAA,MAAA,GAEAzpG,EAAA2pG,EAAAF,GACAvpG,EAAAypG,EAAA,EAAAF,GACA5pG,MAAA+pG,EAAAH,GACA3pG,OAAA8pG,EAAA,EAAAH,MAKAozB,EAAArpI,UAAAlC,YAAAurI,EA8EA/wG,EAAAU,kBAAAqwG,GAEAnsI,EAAAC,QAAAksI,G/IwtmCM,SAAUnsI,EAAQC,EAAS+I,GAEjC,YgJpqnCA,SAAAq6G,GAAA5E,EAAAvxE,GACA,GAAAj8B,KAEA,OADAA,GAAAi8B,EAAAioD,IAAA,aAAAjoD,EAAAj0B,MACAwlG,EAAA4E,aAAApyG,GAmCA,QAAA2+H,GAAA1iG,GACA,YAAAA,EAAAioD,IAAA,IAvHA,GAAA7nF,GAAAtE,EAAA,GACAmjI,EAAAnjI,EAAA,KACA6mI,EAAA7mI,EAAA,IACA8mI,EAAA9mI,EAAA,IACA60G,EAAA70G,EAAA,IAEA+mI,EAAA5D,EAAAtqI,QAKAgsI,aAAA,SAAAv2B,EAAA90G,EAAA6yF,EAAA3C,EAAAp3E,GACA,GAAA4xB,GAAAmoD,EAAAnoD,KACAuxE,EAAAvxE,EAAAuxE,KACAxH,EAAAvkB,EAAAtrF,IAAA,QACA4oI,EAAA3sB,EAAA5E,EAAAvxE,GAAAi3E,aAAAj3E,GAAAi3F,kBACA8L,EAAA/iG,EAAAwxE,cAAAxxE,EAAAqrE,YAAA/1G,GAAA,GAEA,IAAAy0G,GAAA,SAAAA,EAAA,CACA,GAAAhD,GAAA47B,EAAA74B,aAAAtkB,GACA+7C,EAAAyB,EAAAj5B,GACA/pE,EAAA+iG,EAAAD,EAAA/7B,EAEAw6B,GAAA9kI,MAAAsqG,EACAqD,EAAAw2B,WAAAW,EAAA3pI,KACAwyG,EAAAo3B,QAAAD,EAGA,GAAAn2B,GAAAw3B,EAAAjhI,OAAA4vG,EAAAzlG,MAAAq8E,EACAw6C,GAAAn3B,kCACAl2G,EAAA80G,EAAAgB,EAAAjjB,EAAA3C,EAAAp3E,IAOA+zH,mBAAA,SAAA7sI,EAAA6yF,EAAA3C,GACA,GAAA4lB,GAAAw3B,EAAAjhI,OAAAwmF,EAAAnoD,KAAAuxE,KAAAzlG,MAAAq8E,GACA+pB,aAAA,GAGA,OADA9G,GAAAG,YAAA/lB,EAAAtrF,IAAA,kBAEAyJ,SAAAg/H,EAAAx3B,uBAAAhjB,EAAAnoD,KAAA1qC,EAAA81G,GACAxkG,SAAAwkG,EAAAxkG,UAAAwkG,EAAAE,eAAA,EAAAvrG,KAAA6gB,GAAA,KAOA8gH,sBAAA,SAAA17H,EAAAoqC,EAAA+3C,EAAA3C,GACA,GAAAxlD,GAAAmoD,EAAAnoD,KACAuxE,EAAAvxE,EAAAuxE,KACA6B,EAAApzE,EAAAi3F,iBAAA,GACA6L,EAAA3sB,EAAA5E,EAAAvxE,GAAAi3E,aAAAj3E,GAAAi3F,kBACA3yG,EAAA,MAAA0b,EAAAioD,IAAA,IAEAg7C,EAAAj9H,EAAArC,QACAs/H,GAAA3+G,IAAA8rB,EAAA9rB,GACA2+G,EAAA3+G,GAAAvkB,KAAAI,IAAAizG,EAAA,GAAA6vB,EAAA3+G,IACA2+G,EAAA3+G,GAAAvkB,KAAAE,IAAAmzG,EAAA,GAAA6vB,EAAA3+G,GAEA,IAAA4+G,IAAAJ,EAAA,GAAAA,EAAA,MACAR,GAAAY,IACAZ,GAAAh+G,GAAA2+G,EAAA3+G,EAGA,IAAA6+G,KAAmC14B,cAAA,WAA2BD,MAAA,UAE9D,QACA7mG,SAAAs/H,EACAr8H,SAAAZ,EAAAY,SACA07H,cACAC,cAAAY,EAAA7+G,OAYA0+G,GAEA/qB,KAAA,SAAAj4E,EAAA+iG,EAAAD,EAAA/7B,GACA,GAAAq8B,GAAAT,EAAA/2B,eACAm3B,EAAAD,EAAA,KACAC,EAAAD,EAAA,IACAJ,EAAA1iG,GAMA,OAJA5/B,GAAAyC,sBACAG,MAAAogI,EACA3mI,MAAAsqG,KAGAnvG,KAAA,OACAoL,MAAAogI,IAIAC,OAAA,SAAArjG,EAAA+iG,EAAAD,EAAA/7B,GACA,GAAA2rB,GAAA1yF,EAAAmzE,eACAz0E,EAAAokG,EAAA,GAAAA,EAAA,EACA,QACAlrI,KAAA,OACAoL,MAAA2/H,EAAA72B,eACAi3B,EAAArQ,EAAA,EAAAoQ,EAAA,KACApQ,EAAAh0F,GACAgkG,EAAA1iG,MAUA2wE,GAAAQ,yBAAA,uBAAA0xB,GAEA/vI,EAAAC,QAAA8vI,GhJ6vnCM,SAAU/vI,EAAQC,EAAS+I,GiJt1nCjC,QAAAwiI,GAAAjzH,EAAApG,EAAAmJ,GACA,GAAAm7F,GAAAl+F,EAAAk+F,YACAjiG,GAAA+D,EAAAjJ,EAAAiJ,EAAA/I,GACAmI,EAAAY,EACA6H,EAAA7H,EAAA6H,gBAAA3T,EAAAtI,KAAAmX,EAAA8E,eAAA9E,GACAw4E,EAAA3hF,EAAAmN,aAAA,eAAAw0E,gBAEA08C,GAAAh8H,KAGAA,EAAAi8H,GACAxqH,YAAAtO,EAAAsO,YAGAna,UAAA6L,EAAA7L,WACaqG,GAAAqC,MAEb,IAAAk8H,GAAAF,EAAAh8H,GAMAm8H,EAAAh5H,EAAAw7E,SAEAA,EAAAW,EAAAX,SACAy9C,EAAA,UAAAn6B,GAAA+5B,EAAAh8H,GACAq8H,KAEAC,KACAC,GAA8B9uH,QAAAve,QAC9BstI,GACAC,YAAAvsI,EAAAusI,EAAAH,GACAI,YAAAxsI,EAAAwsI,EAAAH,GAIA3tI,GAAA0wF,EAAAC,YAAA,SAAA97E,EAAA47E,GAEA,GAAAs9C,GAAAT,GAAAz4H,EAAA2L,aAAApP,EAEApR,GAAA0wF,mBAAAD,GAAA,SAAAX,EAAAjyF,GACA,GAAAisC,GAAAgmD,EAAAhmD,KACAkkG,EAAAC,EAAAV,EAAAz9C,EAEA,KAAA09C,GAAAO,KAAAR,GAAAS,GAAA,CACA,GAAAxmH,GAAAwmH,KAAA5uI,KACA,OAAAooB,GAAA8lH,IACA9lH,EAAAsiB,EAAA6yE,YAAAvrG,IAEA,MAAAoW,GAAA0mH,EAAAp+C,EAAAtoE,EAAAomH,GAAA,EAAAH,OAMA,IAAAU,KA2BA,OA1BAnuI,GAAA+vF,EAAA,SAAAq+C,EAAAC,GACA,GAAA/9C,GAAA89C,EAAA99C,SAGAA,KAAAo9C,EAAAW,IACAruI,EAAAswF,EAAAP,SAAA,SAAAu+C,EAAAC,GACA,GAAAC,GAAAd,EAAAa,EAEA,IAAAD,IAAAF,GAAAI,EAAA,CACA,GAAAhnH,GAAAgnH,EAAApvI,KACAkxF,GAAAC,SAAA/oE,EAAA4mH,EAAAtkG,KAAAxW,MAAA/R,MAAA+uE,EAAAC,OACA/oE,EAAAinH,EAAAH,GAAAG,EAAAL,MAEAD,EAAAC,EAAAvwI,KAAA2pB,OAKAxnB,EAAAmuI,EAAA,SAAA3mH,EAAA6mH,GACAH,EAAAn+C,EAAAs+C,GAAA7mH,EAAAomH,GAAA,EAAAH,KAGAiB,EAAAhB,EAAA39C,EAAA09C,GACAkB,EAAAhB,EAAAv8H,EAAA+D,EAAA6H,GACA4xH,EAAA7+C,EAAA/yE,EAAA9E,GAEAu1H,EAGA,QAAAS,GAAAp+C,EAAA++C,EAAAjB,EAAAkB,EAAArB,GACA,GAAA3jG,GAAAgmD,EAAAhmD,IAEA,KAAAA,EAAAxW,MAAAo/D,WAAA5oD,EAAA2yE,YAAAoyB,GAAA,CAIA,IAAA/+C,EAAAD,cAEA,WADA+9C,GAAAC,YAAA/9C,EAAA++C,EAKA,IAAA1C,GAAA4C,EAAAF,EAAA/+C,GACAk/C,EAAA7C,EAAA6C,aACAC,EAAA9C,EAAA8C,WAIAD,GAAA,UAAAvB,EAAA5qH,aACAxZ,EAAA5K,OAAAgvI,EAAAuB,EAAA,KAKAF,GAAAh/C,EAAAH,MACA7lD,EAAA2yE,YAAAwyB,IAAA,MAAAA,IACAJ,EAAAI,GAIArB,EAAAC,YAAA/9C,EAAA++C,EAAAG,EAAAvB,GAGAG,EAAAE,YAAAh+C,EAAAq8C,EAAA8C,IAGA,QAAAF,GAAA3vI,EAAA0wF,GACA,GAAAhmD,GAAAgmD,EAAAhmD,KACAioD,EAAAjoD,EAAAioD,IACAk9C,EAAA7vI,EACA4vI,KACAhtC,EAAA73E,OAAA0vE,UACAoI,GAAA,CAkDA,OAhDAjiG,GAAA8vF,EAAAG,aAAA,SAAA/1E,EAAA1B,GACA,GACA02H,GACAr/G,EAFAkB,EAAA7W,EAAAkX,kBAAA2gE,EAIA,IAAA73E,EAAAk6E,mBAAA,CACA,GAAAp3F,GAAAkd,EAAAk6E,mBAAArjE,EAAA3xB,EAAA0qC,EACAja,GAAA7yB,EAAA6yB,YACAq/G,EAAAlyI,EAAAmyI,iBAEA,CAQA,GAPAt/G,EAAA3V,EAAAE,UAAAynF,iBACA9wE,EAAA,GACA3xB,GAGA,eAAA0qC,EAAApoC,KAAA,UAEAmuB,EAAAvyB,OACA,MAEA4xI,GAAAh1H,EAAAE,UAAApW,IAAA+sB,EAAA,GAAAlB,EAAA,IAGA,SAAAq/G,GAAA5lH,SAAA4lH,GAAA,CAIA,GAAAhtC,GAAA9iG,EAAA8vI,EACAl4G,EAAAntB,KAAAsG,IAAA+xF,EAEAlrE,IAAAgrE,KACAhrE,EAAAgrE,GAAAE,GAAA,GAAAD,EAAA,KACAD,EAAAhrE,EACAirE,EAAAC,EACA+sC,EAAAC,EACAF,EAAA1xI,OAAA,GAEA0C,EAAA6vB,EAAA,SAAAnnB,GACAsmI,EAAAxuI,MACAqiB,YAAA3I,EAAA2I,YACAjC,gBAAAlY,EACAA,UAAAwR,EAAAE,UAAAoT,YAAA9kB,YAOAsmI,eACAC,eAIA,QAAApB,GAAAH,EAAA59C,EAAA1wF,EAAA4vI,GACAtB,EAAA59C,EAAAjyF,MAAsCuB,QAAA4vI,gBAGtC,QAAAlB,GAAAH,EAAA79C,EAAAq8C,EAAA/sI,GACA,GAAA4vI,GAAA7C,EAAA6C,aACAllG,EAAAgmD,EAAAhmD,KACAmoD,EAAAnoD,EAAAl0B,MACA05E,EAAAQ,EAAAR,gBAIA,IAAAQ,EAAAT,gBAAA2/C,EAAA1xI,OAAA,CAIA,GAAAszF,GAAAd,EAAAj7E,SAAAe,MACA66E,EAAA2+C,EAAAx/C,QAAAgB,GACAy+C,EAAA1B,EAAArtI,IAAAmwF,EACA4+C,KACAA,EAAA1B,EAAArtI,IAAAmwF,IACA6+C,WAAA1+C,EAAAr+E,GACAg9H,cAAA3+C,EAAAl3E,eACA81H,aAAA5+C,EAAAlvF,KACA+tI,iBAAA7+C,EAAAx7E,SACAs6H,eAEA/B,EAAA9uH,KAAAre,KAAA6uI,IAGAA,EAAAK,WAAAlvI,MACAk7G,QAAA5xE,EAAAioD,IACAguB,UAAA9tB,EAAAv4E,eACAiwB,SAAAsoD,EAAAvwF,KACAiuI,OAAA19C,EAAA1/E,GACAnT,QAKAwwI,eACAtnH,UAAAgnE,EAAAtrF,IAAA,mBACAwqB,UAAA8gE,EAAAtrF,IAAA,oBAEA6wG,kBAAAm6B,EAAAhtI,WAIA,QAAA0sI,GAAAhB,EAAA39C,EAAA09C,GACA,GAAAoC,GAAApC,EAAA19C,WAEA/vF,GAAA+vF,EAAA,SAAAD,EAAAjyF,GACA,GAAAggB,GAAAiyE,EAAAR,iBAAAzxE,OACAiyH,EAAApC,EAAA7vI,EAEAiyI,KACAhgD,EAAAE,YAAAnyE,EAAAvB,OAAA,QACAuB,EAAAze,MAAA0wI,EAAA1wI,MAEAye,EAAAg3F,mBAAAi7B,EAAAd,kBAAAhtI,UAOA8tF,EAAAE,YAAAnyE,EAAAvB,OAAA,QAIA,SAAAuB,EAAAvB,QAAAuzH,EAAArvI,MACAk7G,QAAA5rB,EAAAhmD,KAAAioD,IACAguB,UAAAjwB,EAAAhmD,KAAAl0B,MAAA8D,eACAta,MAAAye,EAAAze,UAKA,QAAAuvI,GAAAhB,EAAAv8H,EAAA+D,EAAA6H,GAEA,GAAAowH,EAAAh8H,KAAAu8H,EAAA9uH,KAAAvhB,OAEA,WADA0f,IAA4Btb,KAAA,WAQ5B,IAAA65F,KAAAoyC,EAAA9uH,KAAA,GAAA6wH,WAAA,QAAqE76B,uBAAA,MAErE73F,IACAtb,KAAA,UACAwU,eAAA,EACAhK,EAAAkF,EAAA,GACAhF,EAAAgF,EAAA,GACAi7H,cAAAl3H,EAAAk3H,cACA5+H,SAAA0H,EAAA1H,SACAmT,gBAAA26E,EAAA36E,gBACAlY,UAAA6yF,EAAA7yF,UACAma,YAAA04E,EAAA14E,YACA8qH,iBAAA9uH,OAIA,QAAA+vH,GAAA7+C,EAAA/yE,EAAA9E,GAKA,GAAAxF,GAAAwF,EAAAyF,QAEAoyH,EAAA/rI,EAAA0O,GAAA,8BACAs9H,EAAAhsI,EAAA0O,GAAA,4BAIA1S,GAAA+vF,EAAA,SAAAD,EAAAjyF,GACA,GAAAggB,GAAAiyE,EAAAR,iBAAAzxE,MACA,UAAAA,EAAAvB,QAAAtc,EAAA6d,EAAAg3F,kBAAA,SAAAz9F,GACA,GAAAvZ,GAAAuZ,EAAAyL,YAAA,MAAAzL,EAAA1O,SACAsnI,GAAAnyI,GAAAuZ,KAKA,IAAA64H,MACAC,IACA7mI,GAAArJ,KAAA+vI,EAAA,SAAA34H,EAAAvZ,IACAmyI,EAAAnyI,IAAAqyI,EAAA1vI,KAAA4W,KAEA/N,EAAArJ,KAAAgwI,EAAA,SAAA54H,EAAAvZ,IACAkyI,EAAAlyI,IAAAoyI,EAAAzvI,KAAA4W,KAGA84H,EAAA5yI,QAAA4a,EAAA8E,gBACAtb,KAAA,WAAAwU,eAAA,EAAAa,MAAAm5H,IAEAD,EAAA3yI,QAAA4a,EAAA8E,gBACAtb,KAAA,YAAAwU,eAAA,EAAAa,MAAAk5H,IAIA,QAAAhC,GAAAV,EAAAz9C,GACA,OAAA1yF,GAAA,EAAuBA,GAAAmwI,OAAAjwI,OAAkCF,IAAA,CACzD,GAAA4wI,GAAAT,EAAAnwI,EACA,IAAA0yF,EAAAhmD,KAAAioD,MAAAi8C,EAAAtyB,SACA5rB,EAAAhmD,KAAAl0B,MAAA8D,iBAAAs0H,EAAAjuB,UAEA,MAAAiuB,IAKA,QAAAS,GAAA3+C,GACA,GAAAmC,GAAAnC,EAAAhmD,KAAAl0B,MACAoB,KACA+6E,EAAA/6E,EAAA0kG,QAAA5rB,EAAAhmD,KAAAioD,GAIA,OAHA/6E,GAAA+oG,UAAA/oG,EAAA+6E,EAAA,aAAAE,EAAAv4E,eACA1C,EAAAyiG,SAAAziG,EAAA+6E,EAAA,YAAAE,EAAArrF,KACAoQ,EAAA24H,OAAA34H,EAAA+6E,EAAA,UAAAE,EAAA1/E,GACAyE,EAGA,QAAAo2H,GAAAh8H,GACA,OAAAA,GAAA,MAAAA,EAAA,IAAAyT,MAAAzT,EAAA,WAAAA,EAAA,IAAAyT,MAAAzT,EAAA,IAlYA,GAAA/H,GAAAzD,EAAA,GACA+O,EAAA/O,EAAA,IACAwpI,EAAAxpI,EAAA,IACAynI,EAAAznI,EAAA,IAEA5F,EAAAqJ,EAAArJ,KACAsB,EAAA+H,EAAA/H,MACA0C,EAAA2Q,EAAA4b,YA8XA3zB,GAAAC,QAAAurI,GjJm4nCM,SAAUxrI,EAAQC,EAAS+I,GkJxwoCjC,GAAAyD,GAAAzD,EAAA,GACAsE,EAAAtE,EAAA,GACA+tG,EAAA/tG,EAAA,IACA60G,EAAA70G,EAAA,IACA8mI,EAAA9mI,EAAA,IACA+yG,EAAAhF,EAAAgF,eACAtS,EAAAsN,EAAAtN,YAEA8pC,GACA,8CAEAC,GACA,yBAWAC,EAAA51B,EAAAh8G,QAEAiD,KAAA,gBAEAi5G,iBAAA,uBAKA91G,OAAA,SAAAotF,EAAAljF,EAAAmJ,EAAA/C,GAEA5T,KAAAiR,MAAAujF,WAEA,IAAAu6C,GAAA/uI,KAAAgvI,UAKA,IAJAhvI,KAAAgvI,WAAA,GAAArmI,GAAAC,MAEA5I,KAAAiR,MAAAlN,IAAA/D,KAAAgvI,YAEAt+C,EAAAjuF,IAAA,SAIA,GAAAk3G,GAAAjpB,EAAAsrB,mBAEA9xG,EAAAihI,EAAAjhI,OAAAyvG,EAAAjpB,GAEAu+C,EAAA,GAAA78B,GAAA1hB,EAAAxmF,EAEApC,GAAArJ,KAAAmwI,EAAAK,EAAAlrI,IAAAkrI,GAEAjvI,KAAAgvI,WAAAjrI,IAAAkrI,EAAA14B,YAEAzuG,EAAArJ,KAAAowI,EAAA,SAAAxpI,GACAqrF,EAAAjuF,IAAA4C,EAAA,UACArF,KAAA,IAAAqF,GAAAqrF,EAAAipB,EAAAzvG,EAAA+sG,gBAEaj3G,MAEb2I,EAAAoG,gBAAAggI,EAAA/uI,KAAAgvI,WAAAt+C,GAEAo+C,EAAA11G,UAAAp5B,KAAA,SAAA0wF,EAAAljF,EAAAmJ,EAAA/C,KASAs7H,WAAA,SAAAx+C,EAAAipB,EAAA1C,GACA,GAAA1uE,GAAAmoD,EAAAnoD,IAEA,KAAAA,EAAAxW,MAAAo/D,UAAA,CAIA,GAAAg+C,GAAAz+C,EAAA1jF,SAAA,aACA8pG,EAAAq4B,EAAAniI,SAAA,aACAoiI,EAAAt4B,EAAAr0G,IAAA,SAEA4sI,EAAAvqC,EAAAqqC,EAAAl4B,EAEAm4B,GAAAtnI,EAAAhL,QAAAsyI,QAiBA,QAfA/wB,GAAA1E,EAAA36F,iBAAAo7F,UACAwB,EAAArzE,EAAAqzE,eAEA0zB,EAAA,EAEAp4B,EAAA3uE,EAAA4uE,iBAGA9tE,EAAAd,EAAAxW,MAAAuX,WAEAuC,KACAC,KAGAqkD,EAAA2mB,EAAAtE,eACA32G,EAAA,EAA2BA,EAAAq7G,EAAAn7G,OAAwBF,IACnD,IAAAu7G,EAAA7uE,EAAA1sC,EAAAwzI,GAAA,CAIA,GAAApmG,GAAAV,EAAAwxE,cAAA7C,EAAAr7G,GAEA+/G,IACA/vE,EAAA,GAAA5C,EACA4C,EAAA,GAAAwyE,EAAAxzG,EACAihC,EAAA,GAAA7C,EACA6C,EAAA,GAAAuyE,EAAAxzG,EAAAwzG,EAAA5zG,SAGAohC,EAAA,GAAAwyE,EAAA1zG,EACAkhC,EAAA,GAAA5C,EACA6C,EAAA,GAAAuyE,EAAA1zG,EAAA0zG,EAAA7zG,MACAshC,EAAA,GAAA7C,EAGA,IAAAsmG,GAAAD,IAAAF,EAAArzI,MACAiE,MAAAgvI,WAAAjrI,IAAA,GAAA4E,GAAAU,KAAAV,EAAAyC,sBACAoE,KAAA,QAAA65B,EAAAxtC,GAEA0P,OACAE,GAAAogC,EAAA,GACAlgC,GAAAkgC,EAAA,GACAngC,GAAAogC,EAAA,GACAlgC,GAAAkgC,EAAA,IAEA9mC,MAAA8C,EAAA3K,UACA4H,OAAAqqI,EAAAG,IACqBp/C,GACrB17E,QAAA,SAWA+6H,WAAA,SAAA9+C,EAAAipB,EAAA1C,GACA,GAAA1uE,GAAAmoD,EAAAnoD,IAEA,KAAAA,EAAAxW,MAAAo/D,UAAA,CAIA,GAAAs+C,GAAA/+C,EAAA1jF,SAAA,aACAo1H,EAAAqN,EAAAziI,SAAA,aACA0iI,EAAAtN,EAAA3/H,IAAA,SAEA47G,EAAA1E,EAAA36F,iBAAAo7F,UAEAlD,EAAA3uE,EAAA4uE,iBAGA9tE,EAAAd,EAAAxW,MAAAuX,WAEAqmG,EAAApnG,EAAAwxE,cAAA7C,EAAA,IACA04B,EAAArnG,EAAAwxE,cAAA7C,EAAA,IAEA5vF,EAAA,EAEAuoH,EAAA/qC,EAAA2qC,EAAAx4B,GAEA64B,EAAA1N,EAAA3vB,cACAi9B,GAAA5nI,EAAAhL,QAAA4yI,QAEA,QAAA7zI,GAAA,EAA2BA,EAAAq7G,EAAAn7G,OAAwBF,IACnD,IAAAu7G,EAAA7uE,EAAA1sC,EAAAg0I,GAAA,CAIA,GAEAllI,GACAE,EACAL,EACAC,EALAw+B,EAAAV,EAAAwxE,cAAA7C,EAAAr7G,GAMA0sC,GAAAqzE,gBACAjxG,EAAAglI,EACA9kI,EAAAwzG,EAAAxzG,EACAL,EAAAy+B,EAAAt+B,EACAF,EAAA4zG,EAAA5zG,SAGAE,EAAA0zG,EAAA1zG,EACAE,EAAA+kI,EACAplI,EAAA6zG,EAAA7zG,MACAC,EAAAw+B,EAAAp+B,EAGA,IAAA0kI,GAAAjoH,IAAAooH,EAAA3zI,MACAiE,MAAAgvI,WAAAjrI,IAAA,GAAA4E,GAAAS,MACAoG,KAAA,QAAA65B,EAAAxtC,GAEA0P,OACAZ,IACAE,IACAL,QACAC,UAEAzF,MAAA8C,EAAA3K,UACA8H,KAAAyqI,EAAAH,IACqBO,GACrBr7H,QAAA,KAGAk7H,EAAAhlI,EAAAH,EACAolI,EAAA/kI,EAAAJ,MAKAqkI,GAAA5xI,QACAiD,KAAA,UAEA2uI,EAAA5xI,QACAiD,KAAA,WlJmxoCM,SAAU9E,EAAQC,EAAS+I,GmJ/9oCjC,QAAA0rI,GAAAzoI,GACA,GACA0oI,GAAA,QAAA1oI,EAAA,wCACAA,EAAA,kCACA,OAAAQ,GAAA/I,IAAAkxI,EAAA,SAAAC,GACA,MAAAA,GAAA,cAAAF,IACSliI,KAAA,KAQT,QAAAqiI,GAAApjI,GACA,GAAA82E,MAEAj2E,EAAAb,EAAAtK,IAAA,YACAgC,EAAAsI,EAAAQ,cAcA,OAZA9I,IAAAo/E,EAAA5kF,KAAA,SAAAwF,GAEAo/E,EAAA5kF,KAAA,QAAA8N,EAAAI,WAEAS,GACAi2E,EAAA5kF,KAAA,eAAAqJ,KAAAD,MAAA,EAAAuF,EAAA,SAEAnP,GAAA,+BAAA4G,GACA,GAAA4gB,GAAAlZ,EAAAtK,IAAA4C,EACA4gB,IAAA49D,EAAA5kF,KAAA,QAAAoG,EAAA,IAAA4gB,KAGA49D,EAAA/1E,KAAA,KAQA,QAAAsiI,GAAAC,GAEA,GAAAxsD,MAEAlU,EAAA0gE,EAAA5tI,IAAA,sBACA4a,EAAAgzH,EAAA5tI,IAAA,mBACAsK,EAAAsjI,EAAArjI,SAAA,aACAm6H,EAAAkJ,EAAA5tI,IAAA,UAoCA,OAjCAktE,IACAkU,EAAA5kF,KAAA8wI,EAAApgE,IAEAtyD,IACA1D,EAAAQ,gBACA0pE,EAAA5kF,KAAA,oBAAAoe,IAIAwmE,EAAA5kF,KACA,qBAAAqxI,EAAAr3F,MAAA57B,IAEAwmE,EAAA5kF,KAAA,8BAKAR,GAAA,mCAAA4G,GACA,GAAAkrI,GAAA,UAAAlrI,EACAmrI,EAAAj5G,EAAAg5G,GACAtqH,EAAAoqH,EAAA5tI,IAAA+tI,EACA,OAAAvqH,GACA49D,EAAA5kF,KAAAsxI,EAAA,IAAAtqH,GAAA,UAAA5gB,EAAA,YAIAw+E,EAAA5kF,KAAAkxI,EAAApjI,IAGA,MAAAo6H,GACAtjD,EAAA5kF,KAAA,WAAA0rB,EAAAgN,kBAAAwvG,GAAAr5H,KAAA,aAGA+1E,EAAA/1E,KAAA,KAA8B,IAO9B,QAAA2iI,GAAAv2G,EAAAvjB,GACA,GAAA9R,GAAAvH,SAAAC,cAAA,OACA4T,EAAAnR,KAAAoR,IAAAuF,EAAAyF,OAEApc,MAAA6E,KAEA7E,KAAA0wI,GAAA/5H,EAAAmG,WAAA,EACA9c,KAAA2wI,GAAAh6H,EAAAoG,YAAA,EAEAmd,EAAA+jC,YAAAp5D,GAEA7E,KAAA4wI,WAAA12G,EAEAl6B,KAAA6wI,OAAA,EAKA7wI,KAAA8wI,YAEA,IAAAnzH,GAAA3d,IACA6E,GAAAksI,aAAA,WAEApzH,EAAAqzH,aACA9uB,aAAAvkG,EAAAmzH,cACAnzH,EAAAkzH,OAAA,GAEAlzH,EAAAszH,YAAA,GAEApsI,EAAAqlI,YAAA,SAAA1jI,GAEA,GADAA,KAAAkV,OAAA3F,OACA4H,EAAAqzH,WAAA,CAGA,GAAA5gI,GAAAe,EAAAf,OACA8gI,GAAAl8F,eAAA9a,EAAA1zB,GAAA,GACA4J,EAAA2xB,SAAA,YAAAv7B,KAGA3B,EAAAssI,aAAA,WACAxzH,EAAAqzH,YACArzH,EAAAkzH,OACAlzH,EAAAyzH,UAAAzzH,EAAA0zH,YAGA1zH,EAAAszH,YAAA,GAxJA,GAAAnpI,GAAAzD,EAAA,GACAisI,EAAAjsI,EAAA,IACA6sI,EAAA7sI,EAAA,IACAsmB,EAAAtmB,EAAA,IACA5F,EAAAqJ,EAAArJ,KACA84B,EAAA5M,EAAA4M,YACA5d,EAAAtV,EAAA,IAEA4rI,GAAA,4BAoJAQ,GAAAtyI,WAEAlC,YAAAw0I,EAMAO,YAAA,EAKAh8H,OAAA,WAGA,GAAAklB,GAAAl6B,KAAA4wI,WACAU,EAAAp3G,EAAAq3G,cACAj0I,SAAAk0I,YAAA7nE,iBAAAzvC,GACAu3G,EAAAv3G,EAAAl1B,KACA,cAAAysI,EAAAvlI,UAAA,aAAAolI,EAAAplI,WACAulI,EAAAvlI,SAAA,aAOA2gE,KAAA,SAAAwjE,GACAnuB,aAAAliH,KAAA8wI,aACA,IAAAjsI,GAAA7E,KAAA6E,EAEAA,GAAAG,MAAA6+E,QAlLA,yFAkLAusD,EAAAC,GAEA,SAAoBrwI,KAAA0wI,GAAA,UAAuB1wI,KAAA2wI,GAAA,OAC3CN,EAAA5tI,IAAA,qBAEAoC,EAAAG,MAAA2jF,QAAA9jF,EAAAq4E,UAAA,eAEAl9E,KAAA6wI,OAAA,GAGAa,WAAA,SAAArnD,GACArqF,KAAA6E,GAAAq4E,UAAA,MAAAmN,EAAA,GAAAA,GAGAsnD,aAAA,SAAAC,GACA5xI,KAAAgxI,WAAAY,GAGAC,QAAA,WACA,GAAAhtI,GAAA7E,KAAA6E,EACA,QAAAA,EAAA2d,YAAA3d,EAAA4d,eAGA6zE,OAAA,SAAA3rF,EAAAE,GAIA,GACAinI,GADA3gI,EAAAnR,KAAAoR,GAEAD,MAAA8L,UAAA60H,EAAA3gI,EAAA8L,QAAA80H,qBACApnI,GAAAmnI,EAAAE,YAAA,EACAnnI,GAAAinI,EAAAG,WAAA,EAGA,IAAAjtI,GAAAhF,KAAA6E,GAAAG,KACAA,GAAAgZ,KAAArT,EAAA,KACA3F,EAAAkZ,IAAArT,EAAA,KAEA7K,KAAA0wI,GAAA/lI,EACA3K,KAAA2wI,GAAA9lI,GAGA+gG,KAAA,WACA5rG,KAAA6E,GAAAG,MAAA2jF,QAAA,OACA3oF,KAAA6wI,OAAA,GAGAO,UAAA,SAAAjzC,IACAn+F,KAAA6wI,OAAA7wI,KAAAixI,YAAAjxI,KAAAgxI,aACA7yC,GACAn+F,KAAAqxI,WAAAlzC,EAEAn+F,KAAA6wI,OAAA,EACA7wI,KAAA8wI,aAAAziF,WAAAvmD,EAAAtI,KAAAQ,KAAA4rG,KAAA5rG,MAAAm+F,IAGAn+F,KAAA4rG,SAKAsmC,OAAA,WACA,MAAAlyI,MAAA6wI,QAIAx1I,EAAAC,QAAAm1I,GnJ4/oCM,SAAUp1I,EAAQC,EAAS+I,GoJ7vpCjCA,EAAA,GAAAmgB,sBAEArkB,KAAA,UAEA+hB,cAAA,eAEAua,eACApiB,OAAA,EAEAD,EAAA,EAEAyyD,MAAA,EAGAslE,aAAA,EAIA97H,QAAA,OAGA2wH,UAAA,kBAEAoL,mBAAA,EAEAC,YAAA,SASAC,SAAA,EAKAC,UAAA,EAGAC,UAAA,IAGA7iE,mBAAA,GAEAiiE,WAAA,EAGAv0H,gBAAA,qBAGAy8G,YAAA,OAGA2Y,aAAA,EAGA5Y,YAAA,EAIAsN,QAAA,EAGA1uG,aAAA,GAGA+gF,aAGAr5G,KAAA,OAMAooC,KAAA,OAEA31B,UAAA,OACAq0H,wBAAA,IACAyL,sBAAA,iBAEAxiD,YACAzrF,MAAA,OACA+F,MAAA,EACArK,KAAA,SAGAuM,eAMAA,WACAjI,MAAA,OACAmJ,SAAA,QpJywpCM,SAAUvS,EAAQC,EAAS+I,GqJ3soCjC,QAAAsuI,GAAAC,GAEA,IADA,GAAAC,GAAAD,EAAAz9H,MACAy9H,EAAA72I,QAAA,CACA,GAAAk5G,GAAA29B,EAAAz9H,KACA8/F,KACAA,YAAAlwF,KACAkwF,IAAAxyG,IAAA,eAOA,gBAAAwyG,KACAA,GAAkChoF,UAAAgoF,IAElC49B,EAAA,GAAA9tH,GAAAkwF,EAAA49B,IAAArlI,UAGA,MAAAqlI,GAGA,QAAA5hC,GAAAr9F,EAAA+C,GACA,MAAA/C,GAAA6H,gBAAA3T,EAAAtI,KAAAmX,EAAA8E,eAAA9E,GAGA,QAAAm8H,GAAAnoI,EAAAE,EAAAhG,EAAAqtG,EAAAC,EAAA4gC,EAAAC,GACA,GAAAxoI,GAAA3F,EAAA2d,YACA/X,EAAA5F,EAAA4d,YAkBA,OAhBA,OAAAswH,IACApoI,EAAAH,EAAAuoI,EAAA7gC,EACAvnG,GAAAH,EAAAuoI,EAGApoI,GAAAooI,GAGA,MAAAC,IACAnoI,EAAAJ,EAAAuoI,EAAA7gC,EACAtnG,GAAAJ,EAAAuoI,EAGAnoI,GAAAmoI,IAGAroI,EAAAE,GAGA,QAAAooI,GAAAtoI,EAAAE,EAAAhG,EAAAqtG,EAAAC,GACA,GAAA3nG,GAAA3F,EAAA2d,YACA/X,EAAA5F,EAAA4d,YAOA,OALA9X,GAAArC,KAAAI,IAAAiC,EAAAH,EAAA0nG,GAAA1nG,EACAK,EAAAvC,KAAAI,IAAAmC,EAAAJ,EAAA0nG,GAAA1nG,EACAE,EAAArC,KAAAE,IAAAmC,EAAA,GACAE,EAAAvC,KAAAE,IAAAqC,EAAA,IAEAF,EAAAE,GAGA,QAAAqoI,GAAAhnI,EAAAjC,EAAAkpI,GACA,GAAAC,GAAAD,EAAA,GACAE,EAAAF,EAAA,GAEAxoI,EAAA,EACAE,EAAA,EACAyoI,EAAArpI,EAAAO,MACA+oI,EAAAtpI,EAAAQ,MACA,QAAAyB,GACA,aACAvB,EAAAV,EAAAU,EAAA2oI,EAAA,EAAAF,EAAA,EACAvoI,EAAAZ,EAAAY,EAAA0oI,EAAA,EAAAF,EAAA,CACA,MACA,WACA1oI,EAAAV,EAAAU,EAAA2oI,EAAA,EAAAF,EAAA,EACAvoI,EAAAZ,EAAAY,EAAAwoI,EAZA,CAaA,MACA,cACA1oI,EAAAV,EAAAU,EAAA2oI,EAAA,EAAAF,EAAA,EACAvoI,EAAAZ,EAAAY,EAAA0oI,EAhBA,CAiBA,MACA,YACA5oI,EAAAV,EAAAU,EAAAyoI,EAnBA,EAoBAvoI,EAAAZ,EAAAY,EAAA0oI,EAAA,EAAAF,EAAA,CACA,MACA,aACA1oI,EAAAV,EAAAU,EAAA2oI,EAvBA,EAwBAzoI,EAAAZ,EAAAY,EAAA0oI,EAAA,EAAAF,EAAA,EAEA,OAAA1oI,EAAAE,GAGA,QAAA2oI,GAAAzgC,GACA,iBAAAA,GAAA,WAAAA,EA9vBA,GAAA09B,GAAApsI,EAAA,KACAyD,EAAAzD,EAAA,GACAsmB,EAAAtmB,EAAA,IACA+yB,EAAA/yB,EAAA,GACAsE,EAAAtE,EAAA,GACAynI,EAAAznI,EAAA,IACAovI,EAAApvI,EAAA,IACAsV,EAAAtV,EAAA,IACA0gB,EAAA1gB,EAAA,IACA2tG,EAAA3tG,EAAA,IACAwiC,EAAAxiC,EAAA,IACAqvI,EAAArvI,EAAA,IAEA7E,EAAAsI,EAAAtI,KACAf,EAAAqJ,EAAArJ,KACAgoB,EAAA2Q,EAAA3Q,aAGAktH,EAAA,GAAAhrI,GAAAS,MACAmC,OAAgBZ,GAAA,EAAAE,GAAA,EAAAL,MAAA,EAAAC,OAAA,IAGhBpG,GAAA,GAAAogB,qBAEAtkB,KAAA,UAEAmR,KAAA,SAAA9D,EAAAmJ,GACA,IAAAgD,EAAAC,KAAA,CAGA,GAAAg6H,GAAA,GAAAnD,GAAA95H,EAAAwF,SAAAxF,EACA3W,MAAA6zI,gBAAAD,IAGAtwI,OAAA,SAAA+sI,EAAA7iI,EAAAmJ,GACA,IAAAgD,EAAAC,KAAA,CAKA5Z,KAAAiR,MAAAujF,YAMAx0F,KAAA8zI,cAAAzD,EAMArwI,KAAA+zI,SAAAvmI,EAMAxN,KAAAmS,KAAAwE,EAOA3W,KAAAg0I,oBAAA,KAMAh0I,KAAAi0I,mBAAA5D,EAAA5tI,IAAA,oBAEA,IAAAmxI,GAAA5zI,KAAA6zI,eACAD,GAAA5+H,SACA4+H,EAAAjC,aAAAtB,EAAA5tI,IAAA,cAEAzC,KAAAk0I,sBAEAl0I,KAAAm0I,cAGAD,oBAAA,WACA,GAAA7D,GAAArwI,KAAA8zI,cACA9M,EAAAqJ,EAAA5tI,IAAA,YAEAuvG,GAAAnuF,SACA,cACA7jB,KAAAmS,KACA3S,EAAA,SAAAsyG,EAAAtrG,EAAAiV,GAEA,SAAAurH,IACAA,EAAArpI,QAAAm0G,IAAA,EACA9xG,KAAAo0I,SAAA5tI,EAAAiV,GAEA,UAAAq2F,GACA9xG,KAAAq0I,MAAA54H,KAGiBzb,QAIjBm0I,UAAA,WACA,GAAA9D,GAAArwI,KAAA8zI,cACAtmI,EAAAxN,KAAA+zI,SACAp9H,EAAA3W,KAAAmS,IAGA,UAAAnS,KAAAs0I,QACA,MAAAt0I,KAAAu0I,QAIA,SAAAlE,EAAA5tI,IAAA,aACA,CACA,GAAAkb,GAAA3d,IACAkiH,cAAAliH,KAAAw0I,uBACAx0I,KAAAw0I,sBAAAnmF,WAAA,WAIA1wC,EAAA82H,gBAAApE,EAAA7iI,EAAAmJ,GACAhM,EAAAgT,EAAA22H,OACAzpI,EAAA8S,EAAA42H,aAsBAE,gBAAA,SAAApE,EAAA7iI,EAAAmJ,EAAA/C,GACA,GAAAA,EAAA1X,OAAA8D,KAAA28B,MAAAhjB,EAAAC,KAAA,CAIA,GAAA6B,GAAAw1F,EAAAr9F,EAAA+C,EAGA3W,MAAA00I,QAAA,EAGA,IAAAtI,GAAAx4H,EAAAw4H,cAEA,IAAAx4H,EAAAy+E,SAAA,MAAAz+E,EAAAjJ,GAAA,MAAAiJ,EAAA/I,EAAA,CACA,GAAAhG,GAAA8uI,CACA9uI,GAAAqH,UAAA0H,EAAAjJ,EAAAiJ,EAAA/I,GACAhG,EAAAmQ,SACAnQ,EAAAwtF,QAAAz+E,EAAAy+E,QAEAryF,KAAAo0I,UACA3/F,QAAA7gC,EAAAjJ,EACAkqC,QAAAjhC,EAAA/I,EACApO,OAAAoI,GACiB4W,OAEjB,IAAA2wH,EACApsI,KAAAo0I,UACA3/F,QAAA7gC,EAAAjJ,EACAkqC,QAAAjhC,EAAA/I,EACAqB,SAAA0H,EAAA1H,SACA6J,SACAq2H,eAAAx4H,EAAAw4H,eACAtB,cAAAl3H,EAAAk3H,eACiBrvH,OAEjB,UAAA7H,EAAA0N,YAAA,CAEA,GAAAthB,KAAA20I,qBAAAtE,EAAA7iI,EAAAmJ,EAAA/C,GACA,MAGA,IAAAghI,GAAA9I,EAAAl4H,EAAApG,GACA9C,EAAAkqI,EAAA/kI,MAAA,GACAjF,EAAAgqI,EAAA/kI,MAAA,EACA,OAAAnF,GAAA,MAAAE,GACA5K,KAAAo0I,UACA3/F,QAAA/pC,EACAmqC,QAAAjqC,EACAsB,SAAA0H,EAAA1H,SACAzP,OAAAm4I,EAAA/vI,GACAkR,UACqB0F,OAGrB,OAAA7H,EAAAjJ,GAAA,MAAAiJ,EAAA/I,IAGA8L,EAAA8E,gBACAtb,KAAA,oBACAwK,EAAAiJ,EAAAjJ,EACAE,EAAA+I,EAAA/I,IAGA7K,KAAAo0I,UACA3/F,QAAA7gC,EAAAjJ,EACAkqC,QAAAjhC,EAAA/I,EACAqB,SAAA0H,EAAA1H,SACAzP,OAAAka,EAAAyF,QAAAy4H,UAAAjhI,EAAAjJ,EAAAiJ,EAAA/I,GAAApO,OACAsZ,UACiB0F,MAIjBq5H,gBAAA,SAAAzE,EAAA7iI,EAAAmJ,EAAA/C,GACA,GAAAggI,GAAA5zI,KAAA6zI,eAEA7zI,MAAAi0I,oBACAL,EAAAxC,UAAApxI,KAAA8zI,cAAArxI,IAAA,cAGAzC,KAAAs0I,OAAAt0I,KAAAu0I,OAAA,KAEA3gI,EAAA1X,OAAA8D,KAAA28B,KACA38B,KAAAq0I,MAAApjC,EAAAr9F,EAAA+C,KAOAg+H,qBAAA,SAAAtE,EAAA7iI,EAAAmJ,EAAA/C,GACA,GAAA0N,GAAA1N,EAAA0N,YACAna,EAAAyM,EAAAzM,UACAgoF,EAAA3hF,EAAAmN,aAAA,eAAAw0E,gBAEA,UAAA7tE,GAAA,MAAAna,GAAA,MAAAgoF,EAAA,CAIA,GAAAn4E,GAAAxJ,EAAA6T,iBAAAC,EACA,IAAAtK,EAAA,CAIA,GAAAxY,GAAAwY,EAAA6B,UACAw3H,EAAAsC,GACAn0I,EAAAwuB,aAAA7lB,GACA6P,GACAA,EAAAgI,sBAAmD3K,MACnDg8H,GAGA,aAAAA,EAAA5tI,IAAA,WAWA,MAPAkU,GAAA8E,gBACAtb,KAAA,oBACAmhB,cACAna,YACA+E,SAAA0H,EAAA1H,YAGA,KAGAkoI,SAAA,SAAA5tI,EAAAiV,GACA,GAAA5W,GAAA2B,EAAA/J,MAGA,IAFAuD,KAAA8zI,cAEA,CAKA9zI,KAAAs0I,OAAA9tI,EAAAiuC,QACAz0C,KAAAu0I,OAAA/tI,EAAAquC,OAEA,IAAAu3F,GAAA5lI,EAAA4lI,cACAA,MAAArwI,OACAiE,KAAA+0I,iBAAA3I,EAAA5lI,GAGA3B,GAAA,MAAAA,EAAAsC,WACAnH,KAAAg0I,oBAAA,KACAh0I,KAAAg1I,uBAAAxuI,EAAA3B,EAAA4W,IAGA5W,KAAAwtF,SACAryF,KAAAg0I,oBAAA,KACAh0I,KAAAi1I,0BAAAzuI,EAAA3B,EAAA4W,KAGAzb,KAAAg0I,oBAAA,KACAh0I,KAAAq0I,MAAA54H,MAIAy5H,YAAA,SAAA7E,EAAA1xI,GAKA,GAAAyvD,GAAAiiF,EAAA5tI,IAAA,YACA9D,GAAAmJ,EAAAtI,KAAAb,EAAAqB,MACAkiH,aAAAliH,KAAAm1I,aACA/mF,EAAA,EACApuD,KAAAm1I,YAAA9mF,WAAA1vD,EAAAyvD,GACAzvD,KAGAo2I,iBAAA,SAAA3I,EAAA5lI,GACA,GAAAgH,GAAAxN,KAAA+zI,SACAvmD,EAAAxtF,KAAA8zI,cACAjkI,GAAArJ,EAAAiuC,QAAAjuC,EAAAquC,SACAugG,KACAC,KACAC,EAAA3C,GACAnsI,EAAAskI,cACAt9C,GAGA/uF,GAAA2tI,EAAA,SAAAmJ,GAYA92I,EAAA82I,EAAApH,WAAA,SAAA14H,GACA,GAAAi7E,GAAAljF,EAAAmN,aAAAlF,EAAA0kG,QAAA,OAAA1kG,EAAA+oG,WACAg3B,EAAA//H,EAAA5X,MACA43I,IAEA,IAAA/kD,GAAA,MAAA8kD,EAAA,CAIA,GAAAE,GAAAhC,EAAA7gC,cACA2iC,EAAA9kD,EAAAnoD,KAAA/6B,EACAiI,EAAA69F,kBACA79F,EAAA44H,cAGAvmI,GAAArJ,KAAAgX,EAAA69F,kBAAA,SAAAE,GACA,GAAA76F,GAAAnL,EAAA6T,iBAAAmyF,EAAAlyF,aACAna,EAAAqsG,EAAAn0F,gBACAo0F,EAAA96F,KAAA4I,cAAApa,EACAssG,GAAA0G,QAAA1kG,EAAA0kG,QACA1G,EAAA+K,UAAA/oG,EAAA+oG,UACA/K,EAAArrE,SAAA3yB,EAAA2yB,SACAqrE,EAAA26B,OAAA34H,EAAA24H,OACA36B,EAAA+hC,UAAA3uG,EAAA2C,gBAAAknD,EAAAnoD,KAAAitG,GACA/hC,EAAAkiC,eAAAD,EAEAjiC,IACA4hC,EAAAp2I,KAAAw0G,GACAgiC,EAAAx2I,KAAA0Z,EAAAwU,cAAAhmB,GAAA,MAQA,IAAAyuI,GAAAF,CACAN,GAAAn2I,MACA22I,EAAAjrH,EAAAiN,WAAAg+G,GAAA,aACAH,EAAA3nI,KAAA,eAGa9N,MAGbo1I,EAAAlkD,UACAkkD,IAAAtnI,KAAA,eAEA,IAAA+nI,GAAArvI,EAAA0F,QACAlM,MAAAk1I,YAAAI,EAAA,WACAt1I,KAAA81I,+BAAA1J,GACApsI,KAAA+1I,gBACAT,EACAO,EACAhmI,EAAA,GAAAA,EAAA,GACA7P,KAAA6zI,gBACAwB,GAIAr1I,KAAAg2I,oBACAV,EAAAF,EAAAC,EAAA/sI,KAAAi9F,SACA11F,EAAA,GAAAA,EAAA,GAAAgmI,MASAb,uBAAA,SAAAxuI,EAAA3B,EAAA4W,GACA,GAAAjO,GAAAxN,KAAA+zI,SAIAzyH,EAAAzc,EAAAyc,YACAtK,EAAAxJ,EAAA6T,iBAAAC,GAGAF,EAAAvc,EAAAuc,WAAApK,EACA7P,EAAAtC,EAAAsC,UACAqa,EAAA3c,EAAA2c,SACAhjB,EAAA4iB,EAAAvI,UAEAw3H,EAAAsC,GACAn0I,EAAAwuB,aAAA7lB,GACAia,EACApK,MAAAgI,sBAAkE3K,MAClErU,KAAA8zI,gBAGAmC,EAAA5F,EAAA5tI,IAAA,UACA,UAAAwzI,GAAA,SAAAA,EAAA,CAIA,GAAA90H,GAAAC,EAAAG,cAAApa,EAAAqa,GACA00H,EAAA90H,EAAA+L,cAAAhmB,GAAA,EAAAqa,GACA20H,EAAA,QAAA/0H,EAAA/b,KAAA,IAAA8B,CAEAnH,MAAAk1I,YAAA7E,EAAA,WACArwI,KAAAg2I,oBACA3F,EAAA6F,EAAA/0H,EAAAg1H,EACA3vI,EAAAiuC,QAAAjuC,EAAAquC,QAAAruC,EAAA0F,SAAA1F,EAAA/J,UAMAgf,GACAtb,KAAA,UACAkf,gBAAAlY,EACAA,UAAA3I,EAAAytB,YAAA9kB,GACAma,cACAplB,KAAA8D,KAAA28B,QAIAs4G,0BAAA,SAAAzuI,EAAA3B,EAAA4W,GACA,GAAAw5F,GAAApwG,EAAAwtF,OACA,oBAAA4iB,GAAA,CACA,GAAA5qB,GAAA4qB,CACAA,IACA5qB,UAEAp9D,UAAAo9D,GAGA,GAAA+rD,GAAA,GAAArxH,GAAAkwF,EAAAj1G,KAAA8zI,cAAA9zI,KAAA+zI,UACAmC,EAAAE,EAAA3zI,IAAA,WACA0zI,EAAA7tI,KAAAi9F,QAMAvlG,MAAAk1I,YAAAkB,EAAA,WACAp2I,KAAAg2I,oBACAI,EAAAF,EAAAE,EAAA3zI,IAAA,uBACA0zI,EAAA3vI,EAAAiuC,QAAAjuC,EAAAquC,QAAAruC,EAAA0F,SAAArH,KAKA4W,GACAtb,KAAA,UACAjE,KAAA8D,KAAA28B,OAIAq5G,oBAAA,SACA3F,EAAA6F,EAAA/0H,EAAAg1H,EAAAxrI,EAAAE,EAAAgrI,EAAAhxI,GAKA,GAFA7E,KAAA00I,QAAA,GAEArE,EAAA5tI,IAAA,gBAAA4tI,EAAA5tI,IAAA,SAIA,GAAAmxI,GAAA5zI,KAAA6zI,gBAEA5mH,EAAAojH,EAAA5tI,IAAA,YACAozI,MAAAxF,EAAA5tI,IAAA,WACA,IAAAguE,GAAAylE,CAEA,IAAAjpH,GAAA,gBAAAA,GACAwjD,EAAA9lD,EAAAuC,UAAAD,EAAA9L,GAAA,OAEA,sBAAA8L,GAAA,CACA,GAAAgqC,GAAAz3D,EAAA,SAAA62I,EAAA5lE,GACA4lE,IAAAr2I,KAAA00I,UACAd,EAAAlC,WAAAjhE,GACAzwE,KAAA+1I,gBACA1F,EAAAwF,EAAAlrI,EAAAE,EAAA+oI,EAAAzyH,EAAAtc,KAGiB7E,KACjBA,MAAA00I,QAAAyB,EACA1lE,EAAAxjD,EAAA9L,EAAAg1H,EAAAl/E,GAGA28E,EAAAlC,WAAAjhE,GACAmjE,EAAA/mE,KAAAwjE,GAEArwI,KAAA+1I,gBACA1F,EAAAwF,EAAAlrI,EAAAE,EAAA+oI,EAAAzyH,EAAAtc,KAcAkxI,gBAAA,SAAA1F,EAAAwF,EAAAlrI,EAAAE,EAAAw/E,EAAAlpE,EAAAtc,GACA,GAAAqtG,GAAAlyG,KAAAmS,KAAA2K,WACAq1F,EAAAnyG,KAAAmS,KAAA4K,WACA84H,MAAAxF,EAAA5tI,IAAA,WAEA,IAAA0wI,GAAA9oD,EAAAwnD,UACA9+B,EAAAs9B,EAAA5tI,IAAA,SACA6zI,EAAAjG,EAAA5tI,IAAA,iBACAwH,EAAApF,KAAAyF,kBAAA/O,OAWA,IAVAsJ,GAAAoF,EAAAe,eAAAnG,EAAA0J,WAEA,kBAAAsnI,KAEAA,KAAAlrI,EAAAE,GAAAsW,EAAAkpE,EAAAxlF,GAAAoF,GACAssI,UAAArkC,EAAAC,GACAghC,cAAA1yI,WAIAqH,EAAAhL,QAAA+4I,GACAlrI,EAAA8b,EAAAovH,EAAA,GAAA3jC,GACArnG,EAAA4b,EAAAovH,EAAA,GAAA1jC,OAEA,IAAArqG,EAAAnL,SAAAk5I,GAAA,CACAA,EAAArrI,MAAA2oI,EAAA,GACA0C,EAAAprI,OAAA0oI,EAAA,EACA,IAAAqD,GAAA/C,EAAA7gG,cACAijG,GAAmCrrI,MAAA0nG,EAAAznG,OAAA0nG,GAEnCxnG,GAAA6rI,EAAA7rI,EACAE,EAAA2rI,EAAA3rI,EACAkoG,EAAA,KAGAujC,EAAA,SAGA,oBAAAT,IAAAhxI,EAAA,CACA,GAAA2qE,GAAA0jE,EACA2C,EAAA5rI,EAAAkpI,EAEAxoI,GAAA6kE,EAAA,GACA3kE,EAAA2kE,EAAA,OAEA,CACA,GAAAA,GAAAsjE,EACAnoI,EAAAE,EAAAw/E,EAAAxlF,GAAAqtG,EAAAC,EAAAY,EAAA,QAAAujC,EAAA,QAEA3rI,GAAA6kE,EAAA,GACA3kE,EAAA2kE,EAAA,GAMA,GAHAujC,IAAApoG,GAAA6oI,EAAAzgC,GAAAogC,EAAA,eAAApgC,EAAAogC,EAAA,MACAmD,IAAAzrI,GAAA2oI,EAAA8C,GAAAnD,EAAA,gBAAAmD,EAAAnD,EAAA,MAEA9C,EAAA5tI,IAAA,YACA,GAAA+sE,GAAAyjE,EACAtoI,EAAAE,EAAAw/E,EAAAxlF,GAAAqtG,EAAAC,EAEAxnG,GAAA6kE,EAAA,GACA3kE,EAAA2kE,EAAA,GAGA6a,EAAAiM,OAAA3rF,EAAAE,IAKAirI,+BAAA,SAAA1J,GACA,GAAAqK,GAAAz2I,KAAAg0I,oBACA0C,IAAAD,GACAA,EAAA16I,SAAAqwI,EAAArwI,MA8BA,OA5BA26I,IAAAj4I,EAAAg4I,EAAA,SAAAE,EAAAC,GACA,GAAAC,GAAAF,EAAAxI,eACA2I,EAAA1K,EAAAwK,OACAG,EAAAD,EAAA3I,gBACAuI,GAAAG,EAAA96I,SAAAg7I,EAAAh7I,SAEA0C,EAAAo4I,EAAA,SAAAG,EAAAC,GACA,GAAA/wC,GAAA6wC,EAAAE,OACAC,EAAAF,EAAA1jC,sBACArS,EAAAiF,EAAAoN,uBAEAojC,GACAM,EAAAn5I,QAAAqoG,EAAAroG,OACAm5I,EAAA5uG,WAAA89D,EAAA99D,UACA4uG,EAAA5I,SAAAloC,EAAAkoC,QACA8I,EAAAn7I,SAAAklG,EAAAllG,SAEA0C,EAAAy4I,EAAA,SAAAC,EAAA3oH,GACA,GAAA4oH,GAAAn2C,EAAAzyE,EACAkoH,IACAS,EAAA71H,cAAA81H,EAAA91H,aACA61H,EAAAhwI,YAAAiwI,EAAAjwI,gBAKAnH,KAAAg0I,oBAAA5H,IAEAsK,GAGArC,MAAA,SAAA54H,GAMAzb,KAAAg0I,oBAAA,KACAv4H,GACAtb,KAAA,UACAjE,KAAA8D,KAAA28B,OAIAtkB,QAAA,SAAA7K,EAAAmJ,GACAgD,EAAAC,OAGA5Z,KAAA6zI,gBAAAjoC,OACAoG,EAAA7sE,WAAA,cAAAxuB,QrJ69pCM,SAAUtb,EAAQC,EAAS+I,GsJpnrCjC,GAAAyD,GAAAzD,EAAA,GAEAo4B,GACAowC,MAAA,EACAxyD,OAAA,EACAD,EAAA,EAEA26F,SAAA,EAGA1vG,KAAA,GAEA8yG,aAAA,MAEAk/B,WAAA,KACAC,cACAhmG,SAAA,KACA3G,SAAA,MACAK,YAAA,KAGAusG,iBAEAC,QAAA,GAEA/iI,QAAA,EACAijG,cAAA,EAEArlB,SACAxlB,MAAA,GAGA2sC,eAGAhD,UAEA3pC,MAAA,EACAqtC,QAAA,EAEA/pB,WACA1rF,MAAA,OACA+F,MAAA,EACArK,KAAA,UAIAy2G,UAEA/pC,MAAA,EAEA4qE,QAAA,EAEA17I,OAAA,EAEAo0F,WACA3lF,MAAA,IAIA6sG,WACAxqC,MAAA,EAEA4qE,QAAA,EACArnG,OAAA,EACAglE,aAAA,KACAC,aAAA,KACA3iE,OAAA,EAGAhmC,WACAkB,SAAA,KAIA8pI,WAEA7qE,MAAA,EAEAsjB,WACA1rF,OAAA,QACA+F,MAAA,EACArK,KAAA,UAIAw3I,WAEA9qE,MAAA,EAEAijE,WACArrI,OAAA,oDAKAi/H,EAAA57H,EAAAtL,OAEAwqC,aAAA,EAIA0wG,WACA7qE,MAAA,GAGA+pC,UAEAyE,gBAAA,EACAjxF,SAAA,QAGAitF,WACAjtF,SAAA,SAEKqS,GAELkjG,EAAA73H,EAAAtL,OAEAwqC,aAAA,KAYAa,YAAA,GAGKpL,GAGLm7G,EAAA9vI,EAAA3K,UACA40B,OAAA,EACArpB,IAAA,UACAF,IAAA,WACKm3H,GAELkY,EAAA/vI,EAAA3K,UACA40B,OAAA,EACA+lH,QAAA,IACKnY,EAELtkI,GAAAC,SACAooI,eACA/D,YACAiY,WACAC,YtJ8nrCM,SAAUx8I,EAAQC,EAAS+I,GuJtxrCjC,GAAA0zI,GAAA1zI,EAAA,KACAyD,EAAAzD,EAAA,GACAwX,EAAAxX,EAAA,IACA6F,EAAA7F,EAAA,IAGA2zI,GAAA,gCASA38I,GAAAC,QAAA,SAAA48G,EAAA+/B,EAAAC,EAAAC,GAEArwI,EAAArJ,KAAAu5I,EAAA,SAAA5vG,GAEA6vG,EAAA/6I,QAEAiD,KAAA+3G,EAAA,QAAA9vE,EAEArL,qBAAA,SAAAzgB,EAAA9O,GACA,GAAAovB,GAAA58B,KAAA48B,WACAI,EAAAJ,EACA1yB,EAAA+yB,gBAAA3gB,MAEA4gB,EAAA1vB,EAAA2vB,UACAr1B,GAAAtL,MAAA8f,EAAA4gB,EAAAz6B,IAAA2lC,EAAA,SACAtgC,EAAAtL,MAAA8f,EAAAtc,KAAAo9B,oBAEA9gB,EAAAnc,KAAA+3I,EAAAhgC,EAAA57F,GAEAsgB,GACA1yB,EAAAmzB,iBAAA/gB,EAAA0gB,EAAAJ,IAIAH,cAAA30B,EAAA9K,aAGA+6I,EAAA3vG,EAAA,QACA+vG,IAEA,OAKAt8H,EAAA4pF,yBACAyS,EAAA,OACApwG,EAAA/H,MAAAm4I,EAAAhgC,MvJiyrCM,SAAU78G,EAAQC,EAAS+I,GwJr1rCjC,GAAAyD,GAAAzD,EAAA,GACA2gB,EAAA3gB,EAAA,IAYAu5G,EAAA,SAAAptB,EAAAz+D,EAAAqmH,EAAAhwG,EAAAl8B,GACA8Y,EAAAppB,KAAAoE,KAAAwwF,EAAAz+D,EAAAqmH,GASAp4I,KAAAG,KAAAioC,GAAA,QASApoC,KAAAkM,YAAA,SAGA0xG,GAAAz/G,WAEAlC,YAAA2hH,EAKAtpG,MAAA,EAKA4lG,QAAA,EAMA7lG,MAAA,KAEAunG,aAAA,WACA,GAAA1vG,GAAAlM,KAAAkM,QACA,eAAAA,GAAA,WAAAA,GAWAszH,gBAAA,SAAAt4G,GACA,GAAAuS,GAAAz5B,KAAAwnC,WAIA,OAHA/N,GAAA,GAAAz5B,KAAA+5G,cAAAtgF,EAAA,IACAA,EAAA,GAAAz5B,KAAA+5G,cAAAtgF,EAAA,IACAvS,GAAAuS,EAAA,GAAAA,EAAA,IAAAA,EAAAy3D,UACAz3D,GAGA+lF,aAAA,WACAx/G,KAAA85G,KAAA0F,gBASA5C,eAAA,SAAA3lG,GACA,gBAAAjX,KAAAG,KAAA,CACA,GAAA82G,GAAAj3G,KAAA06G,kBACA,yBAAAzD,KACAA,EAAAhgG,EAAAjX,KAAA+xB,MAAA0X,SAAAxyB,KACAA,GAAAggG,EAAA,KAOAmE,YAAA,SAAAvrG,EAAAyW,GACA,MAAAtmB,MAAAm7G,YAAAn7G,KAAAu9G,aAAA1tG,EAAA,MAAA7P,KAAAwwF,IAAA,MAAAlqE,IASAi3F,aAAA,KAQAxD,cAAA,MAGAjyG,EAAAhK,SAAA8/G,EAAA54F,GAEA3pB,EAAAC,QAAAsiH,GxJ81rCM,SAAUviH,EAAQC,EAAS+I,GAEjC,YyJj9rCA,SAAAg0I,GAAA7nD,GACA,MAAAxwF,MAAAs4I,MAAA9nD,GAHA,GAAA1oF,GAAAzD,EAAA,GAUAk0I,EAAA,SAAAlzI,GACArF,KAAAs4I,SAEAt4I,KAAAw4I,YAKAx4I,KAAAqF,QAAA,GAGAkzI,GAAAp6I,WAEAlC,YAAAs8I,EAEAp4I,KAAA,YAOAowF,QAAA,SAAAC,GACA,MAAAxwF,MAAAs4I,MAAA9nD,IAOAlB,QAAA,WACA,MAAAxnF,GAAA/I,IAAAiB,KAAAw4I,SAAAH,EAAAr4I,OAMA2jI,eAAA,SAAAz8F,GAEA,MADAA,KAAA72B,cACAvI,EAAAzI,OACAW,KAAAsvF,UACA,SAAA/mD,GACA,MAAAA,GAAAxW,MAAA5xB,OAAA+mC,KASAm4E,QAAA,SAAA92E,GACA,GAAAioD,GAAAjoD,EAAAioD,GAEAxwF,MAAAs4I,MAAA9nD,GAAAjoD,EAEAvoC,KAAAw4I,SAAAv5I,KAAAuxF,IAQAojB,YAAA,SAAA3tF,GACA,MAAAjmB,MAAAy4I,kBAAAxyH,EAAA,gBAQAk1F,YAAA,SAAAl1F,GACA,MAAAjmB,MAAAy4I,kBAAAxyH,EAAA,gBAGAwyH,kBAAA,SAAAC,EAAAxoI,GAKA,OAJAyoI,GAAA34I,KAAAw4I,SAEAI,EAAAF,YAAAl2I,aAEA3G,EAAA,EAA2BA,EAAA88I,EAAA58I,OAAoBF,IAAA,CAC/C,GAAA20F,GAAAmoD,EAAA98I,GACA0sC,EAAAvoC,KAAAs4I,MAAA9nD,EAEAooD,GAAApoD,GAAAjoD,EAAAr4B,GAAAwoI,EAAAloD,IAGA,MAAAooD,KAIAv9I,EAAAC,QAAAi9I,GzJi+rCM,SAAUl9I,EAAQC,EAAS+I,GAEjC,Y0J5ksCA,SAAAs5G,GAAAt4G,GAEAkzI,EAAA38I,KAAAoE,KAAAqF,GALA,GAAAyC,GAAAzD,EAAA,GACAk0I,EAAAl0I,EAAA,IAOAs5G,GAAAx/G,WAEAlC,YAAA0hH,EAEAx9G,KAAA,cAMA8jB,YAAA,SAOA+tE,YAAA,WACA,MAAAhyF,MAAA2jI,eAAA,eACA3jI,KAAA2jI,eAAA,YACA3jI,KAAAuwF,QAAA,MAQAtxE,aAAA,SAAApP,GACA,GAAAgpI,GAAA74I,KAAAuwF,QAAA,KACAuoD,EAAA94I,KAAAuwF,QAAA,IACA,OAAAsoD,GAAAxlH,QAAAwlH,EAAAt7B,aAAA1tG,EAAA,MACAipI,EAAAzlH,QAAAylH,EAAAv7B,aAAA1tG,EAAA,MAQAqrG,YAAA,SAAA18G,GACA,MAAAwB,MAAAuwF,QAAA,KAAA2qB,YAAA18G,EAAA,KACAwB,KAAAuwF,QAAA,KAAA2qB,YAAA18G,EAAA,KAWAu6I,aAAA,SAAAv6I,EAAAoa,GACA,MAAApa,GAAA2iG,UAAA,kBAAAx2F,EAAAE,GACA,MAAA7K,MAAA6wG,aAAAlmG,EAAAE,KACa+N,EAAA5Y,OAQb6wG,YAAA,SAAAryG,EAAA8nB,GACA,GAAAq0F,GAAA36G,KAAAuwF,QAAA,KACAqqB,EAAA56G,KAAAuwF,QAAA,IACA,QACAoqB,EAAAZ,cAAAY,EAAA/G,YAAAp1G,EAAA,GAAA8nB,IACAs0F,EAAAb,cAAAa,EAAAhH,YAAAp1G,EAAA,GAAA8nB,MASA80F,YAAA,SAAAvrG,EAAAyW,GACA,GAAAq0F,GAAA36G,KAAAuwF,QAAA,KACAqqB,EAAA56G,KAAAuwF,QAAA,IACA,QACAoqB,EAAAQ,YAAAR,EAAA4C,aAAA1tG,EAAA,IAAAyW,GACAs0F,EAAAO,YAAAP,EAAA2C,aAAA1tG,EAAA,IAAAyW,KAQAk5F,aAAA,SAAAj3E,GACA,MAAAvoC,MAAAuwF,QAAA,MAAAhoD,EAAAioD,IAAA,WAKA1oF,EAAAhK,SAAA6/G,EAAA46B,GAEAl9I,EAAAC,QAAAqiH,G1JwlsCM,SAAUtiH,EAAQC,EAAS+I,GAEjC,Y2JnssCAA,GAAA,GAEA,IAAAwX,GAAAxX,EAAA,GAEAhJ,GAAAC,QAAAugB,EAAA3e,QAEAiD,KAAA,OAEA+hB,cAAA,iBAEA0a,WAAA,MAKA5d,iBAAA,KAEAyd,eACAowC,MAAA,EACAxyD,OAAA,EACAD,EAAA,EACA4D,KAAA,MACAE,IAAA,GACAC,MAAA,MACAC,OAAA,GAEA46H,cAAA,EAGA37H,gBAAA,gBACAw8G,YAAA,EACAC,YAAA,W3JgtsCM,SAAUz+H,EAAQC,EAAS+I,GAEjC,Y4JnvsCA,SAAA40I,GAAAxjI,GACA,MAAAA,GAGA,QAAA2oF,GAAA86C,EAAAC,EAAAC,EAAAC,GACAr5I,KAAAs5I,KAAAJ,EACAl5I,KAAAu5I,KAAAJ,EAEAn5I,KAAAw5I,cAAAJ,GAAAH,EACAj5I,KAAAy5I,cAAAJ,GAAAJ,EA6FA,QAAAS,GAAAvyH,EAAApoB,EAAA46I,EAAAC,GACA,OAAA/9I,GAAA,EAAuBA,EAAAsrB,EAAAprB,OAAgBF,IAAA,CAEvC,GAAAS,GAAA,OAAAs9I,EAAAzyH,EAAAtrB,MACAg+I,EAAA96I,EAAAzC,EACA,OAAAu9I,GACAF,EAAA16I,KAAA3C,GACAyC,EAAAzC,GAAAT,IAGAg+I,EAAA99I,SACAgD,EAAAzC,GAAAu9I,OAEAA,EAAA56I,KAAApD,KAvGAuiG,EAAAjgG,WAEAlC,YAAAmiG,EAKAr6F,IAAA,SAAAtE,GAEA,MADAO,MAAA85I,KAAAr6I,EACAO,MAMAgV,OAAA,SAAAvV,GAEA,MADAO,MAAA6wD,QAAApxD,EACAO,MAMAoY,OAAA,SAAA3Y,GAEA,MADAO,MAAA+5I,QAAAt6I,EACAO,MAGAy4H,QAAA,WACA,GASA58H,GATAq9I,EAAAl5I,KAAAs5I,KACAH,EAAAn5I,KAAAu5I,KACAH,EAAAp5I,KAAAw5I,cACAH,EAAAr5I,KAAAy5I,cAEAO,KACAC,KACAC,KACAC,IASA,KANAT,EAAAR,EAAAc,EAAAE,EAAAd,GACAM,EAAAP,EAAAc,EAAAE,EAAAd,GAKAx9I,EAAA,EAAuBA,EAAAq9I,EAAAn9I,OAAmBF,IAAA,CAC1C,GAAAS,GAAA49I,EAAAr+I,GACAob,EAAAgjI,EAAA39I,EAGA,UAAA2a,EAAA,CAGA,GAAAnb,GAAAmb,EAAAlb,MACAD,IACA,IAAAA,IAAAm+I,EAAA39I,GAAA,MACA2a,IAAA8jD,WAGAk/E,EAAA39I,GAAA,KAEA0D,KAAA6wD,SAAA7wD,KAAA6wD,QAAA55C,EAAApb,OAGAmE,MAAA+5I,SAAA/5I,KAAA+5I,QAAAl+I,GAIA,OAAAA,GAAA,EAA2BA,EAAAs+I,EAAAp+I,OAA0BF,IAAA,CACrD,GAAAS,GAAA69I,EAAAt+I,EACA,IAAAo+I,EAAA19I,eAAAD,GAAA,CACA,GAAA2a,GAAAgjI,EAAA39I,EACA,UAAA2a,EACA,QAGA,IAAAA,EAAAlb,OAIA,OAAAyyB,GAAA,EAAA1yB,EAAAmb,EAAAlb,OAAyDyyB,EAAA1yB,EAAS0yB,IAClExuB,KAAA85I,MAAA95I,KAAA85I,KAAA7iI,EAAAuX,QAJAxuB,MAAA85I,MAAA95I,KAAA85I,KAAA7iI,OA8BA5b,EAAAC,QAAA8iG,G5J4vsCM,SAAU/iG,EAAQC,EAAS+I,G6Jr3sCjC,GAAA41F,GAAA51F,EAAA,IACAspG,EAAAtpG,EAAA,IACAwiC,EAAAxiC,EAAA,IACA+1I,EAAA/1I,EAAA,IACA0gB,EAAA1gB,EAAA,IACA3G,EAAA2G,EAAA,EAEAhJ,GAAAC,SAMA++I,WAAA,SAAArjI,GACA,GAAAxY,GAAAwY,EAAAvU,IAAA,OACA,OAAAw3F,GAAAz7F,EAAAwY,IAAAxJ,UAMAgtF,mBAAAn2F,EAAA,IAYA4pG,aAAAN,EAAAM,aAOAqsC,YAAA,SAAA3yH,EAAArL,GACA,GAAAo0E,GAAAp0E,CACAA,aAAAyI,KACA2rE,EAAA,GAAA3rE,GAAAzI,GACA5e,EAAAY,MAAAoyF,EAAA0pD,GAGA,IAAAroH,GAAA8U,EAAAsB,mBAAAuoD,EAIA,OAHA3+D,GAAAgW,UAAApgB,EAAA,GAAAA,EAAA,IAEAkf,EAAAc,gBAAA5V,EAAA2+D,GACA3+D,GAeAwoH,4BAAA,SAAAx1H,GACArnB,EAAAY,MAAAymB,EAAAq1H,M7Jg4sCM,SAAU/+I,EAAQC,EAAS+I,GAEjC,Y8J97sCA,SAAAm2I,GAAAxjI,GACA,MAAAA,GAAAvU,IAAA,UAAAg4I,EAAAzjI,EAAAsK,YAGA,QAAAo5H,GAAAnyG,GACA,MAAAA,GAAAioD,IAAAjoD,EAAAj0B,MAaA,QAAAqmI,GAAAruI,EAAAqK,GACA,GAAAwK,MACAm+F,EAAAhzG,EAAAi8B,IAGA,iBAAA+2E,EAAAn/G,KAAA,CAKA,OAFA86H,GAAA3b,EAAA5D,eAEA7/G,EAAA,EAAuBA,EAAAyQ,EAAAgb,MAAoBzrB,IAC3CslB,EAAAliB,KAAA6I,EAAA3K,UACA89H,YACA2f,QAVA,QAWAC,QAAAJ,EAAA5+I,GACayQ,GAKb,QAHAwuI,GAAAC,EAAA55H,EAAAxK,GAEAlb,KACAI,EAAA,EAAuBA,EAAAyQ,EAAAgb,MAAezrB,IAAA,CACtC,GAAA4Z,GAAAqlI,EAAA,MAAAL,EAAA5+I,EACA4Z,GAAAulI,aAAAvlI,EAAAgiF,OAAAhiF,EAAAjL,MAAA,EACA/O,EAAAwD,KAAAwW,GAGA,MAAAha,IAGA,QAAAw/I,GAAAC,EAAAvkI,GA8BA,MAAAokI,GA7BAjzI,EAAA/I,IAAAm8I,EAAA,SAAAlkI,GACA,GAAAxY,GAAAwY,EAAA6B,UACAmmG,EAAAhoG,EAAAgI,iBACAsgG,EAAAN,EAAAhtB,cACA2pB,EAAA2D,EAAA93E,YACAyzF,EAAA,aAAA3b,EAAAn/G,KACAm/G,EAAA5D,eACApzG,KAAAsG,IAAA+sG,EAAA,GAAAA,EAAA,IAAAn9G,EAAA8oB,OAWA,QACA2zG,YACAf,SAXAzzG,EACAzP,EAAAvU,IAAA,YAAAw4H,GAWAjB,YATAvzG,EACAzP,EAAAvU,IAAA,eAAAw4H,GASAkgB,OAPAnkI,EAAAvU,IAAA,UAQA24I,eAPApkI,EAAAvU,IAAA,kBAQAm4I,QAAAF,EAAAp7B,GACAu7B,QAAAL,EAAAxjI,MAIAL,GAGA,QAAAokI,GAAAM,EAAA1kI,GAEA,GAAA2kI,KAEAxzI,GAAArJ,KAAA48I,EAAA,SAAAE,EAAAtkI,GACA,GAAA2jI,GAAAW,EAAAX,QACA3f,EAAAsgB,EAAAtgB,UACAugB,EAAAF,EAAAV,KACA3f,YACAwgB,cAAAxgB,EACAygB,eAAA,EACAC,YAAA,MACAtqG,IAAA,MACAuqG,WAEAA,EAAAJ,EAAAI,MACAN,GAAAV,GAAAY,CAEA,IAAAX,GAAAU,EAAAV,OAEAe,GAAAf,IACAW,EAAAE,iBAEAE,EAAAf,GAAAe,EAAAf,KACArwI,MAAA,EACA8mC,SAAA,EASA,IAAA4oF,GAAAqhB,EAAArhB,QACAA,KAAA0hB,EAAAf,GAAArwI,QACA0vH,EAAA5xH,KAAAI,IAAA8yI,EAAAC,cAAAvhB,GACA0hB,EAAAf,GAAArwI,MAAA0vH,EACAshB,EAAAC,eAAAvhB,EAGA,IAAAF,GAAAuhB,EAAAvhB,WACAA,KAAA4hB,EAAAf,GAAAvpG,SAAA0oF,EACA,IAAAmhB,GAAAI,EAAAJ,MACA,OAAAA,IAAAK,EAAAnqG,IAAA8pG,EACA,IAAAC,GAAAG,EAAAH,cACA,OAAAA,IAAAI,EAAAG,YAAAP,IAGA,IAAA3/I,KA4DA,OA1DAqM,GAAArJ,KAAA68I,EAAA,SAAAE,EAAAthD,GAEAz+F,EAAAy+F,KAEA,IAAA0hD,GAAAJ,EAAAI,OACA3gB,EAAAugB,EAAAvgB,UACA0gB,EAAAl1H,EAAA+0H,EAAAG,YAAA1gB,GACA4gB,EAAAp1H,EAAA+0H,EAAAnqG,IAAA,GAEAoqG,EAAAD,EAAAC,cACAC,EAAAF,EAAAE,eACAI,GAAAL,EAAAE,IACAD,KAAA,GAAAG,EACAC,GAAAxzI,KAAAE,IAAAszI,EAAA,GAGAh0I,EAAArJ,KAAAm9I,EAAA,SAAAG,EAAAnjI,GACA,GAAA04B,GAAAyqG,EAAAzqG,QACAA,MAAAwqG,IACAxqG,EAAAhpC,KAAAI,IAAA4oC,EAAAmqG,GACAM,EAAAvxI,QACA8mC,EAAAhpC,KAAAI,IAAA4oC,EAAAyqG,EAAAvxI,QAEAixI,GAAAnqG,EACAyqG,EAAAvxI,MAAA8mC,EACAoqG,OAKAI,GAAAL,EAAAE,IACAD,KAAA,GAAAG,GACAC,EAAAxzI,KAAAE,IAAAszI,EAAA,EAEA,IACAE,GADAC,EAAA,CAEAn0I,GAAArJ,KAAAm9I,EAAA,SAAAG,EAAA9kI,GACA8kI,EAAAvxI,QACAuxI,EAAAvxI,MAAAsxI,GAEAE,EAAAD,EACAE,GAAAF,EAAAvxI,OAAA,EAAAqxI,KAEAG,IACAC,GAAAD,EAAAxxI,MAAAqxI,EAGA,IAAApkD,IAAAwkD,EAAA,CACAn0I,GAAArJ,KAAAm9I,EAAA,SAAAG,EAAAlB,GACAp/I,EAAAy+F,GAAA2gD,GAAAp/I,EAAAy+F,GAAA2gD,KACApjD,SACAjtF,MAAAuxI,EAAAvxI,OAGAitF,GAAAskD,EAAAvxI,OAAA,EAAAqxI,OAIApgJ,EAQA,QAAA2xF,GAAA9gE,EAAA9e,EAAAmJ,GAEA,GAAAulI,GAAAjB,EACAnzI,EAAAzI,OACAmO,EAAA2uI,gBAAA7vH,GACA,SAAAtV,GACA,OAAAxJ,EAAA2vH,iBAAAnmH,IACAA,EAAAgI,kBACA,gBAAAhI,EAAAgI,iBAAA7e,QAKAi8I,KACAC,IAEA7uI,GAAA6/E,iBAAA/gE,EAAA,SAAAtV,GAGA,mBAAAA,EAAAgI,iBAAA7e,KAAA,CAIA,GAAA3B,GAAAwY,EAAA6B,UACAmmG,EAAAhoG,EAAAgI,iBACAsgG,EAAAN,EAAAhtB,cAEA6oD,EAAAL,EAAAxjI,GACAslI,EAAAJ,EAAAxB,EAAAp7B,IAAAu7B,GACA0B,EAAAD,EAAA7kD,OACA+kD,EAAAF,EAAA9xI,MACAm1H,EAAA3gB,EAAAQ,aAAAF,GAEAga,EAAAtiH,EAAAvU,IAAA,mBAEAg6I,EAAAn9B,EAAApF,OACAylB,EAAA5lB,cAAA4lB,EAAA/rB,YAAA,IACA+rB,EAAAH,kBAAA,GAEAhkB,EAAAwD,EAAA+5B,aAAAv6I,GAAA,EACA49I,GAAAvB,GAAAuB,EAAAvB,OACAwB,EAAAxB,GAAAwB,EAAAxB,OAEAr8I,EAAA0jG,WACAzK,OAAA8kD,EACA78C,KAAA88C,IAGAh+I,EAAAC,KAAAkhI,EAAAnvC,IAAA,SAAA3yF,EAAAoZ,GACA,IAAAqM,MAAAzlB,GAAA,CAIAu+I,EAAAvB,GAAA5jI,KACAmlI,EAAAvB,GAAA5jI,IACA+/B,EAAAylG,EACAjwG,EAAAiwG,GAEAJ,EAAAxB,GAAA5jI,IACA+/B,EAAAylG,EACAjwG,EAAAiwG,GAGA,IAIA9xI,GACAE,EACAL,EACAC,EAPAgyH,EAAA5+H,GAAA,UACAytG,EAAAkQ,EAAAvkG,GACAylI,EAAAN,EAAAvB,GAAA5jI,GAAAwlH,GACAkgB,EAAAN,EAAAxB,GAAA5jI,GAAAwlH,EAMAkD,GAAA/jB,gBACAjxG,EAAA+xI,EACA7xI,EAAAygG,EAAA,GAAAixC,EACA/xI,EAAA8gG,EAAA,GAAAqxC,EACAlyI,EAAA+xI,EAEAH,EAAAxB,GAAA5jI,GAAAwlH,IAAAjyH,EACAlC,KAAAsG,IAAApE,GAAA8uH,IACA9uH,KAAA,QAAA8uH,GAEA8iB,EAAAvB,GAAA5jI,GAAAwlH,IAAAjyH,IAGAG,EAAA2gG,EAAA,GAAAixC,EACA1xI,EAAA6xI,EACAlyI,EAAAgyI,EACA/xI,EAAA6gG,EAAA,GAAAqxC,EAEAN,EAAAxB,GAAA5jI,GAAAwlH,IAAAhyH,EACAnC,KAAAsG,IAAAnE,GAAA6uH,IAEA7uH,MAAA,QAAA6uH,GAEA8iB,EAAAvB,GAAA5jI,GAAAwlH,IAAAhyH,GAGAjM,EAAA6jG,cAAAprF,GACAtM,IACAE,IACAL,QACAC,cAEa,KAEJzK,MArTT,GAAA8H,GAAAzD,EAAA,GACA+yB,EAAA/yB,EAAA,GACAoiB,EAAA2Q,EAAA3Q,aAEAg0H,EAAA,aAoTArtD,GAAAutD,kBAEAt/I,EAAAC,QAAA8xF,G9J68sCM,SAAU/xF,EAAQC,G+JxwtCxBD,EAAAC,QAAA,SAAAgxB,EAAA9e,GACAA,EAAA6/E,iBAAA/gE,EAAA,SAAAtV,GACA,GAAAxY,GAAAwY,EAAA6B,UACAvF,EAAA0D,EAAAgI,gBAEA,IAAA1L,EAAA,CAMA,OAFAwtF,MACAsP,EAAA98F,EAAA2Q,WACApoB,EAAA,EAA2BA,EAAAu0G,EAAAr0G,OAAsBF,IACjDilG,EAAA7hG,KAAA+X,EAAA6Y,kBAAAvc,EAAA2Q,WAAApoB,IAAA,GAGA,KAAAilG,EAAA/kG,OACAyC,EAAAC,KAAAqiG,EAAA,YAAAn2F,EAAAsM,GAEAzY,EAAA6jG,cAAAprF,EAAAqM,MAAA3Y,IAAAmc,SAAAxT,EAAAu9F,YAAAlmG,MAGA,IAAAm2F,EAAA/kG,QACAyC,EAAAC,KAAAqiG,EAAA,SAAAn2F,EAAAE,EAAAoM,GAEAzY,EAAA6jG,cACAprF,EAAAqM,MAAA3Y,IAAA2Y,MAAAzY,IAAAic,SAAAxT,EAAAu9F,aAAAlmG,EAAAE,OAEiB,Q/JqxtCX,SAAUxP,EAAQC,EAAS+I,GgKhztCjC,GAAAsE,GAAAtE,EAAA,GACAyD,EAAAzD,EAAA,GACA8kB,EAAA7gB,KAAA6gB,EASA9tB,GAAAC,QAAA,SAAAqb,EAAA/M,GACAA,QACA9B,EAAA3K,SAAAyM,GACA2oB,KAAA,UACA9tB,MAAA,UACAozG,UAAA,OACA+kC,UAAA,2BACAviI,OAAA,GAEA,IAAAwiI,GAAA,GAAAl0I,GAAAS,MACApE,OACAC,KAAA2E,EAAAgzI,WAEAviI,OAAAzQ,EAAAyQ,OACAD,EAAA,MAEA48E,EAAA,GAAAruF,GAAAY,KACAgC,OACA0rF,YAAA9tE,EAAA,EACA+tE,UAAA/tE,EAAA,KACA+tB,EAAA,IAEAlyC,OACAD,OAAA6E,EAAAnF,MACAkyG,QAAA,QACAnrG,UAAA,GAEA6O,OAAAzQ,EAAAyQ,OACAD,EAAA,QAEA0iI,EAAA,GAAAn0I,GAAAS,MACApE,OACAC,KAAA,OACAstB,KAAA3oB,EAAA2oB,KACAnlB,aAAA,QACAH,aAAA,GACAK,SAAA1D,EAAAiuG,WAEAx9F,OAAAzQ,EAAAyQ,OACAD,EAAA,OAGA48E,GAAAnjE,cAAA,GACA+yF,KAAA,KACA1vB,SAAA,EAAA/tE,EAAA,IAEAk7B,MAAA,iBACA2yC,EAAAnjE,cAAA,GACA+yF,KAAA,KACA3vB,WAAA,EAAA9tE,EAAA,IAEAilC,MAAA,KACA/J,MAAA,gBAEA,IAAApzC,GAAA,GAAAtI,GAAAC,KA4BA,OA3BAqI,GAAAlN,IAAAizF,GACA/lF,EAAAlN,IAAA+4I,GACA7rI,EAAAlN,IAAA84I,GAEA5rI,EAAAsB,OAAA,WACA,GAAA7H,GAAAiM,EAAAmG,WAAA,EACAlS,EAAA+L,EAAAoG,YAAA,CACAi6E,GAAA/iE,UACAvpB,KACAE,MAEA,IAAAssC,GAAA8/C,EAAAzrF,MAAA2rC,CACA4lG,GAAA7oH,UACAtpB,EAAAD,EAAAwsC,EACArsC,EAAAD,EAAAssC,EACA1sC,MAAA,EAAA0sC,EACAzsC,OAAA,EAAAysC,IAGA2lG,EAAA5oH,UACAtpB,EAAA,EACAE,EAAA,EACAL,MAAAmM,EAAAmG,WACArS,OAAAkM,EAAAoG,eAGA9L,EAAAsB,SACAtB,IhK0ztCM,SAAU5V,EAAQC,EAAS+I,GiKv0sCjC,QAAA04I,GAAAzgI,EAAA5L,GACA5I,EAAArJ,KAAAiS,EAAA,SAAAssI,EAAA33I,GAEAwW,EAAA2e,SAAAn1B,KACA,gBAAA23I,GACA1gI,EAAAjX,GAAAiX,EAAAjX,GAEAyC,EAAAtL,MAAA8f,EAAAjX,GAAA23I,GAAA,GADAl1I,EAAAvM,MAAAyhJ,GAIA,MAAA1gI,EAAAjX,KACAiX,EAAAjX,GAAA23I,MAOA,QAAAC,GAAAC,GACAA,IAIAl9I,KAAAsc,UACAtc,KAAAsc,OAAA6gI,GAAA,EAQAn9I,KAAAgS,eAAAlK,EAAA3G,eAAoDwX,YAQpD3Y,KAAAo9I,eAAA,KAEAL,EAAAG,EAAAl9I,KAAA4R,OAAA0K,QAGAxU,EAAAtL,MAAA0gJ,EAAAG,GAAA,GAEAr9I,KAAA02B,YAAAwmH,GAQA,QAAAI,GAAAC,EAAA7iH,GACA5yB,EAAAhL,QAAA49B,KACAA,WAGA,IAAAjB,KAKA,OAJAh7B,GAAAi8B,EAAA,SAAAv6B,GACAs5B,EAAAt5B,IAAAo9I,EAAA96I,IAAAtC,QAAAM,UAGAg5B,EAMA,QAAAksE,GAAA9xF,EAAA0pB,EAAAigH,GASA,MARAjgH,GAAAp9B,KACAo9B,EAAAp9B,KACAq9I,EACAA,EAAA1pI,QAEA+H,EAAA8pF,iBAAA9xF,EAAA0pB,GASA,QAAAkgH,GAAA/uD,GACA,MAAA3vF,GAAA2vF,EAAA,SAAA/1E,GACA,MAAAA,GAAAR,qBAOA,QAAAulI,GAAAvjF,EAAAv5D,GAGA,MAAAA,GAAArE,eAAA,WACA8C,EAAA86D,EAAA,SAAAwjF,GACA,MAAAA,GAAA7pI,UAAAlT,EAAAkT,UAEAqmD,EAMA,QAAAyjF,GAAApwI,GAGA,GAAA+F,UACA/F,EAAA4vI,eACA,SAAAt8I,OAAA,kCA9qBA,GAAAgH,GAAAzD,EAAA,GACA+O,EAAA/O,EAAA,IACA0gB,EAAA1gB,EAAA,IACA5F,EAAAqJ,EAAArJ,KACAY,EAAAyI,EAAAzI,OACAN,EAAA+I,EAAA/I,IACAjC,EAAAgL,EAAAhL,QACAa,EAAAmK,EAAAnK,QACAhB,EAAAmL,EAAAnL,SAEAkf,EAAAxX,EAAA,IAEAg5I,EAAAh5I,EAAA,KAEA84I,EAAA,cASAxhI,EAAAoJ,EAAA7nB,QAEAjB,YAAA0f,EAEArK,KAAA,SAAAgL,EAAA8Z,EAAA1lB,EAAA+L,GACA/L,QAEA1Q,KAAAsc,OAAA,KAMAtc,KAAA4R,OAAA,GAAAmT,GAAArU,GAKA1Q,KAAA69I,eAAAphI,GAGAJ,UAAA,SAAAC,EAAAI,GACA5U,EAAAnH,SACAw8I,IAAA7gI,IACA,gCAGAtc,KAAA69I,eAAAxhI,UAAAC,EAAAI,GAEA1c,KAAAygB,YAAA,OAUAA,YAAA,SAAAtgB,GACA,GAAAqgB,IAAA,EACA/D,EAAAzc,KAAA69I,cAEA,KAAA19I,GAAA,aAAAA,EAAA,CACA,GAAA+8I,GAAAzgI,EAAAqhI,YAAA,aAAA39I,EAEAH,MAAAsc,QAAA,aAAAnc,GAIAH,KAAA0f,cACA1f,KAAA02B,YAAAwmH,IAJAD,EAAArhJ,KAAAoE,KAAAk9I,GAMA18H,GAAA,EAOA,GAJA,aAAArgB,GAAA,UAAAA,GACAH,KAAA0f,eAGAvf,GAAA,aAAAA,GAAA,aAAAA,EAAA,CACA,GAAA49I,GAAAthI,EAAAuhI,kBAAAh+I,KACA+9I,KAAA/9I,KAAA02B,YAAAqnH,GAAAv9H,GAAA,GAGA,IAAArgB,GAAA,aAAAA,GAAA,UAAAA,EAAA,CACA,GAAA89I,GAAAxhI,EAAAyhI,eAAAl+I,UAAAmS,KACA8rI,GAAAliJ,QACA0C,EAAAw/I,EAAA,SAAAE,GACAn+I,KAAA02B,YAAAynH,EAAA39H,GAAA,IACqBxgB,MAIrB,MAAAwgB,IAMAkW,YAAA,SAAA+c,GA4BA,QAAA2qG,GAAAvqI,EAAAqO,GACA,GAAAm8H,GAAAjrI,EAAAyX,iBAAA4oB,EAAA5/B,IAEA8Z,EAAAva,EAAAga,gBACAmwH,EAAA96I,IAAAoR,GAAAwqI,EAGAjrI,GAAAsa,cAAAC,GAGAlvB,EAAAkvB,EAAA,SAAAlY,EAAAnB,GACA,GAAAhI,GAAAmJ,EAAA6G,MACA3f,GAAA2P,KACAmJ,EAAAqY,QAAAja,WACA4B,EAAAqY,QAAAha,QAAA6xF,EAAA9xF,EAAAvH,EAAAmJ,EAAA8X,SAIA,IAAAmP,GAAA4gH,EACAC,EAAAr7H,EAGA5F,GAAAzI,MACA0pI,EAAAr8I,IAAA2S,MAEApV,EAAAkvB,EAAA,SAAA01E,EAAA/uF,GACA,GAAAuC,GAAAwsF,EAAA91E,MACAgQ,EAAA8lE,EAAA/mF,MAUA,IARAxU,EAAAnH,OACAhE,EAAA4gC,IAAA1mB,EACA,8BAMA0mB,EAIA,CACA,GAAA+gH,GAAAziI,EAAA9D,SACAlE,EAAAwvF,EAAAv1E,QAAAha,SAAA,EAGA,IAAA+C,eAAAynI,GACAznI,EAAAxR,KAAAg+F,EAAAv1E,QAAAzoB,KACAwR,EAAA6f,YAAA6G,EAAAv9B,MACA6W,EAAAymB,cAAAC,GAAA,OAEA,CAEA,GAAAV,GAAA/0B,EAAA5K,QAEAw/B,kBACAvkB,eAAA7D,GAEA+uF,EAAAv1E,QAEAjX,GAAA,GAAAynI,GACA/gH,EAAAv9B,UAAA68B,GAEA/0B,EAAA5K,OAAA2Z,EAAAgmB,GACAhmB,EAAAvF,KAAAisB,EAAAv9B,UAAA68B,GAKAhmB,EAAAymB,cAAA,cA/BAzmB,GAAA6f,eAAqD12B,MACrD6W,EAAAymB,kBAAuD,EAkCvDigH,GAAA96I,IAAAoR,GAAAS,GAAAuC,EACAyF,EAAAzI,GAAAS,GAAAuC,EAAAyF,QACiBtc,MAGjB,WAAA6T,IACA7T,KAAAo9I,eAAAK,EAAAF,EAAA96I,IAAA,YA1GA,GAAA6Z,GAAAtc,KAAAsc,OACAihI,EAAAv9I,KAAAgS,eACAusI,IAGA9/I,GAAAg1C,EAAA,SAAA+qG,EAAA3qI,GACA,MAAA2qI,IAIA3iI,EAAA2e,SAAA3mB,GAMA0qI,EAAAt/I,KAAA4U,GALAyI,EAAAzI,GAAA,MAAAyI,EAAAzI,GACA/L,EAAAvM,MAAAijJ,GACA12I,EAAAtL,MAAA8f,EAAAzI,GAAA2qI,GAAA,MAQA3iI,EAAA+qF,kBACA23C,EAAA1iI,EAAA4e,uBAAA2jH,EAAAp+I,MAGAA,KAAAo9I,eAAAp9I,KAAAo9I,oBA2FAvgI,UAAA,WACA,GAAAP,GAAAxU,EAAAvM,MAAAyE,KAAAsc,OAiBA,OAfA7d,GAAA6d,EAAA,SAAA1S,EAAAiK,GACA,GAAAgI,EAAA2e,SAAA3mB,GAAA,CAEA,OADAjK,GAAAwJ,EAAAyX,iBAAAjhB,GACA/N,EAAA+N,EAAA7N,OAAA,EAAiDF,GAAA,EAAQA,IAEzDuX,EAAAqa,UAAA7jB,EAAA/N,KACA+N,EAAA0O,OAAAzc,EAAA,EAGAygB,GAAAzI,GAAAjK,WAIA0S,GAAA6gI,GAEA7gI,GAMA6gB,SAAA,WACA,MAAAn9B,MAAA4R,QAQA+I,aAAA,SAAA9G,EAAAoD,GACA,GAAAqG,GAAAtd,KAAAgS,eAAAvP,IAAAoR,EACA,IAAAyJ,EACA,MAAAA,GAAArG,GAAA,IAcAqY,gBAAA,SAAA1uB,GACA,GAAAiT,GAAAjT,EAAAiT,QACA,KAAAA,EACA,QAGA,IAAAS,GAAA1T,EAAA0T,MACAtD,EAAApQ,EAAAoQ,GACA3L,EAAAzE,EAAAyE,KAEAo5I,EAAAz+I,KAAAgS,eAAAvP,IAAAoR,EAEA,KAAA4qI,MAAA1iJ,OACA,QAGA,IAAAN,EAEA,UAAA6Y,EACAxX,EAAAwX,KACAA,OAEA7Y,EAAA4D,EAAAN,EAAAuV,EAAA,SAAA2C,GACA,MAAAwnI,GAAAxnI,KACiB,SAAAgP,GACjB,QAAAA,QAGA,UAAAjV,EAAA,CACA,GAAA0tI,GAAA5hJ,EAAAkU,EACAvV,GAAA4D,EAAAo/I,EAAA,SAAAd,GACA,MAAAe,IAAA/gJ,EAAAqT,EAAA2sI,EAAA3sI,KAAA,IACA0tI,GAAAf,EAAA3sI,aAGA,UAAA3L,EAAA,CACA,GAAAs5I,GAAA7hJ,EAAAuI,EACA5J,GAAA4D,EAAAo/I,EAAA,SAAAd,GACA,MAAAgB,IAAAhhJ,EAAA0H,EAAAs4I,EAAAt4I,OAAA,IACAs5I,GAAAhB,EAAAt4I,eAKA5J,GAAAgjJ,EAAAh+I,OAGA,OAAAi9I,GAAAjiJ,EAAAmF,IA+BAg+I,eAAA,SAAAh+I,GACA,GAAAuT,GAAAvT,EAAAuT,MACAN,EAAAjT,EAAAiT,SAEAgrI,EAOA,SAAAC,GACA,GAAAC,GAAAlrI,EAAA,QACAmrI,EAAAnrI,EAAA,KACAorI,EAAAprI,EAAA,MACA,QAAAirI,GACA,MAAAA,EAAAC,IACA,MAAAD,EAAAE,IACA,MAAAF,EAAAG,GASA,MANAprI,WAEAS,MAAAwqI,EAAAC,GACA/tI,GAAA8tI,EAAAE,GACA35I,KAAAy5I,EAAAG,KArBA9qI,GACA1Y,EAAAojJ,EACA7+I,KAAAsvB,gBAAAuvH,GACA7+I,KAAAgS,eAAAvP,IAAAoR,EAEA,OAqBA,UAAA8uB,GACA,MAAA/hC,GAAAvB,OACAA,EAAAsjC,EAAA/hC,EAAAvB,QACAsjC,GAxBA+6G,EAAAjiJ,EAAAmF,KAmDAwT,cAAA,SAAAP,EAAAlV,EAAAC,GACA,GAAA2+I,GAAAv9I,KAAAgS,cAEA,sBAAA6B,GACAjV,EAAAD,EACAA,EAAAkV,EACA0pI,EAAA9+I,KAAA,SAAA07D,EAAAziD,GACAjZ,EAAA07D,EAAA,SAAAvjD,EAAAtC,GACA3V,EAAA/C,KAAAgD,EAAA8Y,EAAAd,EAAAtC,WAIA,IAAAxM,EAAA5H,SAAA2T,GACApV,EAAA8+I,EAAA96I,IAAAoR,GAAAlV,EAAAC,OAEA,IAAAjC,EAAAkX,GAAA,CACA,GAAAqrI,GAAAl/I,KAAA4+I,eAAA/qI,EACApV,GAAAygJ,EAAAvgJ,EAAAC,KAQAugJ,gBAAA,SAAA95I,GACA,GAAAsT,GAAA3Y,KAAAgS,eAAAvP,IAAA,SACA,OAAApD,GAAAsZ,EAAA,SAAAymI,GACA,MAAAA,GAAA/5I,YAQAgc,iBAAA,SAAAC,GACA,MAAAthB,MAAAgS,eAAAvP,IAAA,UAAA6e,IAOA66H,gBAAA,SAAAroI,GACA,GAAA6E,GAAA3Y,KAAAgS,eAAAvP,IAAA,SACA,OAAApD,GAAAsZ,EAAA,SAAAymI,GACA,MAAAA,GAAAtrI,eAOAurI,UAAA,WACA,MAAAr/I,MAAAgS,eAAAvP,IAAA,UAAAhC,SAUAsW,WAAA,SAAApY,EAAAC,GACAg/I,EAAA59I,MACAvB,EAAAuB,KAAAo9I,eAAA,SAAAkC,GACA,GAAA3mI,GAAA3Y,KAAAgS,eAAAvP,IAAA,UAAA68I,EACA3gJ,GAAA/C,KAAAgD,EAAA+Z,EAAA2mI,IACat/I,OASbu/I,cAAA,SAAA5gJ,EAAAC,GACAH,EAAAuB,KAAAgS,eAAAvP,IAAA,UAAA9D,EAAAC,IAWAyuF,iBAAA,SAAAv5E,EAAAnV,EAAAC,GACAg/I,EAAA59I,MACAvB,EAAAuB,KAAAo9I,eAAA,SAAAkC,GACA,GAAA3mI,GAAA3Y,KAAAgS,eAAAvP,IAAA,UAAA68I,EACA3mI,GAAA7E,aACAnV,EAAA/C,KAAAgD,EAAA+Z,EAAA2mI,IAEat/I,OAUbi9H,oBAAA,SAAAnpH,EAAAnV,EAAAC,GACA,MAAAH,GAAAuB,KAAAm8I,gBAAAroI,GAAAnV,EAAAC,IAMAu+H,iBAAA,SAAAnmH,GAEA,MADA4mI,GAAA59I,MACA8H,EAAAnK,QAAAqC,KAAAo9I,eAAApmI,EAAAmB,gBAAA,GAMAqnI,wBAAA,WACA,OAAAx/I,KAAAo9I,oBAAA38I,SAOAg/I,aAAA,SAAA9gJ,EAAAC,GACAg/I,EAAA59I,KACA,IAAA0/I,GAAArgJ,EACAW,KAAAgS,eAAAvP,IAAA,UAAA9D,EAAAC,EAEAoB,MAAAo9I,eAAAK,EAAAiC,IAGAhgI,YAAA,WACA,GAAA69H,GAAAv9I,KAAAgS,cAEAhS,MAAAo9I,eAAAK,EAAAF,EAAA96I,IAAA,UAEA,IAAAk9I,KACApC,GAAA9+I,KAAA,SAAA07D,EAAAziD,GACAioI,EAAA1gJ,KAAAyY,KAGAmE,EAAA+qF,kBACA+4C,EACA9jI,EAAA4e,uBACA,SAAA/iB,EAAAwK,GACAzjB,EAAA8+I,EAAA96I,IAAAiV,GAAA,SAAAd,GACAA,EAAA8I,oBAiIA5X,GAAAxJ,MAAAqd,EAAAtX,EAAA,KAEAhJ,EAAAC,QAAAqgB,GjKg6tCM,SAAUtgB,EAAQC,EAAS+I,GkKjivCjC,QAAAuX,GAAAjF,GAMA3W,KAAAmS,KAAAwE,EAMA3W,KAAA4/I,oBAMA5/I,KAAA6/I,cAMA7/I,KAAA8/I,cAQA9/I,KAAA+/I,wBAMA//I,KAAAggJ,cAMAhgJ,KAAAigJ,eAuJA,QAAAC,GAAAC,EAAAzjI,EAAA0jI,GACA,GAEAC,GACAnD,EAHAoD,KACAC,KAKAC,EAAAL,EAAAM,QAaA,IAXAN,EAAAjD,aACAA,EAAAiD,EAAAjD,aAIAsD,GAAAL,EAAA98I,WACA65I,QACAoD,GAAAH,EAAA98I,aAAA5C,SAIA0/I,EAAAO,MAAA,CACAxD,OACA,IAAAwD,GAAAP,EAAAO,KACAjiJ,GAAAiiJ,EAAA,SAAAC,GACAA,KAAArkI,SACAqkI,EAAAxsI,MACAosI,EAAAthJ,KAAA0hJ,GAEAN,IAEAA,EAAAM,MA6BA,MAtBAzD,KACAA,EAAAiD,GAKAjD,EAAAuD,WACAvD,EAAAuD,SAAAD,GAIA/hJ,GAAAy+I,GAAAp9I,OAAAwgJ,GACAxgJ,OAAAgI,EAAA/I,IAAAwhJ,EAAA,SAAAG,GACA,MAAAA,GAAApkI,UAEA,SAAAA,GACA7d,EAAAie,EAAA,SAAAkkI,GACAA,EAAAtkI,EAAA8jI,QAMAlD,aACAoD,kBACAD,eACAE,aASA,QAAAM,GAAA1sI,EAAA2sI,EAAAC,GACA,GAAAC,IACAx2I,MAAAs2I,EACAr2I,OAAAs2I,EACAE,YAAAH,EAAAC,GAGAG,GAAA,CAiBA,OAfAp5I,GAAArJ,KAAA0V,EAAA,SAAAtW,EAAAgK,GACA,GAAAs5I,GAAAt5I,EAAA+e,MAAAw6H,EAEA,IAAAD,KAAA,IAAAA,EAAA,IAIA,GAAA5zB,GAAA4zB,EAAA,GACAE,EAAAF,EAAA,GAAA9wI,aAEA63F,GAAA84C,EAAAK,GAAAxjJ,EAAA0vH,KACA2zB,GAAA,MAIAA,EAGA,QAAAh5C,GAAAo5C,EAAAC,EAAAh0B,GACA,cAAAA,EACA+zB,GAAAC,EAEA,QAAAh0B,EACA+zB,GAAAC,EAGAD,IAAAC,EAIA,QAAAC,GAAAC,EAAAC,GAEA,MAAAD,GAAA3zI,KAAA,OAAA4zI,EAAA5zI,KAAA,KAwBA,QAAA4oB,GAAAirH,EAAAluG,GACAA,QAEAh1C,EAAAg1C,EAAA,SAAAmuG,EAAA/tI,GACA,SAAA+tI,EAAA,CAIA,GAAAC,GAAAF,EAAA9tI,EAEA,IAAAgI,EAAA2e,SAAA3mB,GAGA,CACA+tI,EAAAxuI,EAAAyX,iBAAA+2H,GACAC,EAAAzuI,EAAAyX,iBAAAg3H,EAEA,IAAAl0H,GAAAva,EAAAga,gBAAAy0H,EAAAD,EAEAD,GAAA9tI,GAAA9U,EAAA4uB,EAAA,SAAAlY,GACA,MAAAA,GAAA6G,QAAA7G,EAAA8X,MACA/wB,EAAAiZ,EAAA8X,MAAA9X,EAAA6G,QAAA,GACA7G,EAAA8X,OAAA9X,EAAA6G,aAXAqlI,GAAA9tI,GAAArX,EAAAqlJ,EAAAD,GAAA,MAxZA,GAAA95I,GAAAzD,EAAA,GACA+O,EAAA/O,EAAA,IACAwX,EAAAxX,EAAA,IACA5F,EAAAqJ,EAAArJ,KACAlD,EAAAuM,EAAAvM,MACAwD,EAAA+I,EAAA/I,IACAvC,EAAAsL,EAAAtL,MAEA4kJ,EAAA,kBAiHAxlI,GAAAzd,WAEAlC,YAAA2f,EASAS,UAAA,SAAA8jI,EAAAzjI,GACAyjI,EAAA5kJ,EAAA4kJ,GAAA,EAKA,IAAA2B,GAAA9hJ,KAAAggJ,cACA+B,EAAA7B,EAAAtkJ,KACAoE,KAAAmgJ,EAAAzjI,GAAAolI,EAEA9hJ,MAAAigJ,eAAA8B,EAAA7E,WAGA4E,GAEAprH,EAAAorH,EAAA5E,WAAA6E,EAAA7E,YAKA6E,EAAAzB,gBAAAvkJ,SACA+lJ,EAAAxB,gBAAAyB,EAAAzB,iBAEAyB,EAAAxB,UAAAxkJ,SACA+lJ,EAAAvB,UAAAwB,EAAAxB,WAEAwB,EAAA1B,eACAyB,EAAAzB,aAAA0B,EAAA1B,eAIArgJ,KAAAggJ,cAAA+B,GAQAjE,YAAA,SAAAkE,GACA,GAAAC,GAAAjiJ,KAAAggJ,aAUA,OALAhgJ,MAAA4/I,iBAAA7gJ,EAAAkjJ,EAAA3B,gBAAA/kJ,GACAyE,KAAA6/I,WAAA9gJ,EAAAkjJ,EAAA1B,UAAAhlJ,GACAyE,KAAA8/I,cAAAvkJ,EAAA0mJ,EAAA5B,cACArgJ,KAAA+/I,wBAEAxkJ,EAAAymJ,EAMAC,EAAA/E,WAAAl9I,KAAAigJ,iBAQAjC,kBAAA,SAAAxwI,GACA,GAAA8O,GACAgkI,EAAAtgJ,KAAA4/I,gBAEA,IAAAU,EAAAvkJ,OAAA,CAGA,GAAAmmJ,GAAA10I,EAAAmN,aAAA,WACAunI,KACA5lI,EAAA/gB,EACA+kJ,EAAA4B,EAAAC,oBACA,IAKA,MAAA7lI,IAOA4hI,eAAA,SAAA1wI,GACA,GAAAszI,GAAA9gJ,KAAAmS,KAAA2K,WACAikI,EAAA/gJ,KAAAmS,KAAA4K,YACAwjI,EAAAvgJ,KAAA6/I,WACAQ,EAAArgJ,KAAA8/I,cACAlhD,KACAnjG,IAGA,KAAA8kJ,EAAAxkJ,SAAAskJ,EACA,MAAA5kJ,EAIA,QAAAI,GAAA,EAAAC,EAAAykJ,EAAAxkJ,OAAmDF,EAAAC,EAASD,IAC5DglJ,EAAAN,EAAA1kJ,GAAAsY,MAAA2sI,EAAAC,IACAniD,EAAA3/F,KAAApD,EAqBA,QAfA+iG,EAAA7iG,QAAAskJ,IACAzhD,IAAA,IAGAA,EAAA7iG,SAAAylJ,EAAA5iD,EAAA5+F,KAAA+/I,wBACAtkJ,EAAAsD,EAAA6/F,EAAA,SAAAtqF,GACA,MAAA/Y,IACA,IAAA+Y,EAAA+rI,EAAA/jI,OAAAikI,EAAAjsI,GAAAgI,WAMAtc,KAAA+/I,qBAAAnhD,EAEAnjG,IAyKAJ,EAAAC,QAAAsgB,GlKinvCM,SAAUvgB,EAAQC,GmKjiwCxB,GAAA8mJ,GAAA,EAEA,oBAAAzsH,aACAysH,EAAAzsH,UAAAysH,UAAA,IAEA/mJ,EAAAC,SAUAmJ,OAAA,+GAKAiI,WAIAmB,WAAAu0I,EAAAx7H,MAAA,uCAEAhZ,SAAA,GACAF,UAAA,SACAC,WAAA,UAMAuM,UAAA,KAEAtH,UAAA,OACAwnH,kBAAA,IACA6M,wBAAA,IACAz/H,gBAAA,iBACAkrI,sBAAA,WAEA3J,mBAAA,IAEAsZ,qBAAA,IACAroI,YAAA,IAOAklH,oBAAA,IAGAojB,QAAA,InK0iwCM,SAAUjnJ,EAAQC,EAAS+I,GoKjmwCjChJ,EAAAC,SACAm3G,aAAApuG,EAAA,MAEA,iBACA,eACA,kBACA,kBACA,YACA,mBpK4mwCM,SAAUhJ,EAAQC,GqKnnwCxBD,EAAAC,SACAgjH,mBAAA,WACA,OACAtgG,KAAAhe,KAAAyC,IAAA,QACAyb,IAAAle,KAAAyC,IAAA,OACA0b,MAAAne,KAAAyC,IAAA,SACA2b,OAAApe,KAAAyC,IAAA,UACA+H,MAAAxK,KAAAyC,IAAA,SACAgI,OAAAzK,KAAAyC,IAAA,crK+nwCM,SAAUpH,EAAQC,EAAS+I,GsKxowCjC,GAAAgrG,GAAAhrG,EAAA,MAEA,iBACA,yBACA,4BACA,YACA,eACA,kBACA,kBACA,gBACA,iBACA,cAGAhJ,GAAAC,SACA+zG,aAAA,SAAAtc,EAAAC,GACA,GAAAhuF,GAAAqqG,EAAAzzG,KAAAoE,KAAA+yF,EAAAC,GACArhE,EAAA3xB,KAAAw5H,mBAEA,OADA7nG,KAAA3sB,EAAA2sB,YACA3sB,GAGAw0H,kBAAA,WACA,GAAA+oB,GAAAviJ,KAAAyC,IAAA,aACA,iBAAA8/I,GAAA,MAAAA,EAAA,KACA,WAAAA,GAAA,ctKkpwCM,SAAUlnJ,EAAQC,EAAS+I,GuK3qwCjC,GAAAmuG,GAAAnuG,EAAA,MAEA,sBACA,mBACA,YACA,eACA,kBACA,kBACA,gBAGAhJ,GAAAC,SACAk3G,aAAA,SAAAzf,GACA,GAAA/tF,GAAAwtG,EAAA52G,KAAAoE,KAAA+yF,GACAphE,EAAA3xB,KAAAwiJ,YAAAx9I,EAAAwG,UAEA,OADAmmB,KAAA3sB,EAAA2sB,YACA3sB,GAGAw9I,YAAA,SAAAh3I,GACA,MAAAA,IACAA,EAAA,EAEA,IAAA+2I,GAAAviJ,KAAAyC,IAAA,QACAggJ,EAAAn6I,KAAAE,IAAAgD,EAAA,GACAk3I,EAAA,EAAAl3I,CACA,iBAAA+2I,GAAA,MAAAA,EAAA,KACA,WAAAA,GAAAG,MAAAD,QvKqrwCM,SAAUpnJ,EAAQC,EAAS+I,GwK/swCjC,GAAAgzB,GAAAhzB,EAAA,IACAs+I,EAAAt+I,EAAA,EAEAhJ,GAAAC,SAKAiS,aAAA,WACA,GAAAC,GAAAxN,KAAAwN,OACA,OAAAxN,MAAAuH,WAAA,UACAiG,KAAA/K,IAAA,oBAOA0K,QAAA,WACA,MAAAw1I,GAAAx1I,SACAO,UAAA1N,KAAAuH,WAAA,aACAoG,WAAA3N,KAAAuH,WAAA,cACAqG,SAAA5N,KAAAuH,WAAA,YACAsG,WAAA7N,KAAAuH,WAAA,eACavH,KAAAwN,UAGby8B,YAAA,SAAA1X,GACA,MAAA8E,GAAA/sB,gBACAioB,EACAvyB,KAAAmN,UACAnN,KAAAuH,WAAA,SACAvH,KAAAuH,WAAA,cAIA2xB,aAAA,SAAA3G,EAAAmY,EAAAC,EAAAtnC,GACA,MAAAg0B,GAAA6B,aACA3G,EAAAmY,EAAA1qC,KAAAmN,UAAAw9B,EAAAtnC,MxK2twCM,SAAUhI,EAAQC,EAAS+I,GyK7vwCjC,QAAA5B,GAAA6J,EAAAnC,GACAA,IAAA8K,MAAA,IAEA,QADAvW,GAAA4N,EACAzQ,EAAA,EAAuBA,EAAAsO,EAAApO,QAEvB,OADA2C,OAAAyL,EAAAtO,KADwCA,KAMxC,MAAA6C,GAGA,QAAAwC,GAAAoL,EAAAnC,EAAA8b,EAAAvpB,GACAyN,IAAA8K,MAAA,IAGA,QADA3Y,GADAoC,EAAA4N,EAEAzQ,EAAA,EAAuBA,EAAAsO,EAAApO,OAAA,EAAqBF,IAC5CS,EAAA6N,EAAAtO,GACA,MAAA6C,EAAApC,KACAoC,EAAApC,OAEAoC,IAAApC,IAEAI,GAAA,MAAAgC,EAAAyL,EAAAtO,OACA6C,EAAAyL,EAAAtO,IAAAoqB,GAIA,QAAA28H,GAAAtmI,GACA7d,EAAAokJ,EAAA,SAAAzkJ,GACAA,EAAA,IAAAke,MAAAle,EAAA,IAAAke,MACAA,EAAAle,EAAA,IAAAke,EAAAle,EAAA,OAlCA,GAAA0J,GAAAzD,EAAA,GACAy+I,EAAAz+I,EAAA,KAsCAw+I,IACA,wDAGAE,GACA,sFAGAC,GACA,sDACA,mEACA,4CAGAvkJ,EAAAqJ,EAAArJ,IAEApD,GAAAC,QAAA,SAAAghB,GACA7d,EAAA6d,EAAA3D,OAAA,SAAAsqI,GACA,GAAAn7I,EAAAnL,SAAAsmJ,GAAA,CAIA,GAAA32H,GAAA22H,EAAA9iJ,IASA,IAPA2iJ,EAAAG,GAEA,QAAA32H,GAAA,UAAAA,GACA,MAAA22H,EAAAC,YACAD,EAAAvuC,UAAAuuC,EAAAC,WAGA,UAAA52H,EAAA,CACA,GAAA62H,GAAA1gJ,EAAAwgJ,EAAA,gBACA,OAAAE,GACAjiJ,EAAA+hJ,EAAA,yBAAAE,GAGA,OAAAtnJ,GAAA,EAA2BA,EAAAmnJ,EAAAjnJ,OAAgCF,IAC3D,GAAAmnJ,EAAAnnJ,KAAAonJ,EAAA9iJ,KAAA,CACAyiJ,EAAAK,EACA,WAMA3mI,EAAA8mI,YACA9mI,EAAA+mI,UAAA/mI,EAAA8mI,WAGA3kJ,EAAAskJ,EAAA,SAAAvmE,GACA,GAAAn5E,GAAAiZ,EAAAkgE,EACAn5E,KACAyE,EAAAhL,QAAAuG,KACAA,OAEA5E,EAAA4E,EAAA,SAAAiZ,GACAsmI,EAAAtmI,UzK8wwCM,SAAUjhB,EAAQC,EAAS+I,G0Kx2wCjC,QAAAi/I,GAAAh3I,GACA,GAAAi3I,GAAAj3I,KAAAwiG,SACAy0C,IACAz7I,EAAArJ,KAAA+kJ,EAAA,SAAAj5B,GACA,GAAAk5B,GAAAF,EAAAp4H,OACAu4H,EAAAH,EAAAt4H,QACAw4H,MAAAl5B,KACAj+G,EAAAi+G,GAAAj+G,EAAAi+G,OACAj+G,EAAAi+G,GAAAp/F,OAIArjB,EAAAtL,MAAA8P,EAAAi+G,GAAAp/F,OAAAs4H,EAAAl5B,IAHAj+G,EAAAi+G,GAAAp/F,OAAAs4H,EAAAl5B,GAKAk5B,EAAAl5B,GAAA,MAEAm5B,KAAAn5B,KACAj+G,EAAAi+G,GAAAj+G,EAAAi+G,OACAj+G,EAAAi+G,GAAAt/F,SAIAnjB,EAAAtL,MAAA8P,EAAAi+G,GAAAt/F,SAAAy4H,EAAAn5B,IAHAj+G,EAAAi+G,GAAAt/F,SAAAy4H,EAAAn5B,GAKAm5B,EAAAn5B,GAAA,QA/BA,GAAAziH,GAAAzD,EAAA,GAEAm/I,GACA,gDACA,iCAiCAnoJ,GAAAC,QAAA,SAAA2nJ,GACA,GAAAA,EAAA,CAGAK,EAAAL,GACAK,EAAAL,EAAAU,WACAL,EAAAL,EAAAW,SACA,IAAAplJ,GAAAykJ,EAAAzkJ,IACA,IAAAA,EAAA,CACA,OAAA3C,GAAA,EAA2BA,EAAA2C,EAAAzC,OAAiBF,IAC5CynJ,EAAA9kJ,EAAA3C,GAGA,IAAA8nJ,GAAAV,EAAAU,SACA,IAAAA,KAAAnlJ,KAEA,OADAqlJ,GAAAF,EAAAnlJ,KACA3C,EAAA,EAA+BA,EAAAgoJ,EAAA9nJ,OAAmBF,IAClDynJ,EAAAO,EAAAhoJ,GAIA,IAAA+nJ,GAAAX,EAAAW,QACA,IAAAA,KAAAplJ,KAEA,OADAslJ,GAAAF,EAAAplJ,KACA3C,EAAA,EAA+BA,EAAAioJ,EAAA/nJ,OAAmBF,IAClDiM,EAAAhL,QAAAgnJ,EAAAjoJ,KACAynJ,EAAAQ,EAAAjoJ,GAAA,IACAynJ,EAAAQ,EAAAjoJ,GAAA,KAGAynJ,EAAAQ,EAAAjoJ,Q1K63wCM,SAAUR,EAAQC,G2Kj8wCxB,GAAAyoJ,IACAC,QAAA,SAAAj+B,GAGA,OAFA79F,GAAA,EACAZ,EAAA,EACAzrB,EAAA,EAA2BA,EAAAkqH,EAAAhqH,OAAkBF,IAC7CynB,MAAAyiG,EAAAlqH,MACAqsB,GAAA69F,EAAAlqH,GACAyrB,IAIA,YAAAA,EAAAR,IAAAoB,EAAAZ,GAEAY,IAAA,SAAA69F,GAEA,OADA79F,GAAA,EACArsB,EAAA,EAA2BA,EAAAkqH,EAAAhqH,OAAkBF,IAE7CqsB,GAAA69F,EAAAlqH,IAAA,CAEA,OAAAqsB,IAEA1f,IAAA,SAAAu9G,GAEA,OADAv9G,IAAAyV,IACApiB,EAAA,EAA2BA,EAAAkqH,EAAAhqH,OAAkBF,IAC7CkqH,EAAAlqH,GAAA2M,MAAAu9G,EAAAlqH,GAEA,OAAA2M,IAEAE,IAAA,SAAAq9G,GAEA,OADAr9G,GAAAuV,IACApiB,EAAA,EAA2BA,EAAAkqH,EAAAhqH,OAAkBF,IAC7CkqH,EAAAlqH,GAAA6M,MAAAq9G,EAAAlqH,GAEA,OAAA6M,IAIAu7I,QAAA,SAAAl+B,GACA,MAAAA,GAAA,KAIAm+B,EAAA,SAAAn+B,EAAAloH,GACA,MAAAyK,MAAAD,MAAA09G,EAAAhqH,OAAA,GAEAV,GAAAC,QAAA,SAAAgxB,EAAA9e,EAAAmJ,GACAnJ,EAAA6/E,iBAAA/gE,EAAA,SAAAtV,GACA,GAAAxY,GAAAwY,EAAA6B,UACAomH,EAAAjoH,EAAAvU,IAAA,YACA6Q,EAAA0D,EAAAgI,gBAEA,oBAAA1L,EAAAnT,MAAA8+H,EAAA,CACA,GAAA3f,GAAAhsG,EAAA0+E,cACA2tC,EAAArsH,EAAAksG,aAAAF,GACA13E,EAAA03E,EAAA93E,YAEAk4D,EAAA93D,EAAA,GAAAA,EAAA,GACA45D,EAAAl5F,KAAAD,MAAA7J,EAAA8oB,QAAAo4E,EACA,IAAA8B,EAAA,GACA,GAAA2iD,EACA,iBAAAllB,GACAklB,EAAAJ,EAAA9kB,GAEA,kBAAAA,KACAklB,EAAAllB,GAEAklB,IACA3lJ,IAAA8iG,WACAq+B,EAAAnvC,IAAA,EAAAgR,EAAA2iD,EAAAD,GAEAltI,EAAA86E,QAAAtzF,OAISwB,Q3K08wCH,SAAU3E,EAAQC,EAAS+I,G4K91wCjC,QAAA+/I,GAAAn+H,EAAAo+H,GACA,MAAAC,GAAAr+H,EAAAsB,EAAA88H,IAlLA,GAAAv8I,GAAAzD,EAAA,GACAuiC,EAAAviC,EAAA,IACA+yB,EAAA/yB,EAAA,GAGAsiC,EAAAtiC,EAAA,IAEAivF,EAAA1sD,EAAAzoC,UACAomJ,EAAA59G,EAAAxoC,UAEAopB,EAAA6P,EAAA7P,iBACA+8H,EAAAltH,EAAA/uB,MAEAm8I,EAAAl8I,KAAA2R,MACAwqI,EAAAn8I,KAAAixC,KACAtM,EAAA3kC,KAAA+f,IAEAq8H,EAAAp8I,KAAAsU,IAEA+nI,EAAA/9G,EAAA1pC,QAEAiD,KAAA,MAEA2nC,KAAA,GAEAlO,aAAA,WACAgN,EAAA/mC,MAAAG,KAAAJ,WACAI,KAAA4kJ,eAAA,GAAAj+G,IAMA2C,SAAA,WACA,GAAAu7G,GAAA7kJ,KAAA4kJ,eACAh9G,EAAA5nC,KAAAozF,QACA7rD,EAAAs9G,EAAAr9G,WAEA,OAAA1/B,GAAA/I,IAAAwlJ,EAAAj7G,SAAA1tC,KAAAoE,MAAA,SAAAimB,GACA,GAAA6+H,GAAA1tH,EAAA/uB,MAAA4kC,EAAAjtC,KAAA8nC,KAAA7hB,GAUA,OAPA6+H,GAAA7+H,IAAA2hB,EAAA,IAAAi9G,EAAAE,SACAX,EAAAU,EAAAv9G,EAAA,IACAu9G,EACAA,EAAA7+H,IAAA2hB,EAAA,IAAAi9G,EAAAG,SACAZ,EAAAU,EAAAv9G,EAAA,IACAu9G,GAGa9kJ,OAObypC,SAAA86G,EAAA96G,SAMA1X,MAAA,SAAA9L,GAEA,MADAA,GAAAqtE,EAAAvhE,MAAAn2B,KAAAoE,KAAAimB,GACAgnB,EAAAjtC,KAAA8nC,KAAA7hB,IAOA8hB,UAAA,SAAAsc,EAAAmlB,GACA,GAAA1hC,GAAA9nC,KAAA8nC,IACAuc,GAAAqgG,EAAArgG,GAAAqgG,EAAA58G,GACA0hC,EAAAk7E,EAAAl7E,GAAAk7E,EAAA58G,GACAy8G,EAAAx8G,UAAAnsC,KAAAoE,KAAAqkD,EAAAmlB,IAMAhiC,UAAA,WACA,GAAAM,GAAA9nC,KAAA8nC,KACAF,EAAA0rD,EAAA9rD,UAAA5rC,KAAAoE,KACA4nC,GAAA,GAAAqF,EAAAnF,EAAAF,EAAA,IACAA,EAAA,GAAAqF,EAAAnF,EAAAF,EAAA,GAGA,IAAAi9G,GAAA7kJ,KAAA4kJ,eACAr9G,EAAAs9G,EAAAr9G,WAIA,OAHAq9G,GAAAE,WAAAn9G,EAAA,GAAAw8G,EAAAx8G,EAAA,GAAAL,EAAA,KACAs9G,EAAAG,WAAAp9G,EAAA,GAAAw8G,EAAAx8G,EAAA,GAAAL,EAAA,KAEAK,GAMA4rD,YAAA,SAAA5rD,GACA5nC,KAAA4kJ,eAAApxD,YAAA5rD,EAEA,IAAAE,GAAA9nC,KAAA8nC,IACAF,GAAA,GAAA88G,EAAA98G,EAAA,IAAA88G,EAAA58G,GACAF,EAAA,GAAA88G,EAAA98G,EAAA,IAAA88G,EAAA58G,GACAwrD,EAAAE,YAAA53F,KAAAoE,KAAA4nC,IAMA6rD,oBAAA,SAAAj1F,EAAAgyF,GACAxwF,KAAAwzF,YAAAh1F,EAAAk1F,cAAAlD,GAAA,WAAAvqE,GACA,MAAAA,GAAA,MAQAi/E,UAAA,SAAA+/C,GACAA,KAAA,EACA,IAAAr9G,GAAA5nC,KAAAozF,QACAnsD,EAAAW,EAAA,GAAAA,EAAA,EACA,MAAAX,IAAAhpB,KAAAgpB,GAAA,IAIA,GAAA7c,GAAAgN,EAAAzN,SAAAsd,GACAjE,EAAAiiH,EAAAh+G,EAAA7c,CAQA,KALA4Y,GAAA,KACA5Y,GAAA,KAIA9G,MAAA8G,IAAA9hB,KAAAsG,IAAAwb,GAAA,GAAA9hB,KAAAsG,IAAAwb,GAAA,GACAA,GAAA,EAGA,IAAA4d,IACA5Q,EAAA/uB,MAAAo8I,EAAA78G,EAAA,GAAAxd,MACAgN,EAAA/uB,MAAAm8I,EAAA58G,EAAA,GAAAxd,MAGApqB,MAAAqzF,UAAAjpE,EACApqB,KAAA+kG,YAAA/8D,IAOAA,WAAA,SAAA17B,GACAi4I,EAAAv8G,WAAApsC,KAAAoE,KAAAsM,EAEA,IAAAu4I,GAAA7kJ,KAAA4kJ,cACAC,GAAAE,SAAAz4I,EAAA+6B,OACAw9G,EAAAG,SAAA14I,EAAAg7B,SAKAx/B,GAAArJ,MAAA,gCAAAsU,GACA4xI,EAAAxmJ,UAAA4U,GAAA,SAAAkT,GAEA,MADAA,GAAAy+H,EAAAz+H,GAAAy+H,EAAA1kJ,KAAA8nC,MACAwrD,EAAAvgF,GAAAnX,KAAAoE,KAAAimB,MAIA0+H,EAAAhlI,OAAA,WACA,UAAAglI,IAOAtpJ,EAAAC,QAAAqpJ,G5K4hxCM,SAAUtpJ,EAAQC,EAAS+I,G6K7sxCjC,GAAAyD,GAAAzD,EAAA,GACAuiC,EAAAviC,EAAA,IAEAivF,EAAA1sD,EAAAzoC,UAEAuoC,EAAAE,EAAA1pC,QAEAiD,KAAA,UAEAmR,KAAA,SAAA9S,EAAAopC,GACA5nC,KAAA0gC,MAAAliC,EACAwB,KAAAozF,QAAAxrD,IAAA,EAAAppC,EAAAzC,OAAA,IAGAikB,MAAA,SAAAiG,GACA,sBAAAA,GACAne,EAAAnK,QAAAqC,KAAA0gC,MAAAza,GAEA3d,KAAAD,MAAA4d,IAGAoN,QAAA,SAAA6xH,GAEA,MADAA,GAAAllJ,KAAAggB,MAAAklI,GACA5xD,EAAAjgE,QAAAz3B,KAAAoE,KAAAklJ,IACA,MAAAllJ,KAAA0gC,MAAAwkH,IAQAjwH,UAAA,SAAAhP,GACA,MAAAqtE,GAAAr+D,UAAAr5B,KAAAoE,UAAAggB,MAAAiG,KAGA8L,MAAA,SAAA9L,GACA,MAAA3d,MAAAD,MAAAirF,EAAAvhE,MAAAn2B,KAAAoE,KAAAimB,KAMAqjB,SAAA,WAKA,IAJA,GAAAD,MACAzB,EAAA5nC,KAAAozF,QACA8xD,EAAAt9G,EAAA,GAEAs9G,GAAAt9G,EAAA,IACAyB,EAAApqC,KAAAimJ,GACAA,GAGA,OAAA77G,IAQAI,SAAA,SAAA+C,GACA,MAAAxsC,MAAA0gC,MAAA8L,IAMAllB,MAAA,WACA,MAAAtnB,MAAAozF,QAAA,GAAApzF,KAAAozF,QAAA,MAMAK,oBAAA,SAAAj1F,EAAAgyF,GACAxwF,KAAAwzF,YAAAh1F,EAAAk1F,cAAAlD,GAAA,KAGA0U,UAAAp9F,EAAAlF,KACAolC,WAAAlgC,EAAAlF,MAMA8jC,GAAA/mB,OAAA,WACA,UAAA+mB,IAGArrC,EAAAC,QAAAorC,G7K8txCM,SAAUrrC,EAAQC,EAAS+I,G8KjzxCjC,GAAAyD,GAAAzD,EAAA,GACA+yB,EAAA/yB,EAAA,GACAsmB,EAAAtmB,EAAA,IACA8gJ,EAAA9gJ,EAAA,IAEAsiC,EAAAtiC,EAAA,IAEAkgJ,EAAA59G,EAAAxoC,UAEAsmJ,EAAAn8I,KAAAixC,KACAirG,EAAAl8I,KAAA2R,MAOAmrI,EAAA,SAAAx0I,EAAAjG,EAAAq9F,EAAAC,GACA,KAAAD,EAAAC,GAAA,CACA,GAAA5H,GAAA2H,EAAAC,IAAA,CACAr3F,GAAAyvF,GAAA,GAAA11F,EACAq9F,EAAA3H,EAAA,EAGA4H,EAAA5H,EAGA,MAAA2H,IAOAq9C,EAAA1+G,EAAAzpC,QACAiD,KAAA,OAKAspC,SAAA,SAAAxjB,GACA,GAAAq/H,GAAAtlJ,KAAAulJ,SAEA1sH,EAAA,GAAA/W,MAAAmE,EAEA,OAAA0E,GAAAgO,WAAA2sH,EAAA,GAAAzsH,EAAA74B,KAAAuzF,WAAA,YAMAvrD,WAAA,SAAA17B,GACA,GAAAs7B,GAAA5nC,KAAAozF,OAQA,IANAxrD,EAAA,KAAAA,EAAA,KAEAA,EAAA,IA1CA49G,MA2CA59G,EAAA,IA3CA49G,OA8CA59G,EAAA,MAAA3pB,KAAA2pB,EAAA,KAAA3pB,IAAA,CACA,GAAAiX,GAAA,GAAApT,KACA8lB,GAAA,MAAA9lB,MAAAoT,EAAAuwH,cAAAvwH,EAAAwwH,WAAAxwH,EAAAywH,WACA/9G,EAAA,GAAAA,EAAA,GAjDA49G,MAoDAxlJ,KAAAklG,UAAA54F,EAAAu7B,YAGA,IAAAzd,GAAApqB,KAAAqzF,SAEA/mF,GAAA+6B,SACAO,EAAA,GAAAxQ,EAAA/uB,MAAAm8I,EAAA58G,EAAA,GAAAxd,OAEA9d,EAAAg7B,SACAM,EAAA,GAAAxQ,EAAA/uB,MAAAo8I,EAAA78G,EAAA,GAAAxd,QAOA86E,UAAA,SAAA+/C,GACA,GAAAx7H,GAAAzpB,KAAAuzF,WAAA,UACA,KAAAn8D,EAAA9N,oBAAA,GACA27H,MAAA,EAEA,IAAAr9G,GAAA5nC,KAAAozF,QACAnsD,EAAAW,EAAA,GAAAA,EAAA,GACAg+G,EAAA3+G,EAAAg+G,EACAY,EAAAC,EAAA/pJ,OACAkb,EAAAmuI,EAAAU,EAAAF,EAAA,EAAAC,GAEA7sG,EAAA8sG,EAAAx9I,KAAAI,IAAAuO,EAAA4uI,EAAA,IACAz7H,EAAA4uB,EAAA,EAEA,aAAAA,EAAA,IACA,GAAA+sG,GAAA9+G,EAAA7c,CAMAA,IAFAgN,EAAAxN,KAAAm8H,EAAAd,GAAA,GAKA,GAAAj9G,IACA1/B,KAAAD,MAAAo8I,GAAA78G,EAAA,GAAAne,GAAAW,KAAAX,GACAnhB,KAAAD,MAAAm8I,GAAA58G,EAAA,GAAAne,GAAAW,KAAAX,GAGA07H,GAAAtlC,UAAA73E,EAAAJ,GAEA5nC,KAAAulJ,SAAAvsG,EAEAh5C,KAAAqzF,UAAAjpE,EACApqB,KAAA+kG,YAAA/8D,GAGAhoB,MAAA,SAAAiG,GAEA,OAAAmR,EAAA7N,UAAAtD,KAIAne,GAAArJ,MAAA,gCAAAsU,GACAsyI,EAAAlnJ,UAAA4U,GAAA,SAAAkT,GACA,MAAAs+H,GAAAxxI,GAAAnX,KAAAoE,UAAAggB,MAAAiG,MAKA,IAAA6/H,KAEA,aA3HA,MA4HA,aAAAE,MACA,cAAAA,MACA,cAAAA,OACA,cAAAA,MACA,iBA/HAA,MAgIA,iBAAAC,MACA,kBAAAA,MACA,kBAAAA,MACA,kBAAAA,OACA,iBAnIAA,OAoIA,iBAAAT,OACA,iBAAAA,QACA,kBAAAA,QACA,gBAtIAA,QAuIA,SAAAU,SACA,UAAAA,UACA,YAAAA,SACA,cAAAA,UACA,SAAAA,SAOAb,GAAA1lI,OAAA,SAAAtL,GACA,UAAAgxI,IAA8B/C,OAAAjuI,EAAA7G,QAAA/K,IAAA,aAG9BpH,EAAAC,QAAA+pJ,G9Ky0xCM,SAAUhqJ,EAAQC,EAAS+I,G+K5/xCjC,GAAAuE,GAAAvE,EAAA,IACAm4B,EAAAn4B,EAAA,IACAoyB,EAAApyB,EAAA,IAEA8hJ,EAAA,WAKAnmJ,KAAAiR,MAAA,GAAArI,GAMA5I,KAAA28B,IAAAH,EAAAM,OAAA,iBAGAqpH,GAAAhoJ,WAEAlC,YAAAkqJ,EAEA70I,KAAA,SAAA9D,EAAAmJ,KAEArT,OAAA,SAAAuT,EAAArJ,EAAAmJ,EAAA/C,KAEAyE,QAAA,aAIA,IAAA+tI,GAAAD,EAAAhoJ,SACAioJ,GAAAhmI,WACAgmI,EAAA7lI,aACA6lI,EAAA9lI,aACA,SAAAtJ,EAAAxJ,EAAAmJ,EAAA/C,KAIA6iB,EAAAU,kBAAAgvH,GAGA1vH,EAAAsD,sBAAAosH,GAAgDvrH,oBAAA,IAEhDv/B,EAAAC,QAAA6qJ,G/KqgyCM,SAAU9qJ,EAAQC,EAAS+I,GgLjjyCjC,GAAAonG,GAAApnG,EAAA,GACAhJ,GAAAC,QAAA,SAAAkS,GACA,QAAA64I,GAAArvI,GACA,GAAAsvI,IAAAtvI,EAAAw6E,uBAAA,0BAAAv8E,MAAA,KACAzW,EAAAwY,EAAA6B,UACApU,EAAAuS,EAAAvU,IAAA6jJ,IACAtvI,EAAA47E,oBAAA57E,EAAAvU,IAAA,QAGAjE,GAAA8uF,UAAA,QAAA7oF,GAGA+I,EAAA2vH,iBAAAnmH,KACA,kBAAAvS,gBAAAgnG,IACAjtG,EAAAC,KAAA,SAAAwY,GACAzY,EAAAgkG,cACAvrF,EAAA,QAAAxS,EAAAuS,EAAAuK,cAAAtK,OAMAzY,EAAAC,KAAA,SAAAwY,GACA,GAAA8V,GAAAvuB,EAAAwuB,aAAA/V,GACAxS,EAAAsoB,EAAAtqB,IAAA6jJ,GAAA,EACA,OAAA7hJ,GACAjG,EAAAgkG,cAAAvrF,EAAA,QAAAxS,MAKA+I,EAAA+xI,cAAA8G,KhL0jyCM,SAAUhrJ,EAAQC,GiLxlyCxBD,EAAAC,QAAA,SAAAgxB,EAAAi6H,EAAArpB,EAAA1vH,EAAAmJ,GAGAnJ,EAAAyvH,oBAAA3wG,EAAA,SAAAtV,GACA,GAAAxY,GAAAwY,EAAA6B,UAEAk1F,EAAA/2F,EAAAvU,IAAA,WAAA8jJ,EACAl5C,EAAAr2F,EAAAvU,IAAA,aAEAjE,GAAA8uF,WACA4vC,gBAAAnvB,EACA8wB,OAAA9wB,EACAV,eAIA7/F,EAAA2vH,iBAAAnmH,KACA,kBAAAq2F,IACA7uG,EAAAC,KAAA,SAAAwY,GACA,GAAA6U,GAAA9U,EAAA+U,YAAA9U,GAEAkK,EAAAnK,EAAAuK,cAAAtK,EACAzY,GAAAgkG,cAAAvrF,EAAA,aAAAo2F,EAAAvhF,EAAA3K,MAGA3iB,EAAAC,KAAA,SAAAwY,GACA,GAAA8V,GAAAvuB,EAAAwuB,aAAA/V,GACAuvI,EAAAz5H,EAAAxlB,WAAA,aACAk/I,EAAA15H,EAAAxlB,WAAA,gBAEA,OAAAi/I,GACAhoJ,EAAAgkG,cAAAvrF,EAAA,SAAAuvI,GAEA,MAAAC,GAEAjoJ,EAAAgkG,cAAAvrF,EAAA,aAAAwvI,UjLqmyprJ,EAAQC,EAAS+I,IkL70yCjC,SAAAmC,EAAA+uB,GAAel6B,EAAAC,QAAAi6B,KAA+Lv1B,EAAA,WAAiB,gBAAAwG,GAAmB,QAAA+uB,GAAAgF,GAAc,GAAAiS,EAAAjS,GAAA,MAAAiS,GAAAjS,GAAAj/B,OAA4B,IAAA47C,GAAA1K,EAAAjS,IAAY1+B,EAAA0+B,EAAAsP,GAAA,EAAAvuC,WAAqB,OAAAkL,GAAA+zB,GAAA3+B,KAAAs7C,EAAA57C,QAAA47C,IAAA57C,QAAAi6B,GAAA2hB,EAAArN,GAAA,EAAAqN,EAAA57C,QAA2D,GAAAkxC,KAAS,OAAAjX,GAAArqB,EAAA1E,EAAA+uB,EAAA6W,EAAAI,EAAAjX,EAAAL,EAAA,SAAA1uB,EAAAgmC,EAAAjS,GAAuChF,EAAAgF,EAAA/zB,EAAAgmC,IAAAnqC,OAAA69B,eAAA15B,EAAAgmC,GAAqC0Y,cAAA,EAAA/kB,YAAA,EAAA19B,IAAA83B,KAAsChF,EAAAiX,EAAA,SAAAhmC,GAAiB,GAAAgmC,GAAAhmC,KAAAigC,WAAA,WAAiC,MAAAjgC,GAAApD,SAAiB,WAAY,MAAAoD,GAAU,OAAA+uB,GAAAL,EAAAsX,EAAA,IAAAA,MAAsBjX,EAAAgF,EAAA,SAAA/zB,EAAA+uB,GAAmB,MAAAlzB,QAAAlE,UAAA5B,eAAAX,KAAA4K,EAAA+uB,IAAiDA,EAAAyhB,EAAA,GAAAzhB,IAAAP,EAAA,KAAiB,SAAAxuB,EAAA+uB,EAAAiX,GAAkB,YAAa,SAAAjS,GAAA/zB,EAAA+uB,GAAgB,KAAA/uB,YAAA+uB,IAAA,SAAAo2E,WAAA,qCAA8EtpG,OAAA69B,eAAA3K,EAAA,cAAsC13B,OAAA,GAAW,IAAAq5C,GAAA,WAAiB,QAAA1wC,KAAA+uB,GAAgB,OAAAiX,GAAA,EAAYA,EAAAjX,EAAAx5B,OAAWywC,IAAA,CAAK,GAAAjS,GAAAhF,EAAAiX,EAAWjS,GAAA4F,WAAA5F,EAAA4F,aAAA,EAAA5F,EAAA2qB,cAAA,WAAA3qB,OAAA0qB,UAAA,GAAA5iD,OAAA69B,eAAA15B,EAAA+zB,EAAAj+B,IAAAi+B,IAA+G,gBAAAhF,EAAAiX,EAAAjS,GAAuB,MAAAiS,IAAAhmC,EAAA+uB,EAAAp3B,UAAAquC,GAAAjS,GAAA/zB,EAAA+uB,EAAAgF,GAAAhF,MAAwC15B,EAAA,WAAgB,QAAA2K,KAAa+zB,EAAAv6B,KAAAwG,GAAAxG,KAAA2uD,UAAA,GAAA+3F,KAAiC,MAAAxvG,GAAA1wC,IAAalK,IAAA,cAAAuB,MAAA,SAAA2I,EAAA+uB,EAAAiX,GAAwC,wBAAAjX,KAAAv1B,KAAA2uD,UAAAjkC,IAAAlkB,IAAAxG,KAAA2uD,UAAAztD,IAAAsF,MAAAxG,KAAA2uD,UAAAlsD,IAAA+D,GAAAvH,MAAyGg4D,SAAA1hC,EAAA+vB,GAAA9Y,KAAgB,MAASlwC,IAAA,iBAAAuB,MAAA,SAAA2I,EAAA+uB,EAAAiX,GAA2C,GAAAjS,GAAAv6B,KAAA2uD,UAAAlsD,IAAA+D,GAAA0wC,MAAA,EAAqC,UAAA3c,KAAAx+B,SAAAm7C,EAAA3c,EAAAr7B,OAAA,SAAAsH,EAAA+zB,EAAA2c,GAAkD,wBAAA3c,GAAA08B,UAAA18B,EAAA08B,WAAA1hC,GAAAgF,EAAA+qB,KAAA9Y,IAAAhmC,EAAA0wC,GAAA1wC,IAAuE,UAAA+zB,EAAAjiB,OAAA4+B,EAAA,GAAAl3C,KAAA2uD,UAAAztD,IAAAsF,EAAA+zB,IAAA,MAAyDj+B,IAAA,OAAAuB,MAAA,SAAA2I,GAA6B,OAAA+uB,GAAA31B,UAAA7D,OAAAywC,EAAAhqC,MAAA+yB,EAAA,EAAAA,EAAA,KAAAgF,EAAA,EAAkDA,EAAAhF,EAAIgF,IAAAiS,EAAAjS,EAAA,GAAA36B,UAAA26B,EAAwB,IAAA2c,GAAAl3C,KAAA2uD,UAAAlsD,IAAA+D,EAA4B,UAAA0wC,MAAAn7C,SAAAm7C,EAAAr4C,QAAA,SAAA2H,GAA+C,GAAA+uB,IAAMA,EAAA/uB,EAAAywD,UAAAr7D,KAAAiE,MAAA01B,GAAA/uB,EAAA8+C,IAAAxlD,OAAA0sC,MAA8C,QAAOhmC,IAAQ+uB,GAAAnyB,QAAA,GAAAvH,IAAgB,SAAA2K,EAAA+uB,EAAAiX,GAAiBhmC,EAAAlL,QAAAkxC,EAAA,IAAe,SAAAhmC,EAAA+uB,EAAAiX,GAAiB,YAAa,SAAAjS,GAAA/zB,GAAc,MAAAA,MAAAigC,WAAAjgC,GAA0BpD,QAAAoD,GAAWnE,OAAA69B,eAAA3K,EAAA,cAAsC13B,OAAA,GAAW,IAAAq5C,GAAA1K,EAAA,GAAA3wC,EAAA0+B,EAAA2c,GAAAliB,EAAAwX,EAAA,GAAAJ,EAAA7R,EAAAvF,EAAgCO,GAAAnyB,SAAWkgC,QAAA,SAAA98B,EAAA+uB,GAAsB,GAAAiX,GAAA5sC,UAAA7D,OAAA,YAAA6D,UAAA,GAAAA,UAAA,KAAgE,KAAA21B,EAAA,SAAAz0B,OAAA,+CAAsE,IAAAy5B,GAAA,GAAA1+B,GAAAuH,QAAAmyB,EAAAiX,EAAyBhmC,GAAArI,UAAAwoJ,QAAApsH,EAAAqsH,UAAApgJ,EAAAlI,OAAyCykF,QAAA,WAAmB,GAAAv8E,GAAAxG,KAAAu1B,EAAAv1B,KAAA+jC,SAAA8iH,OAAmC7mJ,MAAA+jC,SAAA8iH,QAAA,GAAAC,WAAoC5lJ,IAAA,SAAAsF,EAAA+uB,EAAAiX,GAAoB,MAAAJ,GAAAhpC,QAAA2jJ,YAAAxxH,EAAAiX,EAAAxsC,MAAAwG,EAAA+uB,GAAAiX,GAAA,GAAiDw6G,eAAA,SAAAxgJ,EAAA+uB,GAA8B,MAAA6W,GAAAhpC,QAAA6jJ,eAAA1xH,EAAAv1B,KAAA+jC,SAAA8iH,QAAAtxH,GAAAv1B,YAAAwG,GAAAlK,KAAA,KAAkFi5B,GAAAlzB,OAAAs8B,KAAApJ,GAAA12B,QAAA,SAAA2tC,GAAwChmC,EAAAu9B,SAAA8iH,QAAAr6G,GAAAjX,EAAAiX,MAA6B06G,cAAA,WAA0B,GAAA1gJ,GAAAxG,KAAAu1B,EAAAv1B,KAAA+jC,SAAA8iH,OAAmCtxH,IAAAlzB,OAAAs8B,KAAApJ,GAAA12B,QAAA,SAAA02B,SAAsC/uB,GAAAu9B,SAAA8iH,QAAAtxH,WAAoC,SAAA/uB,EAAA+uB,EAAAiX,GAAiB,YAAa,SAAAjS,GAAA/zB,EAAA+uB,GAAgB,KAAA/uB,YAAA+uB,IAAA,SAAAo2E,WAAA,qCAA8EtpG,OAAA69B,eAAA3K,EAAA,cAAsC13B,OAAA,GAAW,IAAAq5C,GAAA,WAAiB,QAAA1wC,KAAA+uB,GAAgB,OAAAiX,GAAA,EAAYA,EAAAjX,EAAAx5B,OAAWywC,IAAA,CAAK,GAAAjS,GAAAhF,EAAAiX,EAAWjS,GAAA4F,WAAA5F,EAAA4F,aAAA,EAAA5F,EAAA2qB,cAAA,WAAA3qB,OAAA0qB,UAAA,GAAA5iD,OAAA69B,eAAA15B,EAAA+zB,EAAAj+B,IAAAi+B,IAA+G,gBAAAhF,EAAAiX,EAAAjS,GAAuB,MAAAiS,IAAAhmC,EAAA+uB,EAAAp3B,UAAAquC,GAAAjS,GAAA/zB,EAAA+uB,EAAAgF,GAAAhF,MAAwC15B,EAAA2wC,EAAA,GAAAxX,EAAA,SAAAxuB,GAAwB,MAAAA,MAAAigC,WAAAjgC,GAA0BpD,QAAAoD,IAAW3K,GAAAuwC,EAAA,WAAiB,QAAA5lC,GAAA+uB,GAAc,GAAAiX,GAAA5sC,UAAA7D,OAAA,YAAA6D,UAAA,GAAAA,UAAA,KAAgE26B,GAAAv6B,KAAAwG,GAAAxG,KAAAklB,OAAAsnB,EAAAtnB,QAAAsnB,EAAAtnB,OAAA7U,cAAArQ,KAAA2iB,QAAA4S,EAAAiX,KAAAxO,QAAAh+B,KAAAg+B,MAAAwO,EAAAxO,OAAAh+B,KAAAmnJ,UAAsH,MAAAjwG,GAAA1wC,IAAalK,IAAA,UAAAuB,MAAA,SAAA2I,GAAgC,GAAA+uB,GAAAv1B,KAAAwsC,EAAA5sC,UAAA7D,OAAA,YAAA6D,UAAA,GAAAA,UAAA,MAAsE26B,EAAAiS,EAAAskF,UAAA,EAAkB9wH,MAAA4mJ,UAAAp6G,EAAAo6G,YAAA,KAAArsH,EAAA,GAAAqsH,WAAApgJ,GAAA,GAAAogJ,WAAApgJ,EAAA+zB,IAAA,SAAAv6B,KAAAklB,SAAA,WAAAllB,MAAA4mJ,YAAA5mJ,KAAA4mJ,UAAAQ,QAAA,SAAA5gJ,GAAgK,MAAA+uB,GAAAqxH,UAAA90B,KAAAhuE,KAAA7jC,UAAAzZ,UAAiDlK,IAAA,UAAAuB,MAAA,WAA+B,GAAA2I,GAAAxG,MAAW,0CAAAnB,QAAA,SAAA02B,GAA+D/uB,EAAAogJ,UAAArxH,GAAA,SAAAiX,GAA2BxX,EAAA5xB,QAAA+6B,KAAA5I,EAAAiX,GAAAhmC,EAAAw3B,OAAAx3B,EAAA6gJ,YAAA,UAAA9xH,EAAAiX,SAAgElwC,IAAA,cAAAuB,MAAA,SAAA2I,EAAA+uB,GAAsC,GAAA/uB,EAAA8gJ,WAAA,YAA4B,GAAA96G,GAAA,SAAAjS,EAAA/zB,EAAA+b,cAAA20B,EAAA3hB,CAAqC,UAAAv1B,KAAAklB,QAAAqQ,EAAA/2B,OAAA04C,EAAA4M,KAAA9jC,MAAAuV,EAAA/2B,MAAA+7B,GAAA2c,EAAAnW,WAAA,GAAAmW,EAAA3Y,UAAAl/B,OAAA,SAAAmH,GAAsG,QAAAA,IAAUsH,KAAA,KAAAopC,EAAAphC,SAAA02B,EAAA,WAAAjS,EAAA2c,EAAAphC,SAAA9V,KAAAg+B,MAAAwO,GAAAjS,EAAA2c,QAAsE1wC,IAAQ+uB,GAAAnyB,QAAAgpC,QlLm1yC/sI,SAAU/wC,EAAQyiC,EAAqBz5B,GAE7C,YmLx0yCA,SAAAoP,GAAA7S,EAAAC,IAMA,QAAA0mJ,GAAAvkH,GACA,MAAA3gC,QAAAlE,UAAAmE,SAAA1G,KAAAonC,GAAArlC,QAAA,YAkFA,QAAA6pJ,GAAAC,EAAApnH,GACA,aAAAA,IACA,gBACA,MACA,cACA,MAAAA,EACA,gBACA,MAAAA,GAAAonH,EACA,eACA,MAAApnH,GAAAonH,EAAAtmI,WAAAmiC,IA2BA,QAAAokG,GACAvzI,EACAwzI,EACAC,OAEA,KAAAD,SAEA,IACAE,GADA7nI,EAAA4nI,GAAAE,CAEA,KACAD,EAAA7nI,EAAA7L,GAAA,IACG,MAAA3N,GAEHqhJ,KAEA,OAAAvrJ,KAAAqrJ,GAAA,CACA,GAAA1hI,GAAA0hI,EAAArrJ,EACAurJ,GAAAvrJ,GAAAkG,MAAA1F,QAAAmpB,KAAAxlB,QAAAwlB,EAEA,MAAA4hI,GAGA,QAAAC,GAAA3zI,GACA,GAAAwuB,KAIA,QAFAxuB,IAAA0tD,OAAA1/C,QAAA,kBAMAhO,EAAAc,MAAA,KAAApW,QAAA,SAAAwM,GACA,GAAA08I,GAAA18I,EAAA8W,QAAA,WAAAlN,MAAA,KACA3Y,EAAAyuF,GAAAg9D,EAAAvxI,SACAyP,EAAA8hI,EAAAhsJ,OAAA,EACAgvF,GAAAg9D,EAAAj6I,KAAA,MACA,SAEAw1C,KAAA3gB,EAAArmC,GACAqmC,EAAArmC,GAAA2pB,EACKzjB,MAAA1F,QAAA6lC,EAAArmC,IACLqmC,EAAArmC,GAAA2C,KAAAgnB,GAEA0c,EAAArmC,IAAAqmC,EAAArmC,GAAA2pB,KAIA0c,GAnBAA,EAsBA,QAAAqlH,GAAAtpJ,GACA,GAAAikC,GAAAjkC,EAAA2D,OAAAs8B,KAAAjgC,GAAAK,IAAA,SAAAzC,GACA,GAAA2pB,GAAAvnB,EAAApC,EAEA,QAAAgnD,KAAAr9B,EACA,QAGA,WAAAA,EACA,MAAAmS,IAAA97B,EAGA,IAAAkG,MAAA1F,QAAAmpB,GAAA,CACA,GAAAxqB,KAWA,OAVAwqB,GAAApnB,QAAA,SAAAopJ,OACA3kG,KAAA2kG,IAGA,OAAAA,EACAxsJ,EAAAwD,KAAAm5B,GAAA97B,IAEAb,EAAAwD,KAAAm5B,GAAA97B,GAAA,IAAA87B,GAAA6vH,OAGAxsJ,EAAAqS,KAAA,KAGA,MAAAsqB,IAAA97B,GAAA,IAAA87B,GAAAnS,KACG5mB,OAAA,SAAAsL,GAAuB,MAAAA,GAAA5O,OAAA,IAAuB+R,KAAA,SACjD,OAAA60B,GAAA,IAAAA,EAAA,GAQA,QAAAulH,GACA/2C,EACAihB,EACA+1B,EACAC,GAEA,GAAAC,GAAAD,KAAA/kJ,QAAA2kJ,eACAP,GACApiJ,KAAA+sH,EAAA/sH,MAAA8rG,KAAA9rG,KACA+mF,KAAA+kB,KAAA/kB,SACAjiF,KAAAioH,EAAAjoH,MAAA,IACAuiD,KAAA0lE,EAAA1lE,MAAA,GACAv4C,MAAAi+G,EAAAj+G,UACAgN,OAAAixG,EAAAjxG,WACAmnI,SAAAC,EAAAn2B,EAAAi2B,GACAlH,QAAAhwC,EAAAq3C,EAAAr3C,MAKA,OAHAg3C,KACAV,EAAAU,eAAAI,EAAAJ,EAAAE,IAEAhmJ,OAAAw7E,OAAA4pE,GAQA,QAAAe,GAAAr3C,GAEA,IADA,GAAAxuE,MACAwuE,GACAxuE,EAAAo4B,QAAAo2C,GACAA,IAAAvtG,MAEA,OAAA++B,GAGA,QAAA4lH,GACA/iH,EACAijH,GAEA,GAAAt+I,GAAAq7B,EAAAr7B,KACAgK,EAAAqxB,EAAArxB,UAAwB,KAAAA,SACxB,IAAAu4C,GAAAlnB,EAAAknB,SAAsB,KAAAA,MAAA,GAEtB,IAAAzsC,GAAAwoI,GAAAT,CACA,QAAA79I,GAAA,KAAA8V,EAAA9L,GAAAu4C,EAGA,QAAAg8F,GAAA93I,EAAAC,GACA,MAAAA,KAAA83I,GACA/3I,IAAAC,IACGA,IAEAD,EAAAzG,MAAA0G,EAAA1G,KAEHyG,EAAAzG,KAAAgY,QAAAymI,GAAA,MAAA/3I,EAAA1G,KAAAgY,QAAAymI,GAAA,KACAh4I,EAAA87C,OAAA77C,EAAA67C,MACAm8F,EAAAj4I,EAAAuD,MAAAtD,EAAAsD,UAEGvD,EAAAvL,OAAAwL,EAAAxL,QAEHuL,EAAAvL,OAAAwL,EAAAxL,MACAuL,EAAA87C,OAAA77C,EAAA67C,MACAm8F,EAAAj4I,EAAAuD,MAAAtD,EAAAsD,QACA00I,EAAAj4I,EAAAuQ,OAAAtQ,EAAAsQ,UAOA,QAAA0nI,GAAAj4I,EAAAC,OACA,KAAAD,cACA,KAAAC,SAEA,IAAAi4I,GAAAzmJ,OAAAs8B,KAAA/tB,GACAm4I,EAAA1mJ,OAAAs8B,KAAA9tB,EACA,OAAAi4I,GAAA/sJ,SAAAgtJ,EAAAhtJ,QAGA+sJ,EAAAr5F,MAAA,SAAAnzD,GACA,GAAA0sJ,GAAAp4I,EAAAtU,GACA2sJ,EAAAp4I,EAAAvU,EAEA,uBAAA0sJ,IAAA,gBAAAC,GACAJ,EAAAG,EAAAC,GAEApxH,OAAAmxH,KAAAnxH,OAAAoxH,KAIA,QAAAC,GAAAltF,EAAAv/D,GACA,MAGA,KAFAu/D,EAAA7xD,KAAAgY,QAAAymI,GAAA,KAAAjrJ,QACAlB,EAAA0N,KAAAgY,QAAAymI,GAAA,SAEAnsJ,EAAAiwD,MAAAsP,EAAAtP,OAAAjwD,EAAAiwD,OACAy8F,EAAAntF,EAAA7nD,MAAA1X,EAAA0X,OAIA,QAAAg1I,GAAAntF,EAAAv/D,GACA,OAAAH,KAAAG,GACA,KAAAH,IAAA0/D,IACA,QAGA,UA8GA,QAAAotF,GAAA5iJ,GAEA,KAAAA,EAAA6iJ,SAAA7iJ,EAAAgmD,QAAAhmD,EAAA8iJ,SAAA9iJ,EAAA+iJ,UAEA/iJ,EAAAgjJ,sBAEAlmG,KAAA98C,EAAAijJ,QAAA,IAAAjjJ,EAAAijJ,QAAA,CAEA,GAAAjjJ,EAAAkjJ,eAAAljJ,EAAAkjJ,cAAA5mI,aAAA,CAEA,iBAAAY,KADAld,EAAAkjJ,cAAA5mI,aAAA,WACqC,OAMrC,MAHAtc,GAAAqvC,gBACArvC,EAAAqvC,kBAEA,GAGA,QAAA8zG,GAAA9+F,GACA,GAAAA,EAEA,OADA1kD,GACAtK,EAAA,EAAmBA,EAAAgvD,EAAA9uD,OAAqBF,IAAA,CAExC,GADAsK,EAAA0kD,EAAAhvD,GACA,MAAAsK,EAAAykD,IACA,MAAAzkD,EAEA,IAAAA,EAAA0kD,WAAA1kD,EAAAwjJ,EAAAxjJ,EAAA0kD,WACA,MAAA1kD,IAQA,QAAAm9B,GAAAlD,GACA,IAAAkD,EAAAwsF,UAAA,CACAxsF,EAAAwsF,WAAA,EAEAvsF,GAAAnD,CAEA,IAAAmjB,GAAA,SAAA94B,GAA4B,WAAA64B,KAAA74B,GAE5Bm/H,EAAA,SAAAtkG,EAAAukG,GACA,GAAAhuJ,GAAAypD,EAAAvhB,SAAAytB,YACAjO,GAAA1nD,IAAA0nD,EAAA1nD,IAAA2C,OAAA+kD,EAAA1nD,IAAAiuJ,wBACAjuJ,EAAAypD,EAAAukG,GAIAzpH,GAAA9hC,OACA6F,aAAA,WACAo/C,EAAAvjD,KAAA+jC,SAAAqkH,SACApoJ,KAAA+pJ,YAAA/pJ,KACAA,KAAAgqJ,QAAAhqJ,KAAA+jC,SAAAqkH,OACApoJ,KAAAgqJ,QAAA14I,KAAAtR,MACAogC,EAAA1iC,KAAAylF,eAAAnjF,KAAA,SAAAA,KAAAgqJ,QAAAC,QAAAjuF,UAEAh8D,KAAA+pJ,YAAA/pJ,KAAA8vD,SAAA9vD,KAAA8vD,QAAAi6F,aAAA/pJ,KAEA4pJ,EAAA5pJ,YAEAgjF,UAAA,WACA4mE,EAAA5pJ,SAIAqC,OAAA69B,eAAAE,EAAAjiC,UAAA,WACAsE,IAAA,WAA0B,MAAAzC,MAAA+pJ,YAAAC,WAG1B3nJ,OAAA69B,eAAAE,EAAAjiC,UAAA,UACAsE,IAAA,WAA0B,MAAAzC,MAAA+pJ,YAAAG,UAG1B9pH,EAAAxpB,UAAA,cAAAuzI,IACA/pH,EAAAxpB,UAAA,cAAAwzI,GAEA,IAAAnhG,GAAA7oB,EAAAC,OAAAk9C,qBAEAt0B,GAAAohG,iBAAAphG,EAAAqhG,iBAAArhG,EAAAshG,kBAAAthG,EAAA85B,SASA,QAAAynE,GACAC,EACA3iH,EACA4rF,GAEA,GAAAg3B,GAAAD,EAAA/yH,OAAA,EACA,UAAAgzH,EACA,MAAAD,EAGA,UAAAC,GAAA,MAAAA,EACA,MAAA5iH,GAAA2iH,CAGA,IAAA7xI,GAAAkvB,EAAA7yB,MAAA,IAKAy+G,IAAA96G,IAAA7c,OAAA,IACA6c,EAAAzD,KAKA,QADAiwC,GAAAqlG,EAAAtoI,QAAA,UAAAlN,MAAA,KACApZ,EAAA,EAAiBA,EAAAupD,EAAArpD,OAAqBF,IAAA,CACtC,GAAA8uJ,GAAAvlG,EAAAvpD,EACA,QAAA8uJ,EACA/xI,EAAAzD,MACK,MAAAw1I,GACL/xI,EAAA3Z,KAAA0rJ,GASA,MAJA,KAAA/xI,EAAA,IACAA,EAAAmiD,QAAA,IAGAniD,EAAA9K,KAAA,KAGA,QAAA8oB,GAAAzsB,GACA,GAAAuiD,GAAA,GACAv4C,EAAA,GAEAy2I,EAAAzgJ,EAAAxM,QAAA,IACAitJ,IAAA,IACAl+F,EAAAviD,EAAA1J,MAAAmqJ,GACAzgJ,IAAA1J,MAAA,EAAAmqJ,GAGA,IAAAC,GAAA1gJ,EAAAxM,QAAA,IAMA,OALAktJ,IAAA,IACA12I,EAAAhK,EAAA1J,MAAAoqJ,EAAA,GACA1gJ,IAAA1J,MAAA,EAAAoqJ,KAIA1gJ,OACAgK,QACAu4C,QAIA,QAAAo+F,GAAA3gJ,GACA,MAAAA,GAAAgY,QAAA,aAyCA,QAAAnC,GAAA+F,EAAA1iB,GAQA,IAPA,GAKAs/B,GALAstC,KACA3zE,EAAA,EACAgY,EAAA,EACAnK,EAAA,GACA4gJ,EAAA1nJ,KAAA2nJ,WAAA,IAGA,OAAAroH,EAAAsoH,GAAAzhI,KAAAzD,KAAA,CACA,GAAA7a,GAAAy3B,EAAA,GACAuoH,EAAAvoH,EAAA,GACA80D,EAAA90D,EAAAruB,KAKA,IAJAnK,GAAA4b,EAAAtlB,MAAA6T,EAAAmjF,GACAnjF,EAAAmjF,EAAAvsF,EAAAnP,OAGAmvJ,EACA/gJ,GAAA+gJ,EAAA,OADA,CAKA,GAAAv8G,GAAA5oB,EAAAzR,GACA62I,EAAAxoH,EAAA,GACAt9B,EAAAs9B,EAAA,GACAqpB,EAAArpB,EAAA,GACA1xB,EAAA0xB,EAAA,GACAgrF,EAAAhrF,EAAA,GACAyoH,EAAAzoH,EAAA,EAGAx4B,KACA8lE,EAAAhxE,KAAAkL,GACAA,EAAA,GAGA,IAAAkhJ,GAAA,MAAAF,GAAA,MAAAx8G,OAAAw8G,EACA1hC,EAAA,MAAAkE,GAAA,MAAAA,EACA29B,EAAA,MAAA39B,GAAA,MAAAA,EACAq9B,EAAAroH,EAAA,IAAAooH,EACAjvF,EAAA9P,GAAA/6C,CAEAg/D,GAAAhxE,MACAoG,QAAA/I,IACA6uJ,UAAA,GACAH,YACAM,WACA7hC,SACA4hC,UACAD,aACAtvF,UAAAyvF,EAAAzvF,GAAAsvF,EAAA,UAAAI,EAAAR,GAAA,SAcA,MATA12I,GAAAyR,EAAAhqB,SACAoO,GAAA4b,EAAAkT,OAAA3kB,IAIAnK,GACA8lE,EAAAhxE,KAAAkL,GAGA8lE,EAUA,QAAA2M,GAAA72D,EAAA1iB,GACA,MAAAooJ,GAAAzrI,EAAA+F,EAAA1iB,IASA,QAAAqoJ,GAAA3lI,GACA,MAAAkoG,WAAAloG,GAAA5D,QAAA,mBAAAiqB,GACA,UAAAA,EAAAb,WAAA,GAAAjpC,SAAA,IAAAigB,gBAUA,QAAAopI,GAAA5lI,GACA,MAAAkoG,WAAAloG,GAAA5D,QAAA,iBAAAiqB,GACA,UAAAA,EAAAb,WAAA,GAAAjpC,SAAA,IAAAigB,gBAOA,QAAAkpI,GAAAx7E,GAKA,OAHApU,GAAA,GAAAr5D,OAAAytE,EAAAl0E,QAGAF,EAAA,EAAiBA,EAAAo0E,EAAAl0E,OAAmBF,IACpC,gBAAAo0E,GAAAp0E,KACAggE,EAAAhgE,GAAA,GAAAo2E,QAAA,OAAAhC,EAAAp0E,GAAAigE,QAAA,MAIA,iBAAAp9D,EAAAkL,GAMA,OALAO,GAAA,GACA3L,EAAAE,MACA2E,EAAAuG,MACAwuB,EAAA/0B,EAAAuoJ,OAAAF,EAAA39B,mBAEAlyH,EAAA,EAAmBA,EAAAo0E,EAAAl0E,OAAmBF,IAAA,CACtC,GAAAgwJ,GAAA57E,EAAAp0E,EAEA,oBAAAgwJ,GAAA,CAMA,GACAlB,GADA9sJ,EAAAW,EAAAqtJ,EAAAxmJ,KAGA,UAAAxH,EAAA,CACA,GAAAguJ,EAAAP,SAAA,CAEAO,EAAAR,UACAlhJ,GAAA0hJ,EAAAV,OAGA,UAEA,SAAAx/C,WAAA,aAAAkgD,EAAAxmJ,KAAA,mBAIA,GAAA6+D,GAAArmE,GAAA,CACA,IAAAguJ,EAAApiC,OACA,SAAA9d,WAAA,aAAAkgD,EAAAxmJ,KAAA,kCAAAy+C,KAAA7jC,UAAApiB,GAAA,IAGA,QAAAA,EAAA9B,OAAA,CACA,GAAA8vJ,EAAAP,SACA,QAEA,UAAA3/C,WAAA,aAAAkgD,EAAAxmJ,KAAA,qBAIA,OAAAmpB,GAAA,EAAuBA,EAAA3wB,EAAA9B,OAAkByyB,IAAA,CAGzC,GAFAm8H,EAAAvyH,EAAAv6B,EAAA2wB,KAEAqtC,EAAAhgE,GAAA6nB,KAAAinI,GACA,SAAAh/C,WAAA,iBAAAkgD,EAAAxmJ,KAAA,eAAAwmJ,EAAA/vF,QAAA,oBAAAhY,KAAA7jC,UAAA0qI,GAAA,IAGAxgJ,KAAA,IAAAqkB,EAAAq9H,EAAAV,OAAAU,EAAAb,WAAAL,OApBA,CA4BA,GAFAA,EAAAkB,EAAAT,SAAAO,EAAA9tJ,GAAAu6B,EAAAv6B,IAEAg+D,EAAAhgE,GAAA6nB,KAAAinI,GACA,SAAAh/C,WAAA,aAAAkgD,EAAAxmJ,KAAA,eAAAwmJ,EAAA/vF,QAAA,oBAAA6uF,EAAA,IAGAxgJ,IAAA0hJ,EAAAV,OAAAR,OArDAxgJ,IAAA0hJ,EAwDA,MAAA1hJ,IAUA,QAAAqhJ,GAAAzlI,GACA,MAAAA,GAAA5D,QAAA,6BAAmC,QASnC,QAAAopI,GAAAt6I,GACA,MAAAA,GAAAkR,QAAA,wBAUA,QAAA2pI,GAAAl7E,EAAAjyC,GAEA,MADAiyC,GAAAjyC,OACAiyC,EASA,QAAAm7E,GAAA1oJ,GACA,MAAAA,GAAA2oJ,UAAA,OAUA,QAAAC,GAAA9hJ,EAAAw0B,GAEA,GAAAutH,GAAA/hJ,EAAA3O,OAAAorB,MAAA,YAEA,IAAAslI,EACA,OAAArwJ,GAAA,EAAmBA,EAAAqwJ,EAAAnwJ,OAAmBF,IACtC8iC,EAAA1/B,MACAoG,KAAAxJ,EACAsvJ,OAAA,KACAH,UAAA,KACAM,UAAA,EACA7hC,QAAA,EACA4hC,SAAA,EACAD,UAAA,EACAtvF,QAAA,MAKA,OAAAgwF,GAAA3hJ,EAAAw0B,GAWA,QAAAwtH,GAAAhiJ,EAAAw0B,EAAAt7B,GAGA,OAFA0kJ,MAEAlsJ,EAAA,EAAiBA,EAAAsO,EAAApO,OAAiBF,IAClCksJ,EAAA9oJ,KAAAmtJ,EAAAjiJ,EAAAtO,GAAA8iC,EAAAt7B,GAAA7H,OAKA,OAAAswJ,GAFA,GAAA75E,QAAA,MAAA81E,EAAAj6I,KAAA,SAAAi+I,EAAA1oJ,IAEAs7B,GAWA,QAAA0tH,GAAAliJ,EAAAw0B,EAAAt7B,GACA,MAAAipJ,GAAAtsI,EAAA7V,EAAA9G,GAAAs7B,EAAAt7B,GAWA,QAAAipJ,GAAAr8E,EAAAtxC,EAAAt7B,GACA6gE,GAAAvlC,KACAt7B,EAAiCs7B,GAAAt7B,EACjCs7B,MAGAt7B,OAOA,QALAk9B,GAAAl9B,EAAAk9B,OACAipC,GAAA,IAAAnmE,EAAAmmE,IACAi+E,EAAA,GAGA5rJ,EAAA,EAAiBA,EAAAo0E,EAAAl0E,OAAmBF,IAAA,CACpC,GAAAgwJ,GAAA57E,EAAAp0E,EAEA,oBAAAgwJ,GACApE,GAAA+D,EAAAK,OACK,CACL,GAAAV,GAAAK,EAAAK,EAAAV,QACAn/F,EAAA,MAAA6/F,EAAA/vF,QAAA,GAEAn9B,GAAA1/B,KAAA4sJ,GAEAA,EAAApiC,SACAz9D,GAAA,MAAAm/F,EAAAn/F,EAAA,MAOAA,EAJA6/F,EAAAP,SACAO,EAAAR,QAGAF,EAAA,IAAAn/F,EAAA,KAFA,MAAAm/F,EAAA,IAAAn/F,EAAA,MAKAm/F,EAAA,IAAAn/F,EAAA,IAGAy7F,GAAAz7F,GAIA,GAAAg/F,GAAAQ,EAAAnoJ,EAAA2nJ,WAAA,KACAuB,EAAA9E,EAAAhnJ,OAAAuqJ,EAAAjvJ,UAAAivJ,CAkBA,OAZAzqH,KACAknH,GAAA8E,EAAA9E,EAAAhnJ,MAAA,GAAAuqJ,EAAAjvJ,QAAA0rJ,GAAA,MAAAuD,EAAA,WAIAvD,GADAj+E,EACA,IAIAjpC,GAAAgsH,EAAA,SAAAvB,EAAA,MAGAc,EAAA,GAAA75E,QAAA,IAAAw1E,EAAAsE,EAAA1oJ,IAAAs7B,GAeA,QAAAytH,GAAAjiJ,EAAAw0B,EAAAt7B,GAQA,MAPA6gE,IAAAvlC,KACAt7B,EAAiCs7B,GAAAt7B,EACjCs7B,MAGAt7B,QAEA8G,YAAA8nE,QACAg6E,EAAA9hJ,EAAkD,GAGlD+5D,GAAA/5D,GACAgiJ,EAA2C,EAA8B,EAAA9oJ,GAGzEgpJ,EAA0C,EAA8B,EAAAhpJ,GAYxE,QAAAmpJ,GACAriJ,EACAgX,EACAsrI,GAEA,IAIA,OAFAC,GAAAviJ,KACAuiJ,GAAAviJ,GAAAmK,GAAAsoE,QAAAzyE,KACAgX,OAAiCyqI,QAAA,IAC9B,MAAAplJ,GAIH,UAMA,QAAAmmJ,GACAC,EACAC,EACAC,EACAC,GAGA,GAAAC,GAAAH,MACAI,EAAAH,GAAAzqJ,OAAAsd,OAAA,MACAutI,EAAAH,GAAA1qJ,OAAAsd,OAAA,KAEAitI,GAAA/tJ,QAAA,SAAA4oJ,GACA0F,EAAAH,EAAAC,EAAAC,EAAAzF,IAIA,QAAA5rJ,GAAA,EAAAguC,EAAAmjH,EAAAjxJ,OAAsCF,EAAAguC,EAAOhuC,IAC7C,MAAAmxJ,EAAAnxJ,KACAmxJ,EAAA/tJ,KAAA+tJ,EAAA10I,OAAAzc,EAAA,OACAguC,IACAhuC,IAIA,QACAmxJ,WACAC,UACAC,WAIA,QAAAC,GACAH,EACAC,EACAC,EACAzF,EACA7jJ,EACAwpJ,GAEA,GAAAjjJ,GAAAs9I,EAAAt9I,KACA9E,EAAAoiJ,EAAApiJ,KAUAgoJ,EAAAC,EAAAnjJ,EAAAvG,GACA2pJ,EAAA9F,EAAA8F,uBAEA,kBAAA9F,GAAA+F,gBACAD,EAAAvB,UAAAvE,EAAA+F,cAGA,IAAAr8C,IACAhnG,KAAAkjJ,EACAI,MAAAC,EAAAL,EAAAE,GACApzF,WAAAstF,EAAAttF,aAAqC/2D,QAAAqkJ,EAAA7wI,WACrC2E,aACAlW,OACAzB,SACAwpJ,UACAO,SAAAlG,EAAAkG,SACApiF,YAAAk8E,EAAAl8E,YACA6gB,KAAAq7D,EAAAr7D,SACAnlF,MAAA,MAAAwgJ,EAAAxgJ,SAEAwgJ,EAAAttF,WACAstF,EAAAxgJ,OACW7D,QAAAqkJ,EAAAxgJ,OA2BX,IAxBAwgJ,EAAA58F,UAgBA48F,EAAA58F,SAAAhsD,QAAA,SAAAsH,GACA,GAAAynJ,GAAAR,EACAtC,EAAAsC,EAAA,IAAAjnJ,EAAA,UACAm9C,EACA6pG,GAAAH,EAAAC,EAAAC,EAAA/mJ,EAAAgrG,EAAAy8C,SAIAtqG,KAAAmkG,EAAAnvH,MAAA,EACA91B,MAAA1F,QAAA2qJ,EAAAnvH,OACAmvH,EAAAnvH,OACAmvH,EAAAnvH,QAEAz5B,QAAA,SAAAy5B,GACA,GAAAu1H,IACA1jJ,KAAAmuB,EACAuyB,SAAA48F,EAAA58F,SAEAsiG,GACAH,EACAC,EACAC,EACAW,EACAjqJ,EACAutG,EAAAhnG,MAAA,OAKA8iJ,EAAA97C,EAAAhnG,QACA6iJ,EAAA/tJ,KAAAkyG,EAAAhnG,MACA8iJ,EAAA97C,EAAAhnG,MAAAgnG,GAGA9rG,IACA6nJ,EAAA7nJ,KACA6nJ,EAAA7nJ,GAAA8rG,IAWA,QAAAu8C,GAAAvjJ,EAAAojJ,GACA,GAAAE,GAAAn5I,GAAAnK,KAAAojJ,EAQA,OAAAE,GAGA,QAAAH,GAAAnjJ,EAAAvG,GAEA,MADAuG,KAAAgY,QAAA,UACA,MAAAhY,EAAA,GAAwBA,EACxB,MAAAvG,EAAuBuG,EACvB2gJ,EAAAlnJ,EAAA,SAAAuG,GAMA,QAAA2jJ,GACAhuE,EACA9jB,EACA03D,EACA00B,GAEA,GAAAz5G,GAAA,gBAAAmxC,IAAwC31E,KAAA21E,GAAYA,CAEpD,IAAAnxC,EAAAtpC,MAAAspC,EAAAo/G,YACA,MAAAp/G,EAIA,KAAAA,EAAAxkC,MAAAwkC,EAAAxtB,QAAA66C,EAAA,CACArtB,EAAAihF,KAAoBjhF,GACpBA,EAAAo/G,aAAA,CACA,IAAA5sI,GAAAyuG,OAAiC5zD,EAAA76C,QAAAwtB,EAAAxtB,OACjC,IAAA66C,EAAA32D,KACAspC,EAAAtpC,KAAA22D,EAAA32D,KACAspC,EAAAxtB,aACK,IAAA66C,EAAAmlF,QAAAplJ,OAAA,CACL,GAAAiyJ,GAAAhyF,EAAAmlF,QAAAnlF,EAAAmlF,QAAAplJ,OAAA,GAAAoO,IACAwkC,GAAAxkC,KAAAqiJ,EAAAwB,EAAA7sI,EAAA,QAAA66C,EAAA,MAIA,MAAArtB,GAGA,GAAAs/G,GAAAr3H,EAAA+X,EAAAxkC,MAAA,IACA+jJ,EAAAlyF,KAAA7xD,MAAA,IACAA,EAAA8jJ,EAAA9jJ,KACAqgJ,EAAAyD,EAAA9jJ,KAAA+jJ,EAAAx6B,GAAA/kF,EAAA+kF,QACAw6B,EAEA/5I,EAAAuzI,EACAuG,EAAA95I,MACAw6B,EAAAx6B,MACAi0I,KAAA/kJ,QAAAykJ,YAGAp7F,EAAA/d,EAAA+d,MAAAuhG,EAAAvhG,IAKA,OAJAA,IAAA,MAAAA,EAAAh1B,OAAA,KACAg1B,EAAA,IAAAA,IAIAqhG,aAAA,EACA5jJ,OACAgK,QACAu4C,QAIA,QAAAkjE,GAAAh/G,EAAAC,GACA,OAAAvU,KAAAuU,GACAD,EAAAtU,GAAAuU,EAAAvU,EAEA,OAAAsU,GAMA,QAAAu9I,GACAvB,EACAxE,GAOA,QAAAgG,GAAAxB,GACAD,EAAAC,EAAAI,EAAAC,EAAAC,GAGA,QAAAtmI,GACAk5D,EACAuuE,EACAlG,GAEA,GAAA/1B,GAAA07B,EAAAhuE,EAAAuuE,GAAA,EAAAjG,GACA/iJ,EAAA+sH,EAAA/sH,IAEA,IAAAA,EAAA,CACA,GAAA8rG,GAAA+7C,EAAA7nJ,EAIA,KAAA8rG,EAAoB,MAAAm9C,GAAA,KAAAl8B,EACpB,IAAAm8B,GAAAp9C,EAAAs8C,MAAA9uH,KACAt/B,OAAA,SAAA/C,GAAgC,OAAAA,EAAAgvJ,WAChCvsJ,IAAA,SAAAzC,GAA6B,MAAAA,GAAA+I,MAM7B,IAJA,gBAAA+sH,GAAAjxG,SACAixG,EAAAjxG,WAGAktI,GAAA,gBAAAA,GAAAltI,OACA,OAAA7kB,KAAA+xJ,GAAAltI,SACA7kB,IAAA81H,GAAAjxG,SAAAotI,EAAA5wJ,QAAArB,IAAA,IACA81H,EAAAjxG,OAAA7kB,GAAA+xJ,EAAAltI,OAAA7kB,GAKA,IAAA60G,EAEA,MADAihB,GAAAjoH,KAAAqiJ,EAAAr7C,EAAAhnG,KAAAioH,EAAAjxG,OAAA,gBAAA9b,EAAA,KACAipJ,EAAAn9C,EAAAihB,EAAA+1B,OAEK,IAAA/1B,EAAAjoH,KAAA,CACLioH,EAAAjxG,SACA,QAAAtlB,GAAA,EAAqBA,EAAAmxJ,EAAAjxJ,OAAqBF,IAAA,CAC1C,GAAAsO,GAAA6iJ,EAAAnxJ,GACA2yJ,EAAAvB,EAAA9iJ,EACA,IAAAskJ,EAAAD,EAAAf,MAAAr7B,EAAAjoH,KAAAioH,EAAAjxG,QACA,MAAAmtI,GAAAE,EAAAp8B,EAAA+1B,IAKA,MAAAmG,GAAA,KAAAl8B,GAGA,QAAAu7B,GACAx8C,EACAihB,GAEA,GAAAs8B,GAAAv9C,EAAAw8C,SACAA,EAAA,kBAAAe,GACAA,EAAAxG,EAAA/2C,EAAAihB,EAAA,KAAAg2B,IACAsG,CAMA,IAJA,gBAAAf,KACAA,GAAkBxjJ,KAAAwjJ,KAGlBA,GAAA,gBAAAA,GAMA,MAAAW,GAAA,KAAAl8B,EAGA,IAAAxhD,GAAA+8E,EACAtoJ,EAAAurE,EAAAvrE,KACA8E,EAAAymE,EAAAzmE,KACAgK,EAAAi+G,EAAAj+G,MACAu4C,EAAA0lE,EAAA1lE,KACAvrC,EAAAixG,EAAAjxG,MAKA,IAJAhN,EAAAy8D,EAAAr0E,eAAA,SAAAq0E,EAAAz8D,QACAu4C,EAAAkkB,EAAAr0E,eAAA,QAAAq0E,EAAAlkB,OACAvrC,EAAAyvD,EAAAr0E,eAAA,UAAAq0E,EAAAzvD,SAEA9b,EAAA,CAEA6nJ,EAAA7nJ,EAIA,OAAAuhB,IACAmnI,aAAA,EACA1oJ,OACA8O,QACAu4C,OACAvrC,cACOmiC,GAAA8uE,GACF,GAAAjoH,EAAA,CAEL,GAAA6jJ,GAAAW,EAAAxkJ,EAAAgnG,EAIA,OAAAvqF,IACAmnI,aAAA,EACA5jJ,KAJAqiJ,EAAAwB,EAAA7sI,EAAA,6BAAA6sI,EAAA,KAKA75I,QACAu4C,YACOpJ,GAAA8uE,GAKP,MAAAk8B,GAAA,KAAAl8B,GAIA,QAAA95F,GACA64E,EACAihB,EACAg7B,GAEA,GAAAwB,GAAApC,EAAAY,EAAAh7B,EAAAjxG,OAAA,4BAAAisI,EAAA,KACAyB,EAAAjoI,GACAmnI,aAAA,EACA5jJ,KAAAykJ,GAEA,IAAAC,EAAA,CACA,GAAA1N,GAAA0N,EAAA1N,QACA2N,EAAA3N,IAAAplJ,OAAA,EAEA,OADAq2H,GAAAjxG,OAAA0tI,EAAA1tI,OACAmtI,EAAAQ,EAAA18B,GAEA,MAAAk8B,GAAA,KAAAl8B,GAGA,QAAAk8B,GACAn9C,EACAihB,EACA+1B,GAEA,MAAAh3C,MAAAw8C,SACAA,EAAAx8C,EAAAg3C,GAAA/1B,GAEAjhB,KAAAi8C,QACA90H,EAAA64E,EAAAihB,EAAAjhB,EAAAi8C,SAEAlF,EAAA/2C,EAAAihB,EAAA+1B,EAAAC,GAxJA,GAAA5iH,GAAAmnH,EAAAC,GACAI,EAAAxnH,EAAAwnH,SACAC,EAAAznH,EAAAynH,QACAC,EAAA1nH,EAAA0nH,OAwJA,QACAtmI,QACAwnI,aAIA,QAAAK,GACAhB,EACAtjJ,EACAgX,GAEA,GAAAjW,GAAAf,EAAAyc,MAAA6mI,EAEA,KAAAviJ,EACA,QACG,KAAAiW,EACH,QAGA,QAAAtlB,GAAA,EAAAC,EAAAoP,EAAAnP,OAAiCF,EAAAC,IAASD,EAAA,CAC1C,GAAAS,GAAAmxJ,EAAA9uH,KAAA9iC,EAAA,GACAoqB,EAAA,gBAAA/a,GAAArP,GAAAkzJ,mBAAA7jJ,EAAArP,IAAAqP,EAAArP,EACAS,KACA6kB,EAAA7kB,EAAA+I,MAAA4gB,GAIA,SAGA,QAAA0oI,GAAAxkJ,EAAAgnG,GACA,MAAAq5C,GAAArgJ,EAAAgnG,EAAAvtG,OAAAutG,EAAAvtG,OAAAuG,KAAA,QAQA,QAAA6kJ,KACAtzI,OAAA65B,iBAAA,oBAAA/uC,GACAyoJ,IACAzoJ,EAAAg4B,OAAAh4B,EAAAg4B,MAAAliC,KACA4yJ,GAAA1oJ,EAAAg4B,MAAAliC,OAKA,QAAA6yJ,GACA/G,EACA9jG,EACApoD,EACAkzJ,GAEA,GAAAhH,EAAAiH,IAAA,CAIA,GAAAC,GAAAlH,EAAA/kJ,QAAAksJ,cACAD,IASAlH,EAAAiH,IAAAztE,UAAA,WACA,GAAA11E,GAAAsjJ,IACAC,EAAAH,EAAAhrG,EAAApoD,EAAAkzJ,EAAAljJ,EAAA,KACA,IAAAujJ,EAAA,CAGA,GAAA9yJ,GAAA,gBAAA8yJ,EACA,IAAA9yJ,GAAA,gBAAA8yJ,GAAAC,SAAA,CACA,GAAA7qJ,GAAAvH,SAAAggE,cAAAmyF,EAAAC,SACA,IAAA7qJ,EAAA,CACA,GAAA4yF,GAAAg4D,EAAAh4D,QAAA,gBAAAg4D,GAAAh4D,OAAAg4D,EAAAh4D,SACAA,GAAAk4D,EAAAl4D,GACAvrF,EAAA0jJ,EAAA/qJ,EAAA4yF,OACOo4D,GAAAJ,KACPvjJ,EAAA4jJ,EAAAL,QAEK9yJ,IAAAkzJ,EAAAJ,KACLvjJ,EAAA4jJ,EAAAL,GAGAvjJ,IACAwP,OAAAq0I,SAAA7jJ,EAAAvB,EAAAuB,EAAArB,OAKA,QAAAokJ,KACA,GAAA3yJ,GAAA0zJ,IACA1zJ,KACA2zJ,GAAA3zJ,IACAqO,EAAA+Q,OAAAw0I,YACArlJ,EAAA6Q,OAAAy0I,cAKA,QAAAX,KACA,GAAAlzJ,GAAA0zJ,IACA,IAAA1zJ,EACA,MAAA2zJ,IAAA3zJ,GAIA,QAAAszJ,GAAA/qJ,EAAA4yF,GACA,GAAA24D,GAAA9yJ,SAAA2vF,gBACAojE,EAAAD,EAAA7xI,wBACA+xI,EAAAzrJ,EAAA0Z,uBACA,QACA5T,EAAA2lJ,EAAAtyI,KAAAqyI,EAAAryI,KAAAy5E,EAAA9sF,EACAE,EAAAylJ,EAAApyI,IAAAmyI,EAAAnyI,IAAAu5E,EAAA5sF,GAIA,QAAAglJ,GAAAnxJ,GACA,MAAA6xJ,IAAA7xJ,EAAAiM,IAAA4lJ,GAAA7xJ,EAAAmM,GAGA,QAAAilJ,GAAApxJ,GACA,OACAiM,EAAA4lJ,GAAA7xJ,EAAAiM,GAAAjM,EAAAiM,EAAA+Q,OAAAw0I,YACArlJ,EAAA0lJ,GAAA7xJ,EAAAmM,GAAAnM,EAAAmM,EAAA6Q,OAAAy0I,aAIA,QAAAR,GAAAjxJ,GACA,OACAiM,EAAA4lJ,GAAA7xJ,EAAAiM,GAAAjM,EAAAiM,EAAA,EACAE,EAAA0lJ,GAAA7xJ,EAAAmM,GAAAnM,EAAAmM,EAAA,GAIA,QAAA0lJ,IAAA9lI,GACA,sBAAAA,GA2BA,QAAA+lI,MACA,MAAAC,IAAAC,MAAAzpI,QAAA,GAGA,QAAA+oI,MACA,MAAAW,IAGA,QAAAzB,IAAA5yJ,GACAq0J,GAAAr0J,EAGA,QAAAs0J,IAAAhzI,EAAAuE,GACA8sI,GAGA,IAAAhF,GAAAvuI,OAAAuuI,OACA,KACA9nI,EACA8nI,EAAA5rH,cAA4B/hC,IAAAq0J,IAAY,GAAA/yI,IAExC+yI,GAAAH,KACAvG,EAAA2G,WAAyBt0J,IAAAq0J,IAAY,GAAA/yI,IAElC,MAAApX,GACHkV,OAAA02G,SAAAjwG,EAAA,oBAAAvE,IAIA,QAAAygB,IAAAzgB,GACAgzI,GAAAhzI,GAAA,GAKA,QAAAizI,IAAAv+F,EAAA5zB,EAAA//B,GACA,GAAAqqC,GAAA,SAAA10B,GACAA,GAAAg+C,EAAAv2D,OACA4C,IAEA2zD,EAAAh+C,GACAoqB,EAAA4zB,EAAAh+C,GAAA,WACA00B,EAAA10B,EAAA,KAGA00B,EAAA10B,EAAA,GAIA00B,GAAA,GAKA,QAAA8nH,IAAA3P,GACA,gBAAA78F,EAAApoD,EAAAyyC,GACA,GAAAoiH,IAAA,EACAvyE,EAAA,EACAp8C,EAAA,IAEA4uH,IAAA7P,EAAA,SAAAn8F,EAAA0d,EAAA97C,EAAAtqB,GAMA,qBAAA0oD,QAAA1B,KAAA0B,EAAA8Q,IAAA,CACAi7F,GAAA,EACAvyE,GAEA,IA0BA77C,GA1BAG,EAAA+hB,GAAA,SAAAosG,GACAA,EAAAxqH,YAAAwqH,EAAA7tJ,UACA6tJ,IAAA7tJ,SAGA4hD,EAAA4I,SAAA,kBAAAqjG,GACAA,EACA1tH,GAAArmC,OAAA+zJ,GACArqI,EAAAuzC,WAAA79D,GAAA20J,IACAzyE,GACA,GACA7vC,MAIAuf,EAAArJ,GAAA,SAAAsJ,GACA,GAAArvB,GAAA,qCAAAxiC,EAAA,KAAA6xD,CAEA/rB,KACAA,EAAAmlH,EAAAp5F,GACAA,EACA,GAAArtD,OAAAg+B,GACA6P,EAAAvM,KAKA,KACAO,EAAAqiB,EAAAliB,EAAAorB,GACS,MAAA1nD,GACT0nD,EAAA1nD,GAEA,GAAAm8B,EACA,qBAAAA,GAAA9D,KACA8D,EAAA9D,KAAAiE,EAAAorB,OACW,CAEX,GAAAd,GAAAzqB,EAAA/rB,SACAw2C,IAAA,kBAAAA,GAAAvuB,MACAuuB,EAAAvuB,KAAAiE,EAAAorB,OAOA6iG,GAAoBpiH,KAIpB,QAAAqiH,IACA7P,EACAziH,GAEA,MAAAwyH,IAAA/P,EAAApiJ,IAAA,SAAAmM,GACA,MAAA7I,QAAAs8B,KAAAzzB,EAAAivD,YAAAp7D,IAAA,SAAAzC,GAAyD,MAAAoiC,GACzDxzB,EAAAivD,WAAA79D,GACA4O,EAAAqQ,UAAAjf,GACA4O,EAAA5O,QAKA,QAAA40J,IAAA/pI,GACA,MAAA3kB,OAAArE,UAAA2B,OAAAD,SAAAsnB,GAOA,QAAA09B,IAAAnmB,GACA,GAAAomB,IAAA,CACA,mBAEA,IADA,GAAAplD,MAAA5D,EAAA8D,UAAA7D,OACAD,KAAA4D,EAAA5D,GAAA8D,UAAA9D,EAEA,KAAAgpD,EAEA,MADAA,IAAA,EACApmB,EAAA7+B,MAAAG,KAAAN,IA0KA,QAAAyxJ,IAAArpH,GACA,IAAAA,EACA,GAAA2d,GAAA,CAEA,GAAA2rG,GAAA9zJ,SAAAggE,cAAA,OACAx1B,GAAAspH,KAAAtuI,aAAA,aAEAglB,IAAA3lB,QAAA,6BAEA2lB,GAAA,GAQA,OAJA,MAAAA,EAAApQ,OAAA,KACAoQ,EAAA,IAAAA,GAGAA,EAAA3lB,QAAA,UAGA,QAAAkvI,IACAr1F,EACArtB,GAEA,GAAA9yC,GACA2M,EAAAF,KAAAE,IAAAwzD,EAAAjgE,OAAA4yC,EAAA5yC,OACA,KAAAF,EAAA,EAAaA,EAAA2M,GACbwzD,EAAAngE,KAAA8yC,EAAA9yC,GADsBA,KAKtB,OACAguF,QAAAl7C,EAAAluC,MAAA,EAAA5E,GACAy1J,UAAA3iH,EAAAluC,MAAA5E,GACA01J,YAAAv1F,EAAAv7D,MAAA5E,IAIA,QAAA21J,IACAtgD,EACA7rG,EACA7F,EACA0xF,GAEA,GAAAugE,GAAAT,GAAA9/C,EAAA,SAAAlsD,EAAA0sG,EAAA9qI,EAAAtqB,GACA,GAAAq1J,GAAAC,GAAA5sG,EAAA3/C,EACA,IAAAssJ,EACA,MAAAnvJ,OAAA1F,QAAA60J,GACAA,EAAA5yJ,IAAA,SAAA4yJ,GAAsC,MAAAnyJ,GAAAmyJ,EAAAD,EAAA9qI,EAAAtqB,KACtCkD,EAAAmyJ,EAAAD,EAAA9qI,EAAAtqB,IAGA,OAAA40J,IAAAhgE,EAAAugE,EAAAvgE,UAAAugE,GAGA,QAAAG,IACA5sG,EACA1oD,GAMA,MAJA,kBAAA0oD,KAEAA,EAAAzhB,GAAArmC,OAAA8nD,IAEAA,EAAA3hD,QAAA/G,GAGA,QAAAu1J,IAAAN,GACA,MAAAC,IAAAD,EAAA,mBAAAO,IAAA,GAGA,QAAAC,IAAAloE,GACA,MAAA2nE,IAAA3nE,EAAA,oBAAAioE,IAGA,QAAAA,IAAAH,EAAAD,GACA,GAAAA,EACA,kBACA,MAAAC,GAAA9xJ,MAAA6xJ,EAAA9xJ,YAKA,QAAAoyJ,IACAV,EACA/vE,EACA0wE,GAEA,MAAAT,IAAAF,EAAA,4BAAAK,EAAAjvF,EAAA97C,EAAAtqB,GACA,MAAA41J,IAAAP,EAAA/qI,EAAAtqB,EAAAilF,EAAA0wE,KAIA,QAAAC,IACAP,EACA/qI,EACAtqB,EACAilF,EACA0wE,GAEA,gBAAA3tG,EAAApoD,EAAAyyC,GACA,MAAAgjH,GAAArtG,EAAApoD,EAAA,SAAAyC,GACAgwC,EAAAhwC,GACA,kBAAAA,IACA4iF,EAAAtiF,KAAA,WAMAkzJ,GAAAxzJ,EAAAioB,EAAArL,UAAAjf,EAAA21J,QAOA,QAAAE,IACAxzJ,EACA4c,EACAjf,EACA21J,GAEA12I,EAAAjf,GACAqC,EAAA4c,EAAAjf,IACG21J,KACH5jG,WAAA,WACA8jG,GAAAxzJ,EAAA4c,EAAAjf,EAAA21J,IACK,IA2EL,QAAAG,IAAAtqH,GACA,GAAA39B,GAAAuR,OAAA02G,SAAAnB,QAIA,OAHAnpF,IAAA,IAAA39B,EAAAxM,QAAAmqC,KACA39B,IAAA1J,MAAAqnC,EAAA/rC,UAEAoO,GAAA,KAAAuR,OAAA02G,SAAAlB,OAAAx1G,OAAA02G,SAAA1lE,KAmEA,QAAA2lG,IAAAvqH,GACA,GAAAsqF,GAAAggC,GAAAtqH,EACA,YAAApkB,KAAA0uG,GAIA,MAHA12G,QAAA02G,SAAAjwG,QACA2oI,EAAAhjH,EAAA,KAAAsqF,KAEA,EAIA,QAAAkgC,MACA,GAAAnoJ,GAAAooJ,IACA,aAAApoJ,EAAAutB,OAAA,KAGA86H,GAAA,IAAAroJ,IACA,GAGA,QAAAooJ,MAGA,GAAA1hC,GAAAn1G,OAAA02G,SAAAvB,KACAv8G,EAAAu8G,EAAAlzH,QAAA,IACA,YAAA2W,EAAA,GAAAu8G,EAAApwH,MAAA6T,EAAA,GAGA,QAAAm+I,IAAAtoJ,GACAuR,OAAA02G,SAAA1lE,KAAAviD,EAGA,QAAAqoJ,IAAAroJ,GACA,GAAA0mH,GAAAn1G,OAAA02G,SAAAvB,KACAh1H,EAAAg1H,EAAAlzH,QAAA,KACAmqC,EAAAjsC,GAAA,EAAAg1H,EAAApwH,MAAA,EAAA5E,GAAAg1H,CACAn1G,QAAA02G,SAAAjwG,QAAA2lB,EAAA,IAAA39B,GAsPA,QAAAuoJ,IAAAp1I,EAAAohB,GAEA,MADAphB,GAAAre,KAAAy/B,GACA,WACA,GAAA7iC,GAAAyhB,EAAA3f,QAAA+gC,EACA7iC,IAAA,GAAiByhB,EAAAhF,OAAAzc,EAAA,IAIjB,QAAA82J,IAAA7qH,EAAAwgH,EAAAv/D,GACA,GAAA5+E,GAAA,SAAA4+E,EAAA,IAAAu/D,GACA,OAAAxgH,GAAAgjH,EAAAhjH,EAAA,IAAA39B,KAv6EA,GAscAo5B,IAtcA4mH,IACA9kJ,KAAA,cACApB,YAAA,EACAgD,OACA5B,MACAlF,KAAA03B,OACAz0B,QAAA,YAGAE,OAAA,SAAAo/D,EAAAl9B,GACA,GAAAv+B,GAAAu+B,EAAAv+B,MACA4jD,EAAArlB,EAAAqlB,SACAjnD,EAAA4hC,EAAA5hC,OACApF,EAAAgnC,EAAAhnC,IAEAA,GAAAo0J,YAAA,CAaA,KATA,GAAAxuJ,GAAAR,EAAA+1D,eACAt0D,EAAA4B,EAAA5B,KACAoiJ,EAAA7jJ,EAAAivJ,OACA5uG,EAAArgD,EAAAkvJ,mBAAAlvJ,EAAAkvJ,qBAIAC,EAAA,EACAC,GAAA,EACApvJ,KAAAmmJ,cAAAnmJ,GACAA,EAAAF,QAAAE,EAAAF,OAAAlF,KAAAo0J,YACAG,IAEAnvJ,EAAAusD,YACA6iG,GAAA,GAEApvJ,IAAAksD,OAKA,IAHAtxD,EAAAy0J,gBAAAF,EAGAC,EACA,MAAA5uJ,GAAA6/C,EAAA5+C,GAAA7G,EAAAqsD,EAGA,IAAAs2F,GAAAsG,EAAAtG,QAAA4R,EAEA,KAAA5R,EAEA,MADAl9F,GAAA5+C,GAAA,KACAjB,GAGA,IAAAwS,GAAAqtC,EAAA5+C,GAAA87I,EAAAhnF,WAAA90D,EAwBA,OApBA7G,GAAAsrJ,sBAAA,SAAAxkG,EAAAr/B,GAEA,GAAA+1C,GAAAmlF,EAAA5lI,UAAAlW,IAEA4gB,GAAA+1C,IAAA1W,IACAr/B,GAAA+1C,IAAA1W,KAEA67F,EAAA5lI,UAAAlW,GAAA4gB,KAMKznB,EAAAiF,OAAAjF,EAAAiF,UAA6Bk9E,SAAA,SAAAje,EAAAhY,GAClCy2F,EAAA5lI,UAAAlW,GAAAqlD,EAAAyR,mBAIA39D,EAAAyI,MAAAugJ,EAAAC,EAAAtG,EAAAl6I,OAAAk6I,EAAAl6I,MAAA5B,IAEAjB,EAAAwS,EAAApY,EAAAqsD,KA2BAqoG,GAAA,WACAC,GAAA,SAAA/mH,GAA0C,UAAAA,EAAAb,WAAA,GAAAjpC,SAAA,KAC1C8wJ,GAAA,OAKAh7H,GAAA,SAAArS,GAA6B,MAAAgoG,oBAAAhoG,GAC7B5D,QAAA+wI,GAAAC,IACAhxI,QAAAixI,GAAA,MAEAroE,GAAAgkE,mBAuFAnG,GAAA,OA0BAD,GAAAT,EAAA,MACA/9I,KAAA,MAyFAkpJ,IAAAx7H,OAAAx1B,QACAixJ,IAAAz7H,OAAAr1B,OAEA4nJ,IACA/kJ,KAAA,cACA4B,OACAq9C,IACAnkD,KAAAkzJ,GACAE,UAAA,GAEA3oG,KACAzqD,KAAA03B,OACAz0B,QAAA,KAEAowJ,MAAAvpG,QACAypE,OAAAzpE,QACA9nC,QAAA8nC,QACAkiB,YAAAt0C,OACA47H,iBAAA57H,OACA9hB,OACA5V,KAAAmzJ,GACAlwJ,QAAA,UAGAE,OAAA,SAAAc,GACA,GAAA6gC,GAAAjlC,KAEAooJ,EAAApoJ,KAAA0zJ,QACA13F,EAAAh8D,KAAA6yJ,OACArtH,EAAA4iH,EAAAtlH,QAAA9iC,KAAAskD,GAAA0X,EAAAh8D,KAAA0zH,QACAtB,EAAA5sF,EAAA4sF,SACAq1B,EAAAjiH,EAAAiiH,MACA52B,EAAArrF,EAAAqrF,KAEA8iC,KACAC,EAAAxL,EAAA/kJ,QAAAwwJ,gBACAC,EAAA1L,EAAA/kJ,QAAA0wJ,qBAEAC,EAAA,MAAAJ,EACA,qBACAA,EACAK,EAAA,MAAAH,EACA,2BACAA,EACA3nF,EAAA,MAAAnsE,KAAAmsE,YACA6nF,EACAh0J,KAAAmsE,YACAsnF,EAAA,MAAAzzJ,KAAAyzJ,iBACAQ,EACAj0J,KAAAyzJ,iBACAS,EAAA9hC,EAAAjoH,KACA+9I,EAAA,KAAA91B,EAAA,KAAAg2B,GACAX,CAEAkM,GAAAF,GAAA/K,EAAA1sF,EAAAk4F,GACAP,EAAAxnF,GAAAnsE,KAAAwzJ,MACAG,EAAAF,GACAvK,EAAAltF,EAAAk4F,EAEA,IAAA9jJ,GAAA,SAAA5J,GACA4iJ,EAAA5iJ,KACAy+B,EAAA9iB,QACAimI,EAAAjmI,QAAAiwG,GAEAg2B,EAAAnpJ,KAAAmzH,KAKA5lH,GAAc2nJ,MAAA/K,EACd5mJ,OAAA1F,QAAAkD,KAAA+V,OACA/V,KAAA+V,MAAAlX,QAAA,SAAA2H,GAAuCgG,EAAAhG,GAAA4J,IAEvC5D,EAAAxM,KAAA+V,OAAA3F,CAGA,IAAA5R,IACAk+D,MAAAi3F,EAGA,UAAA3zJ,KAAA4qD,IACApsD,EAAAgO,KACAhO,EAAA+tD,OAAoBskE,YACf,CAEL,GAAAjgH,GAAA+4I,EAAA3pJ,KAAA8xD,OAAA1uD,QACA,IAAAwN,EAAA,CAEAA,EAAAs6C,UAAA,CACA,IAAAhuD,GAAAqmC,GAAA7lC,KAAAR,QACA0T,EAAApS,KAAAtB,KAAsC0T,EAAApS,OACtCgO,MACAoE,EAAApS,KAAA+tD,MAAArvD,KAA6C0T,EAAApS,KAAA+tD,QAC7CskE,WAGAryH,GAAAgO,KAIA,MAAApI,GAAApE,KAAA4qD,IAAApsD,EAAAwB,KAAA8xD,OAAA1uD,WA0FAqiD,GAAA,mBAAA/pC,QAyEAwoD,GAAA1hE,MAAA1F,SAAA,SAAAqqB,GACA,wBAAA9kB,OAAAlE,UAAAmE,SAAA1G,KAAAurB,IAMA7S,GAAA83I,EACAgI,GAAAp0I,EACAq0I,GAAAz3E,EACA03E,GAAA7I,EACA8I,GAAAjI,EAOArB,GAAA,GAAAh5E,SAGA,UAOA,0GACAnkE,KAAA,SAgZAwG,IAAA0L,MAAAo0I,GACA9/I,GAAAsoE,QAAAy3E,GACA//I,GAAAm3I,iBAAA6I,GACAhgJ,GAAAg4I,eAAAiI,EAIA,IAAA7H,IAAArqJ,OAAAsd,OAAA,MA0bAswI,GAAA5tJ,OAAAsd,OAAA,MA4GA60I,GAAA/uG,IAAA,WACA,GAAA5vB,GAAAna,OAAAia,UAAAQ,SAEA,SACA,IAAAN,EAAAl4B,QAAA,oBAAAk4B,EAAAl4B,QAAA,iBACA,IAAAk4B,EAAAl4B,QAAA,mBACA,IAAAk4B,EAAAl4B,QAAA,YACA,IAAAk4B,EAAAl4B,QAAA,oBAKA+d,OAAAuuI,SAAA,aAAAvuI,QAAAuuI,YAIAwG,GAAAhrG,IAAA/pC,OAAA+hE,aAAA/hE,OAAA+hE,YAAAizE,IACAh1I,OAAA+hE,YACA37D,KAEA6uI,GAAAH,KA6JAiE,GAAA,SAAArM,EAAAtgH,GACA9nC,KAAAooJ,SACApoJ,KAAA8nC,KAAAqpH,GAAArpH,GAEA9nC,KAAAg8D,QAAA2sF,GACA3oJ,KAAAw+E,QAAA,KACAx+E,KAAA00J,OAAA,EACA10J,KAAA20J,YACA30J,KAAA40J,iBACA50J,KAAA60J,YAGAJ,IAAAt2J,UAAA22J,OAAA,SAAAn2J,GACAqB,KAAArB,MAGA81J,GAAAt2J,UAAA42J,QAAA,SAAAp2J,EAAAq2J,GACAh1J,KAAA00J,MACA/1J,KAEAqB,KAAA20J,SAAA11J,KAAAN,GACAq2J,GACAh1J,KAAA40J,cAAA31J,KAAA+1J,KAKAP,GAAAt2J,UAAA82J,QAAA,SAAAD,GACAh1J,KAAA60J,SAAA51J,KAAA+1J,IAGAP,GAAAt2J,UAAA+2J,aAAA,SAAA9iC,EAAA+iC,EAAAC,GACA,GAAAnwH,GAAAjlC,KAEAynJ,EAAAznJ,KAAAooJ,OAAAxhI,MAAAwrG,EAAApyH,KAAAg8D,QACAh8D,MAAAq1J,kBAAA5N,EAAA,WACAxiH,EAAAqwH,YAAA7N,GACA0N,KAAA1N,GACAxiH,EAAAswH,YAGAtwH,EAAAyvH,QACAzvH,EAAAyvH,OAAA,EACAzvH,EAAA0vH,SAAA91J,QAAA,SAAAF,GAA6CA,EAAA8oJ,OAE1C,SAAAzkH,GACHoyH,GACAA,EAAApyH,GAEAA,IAAAiC,EAAAyvH,QACAzvH,EAAAyvH,OAAA,EACAzvH,EAAA2vH,cAAA/1J,QAAA,SAAAF,GAAkDA,EAAAqkC,SAKlDyxH,GAAAt2J,UAAAk3J,kBAAA,SAAA5N,EAAA0N,EAAAC,GACA,GAAAnwH,GAAAjlC,KAEAg8D,EAAAh8D,KAAAg8D,QACAw1D,EAAA,SAAAxuF,GACAukH,EAAAvkH,KACAiC,EAAA4vH,SAAA94J,OACAkpC,EAAA4vH,SAAAh2J,QAAA,SAAAF,GAA+CA,EAAAqkC,MAE/CvvB,GAAA,6CACAD,QAAA4uB,MAAAY,KAGAoyH,KAAApyH,GAEA,IACA0lH,EAAAjB,EAAAzrF,IAEAyrF,EAAAtG,QAAAplJ,SAAAigE,EAAAmlF,QAAAplJ,OAGA,MADAiE,MAAAu1J,YACA/jC,GAGA,IAAAhsF,GAAA6rH,GAAArxJ,KAAAg8D,QAAAmlF,QAAAsG,EAAAtG,SACAt3D,EAAArkD,EAAAqkD,QACA0nE,EAAA/rH,EAAA+rH,YACAD,EAAA9rH,EAAA8rH,UAEAh/F,KAAAxyD,OAEA+xJ,GAAAN,GAEAvxJ,KAAAooJ,OAAAoN,YAEAzD,GAAAloE,GAEAynE,EAAAvyJ,IAAA,SAAAmM,GAAgC,MAAAA,GAAAqgE,cAEhCulF,GAAAQ,GAGAtxJ,MAAAw+E,QAAAipE,CACA,IAAA36B,GAAA,SAAArpH,EAAAkrC,GACA,GAAA1J,EAAAu5C,UAAAipE,EACA,MAAAj2B,IAEA,KACA/tH,EAAAgkJ,EAAAzrF,EAAA,SAAA1X,IACA,IAAAA,GAAAijG,EAAAjjG,IAEArf,EAAAswH,WAAA,GACA/jC,EAAAltE,IAEA,gBAAAA,IACA,gBAAAA,KACA,gBAAAA,GAAAn6C,MACA,gBAAAm6C,GAAAj/C,OAIAmsH,IACA,gBAAAltE,MAAAniC,QACA8iB,EAAA9iB,QAAAmiC,GAEArf,EAAAhmC,KAAAqlD,IAIA3V,EAAA2V,KAGK,MAAA99C,GACLgrH,EAAAhrH,IAIAqqJ,IAAAv+F,EAAAw6D,EAAA,WACA,GAAA2oC,KAMA5E,IAFAmB,GAAAV,EAAAmE,EAHA,WAA+B,MAAAxwH,GAAA+2B,UAAAyrF,IAI/B3nJ,OAAAmlC,EAAAmjH,OAAAsN,cACA5oC,EAAA,WACA,GAAA7nF,EAAAu5C,UAAAipE,EACA,MAAAj2B,IAEAvsF,GAAAu5C,QAAA,KACA22E,EAAA1N,GACAxiH,EAAAmjH,OAAAiH,KACApqH,EAAAmjH,OAAAiH,IAAAztE,UAAA,WACA6zE,EAAA52J,QAAA,SAAAF,GAA8CA,aAO9C81J,GAAAt2J,UAAAm3J,YAAA,SAAA7N,GACA,GAAA/4G,GAAA1uC,KAAAg8D,OACAh8D,MAAAg8D,QAAAyrF,EACAznJ,KAAArB,IAAAqB,KAAArB,GAAA8oJ,GACAznJ,KAAAooJ,OAAAuN,WAAA92J,QAAA,SAAA4E,GACAA,KAAAgkJ,EAAA/4G,KA0IA,IAAAknH,IAAA,SAAAC,GACA,QAAAD,GAAAxN,EAAAtgH,GACA,GAAA7C,GAAAjlC,IAEA61J,GAAAj6J,KAAAoE,KAAAooJ,EAAAtgH,EAEA,IAAAguH,GAAA1N,EAAA/kJ,QAAAksJ,cAEAuG,IACA9G,IAGAtzI,OAAA65B,iBAAA,oBAAA/uC,GACA,GAAAw1D,GAAA/2B,EAAA+2B,OACA/2B,GAAAiwH,aAAA9C,GAAAntH,EAAA6C,MAAA,SAAA2/G,GACAqO,GACA3G,EAAA/G,EAAAX,EAAAzrF,GAAA,OAiDA,MA3CA65F,KAAAD,EAAA1vG,UAAA2vG,GACAD,EAAAz3J,UAAAkE,OAAAsd,OAAAk2I,KAAA13J,WACAy3J,EAAAz3J,UAAAlC,YAAA25J,EAEAA,EAAAz3J,UAAA43J,GAAA,SAAAvpH,GACA9wB,OAAAuuI,QAAA8L,GAAAvpH,IAGAopH,EAAAz3J,UAAAc,KAAA,SAAAmzH,EAAA+iC,EAAAC,GACA,GAAAnwH,GAAAjlC,KAEAwlC,EAAAxlC,KACAg2J,EAAAxwH,EAAAw2B,OACAh8D,MAAAk1J,aAAA9iC,EAAA,SAAAq1B,GACAmJ,GAAA9F,EAAA7lH,EAAA6C,KAAA2/G,EAAAa,WACA6G,EAAAlqH,EAAAmjH,OAAAX,EAAAuO,GAAA,GACAb,KAAA1N,IACK2N,IAGLQ,EAAAz3J,UAAAgkB,QAAA,SAAAiwG,EAAA+iC,EAAAC,GACA,GAAAnwH,GAAAjlC,KAEAwlC,EAAAxlC,KACAg2J,EAAAxwH,EAAAw2B,OACAh8D,MAAAk1J,aAAA9iC,EAAA,SAAAq1B,GACAppH,GAAAysH,EAAA7lH,EAAA6C,KAAA2/G,EAAAa,WACA6G,EAAAlqH,EAAAmjH,OAAAX,EAAAuO,GAAA,GACAb,KAAA1N,IACK2N,IAGLQ,EAAAz3J,UAAAo3J,UAAA,SAAAt2J,GACA,GAAAmzJ,GAAApyJ,KAAA8nC,QAAA9nC,KAAAg8D,QAAAssF,SAAA,CACA,GAAAtsF,GAAA8uF,EAAA9qJ,KAAA8nC,KAAA9nC,KAAAg8D,QAAAssF,SACArpJ,GAAA2xJ,GAAA50F,GAAA39B,GAAA29B,KAIA45F,EAAAz3J,UAAA83J,mBAAA,WACA,MAAA7D,IAAApyJ,KAAA8nC,OAGA8tH,GACCnB,IAaDyB,GAAA,SAAAL,GACA,QAAAK,GAAA9N,EAAAtgH,EAAAgwB,GACA+9F,EAAAj6J,KAAAoE,KAAAooJ,EAAAtgH,GAEAgwB,GAAAu6F,GAAAryJ,KAAA8nC,OAGAwqH,KAmDA,MAhDAuD,KAAAK,EAAAhwG,UAAA2vG,GACAK,EAAA/3J,UAAAkE,OAAAsd,OAAAk2I,KAAA13J,WACA+3J,EAAA/3J,UAAAlC,YAAAi6J,EAIAA,EAAA/3J,UAAAg4J,eAAA,WACA,GAAAlxH,GAAAjlC,IAEA0b,QAAA65B,iBAAA,wBACA+8G,MAGArtH,EAAAiwH,aAAA3C,KAAA,SAAA9K,GACA+K,GAAA/K,EAAAa,eAKA4N,EAAA/3J,UAAAc,KAAA,SAAAmzH,EAAA+iC,EAAAC,GACAp1J,KAAAk1J,aAAA9iC,EAAA,SAAAq1B,GACAgL,GAAAhL,EAAAa,UACA6M,KAAA1N,IACK2N,IAGLc,EAAA/3J,UAAAgkB,QAAA,SAAAiwG,EAAA+iC,EAAAC,GACAp1J,KAAAk1J,aAAA9iC,EAAA,SAAAq1B,GACA+K,GAAA/K,EAAAa,UACA6M,KAAA1N,IACK2N,IAGLc,EAAA/3J,UAAA43J,GAAA,SAAAvpH,GACA9wB,OAAAuuI,QAAA8L,GAAAvpH,IAGA0pH,EAAA/3J,UAAAo3J,UAAA,SAAAt2J,GACA,GAAA+8D,GAAAh8D,KAAAg8D,QAAAssF,QACAiK,QAAAv2F,IACA/8D,EAAAwzJ,GAAAz2F,GAAAw2F,GAAAx2F,KAIAk6F,EAAA/3J,UAAA83J,mBAAA,WACA,MAAA1D,OAGA2D,GACCzB,IA2CD2B,GAAA,SAAAP,GACA,QAAAO,GAAAhO,EAAAtgH,GACA+tH,EAAAj6J,KAAAoE,KAAAooJ,EAAAtgH,GACA9nC,KAAA4Y,SACA5Y,KAAAsU,OAAA,EAiDA,MA9CAuhJ,KAAAO,EAAAlwG,UAAA2vG,GACAO,EAAAj4J,UAAAkE,OAAAsd,OAAAk2I,KAAA13J,WACAi4J,EAAAj4J,UAAAlC,YAAAm6J,EAEAA,EAAAj4J,UAAAc,KAAA,SAAAmzH,EAAA+iC,EAAAC,GACA,GAAAnwH,GAAAjlC,IAEAA,MAAAk1J,aAAA9iC,EAAA,SAAAq1B,GACAxiH,EAAArsB,MAAAqsB,EAAArsB,MAAAnY,MAAA,EAAAwkC,EAAA3wB,MAAA,GAAAxU,OAAA2nJ,GACAxiH,EAAA3wB,QACA6gJ,KAAA1N,IACK2N,IAGLgB,EAAAj4J,UAAAgkB,QAAA,SAAAiwG,EAAA+iC,EAAAC,GACA,GAAAnwH,GAAAjlC,IAEAA,MAAAk1J,aAAA9iC,EAAA,SAAAq1B,GACAxiH,EAAArsB,MAAAqsB,EAAArsB,MAAAnY,MAAA,EAAAwkC,EAAA3wB,OAAAxU,OAAA2nJ,GACA0N,KAAA1N,IACK2N,IAGLgB,EAAAj4J,UAAA43J,GAAA,SAAAvpH,GACA,GAAAvH,GAAAjlC,KAEAq2J,EAAAr2J,KAAAsU,MAAAk4B,CACA,MAAA6pH,EAAA,GAAAA,GAAAr2J,KAAA4Y,MAAA7c,QAAA,CAGA,GAAA0rJ,GAAAznJ,KAAA4Y,MAAAy9I,EACAr2J,MAAAq1J,kBAAA5N,EAAA,WACAxiH,EAAA3wB,MAAA+hJ,EACApxH,EAAAqwH,YAAA7N,OAIA2O,EAAAj4J,UAAA83J,mBAAA,WACA,GAAAj6F,GAAAh8D,KAAA4Y,MAAA5Y,KAAA4Y,MAAA7c,OAAA,EACA,OAAAigE,KAAAssF,SAAA,KAGA8N,EAAAj4J,UAAAo3J,UAAA,aAIAa,GACC3B,IAID6B,GAAA,SAAAjzJ,OACA,KAAAA,UAEArD,KAAAqvJ,IAAA,KACArvJ,KAAAu2J,QACAv2J,KAAAqD,UACArD,KAAAw1J,eACAx1J,KAAA01J,gBACA11J,KAAA21J,cACA31J,KAAAw2J,QAAArI,EAAA9qJ,EAAAupJ,WAAA5sJ,KAEA,IAAA+oF,GAAA1lF,EAAA0lF,MAAA,MAUA,QATA/oF,KAAA83D,SAAA,YAAAixB,IAAAyrE,KAAA,IAAAnxJ,EAAAy0D,SACA93D,KAAA83D,WACAixB,EAAA,QAEAtjC,KACAsjC,EAAA,YAEA/oF,KAAA+oF,OAEAA,GACA,cACA/oF,KAAAiqJ,QAAA,GAAA2L,IAAA51J,KAAAqD,EAAAykC,KACA,MACA,YACA9nC,KAAAiqJ,QAAA,GAAAiM,IAAAl2J,KAAAqD,EAAAykC,KAAA9nC,KAAA83D,SACA,MACA,gBACA93D,KAAAiqJ,QAAA,GAAAmM,IAAAp2J,KAAAqD,EAAAykC,QASApC,IAA0B2oH,gBAE1BiI,IAAAn4J,UAAAyoB,MAAA,SACAk5D,EACA9jB,EACAmsF,GAEA,MAAAnoJ,MAAAw2J,QAAA5vI,MAAAk5D,EAAA9jB,EAAAmsF,IAGAziH,GAAA2oH,aAAA5rJ,IAAA,WACA,MAAAzC,MAAAiqJ,SAAAjqJ,KAAAiqJ,QAAAjuF,SAGAs6F,GAAAn4J,UAAAmT,KAAA,SAAA+9I,GACA,GAAApqH,GAAAjlC,IAWA,IAHAA,KAAAu2J,KAAAt3J,KAAAowJ,IAGArvJ,KAAAqvJ,IAAA,CAIArvJ,KAAAqvJ,KAEA,IAAApF,GAAAjqJ,KAAAiqJ,OAEA,IAAAA,YAAA2L,IACA3L,EAAAiL,aAAAjL,EAAAgM,0BACG,IAAAhM,YAAAiM,IAAA,CACH,GAAAO,GAAA,WACAxM,EAAAkM,iBAEAlM,GAAAiL,aACAjL,EAAAgM,qBACAQ,EACAA,GAIAxM,EAAA6K,OAAA,SAAArN,GACAxiH,EAAAsxH,KAAA13J,QAAA,SAAAwwJ,GACAA,EAAAnF,OAAAzC,QAKA6O,GAAAn4J,UAAAu4J,WAAA,SAAAh4H,GACA,MAAAg0H,IAAA1yJ,KAAAw1J,YAAA92H,IAGA43H,GAAAn4J,UAAAw4J,cAAA,SAAAj4H,GACA,MAAAg0H,IAAA1yJ,KAAA01J,aAAAh3H,IAGA43H,GAAAn4J,UAAAy4J,UAAA,SAAAl4H,GACA,MAAAg0H,IAAA1yJ,KAAA21J,WAAAj3H,IAGA43H,GAAAn4J,UAAA42J,QAAA,SAAAp2J,EAAAq2J,GACAh1J,KAAAiqJ,QAAA8K,QAAAp2J,EAAAq2J,IAGAsB,GAAAn4J,UAAA82J,QAAA,SAAAD,GACAh1J,KAAAiqJ,QAAAgL,QAAAD,IAGAsB,GAAAn4J,UAAAc,KAAA,SAAAmzH,EAAA+iC,EAAAC,GACAp1J,KAAAiqJ,QAAAhrJ,KAAAmzH,EAAA+iC,EAAAC,IAGAkB,GAAAn4J,UAAAgkB,QAAA,SAAAiwG,EAAA+iC,EAAAC,GACAp1J,KAAAiqJ,QAAA9nI,QAAAiwG,EAAA+iC,EAAAC,IAGAkB,GAAAn4J,UAAA43J,GAAA,SAAAvpH,GACAxsC,KAAAiqJ,QAAA8L,GAAAvpH,IAGA8pH,GAAAn4J,UAAA04J,KAAA,WACA72J,KAAA+1J,IAAA,IAGAO,GAAAn4J,UAAA24J,QAAA,WACA92J,KAAA+1J,GAAA,IAGAO,GAAAn4J,UAAA44J,qBAAA,SAAAzyG,GACA,GAAAmjG,GAAAnjG,EACAA,EAAA68F,QACA78F,EACAtkD,KAAA8iC,QAAAwhB,GAAAmjG,MACAznJ,KAAAquJ,YACA,OAAA5G,MAGA3nJ,OAAAD,SAAA4nJ,EAAAtG,QAAApiJ,IAAA,SAAAmM,GACA,MAAA7I,QAAAs8B,KAAAzzB,EAAAivD,YAAAp7D,IAAA,SAAAzC,GACA,MAAA4O,GAAAivD,WAAA79D,YAKAg6J,GAAAn4J,UAAA2kC,QAAA,SACAwhB,EACA0X,EACA03D,GAEA,GAAAtB,GAAA07B,EACAxpG,EACA0X,GAAAh8D,KAAAiqJ,QAAAjuF,QACA03D,EACA1zH,MAEAynJ,EAAAznJ,KAAA4mB,MAAAwrG,EAAAp2D,GACAssF,EAAAb,EAAAU,gBAAAV,EAAAa,QAGA,QACAl2B,WACAq1B,QACA52B,KAJA8hC,GADA3yJ,KAAAiqJ,QAAAniH,KACAwgH,EAAAtoJ,KAAA+oF,MAMAiuE,aAAA5kC,EACAxkE,SAAA65F,IAIA6O,GAAAn4J,UAAAiwJ,UAAA,SAAAxB,GACA5sJ,KAAAw2J,QAAApI,UAAAxB,GACA5sJ,KAAAiqJ,QAAAjuF,UAAA2sF,IACA3oJ,KAAAiqJ,QAAAiL,aAAAl1J,KAAAiqJ,QAAAgM,uBAIA5zJ,OAAAigC,iBAAAg0H,GAAAn4J,UAAAunC,IAeA4wH,GAAAhzH,UACAgzH,GAAAr0I,QAAA,QAEAwjC,IAAA/pC,OAAA0kB,KACA1kB,OAAA0kB,IAAAw6B,IAAA07F,IAGAx4H,EAAA,MnL21yCM,SAAUziC,EAAQC,GoL/x3CxBD,EAAAC,QAAA,SAAA27J,EAAA35I,GAGA,OAFAosD,MACAwtF,KACAr7J,EAAA,EAAiBA,EAAAyhB,EAAAvhB,OAAiBF,IAAA,CAClC,GAAA4Z,GAAA6H,EAAAzhB,GACAmV,EAAAyE,EAAA,GACAgzD,EAAAhzD,EAAA,GACAirI,EAAAjrI,EAAA,GACA0hJ,EAAA1hJ,EAAA,GACAu4G,GACAh9G,GAAAimJ,EAAA,IAAAp7J,EACA4sE,MACAi4E,QACAyW,YAEAD,GAAAlmJ,GAGAkmJ,EAAAlmJ,GAAA+2I,MAAA9oJ,KAAA+uH,GAFAtkD,EAAAzqE,KAAAi4J,EAAAlmJ,IAAmCA,KAAA+2I,OAAA/5B,KAKnC,MAAAtkD,KpL2y3CM,SAAUruE,EAAQC,EAAS+I,GAEjC,YqLrz3CA,SAAA+yJ,GAAAC,EAAAC,EAAAvhJ,GACA,OACA5V,KAAAk3J,EACAthJ,QAEAtZ,OAAA66J,EAAA76J,OAEA86J,UAAAD,EAAAC,UACAxhH,cAAA,EACAtB,QAAA1+B,EAAA2+B,IACAG,QAAA9+B,EAAA4+B,IACA6iH,aAAAzhJ,EAAAyhJ,aACAC,OAAA1hJ,EAAA0hJ,OACAC,OAAA3hJ,EAAA2hJ,OACAC,WAAA5hJ,EAAA4hJ,WACAtiH,WAAAt/B,EAAAq/B,QACA1uC,UAAAqP,EAAArP,WAIA,QAAAkxJ,MA+PA,QAAAC,GAAAC,EAAAntJ,EAAAE,GACA,GAAAitJ,IAAA5sD,UAAA,yBAAAvgG,EAAAE,GAAA,CAGA,IAFA,GACAwrC,GADAxxC,EAAAizJ,EAEAjzJ,GAAA,CAIA,GAAAA,EAAA89G,WAAA99G,EAAA89G,SAAAtvF,QAAA1oB,EAAAE,GACA,QAEAhG,GAAA4P,SACA4hC,GAAA,GAEAxxC,IAAAjB,OAEA,OAAAyyC,GAAA0hH,EAGA,SA7SA,GAAAr6J,GAAA2G,EAAA,GACA2zJ,EAAA3zJ,EAAA,KAEAiM,EAAAjM,EAAA,IAEA0zJ,EAAA,QAuBAH,GAAAz5J,UAAAka,QAAA,YAEA,IAAA4/I,IACA,2CACA,iDAWAC,EAAA,SAAAz+I,EAAAwD,EAAAw2C,EAAA0kG,GACA7nJ,EAAA1U,KAAAoE,MAEAA,KAAAyZ,UAEAzZ,KAAAid,UAEAjd,KAAAm4J,cAEA1kG,KAAA,GAAAmkG,GAKA53J,KAAAyzD,QAGAA,EAAArjD,QAAApQ,KAOAA,KAAAo4J,YAMAp4J,KAAAq4J,iBAMAr4J,KAAAs0I,OAMAt0I,KAAAu0I,OAGAyjB,EAAAp8J,KAAAoE,MAEAtC,EAAAe,KAAAw5J,EAAA,SAAA5yJ,GACAouD,EAAAjnD,IAAAinD,EAAAjnD,GAAAnH,EAAArF,KAAAqF,GAAArF,OACSA,MAGTk4J,GAAA/5J,WAEAlC,YAAAi8J,EAEAI,UAAA,SAAAviJ,GACA,GAAApL,GAAAoL,EAAA2+B,IACA7pC,EAAAkL,EAAA4+B,IAEA4jH,EAAAv4J,KAAAo4J,SACAI,EAAAx4J,KAAAo4J,SAAAp4J,KAAA60I,UAAAlqI,EAAAE,GACA4tJ,EAAAD,EAAA/7J,OACAi8J,EAAAH,EAAA97J,OAEAg3D,EAAAzzD,KAAAyzD,KACAA,GAAAklG,WAAAllG,EAAAklG,UAAAF,IAAAxtD,OAAA,WAGAytD,GAAAD,IAAAC,KAAAhzJ,MACA1F,KAAA44J,kBAAAL,EAAA,WAAAxiJ,GAIA/V,KAAA44J,kBAAAJ,EAAA,YAAAziJ,GAGA0iJ,OAAAC,GACA14J,KAAA44J,kBAAAJ,EAAA,YAAAziJ,IAIA8iJ,SAAA,SAAA9iJ,GACA/V,KAAA44J,kBAAA54J,KAAAo4J,SAAA,WAAAriJ,EAOA,IACA+iJ,GADAnlF,EAAA59D,EAAAgjJ,WAAAhjJ,EAAAijJ,aAEA,IACArlF,OAAAtX,iBAEAsX,GAAA,GAAAA,EAAAvzE,YACA04J,EAAAnlF,IAAA3zE,KAAAm4J,eAGAW,GAAA94J,KAAAqW,QAAA,aAAoDN,WAMpDxD,OAAA,SAAAwD,GACA/V,KAAAo4J,aAQAr2H,SAAA,SAAA5xB,EAAA8oJ,GACA,GAAA7oJ,GAAApQ,KAAAmQ,EACAC,MAAAxU,KAAAoE,KAAAi5J,IAMA5gJ,QAAA,WAEArY,KAAAyzD,MAAAp7C,UAEArY,KAAAyZ,QACAzZ,KAAAyzD,MACAzzD,KAAAid,QAAA,MAOAi8I,eAAA,SAAA9pD,GACA,GAAA37C,GAAAzzD,KAAAyzD,KACAA,GAAAklG,WAAAllG,EAAAklG,UAAAvpD,IAWAwpD,kBAAA,SAAAtB,EAAAnnJ,EAAA4F,GACAuhJ,OAKA,KAJA,GAAA6B,GAAA,KAAAhpJ,EACAipJ,EAAAhC,EAAAjnJ,EAAAmnJ,EAAAvhJ,GAEAlR,EAAAyyJ,EAAA76J,OACAoI,IACAA,EAAAs0J,KACAC,EAAArjH,aAAAlxC,EAAAs0J,GAAAv9J,KAAAiJ,EAAAu0J,IAEAv0J,EAAAwR,QAAAlG,EAAAipJ,GAEAv0J,IAAAjB,QAEAw1J,EAAArjH,gBAKAqjH,EAAArjH,eAEA/1C,KAAAqW,QAAAlG,EAAAipJ,GAGAp5J,KAAAid,SAAAjd,KAAAid,QAAAo8I,eAAA,SAAAC,GACA,kBAAAA,GAAAH,IACAG,EAAAH,GAAAv9J,KAAA09J,EAAAF,GAEAE,EAAAjjJ,SACAijJ,EAAAjjJ,QAAAlG,EAAAipJ,OAcAvkB,UAAA,SAAAlqI,EAAAE,EAAAi4E,GAIA,OAHAxlE,GAAAtd,KAAAyZ,QAAA8D,iBACAkX,KAEA54B,EAAAyhB,EAAAvhB,OAAA,EAAyCF,GAAA,EAASA,IAAA,CAClD,GAAA09J,EACA,IAAAj8I,EAAAzhB,KAAAinF,IAEAxlE,EAAAzhB,GAAAge,SACA0/I,EAAA1B,EAAAv6I,EAAAzhB,GAAA8O,EAAAE,OAEA4pB,EAAA8iI,YAAA9iI,EAAA8iI,UAAAj6I,EAAAzhB,IACA09J,IAAAxB,GAAA,CACAtjI,EAAAh4B,OAAA6gB,EAAAzhB,EACA,QAKA,MAAA44B,KAKA/2B,EAAAe,MAAA,8EAAA4G,GACA6yJ,EAAA/5J,UAAAkH,GAAA,SAAA0Q,GAEA,GAAAyiJ,GAAAx4J,KAAA60I,UAAA9+H,EAAA2+B,IAAA3+B,EAAA4+B,KACA8jH,EAAAD,EAAA/7J,MAEA,kBAAA4I,EACArF,KAAAw5J,QAAAf,EAEAz4J,KAAAy5J,MAAAhB,MAEA,gBAAApzJ,EACArF,KAAAy5J,MAAAhB,MAEA,cAAApzJ,GACArF,KAAAw5J,UAAAx5J,KAAAy5J,MACA,MAIAz5J,MAAA44J,kBAAAJ,EAAAnzJ,EAAA0Q,MA0BArY,EAAAY,MAAA45J,EAAA5nJ,GACA5S,EAAAY,MAAA45J,EAAAF,GAEA38J,EAAAC,QAAA48J,GrL603CM,SAAU78J,EAAQC,EAAS+I,GsL/n4CjC,QAAAq1J,KACA,SAYA,QAAAC,GAAA3oJ,EAAA7Q,EAAA8c,EAAAC,GACA,GAAA08I,GAAAt8J,SAAAC,cAAA4C,GACAqK,EAAAyS,EAAAH,WACArS,EAAAwS,EAAAF,YAEA88I,EAAAD,EAAA50J,KAYA,OAVA60J,GAAA3tJ,SAAA,WACA2tJ,EAAA77I,KAAA,EACA67I,EAAA37I,IAAA,EACA27I,EAAArvJ,QAAA,KACAqvJ,EAAApvJ,SAAA,KACAmvJ,EAAApvJ,QAAA0S,EACA08I,EAAAnvJ,SAAAyS,EAGA08I,EAAAl3I,aAAA,iBAAA1R,GACA4oJ,EAnCA,GAAAl8J,GAAA2G,EAAA,GACAg8B,EAAAh8B,EAAA,IACAsmG,EAAAtmG,EAAA,KACAisB,EAAAjsB,EAAA,KA2CAy1J,EAAA,SAAA9oJ,EAAAiM,EAAAC,GACA,GAAAzM,EACAyM,MAAAmjB,EAAA7uB,iBACA,gBAAAR,GACAP,EAAAkpJ,EAAA3oJ,EAAA,SAAAiM,EAAAC,GAGAxf,EAAAf,SAAAqU,KACAP,EAAAO,EACAA,EAAAP,EAAAO,IAEAhR,KAAAgR,KACAhR,KAAAyQ,KAEA,IAAAghI,GAAAhhI,EAAAzL,KACAysI,KACAhhI,EAAAspJ,cAAAL,EACAjoB,EAAA,8BACAA,EAAA,sBACAA,EAAA,gCACAA,EAAA,+CACAA,EAAA,UACAA,EAAA,SACAA,EAAA,mBAGAzxI,KAAAg6J,QAAA,KACAh6J,KAAAi6J,QAAA,KAEAj6J,KAAAid,UAEAjd,KAAAqgC,OAAA,KAQArgC,KAAA8f,WAAA,EAMA9f,KAAAk6J,YAAA,EAMAl6J,KAAAm6J,eAAA,GAMAn6J,KAAAkd,MAGA48I,GAAA37J,WAEAlC,YAAA69J,EAEApgJ,QAAA,EAEA2X,SAAA,EAEA+oI,YAAA,WACAp6J,KAAA4wB,IAAA5wB,KAAAyQ,IAAAjT,WAAA,MAEAwC,KAAA4wB,IAAA1T,IAAAld,KAAAkd,KAGAm9I,iBAAA,WACA,GAAAn9I,GAAAld,KAAAkd,GAEAld,MAAAg6J,QAAAL,EAAA,QAAA35J,KAAAgR,GAAA,SAAAhR,KAAAid,QAAAC,GACAld,KAAAi6J,QAAAj6J,KAAAg6J,QAAAx8J,WAAA,MAEA,GAAA0f,GACAld,KAAAi6J,QAAAloI,MAAA7U,MAQA3K,OAAA,SAAA/H,EAAAC,GACA,GAAAyS,GAAAld,KAAAkd,IAEAzM,EAAAzQ,KAAAyQ,IACAghI,EAAAhhI,EAAAzL,MACAg1J,EAAAh6J,KAAAg6J,OAEAvoB,GAAAjnI,QAAA,KACAinI,EAAAhnI,SAAA,KAEAgG,EAAAjG,QAAA0S,EACAzM,EAAAhG,SAAAyS,EAEA88I,IACAA,EAAAxvJ,QAAA0S,EACA88I,EAAAvvJ,SAAAyS,EAEA,GAAAA,GACAld,KAAAi6J,QAAAloI,MAAA7U,OASA0E,MAAA,SAAA04I,GACA,GAAA7pJ,GAAAzQ,KAAAyQ,IACAmgB,EAAA5wB,KAAA4wB,IACApmB,EAAAiG,EAAAjG,MACAC,EAAAgG,EAAAhG,OAEAqV,EAAA9f,KAAA8f,WACAy6I,EAAAv6J,KAAAk6J,aAAAI,EACAH,EAAAn6J,KAAAm6J,eAEAj9I,EAAAld,KAAAkd,GAgBA,IAdAq9I,IACAv6J,KAAAg6J,SACAh6J,KAAAq6J,mBAGAr6J,KAAAi6J,QAAAxvC,yBAAA,OACAzqH,KAAAi6J,QAAAzwC,UACA/4G,EAAA,IACAjG,EAAA0S,EACAzS,EAAAyS,IAIA0T,EAAA4pI,UAAA,IAAAhwJ,EAAAC,GACAqV,EAAA,CACA,GAAA26I,EAEA36I,GAAAI,YAEAu6I,EAAA36I,EAAA46I,kBAAA/vD,EAAAp5E,YAAAX,EAAA9Q,GACAnV,EAAA,EACAE,EAAA,EACAL,QACAC,WAGAqV,EAAA46I,iBAAAD,GAGA36I,EAAApB,QACA+7I,EAAAnqI,EAAAnyB,UAAAoyB,iBAAA30B,KAAAkkB,EAAA8Q,IAEAA,EAAAwkG,OACAxkG,EAAAa,UAAAgpI,GAAA36I,EACA8Q,EAAA+pI,SAAA,IAAAnwJ,EAAAC,GACAmmB,EAAAgqI,UAGA,GAAAL,EAAA,CACA,GAAAP,GAAAh6J,KAAAg6J,OACAppI,GAAAwkG,OACAxkG,EAAA45F,YAAA2vC,EACAvpI,EAAA44F,UAAAwwC,EAAA,IAAAxvJ,EAAAC,GACAmmB,EAAAgqI,aAKAv/J,EAAAC,QAAAw+J,GtLip4CM,SAAUz+J,EAAQC,EAAS+I,GAEjC,YuL714CA,SAAAw2J,GAAA50I,GACA,MAAA4wB,UAAA5wB,EAAA,IAGA,QAAA60I,GAAAxB,GACA,QAAAA,MAIAA,EAAAyB,aAIA,kBAAAzB,GAAA,QACA,kBAAAA,GAAA,SAQA,QAAA0B,GAAA1B,GACAA,EAAA2B,gBAGA,QAAAC,GAAA5B,GACA,GAAAA,EAAA2B,eACA3B,EAAA13I,QAMA,QAAAu5I,GAAAt2J,EAAA2F,EAAAC,GAOA,MANAiqF,GAAA1hE,KAAAnuB,EAAAyF,mBACAzF,EAAA0J,WACAmmF,EAAA1pF,eAAAnG,EAAA0J,WAEA6sJ,EAAA5wJ,QACA4wJ,EAAA3wJ,UACAiqF,EAAA/4D,UAAAy/H,GAGA,QAAAC,GAAAC,EAAAC,GACA,GAAAD,GAAAC,EACA,QAGA,KAAAD,IAAAC,GAAAD,EAAAv/J,SAAAw/J,EAAAx/J,OACA,QAEA,QAAAF,GAAA,EAAuBA,EAAAy/J,EAAAv/J,OAAsBF,IAC7C,GAAAy/J,EAAAz/J,KAAA0/J,EAAA1/J,GACA,SAKA,QAAA2/J,GAAAF,EAAA1qI,GACA,OAAA/0B,GAAA,EAAuBA,EAAAy/J,EAAAv/J,OAAsBF,IAAA,CAC7C,GAAA8mH,GAAA24C,EAAAz/J,EAEA8mH,GAAAvxF,aAAAR,GACAA,EAAAsB,YACAywF,EAAAvwF,UAAAxB,EAAA+xF,EAAAp3G,OACAqlB,EAAAo1F,OAEArD,EAAArwF,iBAAA1B,IAIA,QAAA6qI,GAAAjxJ,EAAAC,GACA,GAAAixJ,GAAAp+J,SAAAC,cAAA,MAaA,OAVAm+J,GAAA12J,MAAA6+E,SACA,oBACA,kBACA,SAAAr5E,EAAA,KACA,UAAAC,EAAA,KACA,YACA,WACA,kBACAqD,KAAA,KAAiB,IAEjB4tJ,EAtGA,GAAAr7H,GAAAh8B,EAAA,IACA3G,EAAA2G,EAAA,GACAuY,EAAAvY,EAAA,KACA+D,EAAA/D,EAAA,IACAoO,EAAApO,EAAA,IAEAy1J,EAAAz1J,EAAA,KAEAsgF,EAAAtgF,EAAA,KAwCAqwF,EAAA,GAAAtsF,GAAA,SACAgzJ,EAAA,GAAAhzJ,GAAA,SA+DAuzJ,EAAA,SAAAh8H,EAAAlmB,EAAA7P,GAEA,GAAAgyJ,IAAAj8H,EAAArd,UACA,WAAAqd,EAAArd,SAAAC,aAEAviB,MAAA67J,MAAAjyJ,EAAAlM,EAAAR,UAA0C0M,OAK1C5J,KAAAkd,IAAAtT,EAAA4H,kBAAA6uB,EAAA7uB,iBAKAxR,KAAA87J,cAAAF,EAKA57J,KAAA2/B,MAEA,IAAAo8H,GAAAp8H,EAAA36B,KAEA+2J,KACAA,EAAA,6CACAA,EAAA,uBACAA,EAAA,eACAA,EAAA,gCAEAp8H,EAAAu9C,UAAA,IAMAl9E,KAAAyZ,SAMA,IAAAuiJ,GAAAh8J,KAAAi8J,eAMAC,EAAAl8J,KAAAm8J,UAQA,IAFAn8J,KAAAo8J,gBAEAR,EASA,CACA,MAAAhyJ,EAAAY,QACAm1B,EAAAn1B,MAAAZ,EAAAY,OAEA,MAAAZ,EAAAa,SACAk1B,EAAAl1B,OAAAb,EAAAa,OAGA,IAAAD,GAAAm1B,EAAAn1B,MACAC,EAAAk1B,EAAAl1B,MACAzK,MAAAq8J,OAAA7xJ,EACAxK,KAAAs8J,QAAA7xJ,CAIA,IAAA8xJ,GAAA,GAAAzC,GAAAn6H,EAAA3/B,KAAA,EACAu8J,GAAAnC,cAGA8B,EAAA,GAAAK,EACAP,EAAA/8J,KAAA,GAEAe,KAAAw8J,SAAA78H,MA/BA,CACA3/B,KAAAq8J,OAAAr8J,KAAAy8J,SAAA,GACAz8J,KAAAs8J,QAAAt8J,KAAAy8J,SAAA,EAEA,IAAAf,GAAA17J,KAAAw8J,SAAAf,EACAz7J,KAAAq8J,OAAAr8J,KAAAs8J,QAEA38H,GAAAs+B,YAAAy9F,GA4BA17J,KAAA08J,sBAMA18J,KAAA28J,YAEA38J,KAAA48J,kBAGAjB,GAAAx9J,WAEAlC,YAAA0/J,EAMA/7I,eAAA,WACA,MAAA5f,MAAA87J,eAKA/pB,gBAAA,WACA,MAAA/xI,MAAAw8J,UAOA7oI,QAAA,SAAAkpI,GAEA,GAAAv/I,GAAAtd,KAAAyZ,QAAA8D,gBAAA,GAEAy+I,EAAAh8J,KAAAi8J,WAEAj8J,MAAA88J,WAAAx/I,EAAAu/I,EAGA,QAAAhhK,GAAA,EAA2BA,EAAAmgK,EAAAjgK,OAAuBF,IAAA,CAClD,GAAAue,GAAA4hJ,EAAAngK,GACAy9J,EAAAt5J,KAAAm8J,QAAA/hJ,IACAk/I,EAAAyB,aAAAzB,EAAA3lI,SACA2lI,EAAA3lI,UAUA,MANA3zB,MAAA+8J,eAEA/8J,KAAA08J,mBAAA3gK,QACAiE,KAAAg9J,mBAGAh9J,MAGA2F,SAAA,SAAAd,EAAAK,GACA,IAAAL,EAAAo4J,WAAA,CAGA,GAAAC,GAAA,GAAAr4J,GAAA5I,aACA+I,MAAAH,EAAAG,MACAuG,MAAA1G,EAAA0G,OAEA2xJ,GAAAC,OAAAt4J,EACAA,EAAAo4J,WAAAC,EACAA,EAAAt3J,SAAAV,GACAlF,KAAA48J,eAAA39J,KAAAi+J,KAGAl3J,YAAA,SAAAnB,GACA,GAAAq4J,GAAAr4J,EAAAo4J,WACAG,EAAAp9J,KAAA48J,eACA3lJ,EAAAvZ,EAAAC,QAAAy/J,EAAAF,EACAjmJ,IAAA,GACAmmJ,EAAA9kJ,OAAArB,EAAA,GAEApS,EAAAo4J,WAAA,MAGAI,WAAA,SAAAx4J,GAEA,OADAu4J,GAAAp9J,KAAA48J,eACA/gK,EAAA,EAA2BA,EAAAuhK,EAAArhK,OAA0BF,IAAA,CACrD,GAAAK,GAAAkhK,EAAAvhK,GAAAshK,MACAjhK,KACAA,EAAA+gK,WAAA,MAGAG,EAAArhK,OAAA,GAGAghK,aAAA,WACA,GAAAK,GAAAp9J,KAAA48J,eACA9gK,EAAAshK,EAAArhK,OACAuhK,EAAAt9J,KAAA28J,WAGA,IAFAW,KAAA17I,QAEA9lB,EAAA,CAGA2W,EAAA2qJ,EAAAp9J,KAAAyZ,QAAA8jJ,qBAIAD,IACAA,EAAAt9J,KAAA28J,YAAA38J,KAAAw9J,SAAA,KAGA,IAAA9hF,KACA4hF,GAAA1sI,IAAAwkG,MACA,QAAAv5H,GAAA,EAA2BA,EAAAC,GAAS,CACpC,GAAA+I,GAAAu4J,EAAAvhK,GACA4hK,EAAA54J,EAAAs4J,MAGAM,MAAA/3J,MAMA7J,IAIA4hK,EAAA7oE,YACA/vF,EAAA0J,UAAAkvJ,EAAAlvJ,UACA1J,EAAA0mH,aAAAkyC,EAAAlyC,aACA1mH,EAAA+lG,YAAA6yD,EAAA7yD,YAEA5qG,KAAA09J,WAAA74J,EAAAy4J,GAAA,EAAA5hF,MAdA0hF,EAAA9kJ,OAAAzc,EAAA,GACA4hK,EAAAR,WAAA,KACAnhK,KAeAwhK,EAAA1sI,IAAAgqI,YAGAoC,iBAAA,WAcA,QAAAh0H,KAEA6iH,IAAAluI,EAAAggJ,mBAAAhgJ,EAAAlE,UAEAkE,EAAAigJ,aAAAjgJ,EAAAlE,QAAA8D,kBAEAI,EAAAkgJ,qBACAlgJ,EAAAmgJ,YACAn5E,EAAA37C,IAGArrB,EAAAggJ,mBAAA,GAxBA,GAAAhgJ,GAAA3d,IAEA,IAAA2d,EAAAkgJ,oBAAA,CAMA,GAAAhS,GAAAluI,EAAAggJ,mBAAA,GAAA77I,KAEAnE,GAAAmgJ,YACAn5E,EAAA37C,KAmBA+0H,kBAAA,WACA/9J,KAAA29J,mBAAA,EACA39J,KAAA89J,UAAA,EACApgK,EAAAe,KAAAuB,KAAA08J,mBAAA,SAAApD,GACAA,EAAAjoI,SAAAioI,EAAA13I,WAIAk7I,WAAA,SAAAx/I,EAAAu/I,GAEA,MAAAA,IACAA,GAAA,GAGA78J,KAAAg+J,mBAAA1gJ,GAEAtd,KAAA+9J,oBAEA/9J,KAAAi+J,iBAAAjD,GAEAh7J,KAAA49J,aAAAtgJ,EAAAu/I,GAEA78J,KAAAi+J,iBAAA/C,IAGA0C,aAAA,SAAAtgJ,EAAAu/I,GAeA,QAAAqB,GAAA5E,GACA,GAAAp8I,GAAA0T,EAAA1T,KAAA,CACA0T,GAAAwkG,OACAxkG,EAAA45F,YAAA,EACA55F,EAAAsiF,WAAA,EAEAirD,EAAA9sI,SAAA,EACAT,EAAAQ,aAAA,aACAR,EAAA44F,UAAA8vC,EAAA7oJ,IAAA,IAAAjG,EAAA0S,EAAAzS,EAAAyS,GACA0T,EAAAgqI,UAGA,OA1BAuD,GACAC,EACAxtI,EAGA8qD,EAGA2iF,EAIAC,EALAC,EAAA,EAGA/zJ,EAAAxK,KAAAq8J,OACA5xJ,EAAAzK,KAAAs8J,QAEAv2C,EAAA/lH,KAAA89J,UAaAjiK,EAAA,EAAAguC,EAAAvsB,EAAAvhB,OAA4CF,EAAAguC,EAAOhuC,IAAA,CACnD,GAAAgJ,GAAAyY,EAAAzhB,GACA2iK,EAAAx+J,KAAA87J,cAAA,EAAAj3J,EAAAwV,OAEAokJ,EAAA55J,EAAA65J,OAwCA,IApCAD,EAAA,GAAAJ,IACAH,EAAAG,GACAA,EAAA,MAIAD,IAAAI,IACA5tI,GACAA,EAAAgqI,UAIAl/E,KAGA0iF,EAAAI,EACAL,EAAAn+J,KAAAw9J,SAAAY,GAEAD,EAAApD,aACAn+I,EACA,UAAAwhJ,EACA,kCAAAD,EAAAntJ,IAIA4f,EAAAutI,EAAAvtI,IACAA,EAAAwkG,OAGA+oC,EAAAlD,cAAA,GAEAkD,EAAA9sI,SAAAwrI,IACAsB,EAAAv8I,SAIAu8I,EAAA9sI,SAAAwrI,EAAA,CAIA,GAAA4B,GAAA,GAEA,IAAAJ,EAAA,CAQA,GAPAA,EAAAr+J,KAAA08J,mBACAp0J,KAAAI,IAAA61J,IAAAI,IAGAN,EAAAztI,IAAAwkG,OACAipC,EAAAO,eAEAP,GACAA,EAAAQ,WAAAR,EAAAS,cACA,CAIAjjK,EAAAwiK,EAAAU,iBAAA,CAEA,UAGAT,EAAAD,EAAAQ,WAEAR,EAAAhtI,UAEA00F,EAAAu4C,GAGAD,EAAAQ,WAAA94C,EAAA,EAGA04C,IAAA14C,GACA/lH,KAAA09J,WAAA74J,EAAAw5J,GAAA,EAAAA,EAAAO,iBAIA5+J,MAAA09J,WAAA74J,EAAAs5J,EAAAtB,EAAAnhF,EAGA72E,GAAAwsB,SAAA,GAGAgtI,GACAH,EAAAG,GAIAztI,KAAAgqI,UAMA56J,KAAA69J,qBAAA,EACAngK,EAAAe,KAAAuB,KAAA08J,mBAAA,SAAApD,GACAA,EAAAwF,eAAAxF,EAAAuF,aACA7+J,KAAA69J,qBAAA,IAEa79J,OAGb09J,WAAA,SAAA74J,EAAAs5J,EAAAa,EAAAtjF,GACA,GAAA9qD,GAAAutI,EAAAvtI,IACA1lB,EAAArG,EAAA0J,SACA,KACA4vJ,EAAA9sI,SAAA2tI,KAEAn6J,EAAA+vF,WAEA,IAAA/vF,EAAAG,MAAAwqG,WAIAtkG,KAAA,IAAAA,EAAA,OAEArG,EAAAmmG,UAAAmwD,EAAAt2J,EAAA7E,KAAAq8J,OAAAr8J,KAAAs8J,UACA,CAEA,GAAAhB,GAAAz2J,EAAA+lG,aAGAlvB,EAAAujF,gBAAAd,GACA9C,EAAAC,EAAA5/E,EAAAwjF,oBAGAxjF,EAAAwjF,kBACAxjF,EAAAujF,cAAAruI,IAAAgqI,UACAl/E,EAAAujF,cAAAvjF,EAAAwjF,gBAAA,KAGAxjF,EAAA7qD,OAAA,MAGAyqI,IACA1qI,EAAAwkG,OACAomC,EAAAF,EAAA1qI,GACA8qD,EAAAujF,cAAAd,EACAziF,EAAAwjF,gBAAA5D,IAGAz2J,EAAAsmG,aAAAtmG,EAAAsmG,YAAAv6E,GAEA/rB,EAAA8rB,MAAAC,EAAA8qD,EAAA7qD,QAAA,MACA6qD,EAAA7qD,OAAAhsB,EAEAA,EAAAumG,YAAAvmG,EAAAumG,WAAAx6E,KASA4sI,SAAA,SAAAnjJ,GACA,GAAAra,KAAA87J,cACA,MAAA97J,MAAAm8J,QAAA,EAGA,IAAA7C,GAAAt5J,KAAAm8J,QAAA9hJ,EAiBA,OAhBAi/I,KAEAA,EAAA,GAAAQ,GAAA,MAAAz/I,EAAAra,UAAAkd,KACAo8I,EAAAyB,aAAA,EAEA/6J,KAAAo8J,aAAA/hJ,IACA3c,EAAAlB,MAAA88J,EAAAt5J,KAAAo8J,aAAA/hJ,IAAA,GAGAra,KAAAm/J,YAAA9kJ,EAAAi/I,GAIAA,EAAAc,eAGAd,GAGA6F,YAAA,SAAA9kJ,EAAAi/I,GAEA,GAAA8F,GAAAp/J,KAAAm8J,QACAH,EAAAh8J,KAAAi8J,YACAngK,EAAAkgK,EAAAjgK,OACAsjK,EAAA,KACAxjK,GAAA,EACA6/J,EAAA17J,KAAAw8J,QAEA,IAAA4C,EAAA/kJ,GAEA,WADAuC,GAAA,UAAAvC,EAAA,yBAIA,KAAAygJ,EAAAxB,GAEA,WADA18I,GAAA,mBAAAvC,EAAA,gBAIA,IAAAve,EAAA,GAAAue,EAAA2hJ,EAAA,IACA,IAAAngK,EAAA,EAA2BA,EAAAC,EAAA,KAE3BkgK,EAAAngK,GAAAwe,GACA2hJ,EAAAngK,EAAA,GAAAwe,GAHwCxe,KAQxCwjK,EAAAD,EAAApD,EAAAngK,IASA,GAPAmgK,EAAA1jJ,OAAAzc,EAAA,IAAAwe,GAEA+kJ,EAAA/kJ,GAAAi/I,GAKAA,EAAA9sD,QACA,GAAA6yD,EAAA,CACA,GAAAC,GAAAD,EAAA5uJ,GACA6uJ,GAAAphG,YACAw9F,EAAA59F,aACAw7F,EAAA7oJ,IACA6uJ,EAAAphG,aAIAw9F,EAAAz9F,YAAAq7F,EAAA7oJ,SAIAirJ,GAAA5zE,WACA4zE,EAAA59F,aAAAw7F,EAAA7oJ,IAAAirJ,EAAA5zE,YAGA4zE,EAAAz9F,YAAAq7F,EAAA7oJ,MAOA8uJ,UAAA,SAAA5gK,EAAAC,GACA,GACAwb,GACAve,EAFAmgK,EAAAh8J,KAAAi8J,WAGA,KAAApgK,EAAA,EAAuBA,EAAAmgK,EAAAjgK,OAAuBF,IAC9Cue,EAAA4hJ,EAAAngK,GACA8C,EAAA/C,KAAAgD,EAAAoB,KAAAm8J,QAAA/hJ,OAKA6jJ,iBAAA,SAAAt/J,EAAAC,GACA,GACA06J,GACAl/I,EACAve,EAHAmgK,EAAAh8J,KAAAi8J,WAIA,KAAApgK,EAAA,EAAuBA,EAAAmgK,EAAAjgK,OAAuBF,IAC9Cue,EAAA4hJ,EAAAngK,GACAy9J,EAAAt5J,KAAAm8J,QAAA/hJ,GACAk/I,EAAAyB,aACAp8J,EAAA/C,KAAAgD,EAAA06J,EAAAl/I,IAMAi/I,eAAA,SAAA16J,EAAAC,GACA,GACA06J,GACAl/I,EACAve,EAHAmgK,EAAAh8J,KAAAi8J,WAIA,KAAApgK,EAAA,EAAuBA,EAAAmgK,EAAAjgK,OAAuBF,IAC9Cue,EAAA4hJ,EAAAngK,GACAy9J,EAAAt5J,KAAAm8J,QAAA/hJ,GACAk/I,EAAAyB,aACAp8J,EAAA/C,KAAAgD,EAAA06J,EAAAl/I,IASAolJ,UAAA,WACA,MAAAx/J,MAAAm8J,SAGA6B,mBAAA,SAAA1gJ,GAEA,GAAA4+I,GAAAl8J,KAAAm8J,QACAsD,EAAAz/J,KAAA08J,mBAEAgD,KACAC,IAEA3/J,MAAAi+J,iBAAA,SAAA3E,EAAAl/I,GACAslJ,EAAAtlJ,GAAAk/I,EAAA5/I,QACA4/I,EAAA5/I,QAAA,EACA4/I,EAAAjoI,SAAA,IAGA3zB,EAAAe,KAAAghK,EAAA,SAAAnG,EAAAriJ,GACA0oJ,EAAA1oJ,GAAAqiJ,EAAA5/I,QACA4/I,EAAA5/I,QAAA,EACA4/I,EAAAjoI,SAAA,GAOA,QAHAgtI,GACAuB,EAFAC,EAAA,EAGAC,EAAA,EACAjkK,EAAA,EAAAguC,EAAAvsB,EAAAvhB,OAA4CF,EAAAguC,EAAOhuC,IAAA,CACnD,GAAAgJ,GAAAyY,EAAAzhB,GACAwe,EAAAra,KAAA87J,cAAA,EAAAj3J,EAAAwV,OACAi/I,EAAA4C,EAAA7hJ,GACA0lJ,EAAAl7J,EAAAmV,WAOA,IANAs/I,IACAA,EAAA5/I,UACA4/I,EAAAjoI,QAAAioI,EAAAjoI,SAAAxsB,EAAAwsB,SAIA0uI,GAAA,GAEAH,IAAAG,IACAH,EAAAG,EACAD,IAEA,IAAArB,GAAA55J,EAAA65J,QAAAoB,EAAA,CACA,KAAAzB,EAAA,CACA,GAAApnJ,GAAA3O,KAAAI,IAAAm3J,EAAAlB,EACAN,GAAAoB,EAAAxoJ,GACAonJ,IACAA,EAAAoB,EAAAxoJ,GAAA,GAAA6iJ,GACA,cAAA95J,UAAAkd,KAEAmhJ,EAAAjE,eAEAiE,EAAAS,cAAA,EAEAT,EAAAhtI,QAAAgtI,EAAAhtI,SAAAxsB,EAAAwsB,QACAgtI,EAAA3kJ,UAEA2kJ,EAAAS,cAAAx2J,KAAAE,IACA61J,EAAAS,cAAAL,GAGAJ,EAAAS,eAAAT,EAAAQ,aAEAvF,EAAAjoI,SAAA,OAIAxsB,GAAA65J,SAAA,EAEAL,IACAA,EAAAU,iBAAAljK,EACAgkK,IACAxB,EAAA,MAKAA,IACAwB,IACAxB,EAAAU,iBAAAljK,GAIAmE,KAAAi+J,iBAAA,SAAA3E,EAAAl/I,GACAslJ,EAAAtlJ,KAAAk/I,EAAA5/I,UACA4/I,EAAAjoI,SAAA,KAIAouI,EAAA1jK,OAAAuM,KAAAI,IAAAm3J,EA5xBA,GA6xBAniK,EAAAe,KAAAghK,EAAA,SAAAnG,EAAAriJ,GACA0oJ,EAAA1oJ,KAAAqiJ,EAAA5/I,UACA7U,EAAAwsB,SAAA,GAEAioI,EAAAjoI,UACAioI,EAAAuF,WAAA,MAQAj9I,MAAA,WAEA,MADA5hB,MAAAi+J,iBAAAj+J,KAAAggK,aACAhgK,MAGAggK,YAAA,SAAA1G,GACAA,EAAA13I,SAaA/B,YAAA,SAAAxF,EAAAgmB,GACA,GAAAA,EAAA,CACA,GAAA4/H,GAAAjgK,KAAAo8J,YACA6D,GAAA5lJ,GAIA3c,EAAAlB,MAAAyjK,EAAA5lJ,GAAAgmB,GAAA,GAHA4/H,EAAA5lJ,GAAAgmB,CAMA,IAAAi5H,GAAAt5J,KAAAm8J,QAAA9hJ,EAEAi/I,IACA57J,EAAAlB,MAAA88J,EAAA2G,EAAA5lJ,IAAA,KASA6lJ,SAAA,SAAA7lJ,GACA,GAAA6hJ,GAAAl8J,KAAAm8J,QACAH,EAAAh8J,KAAAi8J,YACA3C,EAAA4C,EAAA7hJ,EACAi/I,KAGAA,EAAA7oJ,IAAA4rD,WAAAx3B,YAAAy0H,EAAA7oJ,WACAyrJ,GAAA7hJ,GAEA2hJ,EAAA1jJ,OAAA5a,EAAAC,QAAAq+J,EAAA3hJ,GAAA,KAMA9H,OAAA,SAAA/H,EAAAC,GACA,GAAAixJ,GAAA17J,KAAAw8J,QAEAd,GAAA12J,MAAA2jF,QAAA,MAGA,IAAA/+E,GAAA5J,KAAA67J,KAUA,IATA,MAAArxJ,IAAAZ,EAAAY,SACA,MAAAC,IAAAb,EAAAa,UAEAD,EAAAxK,KAAAy8J,SAAA,GACAhyJ,EAAAzK,KAAAy8J,SAAA,GAEAf,EAAA12J,MAAA2jF,QAAA,GAGA3oF,KAAAq8J,QAAA7xJ,GAAAC,GAAAzK,KAAAs8J,QAAA,CACAZ,EAAA12J,MAAAwF,QAAA,KACAkxJ,EAAA12J,MAAAyF,SAAA,IAEA,QAAAuG,KAAAhR,MAAAm8J,QACAn8J,KAAAm8J,QAAA5/J,eAAAyU,IACAhR,KAAAm8J,QAAAnrJ,GAAAuB,OAAA/H,EAAAC,EAGA/M,GAAAe,KAAAuB,KAAA08J,mBAAA,SAAApD,GACAA,EAAA/mJ,OAAA/H,EAAAC,KAGAzK,KAAA2zB,SAAA,GAMA,MAHA3zB,MAAAq8J,OAAA7xJ,EACAxK,KAAAs8J,QAAA7xJ,EAEAzK,MAOAmgK,WAAA,SAAA9lJ,GACA,GAAAi/I,GAAAt5J,KAAAm8J,QAAA9hJ,EACAi/I,IACAA,EAAA13I,SAOAvJ,QAAA,WACArY,KAAA2/B,KAAAu9C,UAAA,GAEAl9E,KAAA2/B,KACA3/B,KAAAyZ,QAEAzZ,KAAAw8J,SACAx8J,KAAAm8J,QAAA,MAQAh/I,kBAAA,SAAAvT,GAkBA,QAAAw2J,GAAAC,EAAAC,GACA,GAAAtE,GAAAr+I,EAAAs+I,WACA,OAAAoE,IACAA,GAAApiJ,IAGA,QADAsiJ,GACA1kK,EAAA,EAA+BA,EAAAmgK,EAAAjgK,OAAuBF,IAAA,CACtD,GAAAue,GAAA4hJ,EAAAngK,GACAy9J,EAAA37I,EAAAw+I,QAAA/hJ,EACA,KAAAk/I,EAAAyB,aAAA3gJ,EAAAimJ,GAAAjmJ,EAAAkmJ,EAAA,CACAC,EAAAjH,CACA,QAGAiH,KAAAC,iBACAC,EAAA7vI,IAAAwkG,OACAmrC,EAAAC,eAAAC,EAAA7vI,KACA6vI,EAAA7vI,IAAAgqI,WAjCA,GADAhxJ,QACA5J,KAAA87J,cACA,MAAA97J,MAAAm8J,QAAA,GAAA1rJ,GAGA,IAAAgwJ,GAAA,GAAA3G,GAAA,QAAA95J,KAAA4J,EAAAwT,YAAApd,KAAAkd,IACAujJ,GAAArG,cAEAqG,EAAA3gJ,WAAAlW,EAAAyT,gBACAojJ,EAAA7+I,OA4BA,QAvBAvH,GAHAqmJ,EAAA1gK,KAAAyZ,QAAA8D,gBAAA,GAEAm+D,KAGA/9D,EAAA3d,KAqBAnE,EAAA,EAA2BA,EAAA6kK,EAAA3kK,OAAwBF,IAAA,CACnD,GAAAgJ,GAAA67J,EAAA7kK,EAEAgJ,GAAAwV,aACA+lJ,EAAA/lJ,EAAAxV,EAAAwV,QACAA,EAAAxV,EAAAwV,QAEAra,KAAA09J,WAAA74J,EAAA47J,GAAA,EAAA/kF,GAKA,MAFA0kF,GAAA/lJ,EAAA4D,KAEAwiJ,EAAAhwJ,KAKAqM,SAAA,WACA,MAAA9c,MAAAq8J,QAMAt/I,UAAA,WACA,MAAA/c,MAAAs8J,SAGAG,SAAA,SAAAkE,GACA,GAAA/2J,GAAA5J,KAAA67J,MACAtnD,GAAA,kBAAAosD,GACAC,GAAA,8BAAAD,GACAE,GAAA,4BAAAF,GACAG,GAAA,gCAAAH,EAEA,UAAA/2J,EAAA2qG,IAAA,SAAA3qG,EAAA2qG,GACA,MAAA1tF,YAAAjd,EAAA2qG,GAGA,IAAA50E,GAAA3/B,KAAA2/B,KACA2xG,EAAAh0I,SAAAk0I,YAAA7nE,iBAAAhqC,EAEA,QACAA,EAAAihI,IAAA/F,EAAAvpB,EAAA/8B,KAAAsmD,EAAAl7H,EAAA36B,MAAAuvG,MACAsmD,EAAAvpB,EAAAuvB,KAAA,IACAhG,EAAAvpB,EAAAwvB,KAAA,GACA,GAGAC,YAAA,SAAA52J,EAAA+S,GACAA,KAAAld,KAAAkd,GAEA,IAAAoB,GAAAhhB,SAAAC,cAAA,UACAqzB,EAAAtS,EAAA9gB,WAAA,MACAyM,EAAAE,EAAAG,kBACAtF,EAAAmF,EAAAnF,MACAg8J,EAAAh8J,EAAAkuG,WACAE,EAAApuG,EAAAouG,cACAC,EAAAruG,EAAAquG,cACA7nG,EAAAxG,EAAA8rB,YAAA9rB,EAAAwG,UAAA,EAEAy1J,EAAA34J,KAAAE,IAAAgD,EAAA,GAAA4nG,EAAA4tD,GACAE,EAAA54J,KAAAE,IAAAgD,EAAA,EAAA4nG,EAAA4tD,GACAG,EAAA74J,KAAAE,IAAAgD,EAAA,GAAA6nG,EAAA2tD,GACAI,EAAA94J,KAAAE,IAAAgD,EAAA,EAAA6nG,EAAA2tD,GACAx2J,EAAAP,EAAAO,MAAAy2J,EAAAC,EACAz2J,EAAAR,EAAAQ,OAAA02J,EAAAC,CAEA9iJ,GAAA9T,QAAA0S,EACAoB,EAAA7T,SAAAyS,EAEA0T,EAAAmB,MAAA7U,KACA0T,EAAA4pI,UAAA,IAAAhwJ,EAAAC,GACAmmB,EAAA1T,KAEA,IAAAmkJ,IACAn1J,SAAA/B,EAAA+B,SACAiD,SAAAhF,EAAAgF,SACA4iB,MAAA5nB,EAAA4nB,MAEA5nB,GAAA+B,UAAA+0J,EAAAh3J,EAAAU,EAAAw2J,EAAAl3J,EAAAY,GACAV,EAAAgF,SAAA,EACAhF,EAAA4nB,OAAA,KACA5nB,EAAA+rG,kBACA/rG,GACAA,EAAAwmB,MAAAC,EAGA,IAAA0wI,GAAAj9J,EAAA,KACAk9J,EAAA,GAAAD,IACAt8J,OACA2F,EAAA,EACAE,EAAA,EACA6T,MAAAJ,IAgBA,OAZA,OAAA+iJ,EAAAn1J,WACAq1J,EAAAr1J,SAAA/B,EAAA+B,SAAAm1J,EAAAn1J,UAGA,MAAAm1J,EAAAlyJ,WACAoyJ,EAAApyJ,SAAAhF,EAAAgF,SAAAkyJ,EAAAlyJ,UAGA,MAAAkyJ,EAAAtvI,QACAwvI,EAAAxvI,MAAA5nB,EAAA4nB,MAAAsvI,EAAAtvI,OAGAwvI,IAIAlmK,EAAAC,QAAAqgK,GvL834CM,SAAUtgK,EAAQC,EAAS+I,GAEjC,YwLl86CA,SAAAm9J,GAAA5wJ,EAAAC,GACA,MAAAD,GAAAyJ,SAAAxJ,EAAAwJ,OACAzJ,EAAAwJ,IAAAvJ,EAAAuJ,EAOAxJ,EAAA/K,GAAAgL,EAAAhL,GAEA+K,EAAAwJ,EAAAvJ,EAAAuJ,EAEAxJ,EAAAyJ,OAAAxJ,EAAAwJ,OAtBA,GAAA3c,GAAA2G,EAAA,GACAsV,EAAAtV,EAAA,IAEAuE,EAAAvE,EAAA,IAIAoO,EAAApO,EAAA,IAsBAo9J,EAAA,WACAzhK,KAAA0hK,UAEA1hK,KAAA2hK,gBAEA3hK,KAAA4hK,gBAAA,EAGAH,GAAAtjK,WAEAlC,YAAAwlK,EAMAv7J,SAAA,SAAAvH,EAAAC,GACA,OAAA/C,GAAA,EAA2BA,EAAAmE,KAAA0hK,OAAA3lK,OAAwBF,IACnDmE,KAAA0hK,OAAA7lK,GAAAqK,SAAAvH,EAAAC,IAYA2e,eAAA,SAAAvI,EAAA6sJ,GAKA,MAJAA,OAAA,EACA7sJ,GACAhV,KAAA8hK,kBAAAD,GAEA7hK,KAAA2hK,cASAG,kBAAA,SAAAD,GACA7hK,KAAA4hK,gBAAA,CAGA,QAFAz1H,GAAAnsC,KAAA0hK,OACAhB,EAAA1gK,KAAA2hK,aACA9lK,EAAA,EAAAC,EAAAqwC,EAAApwC,OAA+CF,EAAAC,EAASD,IACxDmE,KAAA+hK,yBAAA51H,EAAAtwC,GAAA,KAAAgmK,EAEAnB,GAAA3kK,OAAAiE,KAAA4hK,gBAOAjoJ,EAAAQ,iBAAA1H,EAAAiuJ,EAAAc,IAGAO,yBAAA,SAAAl9J,EAAAy2J,EAAAuG,GAEA,IAAAh9J,EAAAgV,QAAAgoJ,EAAA,CAIAh9J,EAAA+kF,eAEA/kF,EAAAwsB,SAEAxsB,EAAAmQ,SAIAnQ,EAAA+9G,aAEA,IAAAo/C,GAAAn9J,EAAA89G,QACA,IAAAq/C,EAAA,CAIA1G,EADAA,EACAA,EAAA76J,UASA,KAHA,GAAAwhK,GAAAD,EACAE,EAAAr9J,EAEAo9J,GAEAA,EAAAr+J,OAAAs+J,EACAD,EAAA/rD,kBAEAolD,EAAAr8J,KAAAgjK,GAEAC,EAAAD,EACAA,IAAAt/C,SAIA,GAAA99G,EAAA0K,QAAA,CAGA,OAFAs7C,GAAAhmD,EAAA2/B,UAEA3oC,EAAA,EAA+BA,EAAAgvD,EAAA9uD,OAAqBF,IAAA,CACpD,GAAAsK,GAAA0kD,EAAAhvD,EAIAgJ,GAAAwsB,UACAlrB,EAAAkrB,SAAA,GAGArxB,KAAA+hK,yBAAA57J,EAAAm1J,EAAAuG,GAIAh9J,EAAAwsB,SAAA,MAIAxsB,GAAA+lG,YAAA0wD,EAEAt7J,KAAA2hK,aAAA3hK,KAAA4hK,mBAAA/8J,IAQAs9J,QAAA,SAAAt9J,GACAA,EAAAkvF,YAAA/zF,OAIA6E,YAAA+D,IACA/D,EAAAwvF,qBAAAr0F,MAGAA,KAAAo0F,aAAAvvF,GACA7E,KAAA0hK,OAAAziK,KAAA4F,KAOAu9J,QAAA,SAAAv9J,GACA,SAAAA,EAAA,CAEA,OAAAhJ,GAAA,EAA+BA,EAAAmE,KAAA0hK,OAAA3lK,OAAwBF,IAAA,CACvD,GAAA8jC,GAAA3/B,KAAA0hK,OAAA7lK,EACA8jC,aAAA/2B,IACA+2B,EAAA40D,uBAAAv0F,MAQA,MAJAA,MAAA0hK,UACA1hK,KAAA2hK,qBACA3hK,KAAA4hK,gBAAA,GAKA,GAAA/8J,YAAArC,OACA,OAAA3G,GAAA,EAAAguC,EAAAhlC,EAAA9I,OAA8CF,EAAAguC,EAAOhuC,IACrDmE,KAAAoiK,QAAAv9J,EAAAhJ,QAFA,CAQA,GAAAob,GAAAvZ,EAAAC,QAAAqC,KAAA0hK,OAAA78J,EACAoS,IAAA,IACAjX,KAAAs0F,eAAAzvF,GACA7E,KAAA0hK,OAAAppJ,OAAArB,EAAA,GACApS,YAAA+D,IACA/D,EAAA0vF,uBAAAv0F,SAKAo0F,aAAA,SAAAvvF,GAIA,MAHAA,GAAAkvF,UAAA/zF,KACA6E,EAAA4uB,OAAA,GAEAzzB,MAGAs0F,eAAA,SAAAzvF,GAKA,MAJAA,KACAA,EAAAkvF,UAAA,MAGA/zF,MAMAqY,QAAA,WACArY,KAAAqiK,YACAriK,KAAA0hK,OAAA,MAGAnE,oBAAAiE,GAGAnmK,EAAAC,QAAAmmK,GxL496CM,SAAUpmK,EAAQC,EAAS+I,GAEjC,YyL5s7CA,IAAA3G,GAAA2G,EAAA,GACA4xC,EAAA5xC,EAAA,IAAA4xC,WAEA0uC,EAAAtgF,EAAA,KAEAiiH,EAAAjiH,EAAA,KA6BAi+J,EAAA,SAAAj/J,GAEAA,QAEArD,KAAAuiK,MAAAl/J,EAAAk/J,UAEAviK,KAAA8lH,QAAAziH,EAAAyiH,SAAA,aAGA9lH,KAAAwiK,UAEAxiK,KAAAyiK,UAAA,EAEAziK,KAAA0iK,MAEA1iK,KAAA2iK,YAEA3iK,KAAA4iK,YAEA5iK,KAAAgnH,SAAA,EAEA/wE,EAAAr6C,KAAAoE,MAGAsiK,GAAAnkK,WAEAlC,YAAAqmK,EAKA/6C,QAAA,SAAAvB,GACAhmH,KAAAwiK,OAAAvjK,KAAA+mH,IAMA9C,YAAA,SAAAyB,GACAA,EAAA/xG,UAAA5S,IAEA,QADA6iK,GAAAl+C,EAAAkD,WACAhsH,EAAA,EAA2BA,EAAAgnK,EAAA9mK,OAAkBF,IAC7CmE,KAAAunH,QAAAs7C,EAAAhnK,KAOA8rH,WAAA,SAAA3B,GACA,GAAA/uG,GAAAvZ,EAAAC,QAAAqC,KAAAwiK,OAAAx8C,EACA/uG,IAAA,GACAjX,KAAAwiK,OAAAlqJ,OAAArB,EAAA,IAQAksG,eAAA,SAAAwB,GAEA,OADAk+C,GAAAl+C,EAAAkD,WACAhsH,EAAA,EAA2BA,EAAAgnK,EAAA9mK,OAAkBF,IAC7CmE,KAAA2nH,WAAAk7C,EAAAhnK,GAEA8oH,GAAA/xG,UAAA,MAGAi+C,QAAA,WASA,OAPAstC,IAAA,GAAAr8E,OAAA6/F,UAAA3hH,KAAA2iK,YACAhqH,EAAAwlD,EAAAn+F,KAAA0iK,MACAG,EAAA7iK,KAAAwiK,OACA1mK,EAAA+mK,EAAA9mK,OAEA+mK,KACAC,KACAlnK,EAAA,EAA2BA,EAAAC,EAASD,IAAA,CACpC,GAAAmqH,GAAA68C,EAAAhnK,GACA2K,EAAAw/G,EAAAh9E,KAAAm1D,EAAAxlD,EAGAnyC,KACAs8J,EAAA7jK,KAAAuH,GACAu8J,EAAA9jK,KAAA+mH,IAKA,OAAAnqH,GAAA,EAA2BA,EAAAC,GAC3B+mK,EAAAhnK,GAAAmnK,cACAH,EAAAhnK,GAAAgnK,EAAA/mK,EAAA,GACA+mK,EAAA1tJ,MACArZ,KAGAD,GAIAC,GAAAgnK,EAAA/mK,MACA,QAAAF,GAAA,EAA2BA,EAAAC,EAASD,IACpCknK,EAAAlnK,GAAAonK,KAAAH,EAAAjnK,GAGAmE,MAAA0iK,MAAAvkE,EAEAn+F,KAAA8lH,QAAAntE,GAEA34C,KAAAqW,QAAA,QAAAsiC,GAEA34C,KAAAuiK,MAAAvtJ,QACAhV,KAAAuiK,MAAAvtJ,UAIAkuJ,WAAA,WAKA,QAAAl6H,KACArrB,EAAA8kJ,WAEA99E,EAAA37C,IAEArrB,EAAAqpG,SAAArpG,EAAAkzC,WATA,GAAAlzC,GAAA3d,IAEAA,MAAAyiK,UAAA,EAWA99E,EAAA37C,IAMAqb,MAAA,WAEArkD,KAAA0iK,OAAA,GAAA5gJ,OAAA6/F,UACA3hH,KAAA2iK,YAAA,EAEA3iK,KAAAkjK,cAKAttH,KAAA,WACA51C,KAAAyiK,UAAA,GAMA17C,MAAA,WACA/mH,KAAAgnH,UACAhnH,KAAA4iK,aAAA,GAAA9gJ,OAAA6/F,UACA3hH,KAAAgnH,SAAA,IAOAC,OAAA,WACAjnH,KAAAgnH,UACAhnH,KAAA2iK,cAAA,GAAA7gJ,OAAA6/F,UAAA3hH,KAAA4iK,YACA5iK,KAAAgnH,SAAA,IAOAplG,MAAA,WACA5hB,KAAAwiK,WAcAzuI,QAAA,SAAAt3B,EAAA4G,GACAA,OAEA,IAAAshH,GAAA,GAAA2B,GACA7pH,EACA4G,EAAAywB,KACAzwB,EAAAs+B,OACAt+B,EAAAgkD,OAKA,OAFArnD,MAAAkjH,YAAAyB,GAEAA,IAIAjnH,EAAAY,MAAAgkK,EAAArsH,GAEA56C,EAAAC,QAAAgnK,GzL+t7CM,SAAUjnK,EAAQC,EAAS+I,G0Lz87CjC,QAAA4hH,GAAA5iH,GAEArD,KAAA4lD,QAAAviD,EAAA5G,OAGAuD,KAAAmjK,MAAA9/J,EAAA6iH,MAAA,IAEAlmH,KAAAomH,OAAA/iH,EAAA+qD,OAAA,EAGApuD,KAAAojK,cAAA,EAGApjK,KAAA8zB,KAAA,MAAAzwB,EAAAywB,MAAAzwB,EAAAywB,KAEA9zB,KAAAqxC,IAAAhuC,EAAAguC,KAAA,EAEArxC,KAAA4kH,OAAAvhH,EAAAuhH,QAAA,SAEA5kH,KAAA8lH,QAAAziH,EAAAyiH,QACA9lH,KAAAqmH,UAAAhjH,EAAAgjH,UACArmH,KAAAqjK,UAAAhgK,EAAAggK,UAEArjK,KAAA2iK,YAAA,EACA3iK,KAAAgnH,SAAA,EA1BA,GAAAs8C,GAAAj/J,EAAA,IA6BA4hH,GAAA9nH,WAEAlC,YAAAgqH,EAEAj9E,KAAA,SAAAu6H,EAAAC,GAQA,GALAxjK,KAAAojK,eACApjK,KAAAyjK,WAAAF,EAAAvjK,KAAAomH,OACApmH,KAAAojK,cAAA,GAGApjK,KAAAgnH,QAEA,YADAhnH,KAAA2iK,aAAAa,EAIA,IAAA98I,IAAA68I,EAAAvjK,KAAAyjK,WAAAzjK,KAAA2iK,aAAA3iK,KAAAmjK,KAGA,MAAAz8I,EAAA,IAIAA,EAAApe,KAAAI,IAAAge,EAAA,EAEA,IAAAk+F,GAAA5kH,KAAA4kH,OACA8+C,EAAA,gBAAA9+C,GAAA0+C,EAAA1+C,KACA++C,EAAA,kBAAAD,GACAA,EAAAh9I,GACAA,CAKA,OAHA1mB,MAAAijK,KAAA,QAAAU,GAGA,GAAAj9I,EACA1mB,KAAA8zB,MACA9zB,KAAA4jK,QAAAL,GAGA,YAKAvjK,KAAAgjK,cAAA,EACA,WAGA,OAGAY,QAAA,SAAAL,GACA,GAAA56I,IAAA46I,EAAAvjK,KAAAyjK,WAAAzjK,KAAA2iK,aAAA3iK,KAAAmjK,KACAnjK,MAAAyjK,WAAAF,EAAA56I,EAAA3oB,KAAAqxC,IACArxC,KAAA2iK,YAAA,EAEA3iK,KAAAgjK,cAAA,GAGAC,KAAA,SAAA9nJ,EAAA2nD,GACA3nD,EAAA,KAAAA,EACAnb,KAAAmb,IACAnb,KAAAmb,GAAAnb,KAAA4lD,QAAAkd,IAIAikD,MAAA,WACA/mH,KAAAgnH,SAAA,GAGAC,OAAA,WACAjnH,KAAAgnH,SAAA,IAIA3rH,EAAAC,QAAA2qH,G1Lm+7CM,SAAU5qH,EAAQC,G2Ltl8CxB,GAAAspH,IAKAi/C,OAAA,SAAAtrI,GACA,MAAAA,IAOAurI,YAAA,SAAAvrI,GACA,MAAAA,MAMAwrI,aAAA,SAAAxrI,GACA,MAAAA,IAAA,EAAAA,IAMAyrI,eAAA,SAAAzrI,GACA,OAAAA,GAAA,KACA,GAAAA,KAEA,MAAAA,KAAA,OAQA0rI,QAAA,SAAA1rI,GACA,MAAAA,QAMA2rI,SAAA,SAAA3rI,GACA,QAAAA,MAAA,GAMA4rI,WAAA,SAAA5rI,GACA,OAAAA,GAAA,KACA,GAAAA,MAEA,KAAAA,GAAA,GAAAA,IAAA,IAQA6rI,UAAA,SAAA7rI,GACA,MAAAA,UAMA8rI,WAAA,SAAA9rI,GACA,YAAAA,SAMA+rI,aAAA,SAAA/rI,GACA,OAAAA,GAAA,KACA,GAAAA,SAEA,KAAAA,GAAA,GAAAA,MAAA,IAQAgsI,UAAA,SAAAhsI,GACA,MAAAA,YAMAisI,WAAA,SAAAjsI,GACA,QAAAA,UAAA,GAMAksI,aAAA,SAAAlsI,GACA,OAAAA,GAAA,KACA,GAAAA,UAEA,KAAAA,GAAA,GAAAA,QAAA,IAQAmsI,aAAA,SAAAnsI,GACA,SAAAjwB,KAAAklC,IAAAjV,EAAAjwB,KAAA6gB,GAAA,IAMAw7I,cAAA,SAAApsI,GACA,MAAAjwB,MAAAolC,IAAAnV,EAAAjwB,KAAA6gB,GAAA,IAMAy7I,gBAAA,SAAArsI,GACA,YAAAjwB,KAAAklC,IAAAllC,KAAA6gB,GAAAoP,KAQAssI,cAAA,SAAAtsI,GACA,WAAAA,EAAA,EAAAjwB,KAAA+f,IAAA,KAAAkQ,EAAA,IAMAusI,eAAA,SAAAvsI,GACA,WAAAA,EAAA,IAAAjwB,KAAA+f,IAAA,MAAAkQ,IAMAwsI,iBAAA,SAAAxsI,GACA,WAAAA,EACA,EAEA,IAAAA,EACA,GAEAA,GAAA,KACA,GAAAjwB,KAAA+f,IAAA,KAAAkQ,EAAA,GAEA,MAAAjwB,KAAA+f,IAAA,OAAAkQ,EAAA,MAQAysI,WAAA,SAAAzsI,GACA,SAAAjwB,KAAA4rB,KAAA,EAAAqE,MAMA0sI,YAAA,SAAA1sI,GACA,MAAAjwB,MAAA4rB,KAAA,KAAAqE,MAMA2sI,cAAA,SAAA3sI,GACA,OAAAA,GAAA,MACA,IAAAjwB,KAAA4rB,KAAA,EAAAqE,KAAA,GAEA,IAAAjwB,KAAA4rB,KAAA,GAAAqE,GAAA,GAAAA,GAAA,IAQA4sI,UAAA,SAAA5sI,GACA,GAAAvD,GACApkB,EAAA,EAEA,YAAA2nB,EACA,EAEA,IAAAA,EACA,IAEA3nB,KAAA,GACAA,EAAA,EAAsBokB,EAAAgiB,IAGtBhiB,EAXA,GAWA1sB,KAAA23G,KAAA,EAAArvG,IAAA,EAAAtI,KAAA6gB,KAEAvY,EAAAtI,KAAA+f,IAAA,MAAAkQ,GAAA,IACAjwB,KAAAolC,KAAAnV,EAAAvD,IAAA,EAAA1sB,KAAA6gB,IAdA,MAoBAi8I,WAAA,SAAA7sI,GACA,GAAAvD,GACApkB,EAAA,EAEA,YAAA2nB,EACA,EAEA,IAAAA,EACA,IAEA3nB,KAAA,GACAA,EAAA,EAAsBokB,EAAAgiB,IAGtBhiB,EAXA,GAWA1sB,KAAA23G,KAAA,EAAArvG,IAAA,EAAAtI,KAAA6gB,IAEAvY,EAAAtI,KAAA+f,IAAA,MAAAkQ,GACAjwB,KAAAolC,KAAAnV,EAAAvD,IAAA,EAAA1sB,KAAA6gB,IAdA,IAcA,IAMAk8I,aAAA,SAAA9sI,GACA,GAAAvD,GACApkB,EAAA,EAEA,YAAA2nB,EACA,EAEA,IAAAA,EACA,IAEA3nB,KAAA,GACAA,EAAA,EAAsBokB,EAAAgiB,IAGtBhiB,EAXA,GAWA1sB,KAAA23G,KAAA,EAAArvG,IAAA,EAAAtI,KAAA6gB,KAEAoP,GAAA,KACA3nB,EAAAtI,KAAA+f,IAAA,MAAAkQ,GAAA,IACAjwB,KAAAolC,KAAAnV,EAAAvD,IAAA,EAAA1sB,KAAA6gB,IAfA,KAcA,GAGAvY,EAAAtI,KAAA+f,IAAA,OAAAkQ,GAAA,IACAjwB,KAAAolC,KAAAnV,EAAAvD,IAAA,EAAA1sB,KAAA6gB,IAlBA,IAkBA,OASAm8I,OAAA,SAAA/sI,GACA,GAAAvD,GAAA,OACA,OAAAuD,OAAAvD,EAAA,GAAAuD,EAAAvD,IAMAuwI,QAAA,SAAAhtI,GACA,GAAAvD,GAAA,OACA,SAAAuD,MAAAvD,EAAA,GAAAuD,EAAAvD,GAAA,GAMAwwI,UAAA,SAAAjtI,GACA,GAAAvD,GAAA,SACA,QAAAuD,GAAA,KACAA,MAAAvD,EAAA,GAAAuD,EAAAvD,GAAA,GAEA,KAAAuD,GAAA,GAAAA,IAAAvD,EAAA,GAAAuD,EAAAvD,GAAA,IAQAywI,SAAA,SAAAltI,GACA,SAAAqsF,EAAA8gD,UAAA,EAAAntI,IAMAmtI,UAAA,SAAAntI,GACA,MAAAA,GAAA,OACA,OAAAA,IAEAA,EAAA,OACA,QAAAA,GAAA,UAAAA,EAAA,IAEAA,EAAA,SACA,QAAAA,GAAA,WAAAA,EAAA,MAGA,QAAAA,GAAA,YAAAA,EAAA,SAOAotI,YAAA,SAAAptI,GACA,MAAAA,GAAA,GACA,GAAAqsF,EAAA6gD,SAAA,EAAAltI,GAEA,GAAAqsF,EAAA8gD,UAAA,EAAAntI,EAAA,OAIAl9B,GAAAC,QAAAspH,G3Lqm8CM,SAAUvpH,EAAQC,EAAS+I,G4Lz78CjC,GAAA6jH,GAAA7jH,EAAA,KAAA6jH,gBACAD,EAAA,EAAA3/G,KAAA6gB,EAEA9tB,GAAAC,SAcAk4B,cAAA,SACA9oB,EAAAE,EAAAssC,EAAA+/C,EAAAC,EAAAC,EACA3rF,EAAAb,EAAAE,GAGA,OAAAW,EACA,QAEA,IAAAw2E,GAAAx2E,CAEAb,IAAAD,EACAG,GAAAD,CACA,IAAAsqB,GAAA5sB,KAAA4rB,KAAAvpB,IAAAE,IAEA,IAAAqqB,EAAA8sD,EAAA9qC,GAAAhiB,EAAA8sD,EAAA9qC,EACA,QAEA,IAAA5uC,KAAAsG,IAAAqoF,EAAAC,GAAA+wB,EAAA,KAEA,QAEA,IAAA9wB,EAAA,CACA,GAAA5pD,GAAA0pD,CACAA,GAAAixB,EAAAhxB,GACAA,EAAAgxB,EAAA36E,OAEA0pD,GAAAixB,EAAAjxB,GACAC,EAAAgxB,EAAAhxB,EAEAD,GAAAC,IACAA,GAAA+wB,EAGA,IAAArrB,GAAAt0F,KAAAmjH,MAAA5gH,EAAAF,EAIA,OAHAiyF,GAAA,IACAA,GAAAqrB,GAEArrB,GAAA3F,GAAA2F,GAAA1F,GACA0F,EAAAqrB,GAAAhxB,GAAA2F,EAAAqrB,GAAA/wB,K5Lo88CM,SAAU77F,EAAQC,EAAS+I,G6L3/8CjC,GAAAywF,GAAAzwF,EAAA,GAEAhJ,GAAAC,SAgBAk4B,cAAA,SAAA8a,EAAAC,EAAA9iC,EAAAE,EAAAD,EAAAE,EAAA4iC,EAAAC,EAAAjjC,EAAAb,EAAAE,GACA,OAAAW,EACA,QAEA,IAAAw2E,GAAAx2E,CAEA,SACAX,EAAA0jC,EAAAyzC,GAAAn3E,EAAAc,EAAAq2E,GAAAn3E,EAAAe,EAAAo2E,GAAAn3E,EAAA4jC,EAAAuzC,GACAn3E,EAAA0jC,EAAAyzC,GAAAn3E,EAAAc,EAAAq2E,GAAAn3E,EAAAe,EAAAo2E,GAAAn3E,EAAA4jC,EAAAuzC,GACAr3E,EAAA2jC,EAAA0zC,GAAAr3E,EAAAc,EAAAu2E,GAAAr3E,EAAAe,EAAAs2E,GAAAr3E,EAAA6jC,EAAAwzC,GACAr3E,EAAA2jC,EAAA0zC,GAAAr3E,EAAAc,EAAAu2E,GAAAr3E,EAAAe,EAAAs2E,GAAAr3E,EAAA6jC,EAAAwzC,IAIA8S,EAAAzmD,kBACAC,EAAAC,EAAA9iC,EAAAE,EAAAD,EAAAE,EAAA4iC,EAAAC,EACA9jC,EAAAE,EAAA,OAEAm3E,EAAA,K7Lsg9CM,SAAU3mF,EAAQC,G8L3i9CxBD,EAAAC,SAYAk4B,cAAA,SAAA8a,EAAAC,EAAA9iC,EAAAE,EAAAH,EAAAb,EAAAE,GACA,OAAAW,EACA,QAEA,IAAAw2E,GAAAx2E,EACAo6J,EAAA,EACAtjF,EAAAh0C,CAEA,IACAzjC,EAAA0jC,EAAAyzC,GAAAn3E,EAAAc,EAAAq2E,GACAn3E,EAAA0jC,EAAAyzC,GAAAn3E,EAAAc,EAAAq2E,GACAr3E,EAAA2jC,EAAA0zC,GAAAr3E,EAAAc,EAAAu2E,GACAr3E,EAAA2jC,EAAA0zC,GAAAr3E,EAAAc,EAAAu2E,EAEA,QAGA,IAAA1zC,IAAA7iC,EAKA,MAAAnD,MAAAsG,IAAAjE,EAAA2jC,IAAA0zC,EAAA,CAJA4jF,IAAAr3H,EAAA5iC,IAAA2iC,EAAA7iC,GACA62E,GAAAh0C,EAAA3iC,EAAAF,EAAA8iC,IAAAD,EAAA7iC,EAKA,IAAA8hC,GAAAq4H,EAAAj7J,EAAAE,EAAAy3E,CAEA,OADA/0C,MAAAq4H,IAAA,IACA5jF,EAAA,EAAAA,EAAA,K9Lqj9CM,SAAU3mF,EAAQC,EAAS+I,GAEjC,Y+L3k9CA,SAAAwhK,GAAAj1J,EAAAC,GACA,MAAAvI,MAAAsG,IAAAgC,EAAAC,GAAA46B,EAOA,QAAAq6H,KACA,GAAAv4H,GAAAM,EAAA,EACAA,GAAA,GAAAA,EAAA,GACAA,EAAA,GAAAN,EAGA,QAAAw4H,GAAAz3H,EAAAC,EAAA9iC,EAAAE,EAAAD,EAAAE,EAAA4iC,EAAAC,EAAA9jC,EAAAE,GAEA,GACAA,EAAA0jC,GAAA1jC,EAAAc,GAAAd,EAAAe,GAAAf,EAAA4jC,GACA5jC,EAAA0jC,GAAA1jC,EAAAc,GAAAd,EAAAe,GAAAf,EAAA4jC,EAEA,QAEA,IAAAu3H,GAAAlxE,EAAA5oD,YAAAqC,EAAA5iC,EAAAC,EAAA6iC,EAAA5jC,EAAAshC,EACA,QAAA65H,EACA,QAMA,QADAC,GAAAC,EAFAjzI,EAAA,EACAkzI,GAAA,EAEAtqK,EAAA,EAA2BA,EAAAmqK,EAAYnqK,IAAA,CACvC,GAAA05B,GAAA4W,EAAAtwC,GAGAuqK,EAAA,IAAA7wI,GAAA,IAAAA,EAAA,IAEAu/D,GAAAnpD,QAAA2C,EAAA7iC,EAAAC,EAAA8iC,EAAAjZ,GACA5qB,IAGAw7J,EAAA,IACAA,EAAArxE,EAAAlnD,aAAAW,EAAA5iC,EAAAC,EAAA6iC,EAAAZ,GACAA,EAAA,GAAAA,EAAA,IAAAs4H,EAAA,GACAL,IAEAG,EAAAnxE,EAAAnpD,QAAA4C,EAAA5iC,EAAAC,EAAA6iC,EAAAZ,EAAA,IACAs4H,EAAA,IACAD,EAAApxE,EAAAnpD,QAAA4C,EAAA5iC,EAAAC,EAAA6iC,EAAAZ,EAAA,MAGA,GAAAs4H,EAEA5wI,EAAAsY,EAAA,GACA5a,GAAAgzI,EAAA13H,EAAA63H,KAEA7wI,EAAAsY,EAAA,GACA5a,GAAAizI,EAAAD,EAAAG,KAGAnzI,GAAAwb,EAAAy3H,EAAAE,KAKA7wI,EAAAsY,EAAA,GACA5a,GAAAgzI,EAAA13H,EAAA63H,KAGAnzI,GAAAwb,EAAAw3H,EAAAG,MAIA,MAAAnzI,GAIA,QAAAozI,GAAA/3H,EAAAC,EAAA9iC,EAAAE,EAAAD,EAAAE,EAAAjB,EAAAE,GAEA,GACAA,EAAA0jC,GAAA1jC,EAAAc,GAAAd,EAAAe,GACAf,EAAA0jC,GAAA1jC,EAAAc,GAAAd,EAAAe,EAEA,QAEA,IAAAo6J,GAAAlxE,EAAAxlD,gBAAAf,EAAA5iC,EAAAC,EAAAf,EAAAshC,EACA,QAAA65H,EACA,QAGA,IAAAzwI,GAAAu/D,EAAAvlD,kBAAAhB,EAAA5iC,EAAAC,EACA,IAAA2pB,GAAA,GAAAA,GAAA,GAGA,OAFAtC,GAAA,EACAqzI,EAAAxxE,EAAA1lD,YAAAb,EAAA5iC,EAAAC,EAAA2pB,GACA15B,EAAA,EAA+BA,EAAAmqK,EAAYnqK,IAAA,CAE3C,GAAAuqK,GAAA,IAAAj6H,EAAAtwC,IAAA,IAAAswC,EAAAtwC,GAAA,KAEA0qK,EAAAzxE,EAAA1lD,YAAAd,EAAA7iC,EAAAC,EAAAygC,EAAAtwC,GACA0qK,GAAA57J,IAGAwhC,EAAAtwC,GAAA05B,EACAtC,GAAAqzI,EAAA/3H,EAAA63H,KAGAnzI,GAAArnB,EAAA06J,EAAAF,MAGA,MAAAnzI,GAIA,GAAAmzI,GAAA,IAAAj6H,EAAA,QAAAA,EAAA,QAEAo6H,EAAAzxE,EAAA1lD,YAAAd,EAAA7iC,EAAAC,EAAAygC,EAAA,GACA,OAAAo6H,GAAA57J,EACA,EAEAiB,EAAA2iC,EAAA63H,KAOA,QAAAI,GACA97J,EAAAE,EAAAssC,EAAA+/C,EAAAC,EAAAC,EAAAxsF,EAAAE,GAGA,IADAA,GAAAD,GACAssC,GAAArsC,GAAAqsC,EACA,QAEA,IAAA3J,GAAAjlC,KAAA4rB,KAAAgjB,IAAArsC,IACAshC,GAAA,IAAAoB,EACApB,EAAA,GAAAoB,CAEA,IAAAozD,GAAAr4F,KAAAsG,IAAAqoF,EAAAC,EACA,IAAAyJ,EAAA,KACA,QAEA,IAAAA,EAAAsnB,EAAA,MAEAhxB,EAAA,EACAC,EAAA+wB,CACA,IAAA/oD,GAAAi4B,EAAA,IACA,OAAAxsF,IAAAwhC,EAAA,GAAAzhC,GAAAC,GAAAwhC,EAAA,GAAAzhC,EACAw0D,EAEA,EAIA,GAAAi4B,EAAA,CACA,GAAA5pD,GAAA0pD,CACAA,GAAAixB,EAAAhxB,GACAA,EAAAgxB,EAAA36E,OAGA0pD,GAAAixB,EAAAjxB,GACAC,EAAAgxB,EAAAhxB,EAEAD,GAAAC,IACAA,GAAA+wB,EAIA,QADAh1F,GAAA,EACAp3B,EAAA,EAAuBA,EAAA,EAAOA,IAAA,CAC9B,GAAA0qK,GAAAp6H,EAAAtwC,EACA,IAAA0qK,EAAA77J,EAAAC,EAAA,CACA,GAAAiyF,GAAAt0F,KAAAmjH,MAAA5gH,EAAA07J,GACArnG,EAAAi4B,EAAA,IACAyF,GAAA,IACAA,EAAAqrB,EAAArrB,IAGAA,GAAA3F,GAAA2F,GAAA1F,GACA0F,EAAAqrB,GAAAhxB,GAAA2F,EAAAqrB,GAAA/wB,KAEA0F,EAAAt0F,KAAA6gB,GAAA,GAAAyzE,EAAA,IAAAt0F,KAAA6gB,KACA+1C,MAEAjsC,GAAAisC,IAIA,MAAAjsC,GAGA,QAAAwzI,GAAAjoK,EAAAgN,EAAAk7J,EAAA/7J,EAAAE,GAOA,OANAooB,GAAA,EACAslE,EAAA,EACAC,EAAA,EACAlqD,EAAA,EACAC,EAAA,EAEA1yC,EAAA,EAAuBA,EAAA2C,EAAAzC,QAAiB,CACxC,GAAA87F,GAAAr5F,EAAA3C,IAyBA,QAvBAg8F,IAAA7C,EAAAj8D,GAAAl9B,EAAA,IAEA6qK,IACAzzI,GAAA0zI,EAAApuE,EAAAC,EAAAlqD,EAAAC,EAAA5jC,EAAAE,KAQA,GAAAhP,IAKA08F,EAAA/5F,EAAA3C,GACA28F,EAAAh6F,EAAA3C,EAAA,GAEAyyC,EAAAiqD,EACAhqD,EAAAiqD,GAGAX,GACA,IAAA7C,GAAAj8D,EAGAuV,EAAA9vC,EAAA3C,KACA0yC,EAAA/vC,EAAA3C,KACA08F,EAAAjqD,EACAkqD,EAAAjqD,CACA,MACA,KAAAymD,GAAAp8C,EACA,GAAA8tH,GACA,GAAAlzI,EAAA+kE,EAAAC,EAAAh6F,EAAA3C,GAAA2C,EAAA3C,EAAA,GAAA2P,EAAAb,EAAAE,GACA,aAKAooB,IAAA0zI,EAAApuE,EAAAC,EAAAh6F,EAAA3C,GAAA2C,EAAA3C,EAAA,GAAA8O,EAAAE,IAAA,CAEA0tF,GAAA/5F,EAAA3C,KACA28F,EAAAh6F,EAAA3C,IACA,MACA,KAAAm5F,GAAAzoD,EACA,GAAAm6H,GACA,GAAAE,EAAApzI,cAAA+kE,EAAAC,EACAh6F,EAAA3C,KAAA2C,EAAA3C,KAAA2C,EAAA3C,KAAA2C,EAAA3C,KAAA2C,EAAA3C,GAAA2C,EAAA3C,EAAA,GACA2P,EAAAb,EAAAE,GAEA,aAIAooB,IAAA8yI,EACAxtE,EAAAC,EACAh6F,EAAA3C,KAAA2C,EAAA3C,KAAA2C,EAAA3C,KAAA2C,EAAA3C,KAAA2C,EAAA3C,GAAA2C,EAAA3C,EAAA,GACA8O,EAAAE,IACA,CAEA0tF,GAAA/5F,EAAA3C,KACA28F,EAAAh6F,EAAA3C,IACA,MACA,KAAAm5F,GAAAC,EACA,GAAAyxE,GACA,GAAAG,EAAArzI,cAAA+kE,EAAAC,EACAh6F,EAAA3C,KAAA2C,EAAA3C,KAAA2C,EAAA3C,GAAA2C,EAAA3C,EAAA,GACA2P,EAAAb,EAAAE,GAEA,aAIAooB,IAAAozI,EACA9tE,EAAAC,EACAh6F,EAAA3C,KAAA2C,EAAA3C,KAAA2C,EAAA3C,GAAA2C,EAAA3C,EAAA,GACA8O,EAAAE,IACA,CAEA0tF,GAAA/5F,EAAA3C,KACA28F,EAAAh6F,EAAA3C,IACA,MACA,KAAAm5F,GAAA3oD,EAEA,GAAA3hC,GAAAlM,EAAA3C,KACA+O,EAAApM,EAAA3C,KACA+8F,EAAAp6F,EAAA3C,KACAg9F,EAAAr6F,EAAA3C,KACAuxC,EAAA5uC,EAAA3C,KACAo9F,EAAAz6F,EAAA3C,KAGAs7F,GADA34F,EAAA3C,KACA,EAAA2C,EAAA3C,MACA4P,EAAAnD,KAAAklC,IAAAJ,GAAAwrD,EAAAluF,EACAiB,EAAArD,KAAAolC,IAAAN,GAAAyrD,EAAAjuF,CAEA/O,GAAA,EACAo3B,GAAA0zI,EAAApuE,EAAAC,EAAA/sF,EAAAE,EAAAhB,EAAAE,IAIAyjC,EAAA7iC,EACA8iC,EAAA5iC,EAGA,IAAA+kI,IAAA/lI,EAAAD,GAAAmuF,EAAAD,EAAAluF,CACA,IAAAg8J,GACA,GAAA1vE,EAAAxjE,cACA9oB,EAAAE,EAAAiuF,EAAAzrD,IAAA6rD,EAAA9B,EACA3rF,EAAAklI,EAAA7lI,GAEA,aAIAooB,IAAAuzI,EACA97J,EAAAE,EAAAiuF,EAAAzrD,IAAA6rD,EAAA9B,EACAu5C,EAAA7lI,EAGA0tF,GAAAjwF,KAAAklC,IAAAJ,EAAA6rD,GAAAL,EAAAluF,EACA8tF,EAAAlwF,KAAAolC,IAAAN,EAAA6rD,GAAAJ,EAAAjuF,CACA,MACA,KAAAoqF,GAAAz8C,EACAjK,EAAAiqD,EAAA/5F,EAAA3C,KACA0yC,EAAAiqD,EAAAh6F,EAAA3C,IACA,IAAA2O,GAAAhM,EAAA3C,KACA4O,EAAAjM,EAAA3C,KACA4P,EAAA6iC,EAAA9jC,EACAmB,EAAA4iC,EAAA9jC,CACA,IAAAi8J,GACA,GAAAlzI,EAAA8a,EAAAC,EAAA9iC,EAAA8iC,EAAA/iC,EAAAb,EAAAE,IACA2oB,EAAA/nB,EAAA8iC,EAAA9iC,EAAAE,EAAAH,EAAAb,EAAAE,IACA2oB,EAAA/nB,EAAAE,EAAA2iC,EAAA3iC,EAAAH,EAAAb,EAAAE,IACA2oB,EAAA8a,EAAA3iC,EAAA2iC,EAAAC,EAAA/iC,EAAAb,EAAAE,GAEA,aAKAooB,IAAA0zI,EAAAl7J,EAAA8iC,EAAA9iC,EAAAE,EAAAhB,EAAAE,GACAooB,GAAA0zI,EAAAr4H,EAAA3iC,EAAA2iC,EAAAC,EAAA5jC,EAAAE,EAEA,MACA,KAAAmqF,GAAAE,EACA,GAAAwxE,GACA,GAAAlzI,EACA+kE,EAAAC,EAAAlqD,EAAAC,EAAA/iC,EAAAb,EAAAE,GAEA,aAKAooB,IAAA0zI,EAAApuE,EAAAC,EAAAlqD,EAAAC,EAAA5jC,EAAAE,EAOA0tF,GAAAjqD,EACAkqD,EAAAjqD,GAOA,MAHAm4H,IAAAb,EAAArtE,EAAAjqD,KACAtb,GAAA0zI,EAAApuE,EAAAC,EAAAlqD,EAAAC,EAAA5jC,EAAAE,IAAA,GAEA,IAAAooB,EAjYA,GAAA+hE,GAAA3wF,EAAA,IAAA2wF,IACAwrB,EAAAn8G,EAAA,KACAuiK,EAAAviK,EAAA,KACAwiK,EAAAxiK,EAAA,KACA2yF,EAAA3yF,EAAA,KACA6jH,EAAA7jH,EAAA,KAAA6jH,gBACApzB,EAAAzwF,EAAA,IAEAsiK,EAAAtiK,EAAA,KAEAmvB,EAAAgtF,EAAAhtF,cAEAy0F,EAAA,EAAA3/G,KAAA6gB,GAEAsiB,EAAA,KAOAU,IAAA,SACA0B,IAAA,KA8WAxyC,GAAAC,SACA+3B,QAAA,SAAAvpB,EAAAa,EAAAE,GACA,MAAA47J,GAAA38J,EAAA,KAAAa,EAAAE,IAGA2oB,cAAA,SAAA1pB,EAAA0B,EAAAb,EAAAE,GACA,MAAA47J,GAAA38J,EAAA0B,GAAA,EAAAb,EAAAE,M/Lsm9CM,SAAUxP,EAAQC,EAAS+I,GgMj/9CjC,GAAAywF,GAAAzwF,EAAA,GAEAhJ,GAAAC,SAcAk4B,cAAA,SAAA8a,EAAAC,EAAA9iC,EAAAE,EAAAD,EAAAE,EAAAJ,EAAAb,EAAAE,GACA,OAAAW,EACA,QAEA,IAAAw2E,GAAAx2E,CAEA,SACAX,EAAA0jC,EAAAyzC,GAAAn3E,EAAAc,EAAAq2E,GAAAn3E,EAAAe,EAAAo2E,GACAn3E,EAAA0jC,EAAAyzC,GAAAn3E,EAAAc,EAAAq2E,GAAAn3E,EAAAe,EAAAo2E,GACAr3E,EAAA2jC,EAAA0zC,GAAAr3E,EAAAc,EAAAu2E,GAAAr3E,EAAAe,EAAAs2E,GACAr3E,EAAA2jC,EAAA0zC,GAAAr3E,EAAAc,EAAAu2E,GAAAr3E,EAAAe,EAAAs2E,IAIA8S,EAAAplD,sBACApB,EAAAC,EAAA9iC,EAAAE,EAAAD,EAAAE,EACAjB,EAAAE,EAAA,OAEAm3E,EAAA,KhM4/9CM,SAAU3mF,EAAQC,GiM/h+CxBD,EAAAC,QAAA,SAAAgzC,EAAAC,EAAA9iC,EAAAE,EAAAhB,EAAAE,GACA,GAAAA,EAAA0jC,GAAA1jC,EAAAc,GAAAd,EAAA0jC,GAAA1jC,EAAAc,EACA,QAGA,IAAAA,IAAA4iC,EACA,QAEA,IAAA2wB,GAAAvzD,EAAA4iC,EAAA,KACAhZ,GAAA1qB,EAAA0jC,IAAA5iC,EAAA4iC,EASA,OANA,KAAAhZ,GAAA,IAAAA,IACA2pC,EAAAvzD,EAAA4iC,EAAA,QAGAhZ,GAAA9pB,EAAA6iC,KAEA3jC,EAAAu0D,EAAA,IjMwi+CM,SAAU7jE,EAAQC,EAAS+I,GAEjC,YkM1/9CA,SAAAoxB,GAAAqxI,GACA,GAAA1zH,GAAA0zH,EAAA,MAAAA,EAAA,MACAzzH,EAAAyzH,EAAA,MAAAA,EAAA,KAEA,OAAAx+J,MAAA4rB,KAAAkf,IAAAC,KAGA,QAAA0zH,GAAAD,GACA,QACAA,EAAA,MAAAA,EAAA,UACAA,EAAA,MAAAA,EAAA,UAvEA,GAAA51B,GAAA7sI,EAAA,IAEA2iK,EAAA,WAMAhnK,KAAAinK,UAGAD,GAAA7oK,WAEAlC,YAAA+qK,EAEAE,UAAA,SAAAnxJ,EAAAtZ,EAAAkjC,GAEA,MADA3/B,MAAAmnK,SAAApxJ,EAAAtZ,EAAAkjC,GACA3/B,KAAAonK,WAAArxJ,IAGA6L,MAAA,WAEA,MADA5hB,MAAAinK,OAAAlrK,OAAA,EACAiE,MAGAmnK,SAAA,SAAApxJ,EAAAtZ,EAAAkjC,GACA,GAAA0nI,GAAAtxJ,EAAAsxJ,OAEA,IAAAA,EAAA,CAWA,OAPAC,IACA13J,UACAy3J,WACA5qK,SACAsZ,SAGAla,EAAA,EAAAC,EAAAurK,EAAAtrK,OAAiDF,EAAAC,EAASD,IAAA,CAC1D,GAAAo5C,GAAAoyH,EAAAxrK,GACA2zE,EAAA0hE,EAAA78F,cAAA1U,EAAAsV,KACAqyH,GAAA13J,OAAA3Q,MAAAuwE,EAAA96B,IAAA86B,EAAA76B,MACA2yH,EAAAD,QAAApoK,KAAAg2C,GAGAj1C,KAAAinK,OAAAhoK,KAAAqoK,KAGAF,WAAA,SAAArxJ,GACA,OAAA5F,KAAAo3J,GACA,GAAAA,EAAAhrK,eAAA4T,GAAA,CACA,GAAAq3J,GAAAD,EAAAp3J,GAAAnQ,KAAAinK,OAAAlxJ,EACA,IAAAyxJ,EACA,MAAAA,KAqBA,IAAAD,IAEAE,MAAA,SAAAC,EAAA3xJ,GACA,GAAAkvG,GAAAyiD,EAAA3rK,MAEA,IAAAkpH,EAAA,CAIA,GAAA0iD,IAAAD,EAAAziD,EAAA,QAAqDr1G,OACrDg4J,GAAAF,EAAAziD,EAAA,QAAqDr1G,QAAA+3J,CAErD,IAAAC,GACAA,EAAA7rK,OAAA,GACA4rK,GACAA,EAAA5rK,OAAA,EACA,CACA,GAAA47J,GAAAliI,EAAAkyI,GAAAlyI,EAAAmyI,IACA7/I,SAAA4vI,OAAA,GAEA5hJ,EAAA4hJ,YAEA,IAAAkQ,GAAAd,EAAAY,EAIA,OAHA5xJ,GAAA0hJ,OAAAoQ,EAAA,GACA9xJ,EAAA2hJ,OAAAmQ,EAAA,IAGA1nK,KAAA,QACA1D,OAAAirK,EAAA,GAAAjrK,OACAsZ,YAQA1a,GAAAC,QAAA0rK,GlMok+CM,SAAU3rK,EAAQC,EAAS+I,GmMrr+CjC,GAAAy2B,GAAAz2B,EAAA,IACAywF,EAAAzwF,EAAA,IAEA0wF,KACAtsF,EAAAH,KAAAI,IACAH,EAAAD,KAAAE,IACA8sF,EAAAhtF,KAAAolC,IACA2nD,EAAA/sF,KAAAklC,IAEA6W,EAAAvpB,EAAAnb,SACA6pD,EAAA1uC,EAAAnb,SACAmoJ,EAAAhtI,EAAAnb,SAEAsoG,EAAA,EAAA3/G,KAAA6gB,EAQA4rE,GAAAgzE,WAAA,SAAAn4J,EAAAlH,EAAAF,GACA,OAAAoH,EAAA7T,OAAA,CAGA,GAKAF,GALAm7C,EAAApnC,EAAA,GACAoO,EAAAg5B,EAAA,GACA74B,EAAA64B,EAAA,GACA94B,EAAA84B,EAAA,GACA54B,EAAA44B,EAAA,EAGA,KAAAn7C,EAAA,EAAmBA,EAAA+T,EAAA7T,OAAmBF,IACtCm7C,EAAApnC,EAAA/T,GACAmiB,EAAAvV,EAAAuV,EAAAg5B,EAAA,IACA74B,EAAA5V,EAAA4V,EAAA64B,EAAA,IACA94B,EAAAzV,EAAAyV,EAAA84B,EAAA,IACA54B,EAAA7V,EAAA6V,EAAA44B,EAAA,GAGAtuC,GAAA,GAAAsV,EACAtV,EAAA,GAAAwV,EACA1V,EAAA,GAAA2V,EACA3V,EAAA,GAAA4V,IAYA22E,EAAA0D,SAAA,SAAAnqD,EAAAC,EAAA9iC,EAAAE,EAAAjD,EAAAF,GACAE,EAAA,GAAAD,EAAA6lC,EAAA7iC,GACA/C,EAAA,GAAAD,EAAA8lC,EAAA5iC,GACAnD,EAAA,GAAAD,EAAA+lC,EAAA7iC,GACAjD,EAAA,GAAAD,EAAAgmC,EAAA5iC,GAGA,IAAAq8J,MACAC,IAeAlzE,GAAA2D,UAAA,SACApqD,EAAAC,EAAA9iC,EAAAE,EAAAD,EAAAE,EAAA4iC,EAAAC,EAAA/lC,EAAAF,GAEA,GAEA3M,GAFA+xC,EAAAknD,EAAAlnD,aACAjC,EAAAmpD,EAAAnpD,QAEAa,EAAAoB,EAAAU,EAAA7iC,EAAAC,EAAA8iC,EAAAw5H,EAMA,KALAt/J,EAAA,GAAAuV,IACAvV,EAAA,GAAAuV,IACAzV,EAAA,IAAAyV,IACAzV,EAAA,IAAAyV,IAEApiB,EAAA,EAAmBA,EAAA2wC,EAAO3wC,IAAA,CAC1B,GAAA8O,GAAAghC,EAAA2C,EAAA7iC,EAAAC,EAAA8iC,EAAAw5H,EAAAnsK,GACA6M,GAAA,GAAAD,EAAAkC,EAAAjC,EAAA,IACAF,EAAA,GAAAD,EAAAoC,EAAAnC,EAAA,IAGA,IADAgkC,EAAAoB,EAAAW,EAAA5iC,EAAAC,EAAA6iC,EAAAw5H,GACApsK,EAAA,EAAmBA,EAAA2wC,EAAO3wC,IAAA,CAC1B,GAAAgP,GAAA8gC,EAAA4C,EAAA5iC,EAAAC,EAAA6iC,EAAAw5H,EAAApsK,GACA6M,GAAA,GAAAD,EAAAoC,EAAAnC,EAAA,IACAF,EAAA,GAAAD,EAAAsC,EAAArC,EAAA,IAGAE,EAAA,GAAAD,EAAA6lC,EAAA5lC,EAAA,IACAF,EAAA,GAAAD,EAAA+lC,EAAA9lC,EAAA,IACAE,EAAA,GAAAD,EAAA+lC,EAAA9lC,EAAA,IACAF,EAAA,GAAAD,EAAAimC,EAAAhmC,EAAA,IAEAE,EAAA,GAAAD,EAAA8lC,EAAA7lC,EAAA,IACAF,EAAA,GAAAD,EAAAgmC,EAAA/lC,EAAA,IACAE,EAAA,GAAAD,EAAAgmC,EAAA/lC,EAAA,IACAF,EAAA,GAAAD,EAAAkmC,EAAAjmC,EAAA,KAeAusF,EAAA4D,cAAA,SAAArqD,EAAAC,EAAA9iC,EAAAE,EAAAD,EAAAE,EAAAlD,EAAAF,GACA,GAAA+mC,GAAAulD,EAAAvlD,kBACAH,EAAA0lD,EAAA1lD,YAEA84H,EACA3/J,EACAE,EAAA8mC,EAAAjB,EAAA7iC,EAAAC,GAAA,MAEAy8J,EACA5/J,EACAE,EAAA8mC,EAAAhB,EAAA5iC,EAAAC,GAAA,MAGAjB,EAAAykC,EAAAd,EAAA7iC,EAAAC,EAAAw8J,GACAr9J,EAAAukC,EAAAb,EAAA5iC,EAAAC,EAAAu8J,EAEAz/J,GAAA,GAAAD,EAAA6lC,EAAA5iC,EAAAf,GACAjC,EAAA,GAAAD,EAAA8lC,EAAA3iC,EAAAf,GACArC,EAAA,GAAAD,EAAA+lC,EAAA5iC,EAAAf,GACAnC,EAAA,GAAAD,EAAAgmC,EAAA3iC,EAAAf,IAiBAkqF,EAAA+D,QAAA,SACAnuF,EAAAE,EAAA+tF,EAAAC,EAAA5B,EAAAC,EAAAC,EAAAzuF,EAAAF,GAEA,GAAA+9H,GAAAzrG,EAAApyB,IACA89H,EAAA1rG,EAAAtyB,IAEAm4F,EAAAr4F,KAAAsG,IAAAqoF,EAAAC,EAGA,IAAAyJ,EAAAsnB,EAAA,MAAAtnB,EAAA,KAMA,MAJAj4F,GAAA,GAAAiC,EAAAiuF,EACAlwF,EAAA,GAAAmC,EAAAguF,EACArwF,EAAA,GAAAmC,EAAAiuF,OACApwF,EAAA,GAAAqC,EAAAguF,EA6BA,IAzBAx0C,EAAA,GAAAgxC,EAAA4B,GAAA2B,EAAAjuF,EACA05C,EAAA,GAAAixC,EAAA2B,GAAA4B,EAAAhuF,EAEA2+D,EAAA,GAAA6rB,EAAA6B,GAAA0B,EAAAjuF,EACA6+D,EAAA,GAAA8rB,EAAA4B,GAAA2B,EAAAhuF,EAEA07H,EAAA79H,EAAA27C,EAAAmlB,GACAg9D,EAAAh+H,EAAA67C,EAAAmlB,GAGAytB,GAAA,EACAA,EAAA,IACAA,GAAAgxB,GAEA/wB,GAAA,EACAA,EAAA,IACAA,GAAA+wB,GAGAhxB,EAAAC,IAAAC,EACAD,GAAA+wB,EAEAhxB,EAAAC,GAAAC,IACAF,GAAAgxB,GAEA9wB,EAAA,CACA,GAAA5pD,GAAA2pD,CACAA,GAAAD,EACAA,EAAA1pD,EAKA,OAAAqvD,GAAA,EAA2BA,EAAA1F,EAAkB0F,GAAAt0F,KAAA6gB,GAAA,EAC7CyzE,EAAA3F,IACA6wE,EAAA,GAAAzyE,EAAAuH,GAAAhE,EAAAjuF,EACAm9J,EAAA,GAAAxyE,EAAAsH,GAAA/D,EAAAhuF,EAEA07H,EAAA79H,EAAAo/J,EAAAp/J,GACA89H,EAAAh+H,EAAAs/J,EAAAt/J,KAKAnN,EAAAC,QAAAy5F,GnMks+CM,SAAU15F,EAAQC,EAAS+I,GoMt4+CjC,QAAA+jK,GAAA/iK,GACA,qBAAAA,GAAAsU,EAAAoH,QAAA+U,QAAA,iBAAAzwB,EAGA,QAAAgjK,GAAA50G,EAAA19C,EAAAwsJ,GACA,GAAA+F,GAAA70G,EAAA80G,WAEA,WAAAhG,GAAA+F,EAAA1mJ,OAEA,IAAA4lJ,GAAAc,EAAApB,UACAnxJ,EACA09C,EAAArjD,QAAAykI,UAAA9+H,EAAA2+B,IAAA3+B,EAAA4+B,IAAA,MAAAl4C,OACAg3D,EAAAhjD,IAMA,IAHA,QAAA8xJ,GAAA+F,EAAA1mJ,QAGA4lJ,EAAA,CACA,GAAArnK,GAAAqnK,EAAArnK,IACA4V,GAAAyhJ,aAAAr3J,EAEAszD,EAAArjD,QAAAwoJ,mBAA6Cn8J,OAAA+qK,EAAA/qK,QAA2B0D,EAAAqnK,EAAAzxJ,QAwBxE,QAAAyyJ,GAAA9W,GACAA,EAAA+W,WAAA,EACAvmD,aAAAwvC,EAAAgX,aACAhX,EAAAgX,YAAAr6G,WAAA,WACAqjG,EAAA+W,WAAA,GACS,KA8JT,QAAAE,GAAA5yJ,GACA,GAAA6yJ,GAAA7yJ,EAAA6yJ,WACA,eAAAA,GAAA,UAAAA,EAqBA,QAAAC,GAAAnX,GAaA,QAAAoX,GAAApqI,EAAAgzH,GACA,kBACA,IAAAA,EAAA+W,UAGA,MAAA/pI,GAAA7+B,MAAA6xJ,EAAA9xJ,YAjBAkI,EAAArJ,KAAAsqK,EAAA,SAAA1jK,GACAqsJ,EAAAsX,UAAA3jK,GAAAyC,EAAAtI,KAAAypK,EAAA5jK,GAAAqsJ,KAGA5pJ,EAAArJ,KAAAyqK,EAAA,SAAA7jK,GACAqsJ,EAAAsX,UAAA3jK,GAAAyC,EAAAtI,KAAAypK,EAAA5jK,GAAAqsJ,KAGA5pJ,EAAArJ,KAAA0qK,EAAA,SAAA9jK,GACAqsJ,EAAAsX,UAAA3jK,GAAAyjK,EAAAG,EAAA5jK,GAAAqsJ,KAcA,QAAA0X,GAAA34J,GAkEA,QAAA44J,GAAApR,EAAAvG,GACA5pJ,EAAArJ,KAAAw5J,EAAA,SAAA5yJ,GACAkwC,EAAA9kC,EAAA23J,EAAA/iK,GAAAqsJ,EAAAsX,UAAA3jK,KACaqsJ,GApEbphJ,EAAA1U,KAAAoE,MAEAA,KAAAyQ,MAMAzQ,KAAAyoK,WAAA,EAMAzoK,KAAA0oK,YAMA1oK,KAAAuoK,YAAA,GAAAvB,GAEAhnK,KAAAgpK,aAEAH,EAAA7oK,MAEA2Z,EAAAuc,uBAOAmzI,EAAAH,EAAAlpK,OAkBA2Z,EAAAsc,sBACAozI,EAAAN,EAAA/oK,MAUAqpK,EAAAF,EAAAnpK,OA7VA,GAAAuoI,GAAAlkI,EAAA,IACAyD,EAAAzD,EAAA,GACAiM,EAAAjM,EAAA,IACAsV,EAAAtV,EAAA,IACA2iK,EAAA3iK,EAAA,KAEAkxC,EAAAgzF,EAAAhzF,iBACAG,EAAA6yF,EAAA7yF,oBACAV,EAAAuzF,EAAAvzF,eAIAm0H,GACA,2CACA,iDAGAJ,GACA,qCAGAO,GACAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,EAAAC,WAAA,GAGAR,EAAAphK,EAAA/I,IAAAoqK,EAAA,SAAA9jK,GACA,GAAAskK,GAAAtkK,EAAA8c,QAAA,kBACA,OAAAmnJ,GAAAK,KAAAtkK,IA0DA4jK,GAMA3Q,UAAA,SAAAviJ,GACAA,EAAAi/B,EAAAh1C,KAAAyQ,IAAAsF,GAEA/V,KAAAqW,QAAA,YAAAN,IAQA8iJ,SAAA,SAAA9iJ,GACAA,EAAAi/B,EAAAh1C,KAAAyQ,IAAAsF,EAEA,IAAA49D,GAAA59D,EAAAgjJ,WAAAhjJ,EAAAijJ,aACA,IAAArlF,GAAA3zE,KAAAyQ,IACA,KAAAkjE,GAAA,GAAAA,EAAAvzE,UAAA,CAEA,GAAAuzE,IAAA3zE,KAAAyQ,IACA,MAGAkjE,KAAAtX,WAIAr8D,KAAAqW,QAAA,WAAAN,IAQA6zJ,WAAA,SAAA7zJ,GAGAA,EAAAi/B,EAAAh1C,KAAAyQ,IAAAsF,GAIAA,EAAArP,WAAA,EAEA1G,KAAAq4J,iBAAA,GAAAv2I,MAEAumJ,EAAAroK,KAAA+V,EAAA,SAIAkzJ,EAAA3Q,UAAA18J,KAAAoE,KAAA+V,GAEAkzJ,EAAAY,UAAAjuK,KAAAoE,KAAA+V,GAEAyyJ,EAAAxoK,OAQA8pK,UAAA,SAAA/zJ,GAEAA,EAAAi/B,EAAAh1C,KAAAyQ,IAAAsF,GAIAA,EAAArP,WAAA,EAEA2hK,EAAAroK,KAAA+V,EAAA,UAKAkzJ,EAAA3Q,UAAA18J,KAAAoE,KAAA+V,GAEAyyJ,EAAAxoK,OAQA+pK,SAAA,SAAAh0J,GAEAA,EAAAi/B,EAAAh1C,KAAAyQ,IAAAsF,GAIAA,EAAArP,WAAA,EAEA2hK,EAAAroK,KAAA+V,EAAA,OAEAkzJ,EAAAe,QAAApuK,KAAAoE,KAAA+V,IAYA,GAAA+L,MAAA9hB,KAAAq4J,iBA3LA,KA4LA4Q,EAAA9U,MAAAv4J,KAAAoE,KAAA+V,GAGAyyJ,EAAAxoK,OAGAupK,YAAA,SAAAxzJ,GACAkzJ,EAAAY,UAAAjuK,KAAAoE,KAAA+V,IAOA0zJ,YAAA,SAAA1zJ,GAMA4yJ,EAAA5yJ,IACAkzJ,EAAA3Q,UAAA18J,KAAAoE,KAAA+V,IAIAyzJ,UAAA,SAAAzzJ,GACAkzJ,EAAAe,QAAApuK,KAAAoE,KAAA+V,IAGA2zJ,WAAA,SAAA3zJ,GAMA4yJ,EAAA5yJ,IACAkzJ,EAAApQ,SAAAj9J,KAAAoE,KAAA+V,IAeAjO,GAAArJ,MAAA,8EAAA4G,GACA4jK,EAAA5jK,GAAA,SAAA0Q,GACAA,EAAAi/B,EAAAh1C,KAAAyQ,IAAAsF,GACA/V,KAAAqW,QAAAhR,EAAA0Q,KA2GA,IAAAk0J,GAAAb,EAAAjrK,SACA8rK,GAAA5xJ,QAAA,WAGA,OAFA4/I,GAAAkR,EAAArpK,OAAAipK,GAEAltK,EAAA,EAAuBA,EAAAo8J,EAAAl8J,OAAyBF,IAAA,CAChD,GAAAwJ,GAAA4yJ,EAAAp8J,EACA65C,GAAA11C,KAAAyQ,IAAA23J,EAAA/iK,GAAArF,KAAAgpK,UAAA3jK,MAIA4kK,EAAAtR,UAAA,SAAAvpD,GACApvG,KAAAyQ,IAAAzL,MAAAimG,OAAAmE,GAAA,WAGAtnG,EAAAxJ,MAAA8qK,EAAA94J,GAEAjV,EAAAC,QAAA8tK,GpM66+CM,SAAU/tK,EAAQC,EAAS+I,GqMny/CjC,GAAA2D,GAAA3D,EAAA,GAEAhJ,GAAAC,QAAA0M,EAAA9K,QAEAiD,KAAA,WAEAoL,OAEA2+J,MAAA,MAGAC,iBAAA,WAGA,OAFAz2I,GAAA1zB,KAAAywB,YACAy5I,EAAAlqK,KAAAuL,MAAA2+J,MACAruK,EAAA,EAA2BA,EAAAquK,EAAAnuK,OAAkBF,IAE7C63B,KAAAw2I,EAAAruK,GAAA40B,WAEAzwB,MAAAywB,YAAAiD,EACA1zB,KAAAqxB,QAAArxB,KAAAqxB,SAAAqC,GAGAy3E,YAAA,WACAnrG,KAAAmqK,kBAIA,QAHAD,GAAAlqK,KAAAuL,MAAA2+J,UACAn4I,EAAA/xB,KAAAgyB,iBAEAn2B,EAAA,EAA2BA,EAAAquK,EAAAnuK,OAAkBF,IAC7CquK,EAAAruK,GAAAsO,MACA+/J,EAAAruK,GAAA82B,kBAEAu3I,EAAAruK,GAAAsO,KAAA8nB,SAAAF,EAAA,GAAAA,EAAA,KAIAK,UAAA,SAAAxB,EAAArlB,GAEA,OADA2+J,GAAA3+J,EAAA2+J,UACAruK,EAAA,EAA2BA,EAAAquK,EAAAnuK,OAAkBF,IAC7CquK,EAAAruK,GAAAu2B,UAAAxB,EAAAs5I,EAAAruK,GAAA0P,OAAA,IAIA6/F,WAAA,WAEA,OADA8+D,GAAAlqK,KAAAuL,MAAA2+J,MACAruK,EAAA,EAA2BA,EAAAquK,EAAAnuK,OAAkBF,IAC7CquK,EAAAruK,GAAA40B,aAAA,GAIAnmB,gBAAA,WAEA,MADAtK,MAAAmqK,mBACAniK,EAAA7J,UAAAmM,gBAAA1O,KAAAoE,UrM+y/CM,SAAU3E,EAAQC,EAAS+I,GAEjC,YsMp2/CA,IAAAyD,GAAAzD,EAAA,GAEAonG,EAAApnG,EAAA,IAWAoF,EAAA,SAAAkB,EAAAE,EAAAa,EAAAE,EAAAsU,EAAAkqJ,GAKApqK,KAAA2K,EAAA,MAAAA,EAAA,EAAAA,EAEA3K,KAAA6K,EAAA,MAAAA,EAAA,EAAAA,EAEA7K,KAAA0L,GAAA,MAAAA,EAAA,EAAAA,EAEA1L,KAAA4L,GAAA,MAAAA,EAAA,EAAAA,EAGA5L,KAAAG,KAAA,SAGAH,KAAAgQ,OAAAo6J,IAAA,EAEA3+D,EAAA7vG,KAAAoE,KAAAkgB,GAGAzW,GAAAtL,WAEAlC,YAAAwN,GAGA3B,EAAAhK,SAAA2L,EAAAgiG,GAEApwG,EAAAC,QAAAmO,GtM62/CM,SAAUpO,EAAQC,EAAS+I,GAEjC,YuMz5/CA,IAAAyD,GAAAzD,EAAA,GAEAonG,EAAApnG,EAAA,IAUAqF,EAAA,SAAAiB,EAAAE,EAAAqsC,EAAAh3B,EAAAkqJ,GAKApqK,KAAA2K,EAAA,MAAAA,EAAA,GAAAA,EAEA3K,KAAA6K,EAAA,MAAAA,EAAA,GAAAA,EAEA7K,KAAAk3C,EAAA,MAAAA,EAAA,GAAAA,EAGAl3C,KAAAG,KAAA,SAGAH,KAAAgQ,OAAAo6J,IAAA,EAEA3+D,EAAA7vG,KAAAoE,KAAAkgB,GAGAxW,GAAAvL,WAEAlC,YAAAyN,GAGA5B,EAAAhK,SAAA4L,EAAA+hG,GAEApwG,EAAAC,QAAAoO,GvMk6/CM,SAAUrO,EAAQC,EAAS+I,GwMj8/CjC,GAAA8rB,GAAA9rB,EAAA,IACAyD,EAAAzD,EAAA,GACAgzB,EAAAhzB,EAAA,IAQAyE,EAAA,SAAAc,GACAumB,EAAAv0B,KAAAoE,KAAA4J,GAGAd,GAAA3K,WAEAlC,YAAA6M,EAEA3I,KAAA,OAEAwwB,MAAA,SAAAC,EAAAC,GACA,GAAA7rB,GAAAhF,KAAAgF,MACA2F,EAAA3F,EAAA2F,GAAA,EACAE,EAAA7F,EAAA6F,GAAA,EAEA0nB,EAAAvtB,EAAAutB,IAQA,IALA,MAAAA,OAAA,IAGAvtB,EAAAxF,KAAAoxB,EAAA5wB,KAAA6wB,GAEA0B,EAAA,CAEAvyB,KAAAoxB,aAAAR,EAEA,IAAAuZ,GACAD,EAAAllC,EAAAklC,UACAvB,EAAA3jC,EAAAkI,UAAAlI,EAAA2jC,IACA,IAAA3jC,EAAAkvG,kBAAA,CACA,GAAAjqG,GAAAotB,EAAA/sB,gBACAioB,EAAAoW,EAAA3jC,EAAAklC,UAAA,MAIA,QADAC,EAAA,SACAnlC,EAAAkvG,mBACA,aACArpG,GAAAZ,EAAAQ,OAAA,EAAAR,EAAAogC,WAAA,CACA,MACA,cACAx/B,GAAAZ,EAAAQ,OAAAR,EAAAogC,WAAA,CACA,MACA,SACAx/B,GAAAZ,EAAAogC,WAAA,OAIAF,GAAAnlC,EAAAmlC,YAIAvZ,GAAA+X,QAAA,kBACA/X,EAAAsZ,aAAA,OAEAtZ,EAAAsZ,gBACAtZ,EAAAsZ,UAAA,QAGAtZ,EAAAuZ,gBAAA,aAEAvZ,EAAAuZ,mBACAvZ,EAAAuZ,aAAA,aAMA,QAHAE,GAAAhT,EAAAyS,YAAA,IAAAlZ,EAAA+X,MAAAn+B,MAEAo/B,EAAArX,EAAAtd,MAAA,MACApZ,EAAA,EAA+BA,EAAA+tC,EAAA7tC,OAAsBF,IAErDmJ,EAAA8rB,aAAAF,EAAAy5I,WAAAzgI,EAAA/tC,GAAA8O,EAAAE,GACA7F,EAAA+rB,WAAAH,EAAA05I,SAAA1gI,EAAA/tC,GAAA8O,EAAAE,GACAA,GAAAw/B,CAGArqC,MAAAsyB,iBAAA1B,KAIAtmB,gBAAA,WACA,GAAAtF,GAAAhF,KAAAgF,KACA,KAAAhF,KAAA4yB,MAAA,CACA,GAAAshF,GAAAlvG,EAAAkvG,kBACAjqG,EAAAotB,EAAA/sB,gBACAtF,EAAAutB,KAAA,GAAAvtB,EAAAkI,UAAAlI,EAAA2jC,KAAA3jC,EAAAklC,UACAgqE,EAAA,MAAAlvG,EAAAmlC,aAEA,QAAA+pE,GACA,aACAjqG,EAAAY,GAAAZ,EAAAQ,OAAA,CACA,MACA,cACAR,EAAAY,GAAAZ,EAAAQ,OAKA,GAFAR,EAAAU,GAAA3F,EAAA2F,GAAA,EACAV,EAAAY,GAAA7F,EAAA6F,GAAA,EACA7F,EAAA8rB,YAAA,CACA,GAAAmC,GAAAjuB,EAAAwG,SACAvB,GAAAU,GAAAsoB,EAAA,EACAhpB,EAAAY,GAAAooB,EAAA,EACAhpB,EAAAO,OAAAyoB,EACAhpB,EAAAQ,QAAAwoB,EAEAjzB,KAAA4yB,MAAA3oB,EAGA,MAAAjK,MAAA4yB,QAIA9qB,EAAAhK,SAAAgL,EAAAqnB,GAEA90B,EAAAC,QAAAwN,GxMm9/CM,SAAUzN,EAAQC,GyMvlgDxBD,EAAAC,SACA82B,UAAA,SAAAxB,EAAArlB,GACA,GAKAg/J,GACAC,EACAC,EACAC,EARA//J,EAAAY,EAAAZ,EACAE,EAAAU,EAAAV,EACAL,EAAAe,EAAAf,MACAC,EAAAc,EAAAd,OACAysC,EAAA3rC,EAAA2rC,CAOA1sC,GAAA,IACAG,GAAAH,EACAA,MAEAC,EAAA,IACAI,GAAAJ,EACAA,MAGA,gBAAAysC,GACAqzH,EAAAC,EAAAC,EAAAC,EAAAxzH,EAEAA,YAAA10C,OACA,IAAA00C,EAAAn7C,OACAwuK,EAAAC,EAAAC,EAAAC,EAAAxzH,EAAA,GAEA,IAAAA,EAAAn7C,QACAwuK,EAAAE,EAAAvzH,EAAA,GACAszH,EAAAE,EAAAxzH,EAAA,IAEA,IAAAA,EAAAn7C,QACAwuK,EAAArzH,EAAA,GACAszH,EAAAE,EAAAxzH,EAAA,GACAuzH,EAAAvzH,EAAA,KAGAqzH,EAAArzH,EAAA,GACAszH,EAAAtzH,EAAA,GACAuzH,EAAAvzH,EAAA,GACAwzH,EAAAxzH,EAAA,IAIAqzH,EAAAC,EAAAC,EAAAC,EAAA,CAGA,IAAAC,EACAJ,GAAAC,EAAAhgK,IACAmgK,EAAAJ,EAAAC,EACAD,GAAA//J,EAAAmgK,EACAH,GAAAhgK,EAAAmgK,GAEAF,EAAAC,EAAAlgK,IACAmgK,EAAAF,EAAAC,EACAD,GAAAjgK,EAAAmgK,EACAD,GAAAlgK,EAAAmgK,GAEAH,EAAAC,EAAAhgK,IACAkgK,EAAAH,EAAAC,EACAD,GAAA//J,EAAAkgK,EACAF,GAAAhgK,EAAAkgK,GAEAJ,EAAAG,EAAAjgK,IACAkgK,EAAAJ,EAAAG,EACAH,GAAA9/J,EAAAkgK,EACAD,GAAAjgK,EAAAkgK,GAEA/5I,EAAA0lE,OAAA3rF,EAAA4/J,EAAA1/J,GACA+lB,EAAA4lE,OAAA7rF,EAAAH,EAAAggK,EAAA3/J,GACA,IAAA2/J,GAAA55I,EAAAkmE,iBACAnsF,EAAAH,EAAAK,EAAAF,EAAAH,EAAAK,EAAA2/J,GAEA55I,EAAA4lE,OAAA7rF,EAAAH,EAAAK,EAAAJ,EAAAggK,GACA,IAAAA,GAAA75I,EAAAkmE,iBACAnsF,EAAAH,EAAAK,EAAAJ,EAAAE,EAAAH,EAAAigK,EAAA5/J,EAAAJ,GAEAmmB,EAAA4lE,OAAA7rF,EAAA+/J,EAAA7/J,EAAAJ,GACA,IAAAigK,GAAA95I,EAAAkmE,iBACAnsF,EAAAE,EAAAJ,EAAAE,EAAAE,EAAAJ,EAAAigK,GAEA95I,EAAA4lE,OAAA7rF,EAAAE,EAAA0/J,GACA,IAAAA,GAAA35I,EAAAkmE,iBAAAnsF,EAAAE,EAAAF,EAAA4/J,EAAA1/J,MzMkmgDM,SAAUxP,EAAQC,EAAS+I,G0M/qgDjC,GAAAy2B,GAAAz2B,EAAA,IACAumK,EAAA9vI,EAAApyB,IACAmiK,EAAA/vI,EAAAtyB,IACAsiK,EAAAhwI,EAAA/I,MACAg5I,EAAAjwI,EAAA3F,SACA61I,EAAAlwI,EAAA/2B,GAaA1I,GAAAC,QAAA,SAAAsU,EAAAm7G,EAAAkgD,EAAAC,GACA,GAKAC,GACAC,EAEA1iK,EAAAF,EARA6iK,KAEA5gJ,KACAiK,KACAC,IAKA,IAAAu2I,EAAA,CACAxiK,GAAAuV,SACAzV,IAAAyV,SACA,QAAApiB,GAAA,EAAAC,EAAA8T,EAAA7T,OAAgDF,EAAAC,EAASD,IACzD+uK,EAAAliK,IAAAkH,EAAA/T,IACAgvK,EAAAriK,IAAAoH,EAAA/T,GAGA+uK,GAAAliK,IAAAwiK,EAAA,IACAL,EAAAriK,IAAA0iK,EAAA,IAGA,OAAArvK,GAAA,EAAAC,EAAA8T,EAAA7T,OAA4CF,EAAAC,EAASD,IAAA,CACrD,GAAAgU,GAAAD,EAAA/T,EAEA,IAAAovK,EACAE,EAAAv7J,EAAA/T,IAAA,EAAAC,EAAA,GACAsvK,EAAAx7J,GAAA/T,EAAA,GAAAC,OAEA,CACA,OAAAD,OAAAC,EAAA,GACAuvK,EAAApsK,KAAA67B,EAAAv/B,MAAAqU,EAAA/T,IACA,UAGAsvK,EAAAv7J,EAAA/T,EAAA,GACAuvK,EAAAx7J,EAAA/T,EAAA,GAIAi/B,EAAA7kB,IAAAwU,EAAA2gJ,EAAAD,GAGAL,EAAArgJ,IAAAsgG,EAEA,IAAAugD,GAAAP,EAAAl7J,EAAAs7J,GACAv8H,EAAAm8H,EAAAl7J,EAAAu7J,GACAljJ,EAAAojJ,EAAA18H,CACA,KAAA1mB,IACAojJ,GAAApjJ,EACA0mB,GAAA1mB,GAGA4iJ,EAAAp2I,EAAAjK,GAAA6gJ,GACAR,EAAAn2I,EAAAlK,EAAAmkB,EACA,IAAAo3F,GAAAglC,KAAAn7J,EAAA6kB,GACAw2F,EAAA8/C,KAAAn7J,EAAA8kB,EACAu2I,KACAL,EAAA7kC,IAAAt9H,GACAkiK,EAAA5kC,IAAAx9H,GACAqiK,EAAA3/C,IAAAxiH,GACAkiK,EAAA1/C,IAAA1iH,IAEA6iK,EAAApsK,KAAA+mI,GACAqlC,EAAApsK,KAAAisH,GAOA,MAJA+/C,IACAI,EAAApsK,KAAAosK,EAAA70J,SAGA60J,I1MisgDM,SAAUhwK,EAAQC,EAAS+I,G2MtxgDjC,QAAAknK,GAAA3/H,EAAAC,EAAAC,EAAAC,EAAAxW,EAAAqX,EAAAe,GACA,GAAAy2E,GAAA,IAAAt4E,EAAAF,GACAlX,EAAA,IAAAqX,EAAAF,EACA,WAAAA,EAAAC,GAAAs4E,EAAA1vF,GAAAiZ,IACA,GAAA9B,EAAAC,GAAA,EAAAs4E,EAAA1vF,GAAAkY,EACAw3E,EAAA7uF,EAAAsW,EAVA,GAAA/Q,GAAAz2B,EAAA,GAmBAhJ,GAAAC,QAAA,SAAAsU,EAAAq7J,GAKA,OAJAnvK,GAAA8T,EAAA7T,OACA09B,KAEAtE,EAAA,EACAt5B,EAAA,EAAuBA,EAAAC,EAASD,IAChCs5B,GAAA2F,EAAA3F,SAAAvlB,EAAA/T,EAAA,GAAA+T,EAAA/T,GAGA,IAAA2vK,GAAAr2I,EAAA,CACAq2I,KAAA1vK,IAAA0vK,CACA,QAAA3vK,GAAA,EAAuBA,EAAA2vK,EAAU3vK,IAAA,CACjC,GAKA+vC,GAEAE,EACAC,EARAyjC,EAAA3zE,GAAA2vK,EAAA,IAAAP,EAAAnvK,IAAA,GACAmb,EAAA3O,KAAA2R,MAAAu1D,GAEAv8C,EAAAu8C,EAAAv4D,EAGA40B,EAAAj8B,EAAAqH,EAAAnb,EAGAmvK,IAMAr/H,EAAAh8B,GAAAqH,EAAA,EAAAnb,MACAgwC,EAAAl8B,GAAAqH,EAAA,GAAAnb,GACAiwC,EAAAn8B,GAAAqH,EAAA,GAAAnb,KAPA8vC,EAAAh8B,EAAA,IAAAqH,MAAA,GACA60B,EAAAl8B,EAAAqH,EAAAnb,EAAA,EAAAA,EAAA,EAAAmb,EAAA,GACA80B,EAAAn8B,EAAAqH,EAAAnb,EAAA,EAAAA,EAAA,EAAAmb,EAAA,GAQA,IAAAw0J,GAAAx4I,IACAy4I,EAAAz4I,EAAAw4I,CAEAhyI,GAAAx6B,MACAssK,EAAA3/H,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAA9Y,EAAAw4I,EAAAC,GACAH,EAAA3/H,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAA9Y,EAAAw4I,EAAAC,KAGA,MAAAjyI,K3M4ygDM,SAAUp+B,EAAQC,EAAS+I,G4Mj2gDjC,QAAAoiB,GAAA5oB,EAAA8tK,GACA,sBAAA9tK,GACAA,EAAAwmE,YAAA,QACAx9C,WAAAhpB,GAAA,IAAA8tK,EAEA9kJ,WAAAhpB,GAEAA,EAdA,GAAAw5B,GAAAhzB,EAAA,IACA+D,EAAA/D,EAAA,IAEAqwF,EAAA,GAAAtsF,GAEAyiG,EAAA,YAYAA,GAAA1sG,WAEAlC,YAAA4uG,EAQAr4E,aAAA,SAAA5B,EAAA3mB,EAAAsgC,GACA,GAAAvlC,GAAAhF,KAAAgF,MACAutB,EAAAvtB,EAAAutB,IAGA,IADA,MAAAA,OAAA,IACAA,EAAA,CAKA3B,EAAAwkG,MAEA,IAAAzqH,GACAE,EACAuC,EAAApI,EAAAoI,aACAC,EAAArI,EAAAqI,WACA8nB,EAAAnwB,EAAAiI,aACA8lG,EAAA/tG,EAAAklC,UACAvB,EAAA3jC,EAAAkI,UAAAlI,EAAA2jC,KACAijI,EAAA5mK,EAAAmlC,aACA6oE,EAAAhuG,EAAAkvG,iBACAjqG,GAAAjF,EAAA+kH,kBAAA9/G,EAEAsgC,KAAAlT,EAAA/sB,gBAAAioB,EAAAoW,EAAAoqE,EAAA64D,EAGA,IAAAr9J,GAAAvO,KAAAuO,SAaA,IAZAvJ,EAAAmlH,cAQAnqH,KAAAoxB,aAAAR,GAPAriB,IACAmmF,EAAA1hE,KAAA/oB,GACAyqF,EAAA1pF,eAAAuD,GACAtE,EAAAyqF,GAQAtnF,YAAA5K,QAOA,GALAmI,EAAAV,EAAAU,EAAA8b,EAAArZ,EAAA,GAAAnD,EAAAO,OACAK,EAAAZ,EAAAY,EAAA4b,EAAArZ,EAAA,GAAAnD,EAAAQ,QACAsoG,KAAA,OACA64D,KAAA,MAEA54D,EAAA,CACA,OAAAA,GACA,aACAnoG,GAAA0/B,EAAA9/B,OAAA,EAAA8/B,EAAAF,WAAA,CACA,MACA,cACAx/B,GAAA0/B,EAAA9/B,OAAA8/B,EAAAF,WAAA,CACA,MACA,SACAx/B,GAAA0/B,EAAAF,WAAA,EAGAuhI,EAAA,cAGA,CACA,GAAAjpI,GAAAtL,EAAAiT,yBACAl9B,EAAAnD,EAAAsgC,EAAApV,EAEAxqB,GAAAg4B,EAAAh4B,EACAE,EAAA83B,EAAA93B,EAEAkoG,KAAApwE,EAAAuH,UACA0hI,KAAAjpI,EAAAwH,aAGA98B,IACA1C,GAAA0C,EAAA,GACAxC,GAAAwC,EAAA,IAIAujB,EAAAsZ,UAAA6oE,GAAA,OAEAniF,EAAAuZ,aAAAyhI,GAAA,YAEA,IAAAt+J,GAAAtI,EAAAsI,SACAw8G,EAAA9kH,EAAA8kH,UACAx8G,KAAAsjB,EAAAa,UAAAnkB,GACAw8G,IAAAl5F,EAAAc,YAAAo4F,GAGAl5F,EAAA+X,QAAA,kBAIA/X,EAAAsiF,WAAAluG,EAAAglH,eACAp5F,EAAAuiF,YAAAnuG,EAAA6mK,iBAAA,cACAj7I,EAAAwiF,cAAApuG,EAAAilH,kBACAr5F,EAAAyiF,cAAAruG,EAAAklH,iBAEA,IAAAtgF,GAAArX,EAAAtd,MAAA,KAEAjQ,GAAA8zG,eACAvqG,GAAAqiB,EAAA8K,UAAAntB,EAAA,GAAAA,EAAA,IACAqiB,EAAAwf,OAAAprC,EAAA8zG,cACAvqG,GAAAqiB,EAAA8K,WAAAntB,EAAA,IAAAA,EAAA,IAGA,QAAA1S,GAAA,EAA2BA,EAAA+tC,EAAA7tC,OAAsBF,IAEjDiuH,GAAAl5F,EAAAy5I,WAAAzgI,EAAA/tC,GAAA8O,EAAAE,GACAyC,GAAAsjB,EAAA05I,SAAA1gI,EAAA/tC,GAAA8O,EAAAE,GACAA,GAAA0/B,EAAAF,UAGAzZ,GAAAgqI,aAIAv/J,EAAAC,QAAAuvG,G5Ms3gDM,SAAUxvG,EAAQC,EAAS+I,G6MtghDjChJ,EAAAC,QAAA+I,EAAA,IAAAnH,QAEAiD,KAAA,MAEAoL,OAEAb,GAAA,EAEAE,GAAA,EAEAssC,EAAA,EAEA+/C,WAAA,EAEAC,SAAA,EAAA5uF,KAAA6gB,GAEAurF,WAAA,GAGA1vG,OAEAD,OAAA,OAEAE,KAAA,MAGAmtB,UAAA,SAAAxB,EAAArlB,GAEA,GAAAZ,GAAAY,EAAAb,GACAG,EAAAU,EAAAX,GACAssC,EAAA5uC,KAAAE,IAAA+C,EAAA2rC,EAAA,GACA+/C,EAAA1rF,EAAA0rF,WACAC,EAAA3rF,EAAA2rF,SACAwd,EAAAnpG,EAAAmpG,UAEAo3D,EAAAxjK,KAAAklC,IAAAypD,GACA80E,EAAAzjK,KAAAolC,IAAAupD,EAEArmE,GAAA0lE,OAAAw1E,EAAA50H,EAAAvsC,EAAAohK,EAAA70H,EAAArsC,GACA+lB,EAAAomE,IAAArsF,EAAAE,EAAAqsC,EAAA+/C,EAAAC,GAAAwd,O7MqhhDM,SAAUr5G,EAAQC,EAAS+I,GAEjC,Y8MljhDA,SAAA2nK,GAAAzgK,EAAAgqB,EAAA02I,GACA,GAAAC,GAAA3gK,EAAA2gK,KACAC,EAAA5gK,EAAA4gK,IACA,eAAAD,GAAA,OAAAC,IAEAF,EAAAhgI,EAAAN,GAAApgC,EAAAE,GAAAF,EAAA6gK,KAAA7gK,EAAA2gK,KAAA3gK,EAAAG,GAAA6pB,IACA02I,EAAAhgI,EAAAN,GAAApgC,EAAAI,GAAAJ,EAAA8gK,KAAA9gK,EAAA4gK,KAAA5gK,EAAAK,GAAA2pB,MAKA02I,EAAA58H,EAAAD,GAAA7jC,EAAAE,GAAAF,EAAA6gK,KAAA7gK,EAAAG,GAAA6pB,IACA02I,EAAA58H,EAAAD,GAAA7jC,EAAAI,GAAAJ,EAAA8gK,KAAA9gK,EAAAK,GAAA2pB,IAvBA,GAAA+2I,GAAAjoK,EAAA,IACAy2B,EAAAz2B,EAAA,IACAorC,EAAA68H,EAAA78H,mBACA3B,EAAAw+H,EAAAx+H,eACAsB,EAAAk9H,EAAAl9H,YACAzD,EAAA2gI,EAAA3gI,QACA0D,EAAAi9H,EAAAj9H,sBACApD,EAAAqgI,EAAArgI,kBAEAxX,IAkBAp5B,GAAAC,QAAA+I,EAAA,IAAAnH,QAEAiD,KAAA,eAEAoL,OACAE,GAAA,EACAE,GAAA,EACAD,GAAA,EACAE,GAAA,EACAwgK,KAAA,EACAC,KAAA,EAKA3lJ,QAAA,GAGA1hB,OACAD,OAAA,OACAE,KAAA,MAGAmtB,UAAA,SAAAxB,EAAArlB,GACA,GAAAE,GAAAF,EAAAE,GACAE,EAAAJ,EAAAI,GACAD,EAAAH,EAAAG,GACAE,EAAAL,EAAAK,GACAwgK,EAAA7gK,EAAA6gK,KACAC,EAAA9gK,EAAA8gK,KACAH,EAAA3gK,EAAA2gK,KACAC,EAAA5gK,EAAA4gK,KACAzlJ,EAAAnb,EAAAmb,OACA,KAAAA,IAIAkK,EAAA0lE,OAAA7qF,EAAAE,GAEA,MAAAugK,GAAA,MAAAC,GACAzlJ,EAAA,IACA+oB,EACAhkC,EAAA2gK,EAAA1gK,EAAAgb,EAAA+N,GAEA23I,EAAA33I,EAAA,GACA/oB,EAAA+oB,EAAA,GACAgb,EACA9jC,EAAA0gK,EAAAzgK,EAAA8a,EAAA+N,GAEA43I,EAAA53I,EAAA,GACA7oB,EAAA6oB,EAAA,IAGA7D,EAAAkmE,iBACAs1E,EAAAC,EACA3gK,EAAAE,KAIA8a,EAAA,IACAonB,EACAriC,EAAA2gK,EAAAF,EAAAxgK,EAAAgb,EAAA+N,GAEA23I,EAAA33I,EAAA,GACAy3I,EAAAz3I,EAAA,GACA/oB,EAAA+oB,EAAA,GACAqZ,EACAniC,EAAA0gK,EAAAF,EAAAvgK,EAAA8a,EAAA+N,GAEA43I,EAAA53I,EAAA,GACA03I,EAAA13I,EAAA,GACA7oB,EAAA6oB,EAAA,IAEA7D,EAAAgmE,cACAw1E,EAAAC,EACAH,EAAAC,EACAzgK,EAAAE,MAUA2gK,QAAA,SAAAh3I,GACA,MAAAy2I,GAAAhsK,KAAAuL,MAAAgqB,GAAA,IAQAi3I,UAAA,SAAAj3I,GACA,GAAAyhB,GAAAg1H,EAAAhsK,KAAAuL,MAAAgqB,GAAA,EACA,OAAAuF,GAAA7F,UAAA+hB,S9M6khDM,SAAU37C,EAAQC,EAAS+I,GAEjC,Y+M1shDAhJ,GAAAC,QAAA+I,EAAA,IAAAnH,QAEAiD,KAAA,SAEAoL,OACAb,GAAA,EACAE,GAAA,EACAssC,EAAA,GAIA9kB,UAAA,SAAAxB,EAAArlB,EAAAmnB,GAGAA,GACA9B,EAAA0lE,OAAA/qF,EAAAb,GAAAa,EAAA2rC,EAAA3rC,EAAAX,IASAgmB,EAAAomE,IAAAzrF,EAAAb,GAAAa,EAAAX,GAAAW,EAAA2rC,EAAA,IAAA5uC,KAAA6gB,IAAA,O/M2thDM,SAAU9tB,EAAQC,EAAS+I,GgNtvhDjChJ,EAAAC,QAAA+I,EAAA,IAAAnH,QAEAiD,KAAA,OAEAoL,OAEAE,GAAA,EACAE,GAAA,EAEAD,GAAA,EACAE,GAAA,EAEA8a,QAAA,GAGA1hB,OACAD,OAAA,OACAE,KAAA,MAGAmtB,UAAA,SAAAxB,EAAArlB,GACA,GAAAE,GAAAF,EAAAE,GACAE,EAAAJ,EAAAI,GACAD,EAAAH,EAAAG,GACAE,EAAAL,EAAAK,GACA8a,EAAAnb,EAAAmb,OAEA,KAAAA,IAIAkK,EAAA0lE,OAAA7qF,EAAAE,GAEA+a,EAAA,IACAhb,EAAAD,GAAA,EAAAib,GAAAhb,EAAAgb,EACA9a,EAAAD,GAAA,EAAA+a,GAAA9a,EAAA8a,GAEAkK,EAAA4lE,OAAA9qF,EAAAE,KAQA2gK,QAAA,SAAAv1H,GACA,GAAAzrC,GAAAvL,KAAAuL,KACA,QACAA,EAAAE,IAAA,EAAAurC,GAAAzrC,EAAAG,GAAAsrC,EACAzrC,EAAAI,IAAA,EAAAqrC,GAAAzrC,EAAAK,GAAAorC,OhNswhDM,SAAU37C,EAAQC,EAAS+I,GiNtzhDjC,GAAA09H,GAAA19H,EAAA,IAEAhJ,GAAAC,QAAA+I,EAAA,IAAAnH,QAEAiD,KAAA,UAEAoL,OACAqE,OAAA,KAEAm7G,QAAA,EAEAE,iBAAA,MAGA74F,UAAA,SAAAxB,EAAArlB,GACAw2H,EAAA3vG,UAAAxB,EAAArlB,GAAA,OjNq0hDM,SAAUlQ,EAAQC,EAAS+I,GkNr1hDjC,GAAA09H,GAAA19H,EAAA,IAEAhJ,GAAAC,QAAA+I,EAAA,IAAAnH,QAEAiD,KAAA,WAEAoL,OACAqE,OAAA,KAEAm7G,QAAA,EAEAE,iBAAA,MAGAjmH,OACAD,OAAA,OAEAE,KAAA,MAGAmtB,UAAA,SAAAxB,EAAArlB,GACAw2H,EAAA3vG,UAAAxB,EAAArlB,GAAA,OlNm2hDM,SAAUlQ,EAAQC,EAAS+I,GmNv3hDjC,GAAAooK,GAAApoK,EAAA,IAEAhJ,GAAAC,QAAA+I,EAAA,IAAAnH,QAEAiD,KAAA,OAEAoL,OAMA2rC,EAAA,EAEAvsC,EAAA,EACAE,EAAA,EACAL,MAAA,EACAC,OAAA,GAGA2nB,UAAA,SAAAxB,EAAArlB,GACA,GAAAZ,GAAAY,EAAAZ,EACAE,EAAAU,EAAAV,EACAL,EAAAe,EAAAf,MACAC,EAAAc,EAAAd,MACAc,GAAA2rC,EAIAu1H,EAAAr6I,UAAAxB,EAAArlB,GAHAqlB,EAAA3mB,KAAAU,EAAAE,EAAAL,EAAAC,GAKAmmB,EAAA0mE,gBnNw4hDM,SAAUj8F,EAAQC,EAAS+I,GoNv6hDjChJ,EAAAC,QAAA+I,EAAA,IAAAnH,QAEAiD,KAAA,OAEAoL,OACAb,GAAA,EACAE,GAAA,EACAssC,EAAA,EACAu9D,GAAA,GAGAriF,UAAA,SAAAxB,EAAArlB,GACA,GAAAZ,GAAAY,EAAAb,GACAG,EAAAU,EAAAX,GACAq9G,EAAA,EAAA3/G,KAAA6gB,EACAyH,GAAA0lE,OAAA3rF,EAAAY,EAAA2rC,EAAArsC,GACA+lB,EAAAomE,IAAArsF,EAAAE,EAAAU,EAAA2rC,EAAA,EAAA+wE,GAAA,GACAr3F,EAAA0lE,OAAA3rF,EAAAY,EAAAkpG,GAAA5pG,GACA+lB,EAAAomE,IAAArsF,EAAAE,EAAAU,EAAAkpG,GAAA,EAAAwT,GAAA,OpNu7hDM,SAAU5sH,EAAQC,EAAS+I,GqNx8hDjC,GAAAsV,GAAAtV,EAAA,IACA2D,EAAA3D,EAAA,IAEAqoK,IACA,iBACA,uBACA,oBACA,mBAGArxK,GAAAC,QAAA0M,EAAA9K,QAEAiD,KAAA,SAEAoL,OAEAb,GAAA,EAEAE,GAAA,EAEA6pG,GAAA,EAEAv9D,EAAA,EAEA+/C,WAAA,EAEAC,SAAA,EAAA5uF,KAAA6gB,GAEAurF,WAAA,GAGA/jF,MAAAhX,EAAAoH,QAAAgV,IAAApc,EAAAoH,QAAAkB,SAAA,GAcA,WACA,GAEAm4C,GAFAkhG,EAAAt7J,KAAA4qG,YACA5lG,EAAAhF,KAAAgF,KAGA,IAAAs2J,EACA,OAAAz/J,GAAA,EAAmCA,EAAAy/J,EAAAv/J,OAAsBF,IAAA,CACzD,GAAA0P,GAAA+vJ,EAAAz/J,IAAAy/J,EAAAz/J,GAAA0P,KACA,IAAAA,KAAA0rF,aAAA1rF,EAAA2rF,SAAA,CACA,OAAA1oE,GAAA,EAA2CA,EAAAk+I,EAAA3wK,OAAuByyB,IAClEk+I,EAAAl+I,GAAA,GAAAxpB,EAAA0nK,EAAAl+I,GAAA,IACAxpB,EAAA0nK,EAAAl+I,GAAA,IAAAk+I,EAAAl+I,GAAA,EAEA4rC,IAAA,CACA,QAOA,GAFApyD,EAAA7J,UAAAwyB,MAAA9wB,MAAAG,KAAAJ,WAEAw6D,EACA,OAAA5rC,GAAA,EAAmCA,EAAAk+I,EAAA3wK,OAAuByyB,IAC1DxpB,EAAA0nK,EAAAl+I,GAAA,IAAAk+I,EAAAl+I,GAAA,IAIAxmB,EAAA7J,UAAAwyB,MAEAyB,UAAA,SAAAxB,EAAArlB,GAEA,GAAAZ,GAAAY,EAAAb,GACAG,EAAAU,EAAAX,GACA6pG,EAAAnsG,KAAAE,IAAA+C,EAAAkpG,IAAA,KACAv9D,EAAA5uC,KAAAE,IAAA+C,EAAA2rC,EAAA,GACA+/C,EAAA1rF,EAAA0rF,WACAC,EAAA3rF,EAAA2rF,SACAwd,EAAAnpG,EAAAmpG,UAEAo3D,EAAAxjK,KAAAklC,IAAAypD,GACA80E,EAAAzjK,KAAAolC,IAAAupD,EAEArmE,GAAA0lE,OAAAw1E,EAAAr3D,EAAA9pG,EAAAohK,EAAAt3D,EAAA5pG,GAEA+lB,EAAA4lE,OAAAs1E,EAAA50H,EAAAvsC,EAAAohK,EAAA70H,EAAArsC,GAEA+lB,EAAAomE,IAAArsF,EAAAE,EAAAqsC,EAAA+/C,EAAAC,GAAAwd,GAEA9jF,EAAA4lE,OACAluF,KAAAklC,IAAA0pD,GAAAud,EAAA9pG,EACArC,KAAAolC,IAAAwpD,GAAAud,EAAA5pG,GAGA,IAAA4pG,GACA7jF,EAAAomE,IAAArsF,EAAAE,EAAA4pG,EAAAvd,EAAAD,EAAAyd,GAGA9jF,EAAA0mE,gBrNy9hDM,SAAUj8F,EAAQC,EAAS+I,GAEjC,YsNlkiDA,IAAAiiH,GAAAjiH,EAAA,KACA3G,EAAA2G,EAAA,GACAnE,EAAAxC,EAAAwC,SACAD,EAAAvC,EAAAuC,WACAtD,EAAAe,EAAAf,SACAigB,EAAAvY,EAAA,KAMAq+G,EAAA,WAMA1iH,KAAAijH,aAGAP,GAAAvkH,WAEAlC,YAAAymH,EAcA3uF,QAAA,SAAA5pB,EAAA2pB,GACA,GAAAr3B,GACAkwK,GAAA,EACA9nK,EAAA7E,KACAmR,EAAAnR,KAAA0F,IACA,IAAAyE,EAAA,CACA,GAAAyiK,GAAAziK,EAAA8K,MAAA,KACA7W,EAAAyG,CAEA8nK,GAAA,UAAAC,EAAA,EACA,QAAA/wK,GAAA,EAAAguC,EAAA+iI,EAAA7wK,OAAwDF,EAAAguC,EAAOhuC,IAC/DuC,IAGAA,IAAAwuK,EAAA/wK,IAEAuC,KACA3B,EAAA2B,OAIA3B,GAAAoI,CAGA,KAAApI,EAOA,WANAmgB,GACA,aACAzS,EACA,+BACAtF,EAAAmM,GAKA,IAAAiyG,GAAAp+G,EAAAo+G,UAEA0B,EAAA,GAAA2B,GAAA7pH,EAAAq3B,EAiBA,OAfA6wF,GAAAmC,OAAA,SAAArqH,GACAoI,EAAA4uB,MAAAk5I,KAEA/kD,KAAA,WAEA3E,EAAA3qG,OAAA5a,EAAAC,QAAAslH,EAAA0B,GAAA,KAGA1B,EAAAhkH,KAAA0lH,GAGAxzG,GACAA,EAAAyB,UAAAswG,YAAAyB,GAGAA,GAOA/8G,cAAA,SAAA6/G,GAGA,OAFAxE,GAAAjjH,KAAAijH,UACAnnH,EAAAmnH,EAAAlnH,OACAF,EAAA,EAA2BA,EAAAC,EAASD,IACpConH,EAAApnH,GAAA+5C,KAAA6xE,EAIA,OAFAxE,GAAAlnH,OAAA,EAEAiE,MA4BA2H,UAAA,SAAAlL,EAAA0hG,EAAA/vC,EAAAw2D,EAAA3tD,GAmCA,QAAA2wD,OACAtgG,GAEA2vC,OApCA/2D,EAAAkuD,IACA6I,EAAA2tD,EACAA,EAAAx2D,EACAA,EAAA,GAGAnuD,EAAA2kH,IACA3tD,EAAA2tD,EACAA,EAAA,SACAx2D,EAAA,GAGAnuD,EAAAmuD,IACA6I,EAAA7I,EACAA,EAAA,GAGAnuD,EAAAk+F,IACAlnC,EAAAknC,EACAA,EAAA,KAGAA,IACAA,EAAA,KAGAn+F,KAAA4H,gBACA5H,KAAA6sK,kBAAA,GAAA7sK,KAAAvD,EAAA0hG,EAAA/vC,EAAAw2D,EAAA3tD,EAIA,IAAAgsD,GAAAjjH,KAAAijH,UAAAxiH,QACA6mB,EAAA27F,EAAAlnH,MAUAurB,IACA2vC,MAIA,QAAAp7D,GAAA,EAA2BA,EAAAonH,EAAAlnH,OAAsBF,IACjDonH,EAAApnH,GACA+rH,QACAvjE,MAAAugE,IA6BAioD,kBAAA,SAAA1iK,EAAA3O,EAAAiB,EAAA0hG,EAAA/vC,GACA,GAAA0+G,MACAC,EAAA,CACA,QAAA1nK,KAAA5I,GACA,GAAAA,EAAAF,eAAA8I,GAIA,SAAA7J,EAAA6J,GACA1I,EAAAF,EAAA4I,MAAA3H,EAAAa,YAAA9B,EAAA4I,IACArF,KAAA6sK,kBACA1iK,IAAA,IAAA9E,IACA7J,EAAA6J,GACA5I,EAAA4I,GACA84F,EACA/vC,IAIA0+G,EAAAznK,GAAA5I,EAAA4I,GACA0nK,SAGA,UAAAtwK,EAAA4I,GAGA,GAAA8E,EAGA,CACA,GAAAlD,KACAA,GAAAkD,MACAlD,EAAAkD,GAAA9E,GAAA5I,EAAA4I,GACArF,KAAA6H,KAAAZ,OANAjH,MAAA6H,KAAAxC,EAAA5I,EAAA4I,GAiBA,OANA0nK,GAAA,GACA/sK,KAAA+zB,QAAA5pB,GAAA,GACAy8G,KAAA,MAAAzoB,EAAA,IAAAA,EAAA2uE,GACA1+G,SAAA,GAGApuD,OAIA3E,EAAAC,QAAAonH,GtN8kiDM,SAAUrnH,EAAQC,GuNt1iDxB,QAAA08J,KAEAh4J,KAAAwM,GAAA,YAAAxM,KAAAgtK,WAAAhtK,MACAA,KAAAwM,GAAA,YAAAxM,KAAAitK,MAAAjtK,MACAA,KAAAwM,GAAA,UAAAxM,KAAAktK,SAAAltK,MACAA,KAAAwM,GAAA,YAAAxM,KAAAktK,SAAAltK,MAyEA,QAAAqL,GAAA5O,EAAA+J,GACA,OAAgB/J,SAAA86J,UAAA/wJ,KAAA+wJ,WAlEhBS,EAAA75J,WAEAlC,YAAA+7J,EAEAgV,WAAA,SAAAxmK,GACA,GAAA2mK,GAAA3mK,EAAA/J,MACA0wK,MAAAriE,YACA9qG,KAAAotK,gBAAAD,EACAA,EAAApiE,UAAA,EACA/qG,KAAA0wI,GAAAlqI,EAAAiuC,QACAz0C,KAAA2wI,GAAAnqI,EAAAquC,QAEA70C,KAAA44J,kBAAAvtJ,EAAA8hK,EAAA3mK,GAAA,YAAAA,EAAAuP,SAIAk3J,MAAA,SAAAzmK,GACA,GAAA2mK,GAAAntK,KAAAotK,eACA,IAAAD,EAAA,CAEA,GAAAxiK,GAAAnE,EAAAiuC,QACA5pC,EAAArE,EAAAquC,QAEAzB,EAAAzoC,EAAA3K,KAAA0wI,GACAr9F,EAAAxoC,EAAA7K,KAAA2wI,EACA3wI,MAAA0wI,GAAA/lI,EACA3K,KAAA2wI,GAAA9lI,EAEAsiK,EAAAz/D,MAAAt6D,EAAAC,EAAA7sC,GACAxG,KAAA44J,kBAAAvtJ,EAAA8hK,EAAA3mK,GAAA,OAAAA,EAAAuP,MAEA,IAAAs3J,GAAArtK,KAAA60I,UAAAlqI,EAAAE,EAAAsiK,GAAA1wK,OACA6wK,EAAAttK,KAAAutK,WACAvtK,MAAAutK,YAAAF,EAEAF,IAAAE,IACAC,GAAAD,IAAAC,GACAttK,KAAA44J,kBAAAvtJ,EAAAiiK,EAAA9mK,GAAA,YAAAA,EAAAuP,OAEAs3J,OAAAC,GACAttK,KAAA44J,kBAAAvtJ,EAAAgiK,EAAA7mK,GAAA,YAAAA,EAAAuP,UAMAm3J,SAAA,SAAA1mK,GACA,GAAA2mK,GAAAntK,KAAAotK,eAEAD,KACAA,EAAApiE,UAAA,GAGA/qG,KAAA44J,kBAAAvtJ,EAAA8hK,EAAA3mK,GAAA,UAAAA,EAAAuP,OAEA/V,KAAAutK,aACAvtK,KAAA44J,kBAAAvtJ,EAAArL,KAAAutK,YAAA/mK,GAAA,OAAAA,EAAAuP,OAGA/V,KAAAotK,gBAAA,KACAptK,KAAAutK,YAAA,OASAlyK,EAAAC,QAAA08J,GvNg2iDM,SAAU38J,EAAQC,EAAS+I,GwNz5iDjC,QAAAmpK,GAAA/hK,EAAAE,EAAAD,EAAAE,EAAA6hK,EAAAt0E,EAAAP,EAAAC,EAAA60E,EAAA71E,EAAA1tF,GACA,GAAA+uF,GAAAw0E,GAAAvkJ,EAAA,KACAwkJ,EAAAt4E,EAAA6D,IAAAztF,EAAAC,GAAA,EACA4pF,EAAA4D,IAAAvtF,EAAAC,GAAA,EACAgiK,GAAA,EAAAt4E,EAAA4D,IAAAztF,EAAAC,GAAA,EACA2pF,EAAA6D,IAAAvtF,EAAAC,GAAA,EAEAiiK,EAAAF,KAAA/0E,KAAAg1E,KAAA/0E,IAEAg1E,GAAA,IACAj1E,GAAA9rD,EAAA+gI,GACAh1E,GAAA/rD,EAAA+gI,GAGA,IAAA7jJ,IAAAyjJ,IAAAt0E,GAAA,KACArsD,GAAA8rD,KAAAC,KACAD,KAAAg1E,KACA/0E,KAAA80E,OAAA/0E,KAAAg1E,KACA/0E,KAAA80E,QACA,EAEAG,EAAA9jJ,EAAA4uE,EAAAg1E,EAAA/0E,EACAk1E,EAAA/jJ,GAAA6uE,EAAA80E,EAAA/0E,EAEAluF,GAAAe,EAAAC,GAAA,EACA2pF,EAAA6D,GAAA40E,EACAx4E,EAAA4D,GAAA60E,EACAnjK,GAAAe,EAAAC,GAAA,EACA0pF,EAAA4D,GAAA40E,EACAz4E,EAAA6D,GAAA60E,EAEA3gI,EAAA4gI,GAAA,OAAAL,EAAAG,GAAAl1E,GAAAg1E,EAAAG,GAAAl1E,IACAo1E,IAAAN,EAAAG,GAAAl1E,GAAAg1E,EAAAG,GAAAl1E,GACApuE,KAAA,EAAAkjJ,EAAAG,GAAAl1E,IAAA,EAAAg1E,EAAAG,GAAAl1E,GACAI,EAAA+0E,EAAAC,EAAAxjJ,EAEAyjJ,GAAAD,EAAAxjJ,KAAA,IACAwuE,EAAA9vE,GAEA+kJ,EAAAD,EAAAxjJ,IAAA,IACAwuE,EAAA,GAEA,IAAAE,GAAAF,EAAA,IACAA,GAAA,EAAA9vE,GAEA,IAAAgwE,GAAAF,EAAA,IACAA,GAAA,EAAA9vE,GAGAhf,EAAAosF,QAAAsB,EAAAntF,EAAAE,EAAAguF,EAAAC,EAAAzrD,EAAA6rD,EAAAC,EAAAC,GAGA,QAAAg1E,GAAA3vK,GACA,IAAAA,EACA,QAIA,IAKAguC,GALA4hI,EAAA5vK,EAAA2jB,QAAA,WACAA,QAAA,WACAA,QAAA,UACAA,QAAA,UAIA,KAAAqqB,EAAA,EAAmBA,EAAA6hI,EAAAtyK,OAAeywC,IAClC4hI,IAAAjsJ,QAAA,GAAA8vD,QAAAo8F,EAAA7hI,GAAA,SAAA6hI,EAAA7hI,GAIA,IAQA8hI,GARAnnJ,EAAAinJ,EAAAn5J,MAAA,KAEAs5J,EAAA,EACAC,EAAA,EAEArkK,EAAA,GAAAimB,GACA4kE,EAAA5kE,EAAA4kE,GAGA,KAAAxoD,EAAA,EAAmBA,EAAArlB,EAAAprB,OAAgBywC,IAAA,CACnC,GAIAqrD,GAJA9xE,EAAAoB,EAAAqlB,GACAJ,EAAArmB,EAAA2R,OAAA,GACA1b,EAAA,EACAg7B,EAAAjxB,EAAAtlB,MAAA,GAAA0hB,QAAA,aAAAlN,MAAA,IAGA+hC,GAAAj7C,OAAA,QAAAi7C,EAAA,IACAA,EAAAxgC,OAGA,QAAA3a,GAAA,EAA2BA,EAAAm7C,EAAAj7C,OAAcF,IACzCm7C,EAAAn7C,GAAAgrB,WAAAmwB,EAAAn7C,GAEA,MAAAmgB,EAAAg7B,EAAAj7C,SAAAunB,MAAA0zB,EAAAh7B,MACAsH,MAAA0zB,EAAA,KADA,CAIA,GAAAy3H,GACAC,EAEA91E,EACAC,EACAK,EACAu0E,EACAt0E,EAEA1tF,EAAA8iK,EACA5iK,EAAA6iK,CAGA,QAAApiI,GACA,QACAmiI,GAAAv3H,EAAAh7B,KACAwyJ,GAAAx3H,EAAAh7B,KACA67E,EAAA7C,EAAAp8C,EACAzuC,EAAAosF,QAAAsB,EAAA02E,EAAAC,EACA,MACA,SACAD,EAAAv3H,EAAAh7B,KACAwyJ,EAAAx3H,EAAAh7B,KACA67E,EAAA7C,EAAAp8C,EACAzuC,EAAAosF,QAAAsB,EAAA02E,EAAAC,EACA,MACA,SACAD,GAAAv3H,EAAAh7B,KACAwyJ,GAAAx3H,EAAAh7B,KACA67E,EAAA7C,EAAAj8D,EACA5uB,EAAAosF,QAAAsB,EAAA02E,EAAAC,GACApiI,EAAA,GACA,MACA,SACAmiI,EAAAv3H,EAAAh7B,KACAwyJ,EAAAx3H,EAAAh7B,KACA67E,EAAA7C,EAAAj8D,EACA5uB,EAAAosF,QAAAsB,EAAA02E,EAAAC,GACApiI,EAAA,GACA,MACA,SACAmiI,GAAAv3H,EAAAh7B,KACA67E,EAAA7C,EAAAp8C,EACAzuC,EAAAosF,QAAAsB,EAAA02E,EAAAC,EACA,MACA,SACAD,EAAAv3H,EAAAh7B,KACA67E,EAAA7C,EAAAp8C,EACAzuC,EAAAosF,QAAAsB,EAAA02E,EAAAC,EACA,MACA,SACAA,GAAAx3H,EAAAh7B,KACA67E,EAAA7C,EAAAp8C,EACAzuC,EAAAosF,QAAAsB,EAAA02E,EAAAC,EACA,MACA,SACAA,EAAAx3H,EAAAh7B,KACA67E,EAAA7C,EAAAp8C,EACAzuC,EAAAosF,QAAAsB,EAAA02E,EAAAC,EACA,MACA,SACA32E,EAAA7C,EAAAzoD,EACApiC,EAAAosF,QACAsB,EAAA7gD,EAAAh7B,KAAAg7B,EAAAh7B,KAAAg7B,EAAAh7B,KAAAg7B,EAAAh7B,KAAAg7B,EAAAh7B,KAAAg7B,EAAAh7B,MAEAuyJ,EAAAv3H,EAAAh7B,EAAA,GACAwyJ,EAAAx3H,EAAAh7B,EAAA,EACA,MACA,SACA67E,EAAA7C,EAAAzoD,EACApiC,EAAAosF,QACAsB,EACA7gD,EAAAh7B,KAAAuyJ,EAAAv3H,EAAAh7B,KAAAwyJ,EACAx3H,EAAAh7B,KAAAuyJ,EAAAv3H,EAAAh7B,KAAAwyJ,EACAx3H,EAAAh7B,KAAAuyJ,EAAAv3H,EAAAh7B,KAAAwyJ,GAEAD,GAAAv3H,EAAAh7B,EAAA,GACAwyJ,GAAAx3H,EAAAh7B,EAAA,EACA,MACA,SACAyyJ,EAAAF,EACAG,EAAAF,CACA,IAAA1yK,GAAAqO,EAAArO,MACAgO,EAAAK,EAAA3L,IACA8vK,KAAAt5E,EAAAzoD,IACAkiI,GAAAF,EAAAzkK,EAAAhO,EAAA,GACA4yK,GAAAF,EAAA1kK,EAAAhO,EAAA,IAEA+7F,EAAA7C,EAAAzoD,EACA9gC,EAAAurC,EAAAh7B,KACArQ,EAAAqrC,EAAAh7B,KACAuyJ,EAAAv3H,EAAAh7B,KACAwyJ,EAAAx3H,EAAAh7B,KACA7R,EAAAosF,QAAAsB,EAAA42E,EAAAC,EAAAjjK,EAAAE,EAAA4iK,EAAAC,EACA,MACA,SACAC,EAAAF,EACAG,EAAAF,CACA,IAAA1yK,GAAAqO,EAAArO,MACAgO,EAAAK,EAAA3L,IACA8vK,KAAAt5E,EAAAzoD,IACAkiI,GAAAF,EAAAzkK,EAAAhO,EAAA,GACA4yK,GAAAF,EAAA1kK,EAAAhO,EAAA,IAEA+7F,EAAA7C,EAAAzoD,EACA9gC,EAAA8iK,EAAAv3H,EAAAh7B,KACArQ,EAAA6iK,EAAAx3H,EAAAh7B,KACAuyJ,GAAAv3H,EAAAh7B,KACAwyJ,GAAAx3H,EAAAh7B,KACA7R,EAAAosF,QAAAsB,EAAA42E,EAAAC,EAAAjjK,EAAAE,EAAA4iK,EAAAC,EACA,MACA,SACA/iK,EAAAurC,EAAAh7B,KACArQ,EAAAqrC,EAAAh7B,KACAuyJ,EAAAv3H,EAAAh7B,KACAwyJ,EAAAx3H,EAAAh7B,KACA67E,EAAA7C,EAAAC,EACA9qF,EAAAosF,QAAAsB,EAAApsF,EAAAE,EAAA4iK,EAAAC,EACA,MACA,SACA/iK,EAAAurC,EAAAh7B,KAAAuyJ,EACA5iK,EAAAqrC,EAAAh7B,KAAAwyJ,EACAD,GAAAv3H,EAAAh7B,KACAwyJ,GAAAx3H,EAAAh7B,KACA67E,EAAA7C,EAAAC,EACA9qF,EAAAosF,QAAAsB,EAAApsF,EAAAE,EAAA4iK,EAAAC,EACA,MACA,SACAC,EAAAF,EACAG,EAAAF,CACA,IAAA1yK,GAAAqO,EAAArO,MACAgO,EAAAK,EAAA3L,IACA8vK,KAAAt5E,EAAAC,IACAw5E,GAAAF,EAAAzkK,EAAAhO,EAAA,GACA4yK,GAAAF,EAAA1kK,EAAAhO,EAAA,IAEAyyK,EAAAv3H,EAAAh7B,KACAwyJ,EAAAx3H,EAAAh7B,KACA67E,EAAA7C,EAAAC,EACA9qF,EAAAosF,QAAAsB,EAAA42E,EAAAC,EAAAH,EAAAC,EACA,MACA,SACAC,EAAAF,EACAG,EAAAF,CACA,IAAA1yK,GAAAqO,EAAArO,MACAgO,EAAAK,EAAA3L,IACA8vK,KAAAt5E,EAAAC,IACAw5E,GAAAF,EAAAzkK,EAAAhO,EAAA,GACA4yK,GAAAF,EAAA1kK,EAAAhO,EAAA,IAEAyyK,GAAAv3H,EAAAh7B,KACAwyJ,GAAAx3H,EAAAh7B,KACA67E,EAAA7C,EAAAC,EACA9qF,EAAAosF,QAAAsB,EAAA42E,EAAAC,EAAAH,EAAAC,EACA,MACA,SACA51E,EAAA5hD,EAAAh7B,KACA68E,EAAA7hD,EAAAh7B,KACAk9E,EAAAliD,EAAAh7B,KACAyxJ,EAAAz2H,EAAAh7B,KACAm9E,EAAAniD,EAAAh7B,KAEAvQ,EAAA8iK,EAAA5iK,EAAA6iK,EACAD,EAAAv3H,EAAAh7B,KACAwyJ,EAAAx3H,EAAAh7B,KACA67E,EAAA7C,EAAA3oD,EACAmhI,EACA/hK,EAAAE,EAAA4iK,EAAAC,EAAAf,EAAAt0E,EAAAP,EAAAC,EAAAK,EAAArB,EAAA1tF,EAEA,MACA,SACAyuF,EAAA5hD,EAAAh7B,KACA68E,EAAA7hD,EAAAh7B,KACAk9E,EAAAliD,EAAAh7B,KACAyxJ,EAAAz2H,EAAAh7B,KACAm9E,EAAAniD,EAAAh7B,KAEAvQ,EAAA8iK,EAAA5iK,EAAA6iK,EACAD,GAAAv3H,EAAAh7B,KACAwyJ,GAAAx3H,EAAAh7B,KACA67E,EAAA7C,EAAA3oD,EACAmhI,EACA/hK,EAAAE,EAAA4iK,EAAAC,EAAAf,EAAAt0E,EAAAP,EAAAC,EAAAK,EAAArB,EAAA1tF,IAMA,MAAAiiC,GAAA,MAAAA,IACAyrD,EAAA7C,EAAAE,EACA/qF,EAAAosF,QAAAsB,IAGAy2E,EAAAz2E,EAKA,MAFA1tF,GAAAotF,WAEAptF,EAIA,QAAAwkK,GAAA5oJ,EAAAnc,GACA,GAAAglK,GAAAT,EAAApoJ,EAuBA,OAtBAnc,SACAA,EAAAwoB,UAAA,SAAAjoB,GACA,GAAAA,EAAA2nF,QAAA,CACA3nF,EAAA2nF,QAAA88E,EAAApwK,KAEA,IAAAoyB,GAAAzmB,EAAA3M,YACAozB,IACAzmB,EAAAkoB,YAAAzB,OAGA,CACA,GAAAA,GAAAzmB,CACAykK,GAAAv8I,YAAAzB,KAIAhnB,EAAAoB,eAAA,SAAAE,GACA2jK,EAAAD,EAAA1jK,GAEAlL,KAAAyzB,OAAA,IAGA7pB,EA7VA,GAAA5B,GAAA3D,EAAA,IACA+rB,EAAA/rB,EAAA,IACAwqK,EAAAxqK,EAAA,KAGAgqK,GACA,wCACA,yCAGAvhI,EAAAxkC,KAAA4rB,KACAohE,EAAAhtF,KAAAolC,IACA2nD,EAAA/sF,KAAAklC,IACArkB,EAAA7gB,KAAA6gB,GAEA2lJ,EAAA,SAAArkJ,GACA,MAAAniB,MAAA4rB,KAAAzJ,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAyjJ,EAAA,SAAAD,EAAAxjJ,GACA,OAAAwjJ,EAAA,GAAAxjJ,EAAA,GAAAwjJ,EAAA,GAAAxjJ,EAAA,KAAAqkJ,EAAAb,GAAAa,EAAArkJ,KAEAujJ,EAAA,SAAAC,EAAAxjJ,GACA,OAAAwjJ,EAAA,GAAAxjJ,EAAA,GAAAwjJ,EAAA,GAAAxjJ,EAAA,SACAniB,KAAA+kC,KAAA6gI,EAAAD,EAAAxjJ,IAyUApvB,GAAAC,SAMA8O,iBAAA,SAAA2b,EAAAnc,GACA,UAAA5B,GAAA2mK,EAAA5oJ,EAAAnc,KAQAG,iBAAA,SAAAgc,EAAAnc,GACA,MAAA5B,GAAA9K,OAAAyxK,EAAA5oJ,EAAAnc,KASAmB,UAAA,SAAAgkK,EAAAnlK,GAGA,OAFAojJ,MACAlxJ,EAAAizK,EAAAhzK,OACAF,EAAA,EAA2BA,EAAAC,EAASD,IAAA,CACpC,GAAAmzK,GAAAD,EAAAlzK,EACAmzK,GAAA7kK,MACA6kK,EAAAr8I,kBAEAq8I,EAAAv+I,aACAu+I,EAAA58I,UAAA48I,EAAA7kK,KAAA6kK,EAAAzjK,OAAA,GAEAyhJ,EAAA/tJ,KAAA+vK,EAAA7kK,MAGA,GAAA8kK,GAAA,GAAAjnK,GAAA4B,EAYA,OAVAqlK,GAAAt8I,kBACAs8I,EAAA78I,UAAA,SAAAjoB,GACAA,EAAAutF,WAAAs1D,EAEA,IAAAp8H,GAAAzmB,EAAA3M,YACAozB,IACAzmB,EAAAkoB,YAAAzB,IAIAq+I,KxN87iDM,SAAU5zK,EAAQC,EAAS+I,GyN10jDjC,QAAAwqK,GAAA1kK,EAAAe,GACA,GACA2sF,GACAq3E,EACArzK,EACA2yB,EACA+J,EACAye,EANAx4C,EAAA2L,EAAA3L,KAQAu6B,EAAAi8D,EAAAj8D,EACAwT,EAAAyoD,EAAAzoD,EACAqM,EAAAo8C,EAAAp8C,EACAL,EAAAy8C,EAAAz8C,EACAlM,EAAA2oD,EAAA3oD,EACA4oD,EAAAD,EAAAC,CAEA,KAAAp5F,EAAA,EAAA2yB,EAAA,EAA0B3yB,EAAA2C,EAAAzC,QAAiB,CAK3C,OAJA87F,EAAAr5F,EAAA3C,KACA2yB,EAAA3yB,EACAqzK,EAAA,EAEAr3E,GACA,IAAA9+D,GAGA,IAAA6f,GACAs2H,EAAA,CACA,MACA,KAAA3iI,GACA2iI,EAAA,CACA,MACA,KAAAj6E,GACAi6E,EAAA,CACA,MACA,KAAA7iI,GACA,GAAA1hC,GAAAO,EAAA,GACAL,EAAAK,EAAA,GACAswB,EAAAsR,EAAA5hC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAuwB,EAAAqR,EAAA5hC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA0xF,EAAAuyE,GAAAjkK,EAAA,GAAAuwB,EAAAvwB,EAAA,GAAAswB,EAEAh9B,GAAA3C,IAAA2/B,EACAh9B,EAAA3C,MAAA8O,EAEAnM,EAAA3C,IAAA4/B,EACAj9B,EAAA3C,MAAAgP,EAGArM,EAAA3C,MAAA2/B,EACAh9B,EAAA3C,MAAA4/B,EAGAj9B,EAAA3C,MAAA+gG,EAEAp+F,EAAA3C,MAAA+gG,EAEA/gG,GAAA,EACA2yB,EAAA3yB,CACA,MACA,KAAA08C,GAEAvB,EAAA,GAAAx4C,EAAA3C,KACAm7C,EAAA,GAAAx4C,EAAA3C,KACAk/B,EAAAic,IAAA9rC,GACA1M,EAAAgwB,KAAAwoB,EAAA,GACAx4C,EAAAgwB,KAAAwoB,EAAA,GAEAA,EAAA,IAAAx4C,EAAA3C,KACAm7C,EAAA,IAAAx4C,EAAA3C,KACAk/B,EAAAic,IAAA9rC,GACA1M,EAAAgwB,KAAAwoB,EAAA,GACAx4C,EAAAgwB,KAAAwoB,EAAA,GAGA,IAAAze,EAAA,EAAuBA,EAAA22I,EAAY32I,IAAA,CACnC,GAAAye,GAAApnC,EAAA2oB,EACAye,GAAA,GAAAx4C,EAAA3C,KACAm7C,EAAA,GAAAx4C,EAAA3C,KAEAk/B,EAAAic,IAAA9rC,GAEA1M,EAAAgwB,KAAAwoB,EAAA,GACAx4C,EAAAgwB,KAAAwoB,EAAA,KAzFA,GAAAg+C,GAAA3wF,EAAA,IAAA2wF,IACAl6D,EAAAz2B,EAAA,IACA02B,EAAAD,EAAA9vB,eAEA4E,aACAk9B,EAAAxkC,KAAA4rB,KACAi7I,EAAA7mK,KAAAmjH,KAwFApwH,GAAAC,QAAAuzK,GzN01jDM,SAAUxzK,EAAQC,EAAS+I,G0Nt2jDjC,QAAA+qK,GAAAp+J,SACAuK,GAAAvK;;;;;;;;;AA1EA,GAAAyxG,GAAAp+G,EAAA,KACAsV,EAAAtV,EAAA,IACAyD,EAAAzD,EAAA,GAEA6zJ,EAAA7zJ,EAAA,KACAo9J,EAAAp9J,EAAA,KACAi+J,EAAAj+J,EAAA,KACAgrK,EAAAhrK,EAAA,KAEAirK,GAAA31J,EAAAQ,gBAEAo1J,GACAjxJ,OAAAja,EAAA,MAGAkX,KAEAlK,IAKAA,GAAA4Q,QAAA,QAYA5Q,EAAAC,KAAA,SAAAb,EAAA7G,GACA,GAAAuH,GAAA,GAAAq+J,GAAA/sD,IAAAhyG,EAAA7G,EAEA,OADA2R,GAAApK,EAAAH,IAAAG,EACAA,GAOAE,EAAAgH,QAAA,SAAAlH,GACA,GAAAA,EACAA,EAAAkH,cAEA,CACA,OAAA/b,KAAAif,GACAA,EAAAhf,eAAAD,IACAif,EAAAjf,GAAA+b,SAGAkD,MAGA,MAAAlK,IAQAA,EAAAo+J,YAAA,SAAAz+J,GACA,MAAAuK,GAAAvK,IAGAK,EAAAq+J,gBAAA,SAAArqK,EAAA0xB,GACAw4I,EAAAlqK,GAAA0xB,EAqBA,IAAAy4I,GAAA,SAAAx+J,EAAAP,EAAA7G,GAEAA,QAKA5J,KAAAyQ,MAKAzQ,KAAAgR,IAEA,IAAA2M,GAAA3d,KACAyZ,EAAA,GAAAgoJ,GAEAkO,EAAA/lK,EAAA2H,QAEA,IAAA+9J,EAAA,CACA,IAAAC,EAAAK,IACA,SAAA9uK,OAAA,uDAEA6uK,GAAA,UAEAA,IAAAJ,EAAAI,KACAA,EAAA,SAEA,IAAA1yJ,GAAA,GAAAsyJ,GAAAI,GAAAl/J,EAAAgJ,EAAA7P,EAEA5J,MAAAyZ,UACAzZ,KAAAid,SAEA,IAAA4yJ,GAAAl2J,EAAAC,KAAA,QAAAy1J,GAAApyJ,EAAA80H,kBACA/xI,MAAAoQ,QAAA,GAAA8nJ,GAAAz+I,EAAAwD,EAAA4yJ,EAAA5yJ,EAAA0iB,MAKA3/B,KAAA4S,UAAA,GAAA0vJ,IACAC,OACAvtJ,OAAAlN,EAAAtI,KAAAQ,KAAA2R,MAAA3R,SAGAA,KAAA4S,UAAAyxC,QAMArkD,KAAA8vK,aAIA,IAAAC,GAAAt2J,EAAA66E,eACA07E,EAAAv2J,EAAA26E,YAEA36E,GAAA66E,eAAA,SAAAzvF,GACAkrK,EAAAn0K,KAAA6d,EAAA5U,GAEAA,KAAAm+G,iBAAArlG,IAGAlE,EAAA26E,aAAA,SAAAvvF,GACAmrK,EAAAp0K,KAAA6d,EAAA5U,GAEAA,EAAAi+G,YAAAnlG,IAIA6xJ,GAAArxK,WAEAlC,YAAAuzK,EAKA3uE,MAAA,WACA,MAAA7gG,MAAAgR,IAOAjN,IAAA,SAAAc,GACA7E,KAAAyZ,QAAA0oJ,QAAAt9J,GACA7E,KAAA8vK,eAAA,GAOA13J,OAAA,SAAAvT,GACA7E,KAAAyZ,QAAA2oJ,QAAAv9J,GACA7E,KAAA8vK,eAAA,GAWAjwJ,YAAA,SAAAowJ,EAAA5vI,GACArgC,KAAAid,QAAA4C,YAAAowJ,EAAA5vI,GACArgC,KAAA8vK,eAAA,GAMAnxJ,mBAAA,WAGA3e,KAAA8vK,eAAA,EACA9vK,KAAAid,QAAA0W,UAIA3zB,KAAA8vK,eAAA,GAMAn8I,QAAA,WACA3zB,KAAA8vK,eAAA,GAMAn+J,MAAA,WACA3R,KAAA8vK,eACA9vK,KAAA2e,qBAEA3e,KAAAkwK,oBACAlwK,KAAAmwK,2BASAxqK,SAAA,SAAAd,EAAAG,GACAhF,KAAAid,QAAAtX,WACA3F,KAAAid,QAAAtX,SAAAd,EAAAG,GACAhF,KAAA+8J,iBAQA/2J,YAAA,SAAAnB,GACA7E,KAAAid,QAAAjX,cACAhG,KAAAid,QAAAjX,YAAAnB,GACA7E,KAAA+8J,iBAQAM,WAAA,WACAr9J,KAAAid,QAAAogJ,aACAr9J,KAAAid,QAAAogJ,aACAr9J,KAAA+8J,iBAOAA,aAAA,WACA/8J,KAAAkwK,oBAAA,GAMAC,wBAAA,WACAnwK,KAAAkwK,oBAAA,EACAlwK,KAAAid,QAAA8/I,cAAA/8J,KAAAid,QAAA8/I,gBAUAxqJ,OAAA,SAAA3I,GACAA,QACA5J,KAAAid,QAAA1K,OAAA3I,EAAAY,MAAAZ,EAAAa,QACAzK,KAAAoQ,QAAAmC,UAMA69J,eAAA,WACApwK,KAAA4S,UAAAgP,SAMA9E,SAAA,WACA,MAAA9c,MAAAid,QAAAH,YAMAC,UAAA,WACA,MAAA/c,MAAAid,QAAAF,aAsBAgkJ,YAAA,SAAAv6J,EAAA0W,GACA,MAAAld,MAAAid,QAAA8jJ,YAAAv6J,EAAA0W,IAOAg8I,eAAA,SAAA9pD,GACApvG,KAAAoQ,QAAA8oJ,eAAA9pD,IASAylC,UAAA,SAAAlqI,EAAAE,GACA,MAAA7K,MAAAoQ,QAAAykI,UAAAlqI,EAAAE,IAUA2B,GAAA,SAAA2D,EAAAgpJ,EAAAv6J,GACAoB,KAAAoQ,QAAA5D,GAAA2D,EAAAgpJ,EAAAv6J,IAQAod,IAAA,SAAA7L,EAAAgpJ,GACAn5J,KAAAoQ,QAAA4L,IAAA7L,EAAAgpJ,IASA9iJ,QAAA,SAAAlG,EAAA4F,GACA/V,KAAAoQ,QAAAiG,QAAAlG,EAAA4F,IAOA6L,MAAA,WACA5hB,KAAAyZ,QAAA2oJ,UACApiK,KAAAid,QAAA2E,SAMAvJ,QAAA,WACArY,KAAA4S,UAAAgjC,OAEA51C,KAAA4hB,QACA5hB,KAAAyZ,QAAApB,UACArY,KAAAid,QAAA5E,UACArY,KAAAoQ,QAAAiI,UAEArY,KAAA4S,UACA5S,KAAAyZ,QACAzZ,KAAAid,QACAjd,KAAAoQ,QAAA,KAEAg/J,EAAApvK,KAAAgR,MAIA3V,EAAAC,QAAA+V,G1Ni8jDS,CAEH,SAAUhW,EAAQC,G2Nh0kDxB,QAAA+0K,GAAA56J,EAAA66J,GACA,GAAAjmF,GAAA50E,EAAA,OACA86J,EAAA96J,EAAA,EACA,KAAA86J,EACA,MAAAlmF,EAGA,IAAAimF,GAAA,kBAAAE,MAAA,CACA,GAAAC,GAAAC,EAAAH,EAKA,QAAAlmF,GAAAvqF,OAJAywK,EAAAI,QAAA5xK,IAAA,SAAAvD,GACA,uBAAA+0K,EAAAK,WAAAp1K,EAAA,SAGAsE,QAAA2wK,IAAA3iK,KAAA,MAGA,OAAAu8E,GAAAv8E,KAAA,MAIA,QAAA4iK,GAAAvZ,GAKA,yEAHAqZ,KAAAK,SAAA9iD,mBAAAjqE,KAAA7jC,UAAAk3I,MAGA,MArEA97J,EAAAC,QAAA,SAAAg1K,GACA,GAAAhzJ,KAwCA,OArCAA,GAAAhb,SAAA,WACA,MAAAtC,MAAAjB,IAAA,SAAA0W,GACA,GAAA40E,GAAAgmF,EAAA56J,EAAA66J,EACA,OAAA76J,GAAA,GACA,UAAAA,EAAA,OAAmC40E,EAAA,IAEnCA,IAEGv8E,KAAA,KAIHwP,EAAAzhB,EAAA,SAAAojC,EAAA6xI,GACA,gBAAA7xI,KACAA,IAAA,KAAAA,EAAA,KAEA,QADA8xI,MACAl1K,EAAA,EAAgBA,EAAAmE,KAAAjE,OAAiBF,IAAA,CACjC,GAAAmV,GAAAhR,KAAAnE,GAAA,EACA,iBAAAmV,KACA+/J,EAAA//J,IAAA,GAEA,IAAAnV,EAAA,EAAYA,EAAAojC,EAAAljC,OAAoBF,IAAA,CAChC,GAAA4Z,GAAAwpB,EAAApjC,EAKA,iBAAA4Z,GAAA,IAAAs7J,EAAAt7J,EAAA,MACAq7J,IAAAr7J,EAAA,GACAA,EAAA,GAAAq7J,EACKA,IACLr7J,EAAA,OAAAA,EAAA,aAAAq7J,EAAA,KAEAxzJ,EAAAre,KAAAwW,MAIA6H,I3Nq5kDM,SAAUjiB,EAAQC,EAAS+I,G4Nl3kDjC,QAAA2sK,GAAAtnG,GACA,OAAA7tE,GAAA,EAAiBA,EAAA6tE,EAAA3tE,OAAmBF,IAAA,CACpC,GAAA4Z,GAAAi0D,EAAA7tE,GACA41I,EAAAw/B,EAAAx7J,EAAAzE,GACA,IAAAygI,EAAA,CACAA,EAAAlzE,MACA,QAAA/vC,GAAA,EAAqBA,EAAAijH,EAAAsW,MAAAhsJ,OAA2ByyB,IAChDijH,EAAAsW,MAAAv5H,GAAA/Y,EAAAsyI,MAAAv5H,GAEA,MAAYA,EAAA/Y,EAAAsyI,MAAAhsJ,OAAuByyB,IACnCijH,EAAAsW,MAAA9oJ,KAAAiyK,EAAAz7J,EAAAsyI,MAAAv5H,IAEAijH,GAAAsW,MAAAhsJ,OAAA0Z,EAAAsyI,MAAAhsJ,SACA01I,EAAAsW,MAAAhsJ,OAAA0Z,EAAAsyI,MAAAhsJ,YAEK,CAEL,OADAgsJ,MACAv5H,EAAA,EAAqBA,EAAA/Y,EAAAsyI,MAAAhsJ,OAAuByyB,IAC5Cu5H,EAAA9oJ,KAAAiyK,EAAAz7J,EAAAsyI,MAAAv5H,IAEAyiJ,GAAAx7J,EAAAzE,KAA8BA,GAAAyE,EAAAzE,GAAAutD,KAAA,EAAAwpF,WAK9B,QAAAopB,KACA,GAAAC,GAAA9zK,SAAAC,cAAA,QAGA,OAFA6zK,GAAAjxK,KAAA,WACAioH,EAAAnqD,YAAAmzG,GACAA,EAGA,QAAAF,GAAAxyK,GACA,GAAAsW,GAAAoD,EACAg5J,EAAA9zK,SAAAggE,cAAA,2BAAA5+D,EAAAsS,GAAA,KAEA,IAAAogK,EAAA,CACA,GAAAC,EAGA,MAAAzuK,EAOAwuK,GAAA/0G,WAAAx3B,YAAAusI,GAIA,GAAAE,EAAA,CAEA,GAAAC,GAAAC,GACAJ,GAAAK,MAAAN,KACAn8J,EAAA08J,EAAAlyK,KAAA,KAAA4xK,EAAAG,GAAA,GACAn5J,EAAAs5J,EAAAlyK,KAAA,KAAA4xK,EAAAG,GAAA,OAGAH,GAAAD,IACAn8J,EAAA28J,EAAAnyK,KAAA,KAAA4xK,GACAh5J,EAAA,WACAg5J,EAAA/0G,WAAAx3B,YAAAusI,GAMA,OAFAp8J,GAAAtW,GAEA,SAAAkzK,GACA,GAAAA,EAAA,CACA,GAAAA,EAAAnpG,MAAA/pE,EAAA+pE,KACAmpG,EAAAlxB,QAAAhiJ,EAAAgiJ,OACAkxB,EAAAza,YAAAz4J,EAAAy4J,UACA,MAEAniJ,GAAAtW,EAAAkzK,OAEAx5J,MAcA,QAAAs5J,GAAAN,EAAA98J,EAAA8D,EAAA1Z,GACA,GAAA+pE,GAAArwD,EAAA,GAAA1Z,EAAA+pE,GAEA,IAAA2oG,EAAAS,WACAT,EAAAS,WAAAhuF,QAAAiuF,EAAAx9J,EAAAm0D,OACG,CACH,GAAAspG,GAAAz0K,SAAAsgE,eAAA6K,GACAupG,EAAAZ,EAAAY,UACAA,GAAA19J,IAAA88J,EAAAvsI,YAAAmtI,EAAA19J,IACA09J,EAAAj2K,OACAq1K,EAAAtzG,aAAAi0G,EAAAC,EAAA19J,IAEA88J,EAAAnzG,YAAA8zG,IAKA,QAAAJ,GAAAP,EAAA1yK,GACA,GAAA+pE,GAAA/pE,EAAA+pE,IACAi4E,EAAAhiJ,EAAAgiJ,MACAyW,EAAAz4J,EAAAy4J,SAcA,IAZAzW,GACA0wB,EAAA1uJ,aAAA,QAAAg+H,GAGAyW,IAGA1uF,GAAA,mBAAA0uF,EAAAwZ,QAAA,SAEAloG,GAAA,uDAAyD+nG,KAAAK,SAAA9iD,mBAAAjqE,KAAA7jC,UAAAk3I,MAAA,OAGzDia,EAAAS,WACAT,EAAAS,WAAAhuF,QAAApb,MACG,CACH,KAAA2oG,EAAAtpF,YACAspF,EAAAvsI,YAAAusI,EAAAtpF,WAEAspF,GAAAnzG,YAAA3gE,SAAAsgE,eAAA6K,KA9MA,GAAAwpG,GAAA,mBAAA30K,SAEA,uBAAA40K,gBACAD,EACA,SAAAnxK,OACA,0JAKA,IAAAqxK,GAAA9tK,EAAA,KAeA4sK,KAQA7oD,EAAA6pD,IAAA30K,SAAA8qH,MAAA9qH,SAAA80K,qBAAA,YACAX,EAAA,KACAD,EAAA,EACAH,GAAA,EACAzuK,EAAA,aAIA0uK,EAAA,mBAAA37I,YAAA,eAAAjS,KAAAiS,UAAAQ,UAAA9lB,cAEAhV,GAAAC,QAAA,SAAA27J,EAAA35I,EAAA+0J,GACAhB,EAAAgB,CAEA,IAAA3oG,GAAAyoG,EAAAlb,EAAA35I,EAGA,OAFA0zJ,GAAAtnG,GAEA,SAAApzB,GAEA,OADAg8H,MACAz2K,EAAA,EAAmBA,EAAA6tE,EAAA3tE,OAAmBF,IAAA,CACtC,GAAA4Z,GAAAi0D,EAAA7tE,GACA41I,EAAAw/B,EAAAx7J,EAAAzE,GACAygI,GAAAlzE,OACA+zG,EAAArzK,KAAAwyI,GAEAn7F,GACAozB,EAAAyoG,EAAAlb,EAAA3gH,GACA06H,EAAAtnG,IAEAA,IAEA,QAAA7tE,GAAA,EAAmBA,EAAAy2K,EAAAv2K,OAAsBF,IAAA,CACzC,GAAA41I,GAAA6gC,EAAAz2K,EACA,QAAA41I,EAAAlzE,KAAA,CACA,OAAA/vC,GAAA,EAAuBA,EAAAijH,EAAAsW,MAAAhsJ,OAA2ByyB,IAClDijH,EAAAsW,MAAAv5H,WAEAyiJ,GAAAx/B,EAAAzgI,OAwFA,IAAA8gK,GAAA,WACA,GAAAS,KAEA,iBAAAj+J,EAAAk+J,GAEA,MADAD,GAAAj+J,GAAAk+J,EACAD,EAAAlzK,OAAA4qD,SAAAn8C,KAAA","file":"static/js/vendor.7f2b26f6bef2ffa9a782.js","sourcesContent":["webpackJsonp([1],[\n/* 0 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var pathTool = __webpack_require__(507);\n    var Path = __webpack_require__(11);\n    var colorTool = __webpack_require__(32);\n    var matrix = __webpack_require__(25);\n    var vector = __webpack_require__(12);\n    var Transformable = __webpack_require__(117);\n    var BoundingRect = __webpack_require__(17);\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(46);\n\n    graphic.Image = __webpack_require__(113);\n\n    graphic.Text = __webpack_require__(491);\n\n    graphic.Circle = __webpack_require__(498);\n\n    graphic.Sector = __webpack_require__(504);\n\n    graphic.Ring = __webpack_require__(503);\n\n    graphic.Polygon = __webpack_require__(500);\n\n    graphic.Polyline = __webpack_require__(501);\n\n    graphic.Rect = __webpack_require__(502);\n\n    graphic.Line = __webpack_require__(499);\n\n    graphic.BezierCurve = __webpack_require__(497);\n\n    graphic.Arc = __webpack_require__(496);\n\n    graphic.CompoundPath = __webpack_require__(488);\n\n    graphic.LinearGradient = __webpack_require__(489);\n\n    graphic.RadialGradient = __webpack_require__(490);\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    graphic.getFont = function (opt, ecModel) {\n        var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(13);\n\n    var GlobalModel = __webpack_require__(258);\n    var ExtensionAPI = __webpack_require__(218);\n    var CoordinateSystemManager = __webpack_require__(51);\n    var OptionManager = __webpack_require__(259);\n\n    var ComponentModel = __webpack_require__(18);\n    var SeriesModel = __webpack_require__(38);\n\n    var ComponentView = __webpack_require__(272);\n    var ChartView = __webpack_require__(59);\n    var graphic = __webpack_require__(5);\n    var modelUtil = __webpack_require__(10);\n    var throttle = __webpack_require__(91);\n\n    var zrender = __webpack_require__(509);\n    var zrUtil = __webpack_require__(0);\n    var colorTool = __webpack_require__(32);\n    var Eventful = __webpack_require__(31);\n    var timsort = __webpack_require__(64);\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.6.2',\n        dependencies: {\n            zrender: '3.5.2'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(273));\n    echarts.registerPreprocessor(__webpack_require__(266));\n    echarts.registerLoading('default', __webpack_require__(257));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = __webpack_require__(55);\n    echarts.Model = __webpack_require__(14);\n\n    echarts.Axis = __webpack_require__(84);\n\n    echarts.graphic = __webpack_require__(5);\n    echarts.number = __webpack_require__(9);\n    echarts.format = __webpack_require__(15);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(25);\n    echarts.vector = __webpack_require__(12);\n    echarts.color = __webpack_require__(32);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = __webpack_require__(254);\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(63)))\n\n/***/ }),\n/* 7 */,\n/* 8 */,\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(15);\n    var nubmerUtil = __webpack_require__(9);\n    var Model = __webpack_require__(14);\n    var zrUtil = __webpack_require__(0);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(65);\n    var zrUtil = __webpack_require__(0);\n    var PathProxy = __webpack_require__(47);\n    var pathContain = __webpack_require__(482);\n\n    var Pattern = __webpack_require__(114);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var clazzUtil = __webpack_require__(16);\n    var env = __webpack_require__(13);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(264));\n    mixin(Model, __webpack_require__(261));\n    mixin(Model, __webpack_require__(265));\n    mixin(Model, __webpack_require__(263));\n\n    module.exports = Model;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var numberUtil = __webpack_require__(9);\n    var textContain = __webpack_require__(23);\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(12);\n    var matrix = __webpack_require__(25);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(14);\n    var zrUtil = __webpack_require__(0);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(58);\n    var clazzUtil = __webpack_require__(16);\n    var layout = __webpack_require__(28);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(262));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n/* 19 */,\n/* 20 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Store */\n/* unused harmony export mapState */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return mapMutations; });\n/* unused harmony export mapGetters */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return mapActions; });\n/**\n * vuex v2.3.0\n * (c) 2017 Evan You\n * @license MIT\n */\nvar applyMixin = function (Vue) {\n  var version = Number(Vue.version.split('.')[0]);\n\n  if (version >= 2) {\n    var usesInit = Vue.config._lifecycleHooks.indexOf('init') > -1;\n    Vue.mixin(usesInit ? { init: vuexInit } : { beforeCreate: vuexInit });\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      if ( options === void 0 ) options = {};\n\n      options.init = options.init\n        ? [vuexInit].concat(options.init)\n        : vuexInit;\n      _init.call(this, options);\n    };\n  }\n\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n  function vuexInit () {\n    var options = this.$options;\n    // store injection\n    if (options.store) {\n      this.$store = options.store;\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store;\n    }\n  }\n};\n\nvar devtoolHook =\n  typeof window !== 'undefined' &&\n  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nfunction devtoolPlugin (store) {\n  if (!devtoolHook) { return }\n\n  store._devtoolHook = devtoolHook;\n\n  devtoolHook.emit('vuex:init', store);\n\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState);\n  });\n\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state);\n  });\n}\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\n\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime;\n  this._children = Object.create(null);\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors$1 = { namespaced: {} };\n\nprototypeAccessors$1.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors$1 );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  var this$1 = this;\n\n  // register root module (Vuex.Store options)\n  this.root = new Module(rawRootModule, false);\n\n  // register all nested modules\n  if (rawRootModule.modules) {\n    forEachValue(rawRootModule.modules, function (rawModule, key) {\n      this$1.register([key], rawModule, false);\n    });\n  }\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update(this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  var parent = this.get(path.slice(0, -1));\n  var newModule = new Module(rawModule, runtime);\n  parent.addChild(path[path.length - 1], newModule);\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n  if (!parent.getChild(key).runtime) { return }\n\n  parent.removeChild(key);\n};\n\nfunction update (targetModule, newModule) {\n  // update target module\n  targetModule.update(newModule);\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        console.warn(\n          \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n          'manual reload is needed'\n        );\n        return\n      }\n      update(targetModule.getChild(key), newModule.modules[key]);\n    }\n  }\n}\n\nvar Vue; // bind on install\n\nvar Store = function Store (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\");\n  assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n\n  var state = options.state; if ( state === void 0 ) state = {};\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\n  // store internal state\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._watcherVM = new Vue();\n\n  // bind commit and dispatch to self\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n  this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  };\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n  };\n\n  // strict mode\n  this.strict = strict;\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root);\n\n  // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreVM(this, state);\n\n  // apply plugins\n  plugins.concat(devtoolPlugin).forEach(function (plugin) { return plugin(this$1); });\n};\n\nvar prototypeAccessors = { state: {} };\n\nprototypeAccessors.state.get = function () {\n  return this._vm._data.$$state\n};\n\nprototypeAccessors.state.set = function (v) {\n  assert(false, \"Use store.replaceState() to explicit replace store state.\");\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload };\n  var entry = this._mutations[type];\n  if (!entry) {\n    console.error((\"[vuex] unknown mutation type: \" + type));\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload);\n    });\n  });\n  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });\n\n  if (options && options.silent) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    );\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var entry = this._actions[type];\n  if (!entry) {\n    console.error((\"[vuex] unknown action type: \" + type));\n    return\n  }\n  return entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload)\n};\n\nStore.prototype.subscribe = function subscribe (fn) {\n  var subs = this._subscribers;\n  if (subs.indexOf(fn) < 0) {\n    subs.push(fn);\n  }\n  return function () {\n    var i = subs.indexOf(fn);\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  }\n};\n\nStore.prototype.watch = function watch (getter, cb, options) {\n    var this$1 = this;\n\n  assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm._data.$$state = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule) {\n  if (typeof path === 'string') { path = [path]; }\n  assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  this._modules.register(path, rawModule);\n  installModule(this, this.state, path, this._modules.get(path));\n  // reset store to update getters...\n  resetStoreVM(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1 = this;\n\n  if (typeof path === 'string') { path = [path]; }\n  assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  this._modules.unregister(path);\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1));\n    Vue.delete(parentState, path[path.length - 1]);\n  });\n  resetStore(this);\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions);\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors );\n\nfunction resetStore (store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state;\n  // init all modules\n  installModule(store, state, [], store._modules.root, true);\n  // reset vm\n  resetStoreVM(store, state, hot);\n}\n\nfunction resetStoreVM (store, state, hot) {\n  var oldVm = store._vm;\n\n  // bind store public getters\n  store.getters = {};\n  var wrappedGetters = store._wrappedGetters;\n  var computed = {};\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    computed[key] = function () { return fn(store); };\n    Object.defineProperty(store.getters, key, {\n      get: function () { return store._vm[key]; },\n      enumerable: true // for local getters\n    });\n  });\n\n  // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  store._vm = new Vue({\n    data: {\n      $$state: state\n    },\n    computed: computed\n  });\n  Vue.config.silent = silent;\n\n  // enable strict mode for new vm\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldVm) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldVm._data.$$state = null;\n      });\n    }\n    Vue.nextTick(function () { return oldVm.$destroy(); });\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n  var namespace = store._modules.getNamespace(path);\n\n  // register in namespace map\n  if (module.namespaced) {\n    store._modulesNamespaceMap[namespace] = module;\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n    store._withCommit(function () {\n      Vue.set(parentState, moduleName, module.state);\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n\n  module.forEachAction(function (action, key) {\n    var namespacedType = namespace + key;\n    registerAction(store, namespacedType, action, local);\n  });\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace, path) {\n  var noNamespace = namespace === '';\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (!store._actions[type]) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (!store._mutations[type]) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  };\n\n  // getters and state object must be gotten lazily\n  // because they will be changed by vm update\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace\n        ? function () { return store.getters; }\n        : function () { return makeLocalGetters(store, namespace); }\n    },\n    state: {\n      get: function () { return getNestedState(store.state, path); }\n    }\n  });\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  var gettersProxy = {};\n\n  var splitPos = namespace.length;\n  Object.keys(store.getters).forEach(function (type) {\n    // skip if the target getter is not match this namespace\n    if (type.slice(0, splitPos) !== namespace) { return }\n\n    // extract local getter type\n    var localType = type.slice(splitPos);\n\n    // Add a port to the getters proxy.\n    // Define as getter property because\n    // we do not want to evaluate the getters in this time.\n    Object.defineProperty(gettersProxy, localType, {\n      get: function () { return store.getters[type]; },\n      enumerable: true\n    });\n  });\n\n  return gettersProxy\n}\n\nfunction registerMutation (store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler (payload) {\n    handler(local.state, payload);\n  });\n}\n\nfunction registerAction (store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler (payload, cb) {\n    var res = handler({\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload, cb);\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n        throw err\n      })\n    } else {\n      return res\n    }\n  });\n}\n\nfunction registerGetter (store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    console.error((\"[vuex] duplicate getter key: \" + type));\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      local.state, // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  };\n}\n\nfunction enableStrictMode (store) {\n  store._vm.$watch(function () { return this._data.$$state }, function () {\n    assert(store._committing, \"Do not mutate vuex store state outside mutation handlers.\");\n  }, { deep: true, sync: true });\n}\n\nfunction getNestedState (state, path) {\n  return path.length\n    ? path.reduce(function (state, key) { return state[key]; }, state)\n    : state\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  assert(typeof type === 'string', (\"Expects string as the type, but found \" + (typeof type) + \".\"));\n\n  return { type: type, payload: payload, options: options }\n}\n\nfunction install (_Vue) {\n  if (Vue) {\n    console.error(\n      '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n    );\n    return\n  }\n  Vue = _Vue;\n  applyMixin(Vue);\n}\n\n// auto install in dist mode\nif (typeof window !== 'undefined' && window.Vue) {\n  install(window.Vue);\n}\n\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n        if (!module) {\n          return\n        }\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      if (namespace && !getModuleByNamespace(this.$store, 'mapMutations', namespace)) {\n        return\n      }\n      return this.$store.commit.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedGetter () {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return\n      }\n      if (!(val in this.$store.getters)) {\n        console.error((\"[vuex] unknown getter: \" + val));\n        return\n      }\n      return this.$store.getters[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      if (namespace && !getModuleByNamespace(this.$store, 'mapActions', namespace)) {\n        return\n      }\n      return this.$store.dispatch.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nfunction normalizeMap (map) {\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n    return fn(namespace, map)\n  }\n}\n\nfunction getModuleByNamespace (store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n  if (!module) {\n    console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace));\n  }\n  return module\n}\n\nvar index_esm = {\n  Store: Store,\n  install: install,\n  version: '2.3.0',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (index_esm);\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(190), __esModule: true };\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(270);\n    var IntervalScale = __webpack_require__(57);\n    __webpack_require__(271);\n    __webpack_require__(269);\n    var Scale = __webpack_require__(40);\n\n    var numberUtil = __webpack_require__(9);\n    var zrUtil = __webpack_require__(0);\n    var textContain = __webpack_require__(23);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: scale.type === 'interval' ? model.get('minInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = __webpack_require__(0);\n    var BoundingRect = __webpack_require__(17);\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(12);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n/* 26 */,\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _assign = __webpack_require__(187);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(0);\n    var BoundingRect = __webpack_require__(17);\n    var numberUtil = __webpack_require__(9);\n    var formatUtil = __webpack_require__(15);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n/***/ }),\n/* 29 */,\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(31);\n    var env = __webpack_require__(13);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = __webpack_require__(110);\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.4.1\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nvar _toString = Object.prototype.toString;\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(val);\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      return JSON.stringify(a) === JSON.stringify(b)\n    } catch (e) {\n      // possible circular reference\n      return a === b\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"production\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName = (null); // work around flow check\n\nif (false) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'string'\n      ? vm\n      : typeof vm === 'function' && vm.options\n        ? vm.options.name\n        : vm._isVue\n          ? vm.$options.name || vm.$options._componentTag\n          : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  var generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (false) {\n      warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefix has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) {\n        try {\n          cb.call(ctx);\n        } catch (e) {\n          handleError(e, ctx, 'nextTick');\n        }\n      } else if (_resolve) {\n        _resolve(ctx);\n      }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve, reject) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this) : childVal,\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      \"production\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn.call(this, parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options) {\n  var inject = options.inject;\n  if (Array.isArray(inject)) {\n    var normalized = options.inject = {};\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = inject[i];\n    }\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child);\n  normalizeInject(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (false) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (false) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    valid = typeof value === expectedType.toLowerCase();\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (false) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      \"production\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (false) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        (last).text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (comp.__esModule && comp.default) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      \"production\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                 false\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && isDef(c.componentOptions)) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (false) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      child.data && child.data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (false) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (false) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (false) {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listensers hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data && parentVnode.data.attrs;\n  vm.$listeners = listeners;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (false) {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (false) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"production\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction checkOptionType (vm, name) {\n  var option = vm.$options[name];\n  if (!isPlainObject(option)) {\n    warn(\n      (\"component option \\\"\" + name + \"\\\" should be an object.\"),\n      vm\n    );\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (false) {\n      if (isReservedAttribute(key) || config.isReservedAttr(key)) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"production\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (false) {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      \"production\" !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  \"production\" !== 'production' && checkOptionType(vm, 'computed');\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (false) {\n      if (getter === undefined) {\n        warn(\n          (\"No getter function has been defined for computed property \\\"\" + key + \"\\\".\"),\n          vm\n        );\n        getter = noop;\n      }\n    }\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (false) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  \"production\" !== 'production' && checkOptionType(vm, 'methods');\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (false) {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  \"production\" !== 'production' && checkOptionType(vm, 'watch');\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  keyOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(keyOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (false) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    observerState.shouldConvert = false;\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (false) {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    observerState.shouldConvert = true;\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (false) {\n        warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || {});\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    data: data,\n    props: props,\n    children: children,\n    parent: context,\n    listeners: data.on || {},\n    injections: resolveInject(Ctor.options.inject, context),\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    vnode.functionalOptions = Ctor.options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (false) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // keep listeners\n  var listeners = data.on;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    \"production\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (false\n  ) {\n    warn(\n      'Avoid using non-primitive value as key, ' +\n      'use string/number value instead.',\n      context\n    );\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && isUndef(child.ns)) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      props = extend(extend({}, bindObject), props);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && \"production\" !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(ours, existing) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n  /* istanbul ignore else */\n  if (false) {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', parentData && parentData.on, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, null, true);\n    defineReactive$$1(vm, '$listeners', parentData && parentData.on, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (false) {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n  Vue.prototype._g = bindObjectListeners;\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (false) {\n      startTag = \"vue-perf-init:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (false) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(((vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (false\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (false) {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp, Array];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, current, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        if (cachedNode !== current) {\n          pruneCacheEntry(cachedNode);\n        }\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.4.1';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"production\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\n// Some browsers do not support dynamically changing type for <input>\n// so they need to be treated as different nodes\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.elm = elm;\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    if (false) {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (false\n            ) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    false\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (modelRs.exp) + \", \" + (modelRs.idx) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (false) {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (false) {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  if (once$$1) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  var isComponentRoot = isDef(vnode.componentOptions);\n  var oldOn = isComponentRoot ? oldVnode.data.nativeOn : oldVnode.data.on;\n  var on = isComponentRoot ? vnode.data.nativeOn : vnode.data.on;\n  if (isUndef(oldOn) && isUndef(on)) {\n    return\n  }\n  on = on || {};\n  oldOn = oldOn || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers) && modifiers.number) {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likley wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"production\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1 && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1 && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$options._renderChildren;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (false) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (false\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\"/>\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (false) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (false) {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      if (shouldIgnoreFirstNewline(lastTag, html)) {\n        advance(1);\n      }\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (false) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (false\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"production\" !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (false) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (false) {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (false) {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (false) {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      \"production\" !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (false) {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (false) {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (false) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (!el.component && (\n          isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (false) {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (false) {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      false\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (false\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (false) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      \"production\" !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (false\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (false) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  return \"{key:\" + key + \",fn:function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el, state) || 'void 0'\n      : genElement(el, state)) + \"}}\"\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e('\" + (comment.text) + \"')\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (false) {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (false) {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (false) {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (false) {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    \"production\" !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (false) {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Vue$3);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(63)))\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\nvar core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(48)(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    __webpack_require__(87);\n\n    __webpack_require__(219);\n    __webpack_require__(220);\n\n    var barLayoutGrid = __webpack_require__(255);\n    var echarts = __webpack_require__(6);\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    __webpack_require__(83);\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var Model = __webpack_require__(14);\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(\n                    labelOption.textStyle || (labelOption.textStyle = {}),\n                    crossStyle.textStyle\n                );\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var formatUtil = __webpack_require__(15);\n    var classUtil = __webpack_require__(16);\n    var modelUtil = __webpack_require__(10);\n    var ComponentModel = __webpack_require__(18);\n    var colorPaletteMixin = __webpack_require__(88);\n    var env = __webpack_require__(13);\n    var layout = __webpack_require__(28);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(0);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(16);\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n/* 41 */,\n/* 42 */,\n/* 43 */,\n/* 44 */,\n/* 45 */\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var Element = __webpack_require__(106);\n    var BoundingRect = __webpack_require__(17);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(24);\n    var vec2 = __webpack_require__(12);\n    var bbox = __webpack_require__(486);\n    var BoundingRect = __webpack_require__(17);\n    var dpr = __webpack_require__(45).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports) {\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(55);\n    var completeDimensions = __webpack_require__(56);\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(10);\n    var CoordinateSystem = __webpack_require__(51);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var echarts = __webpack_require__(6);\n    var PRIORITY = echarts.PRIORITY;\n\n    __webpack_require__(232);\n    __webpack_require__(233);\n\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(274), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(256), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        __webpack_require__(268), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    __webpack_require__(83);\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(237);\n\n    __webpack_require__(245);\n\n    __webpack_require__(246);\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(6).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(6).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(14);\n    var DataDiffer = __webpack_require__(253);\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(10);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(63)))\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(10);\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(9);\n    var formatUtil = __webpack_require__(15);\n    var Scale = __webpack_require__(40);\n    var helper = __webpack_require__(89);\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         */\n        niceTicks: function (splitNumber, minInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval);\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval=false]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var clazz = __webpack_require__(16);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(46);\n    var componentUtil = __webpack_require__(58);\n    var clazzUtil = __webpack_require__(16);\n    var modelUtil = __webpack_require__(10);\n    var zrUtil = __webpack_require__(0);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n/* 60 */,\n/* 61 */,\n/* 62 */,\n/* 63 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var Style = __webpack_require__(115);\n\n    var Element = __webpack_require__(106);\n    var RectText = __webpack_require__(495);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n/* 67 */,\n/* 68 */\n/***/ (function(module, exports) {\n\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global    = __webpack_require__(49)\n  , core      = __webpack_require__(34)\n  , ctx       = __webpack_require__(197)\n  , hide      = __webpack_require__(201)\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(196);\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject       = __webpack_require__(194)\n  , IE8_DOM_DEFINE = __webpack_require__(202)\n  , toPrimitive    = __webpack_require__(214)\n  , dP             = Object.defineProperty;\n\nexports.f = __webpack_require__(35) ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports) {\n\n// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__(70)\n  , defined = __webpack_require__(68);\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(6);\n\n    __webpack_require__(224);\n    __webpack_require__(225);\n\n    echarts.registerPreprocessor(\n        __webpack_require__(228)\n    );\n\n    echarts.registerVisual(__webpack_require__(227));\n    echarts.registerLayout(__webpack_require__(226));\n\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var symbolUtil = __webpack_require__(90);\n    var graphic = __webpack_require__(5);\n    var numberUtil = __webpack_require__(9);\n    var labelHelper = __webpack_require__(231);\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n        var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n            cursorStyle = itemModel.getShallow('cursor');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        cursorStyle && symbolPath.attr('cursor', cursorStyle);\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        var valueDim = labelHelper.findLabelValueDim(data);\n        labelHelper.setTextToStyle(\n            data, idx, valueDim, elStyle, seriesModel, labelModel, color\n        );\n        labelHelper.setTextToStyle(\n            data, idx, valueDim, hoverItemStyle, seriesModel, hoverLabelModel, color\n        );\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(55);\n    var completeDimensions = __webpack_require__(56);\n    var WhiskerBoxDraw = __webpack_require__(230);\n    var zrUtil = __webpack_require__(0);\n\n    var seriesModelMixin = {\n\n        /**\n         * @private\n         * @type {string}\n         */\n        _baseAxisDim: null,\n\n        /**\n         * @override\n         */\n        getInitialData: function (option, ecModel) {\n            // When both types of xAxis and yAxis are 'value', layout is\n            // needed to be specified by user. Otherwise, layout can be\n            // judged by which axis is category.\n\n            var categories;\n\n            var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n            var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n            var addOrdinal;\n\n            // FIXME\n            // 考虑时间轴\n\n            if (xAxisType === 'category') {\n                option.layout = 'horizontal';\n                categories = xAxisModel.getCategories();\n                addOrdinal = true;\n            }\n            else if (yAxisType  === 'category') {\n                option.layout = 'vertical';\n                categories = yAxisModel.getCategories();\n                addOrdinal = true;\n            }\n            else {\n                option.layout = option.layout || 'horizontal';\n            }\n\n            var coordDims = ['x', 'y'];\n            var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n            var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n            var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n            var data = option.data;\n\n            addOrdinal && zrUtil.each(data, function (item, index) {\n                zrUtil.isArray(item) && item.unshift(index);\n            });\n\n            var dimensions = [{\n                name: baseAxisDim,\n                otherDims: {\n                    tooltip: false\n                },\n                dimsDef: ['base']\n            }, {\n                name: otherAxisDim,\n                dimsDef: this.defaultValueDimensions.slice()\n            }];\n\n            dimensions = completeDimensions(dimensions, data, {\n                encodeDef: this.get('encode'),\n                dimsDef: this.get('dimensions')\n            });\n\n            var list = new List(dimensions, this);\n            list.initData(data, categories ? categories.slice() : null);\n\n            return list;\n        },\n\n        /**\n         * If horizontal, base axis is x, otherwise y.\n         * @override\n         */\n        getBaseAxis: function () {\n            var dim = this._baseAxisDim;\n            return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n        }\n\n    };\n\n    var viewMixin = {\n\n        init: function () {\n            /**\n             * Old data.\n             * @private\n             * @type {module:echarts/chart/helper/WhiskerBoxDraw}\n             */\n            var whiskerBoxDraw = this._whiskerBoxDraw = new WhiskerBoxDraw(\n                this.getStyleUpdater()\n            );\n            this.group.add(whiskerBoxDraw.group);\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            this._whiskerBoxDraw.updateData(seriesModel.getData());\n        },\n\n        remove: function (ecModel) {\n            this._whiskerBoxDraw.remove();\n        }\n    };\n\n    module.exports = {\n        seriesModelMixin: seriesModelMixin,\n        viewMixin: viewMixin\n    };\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(10);\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(13);\n    var zrUtil = __webpack_require__(0);\n    var get = __webpack_require__(10).makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(5);\n    var textContain = __webpack_require__(23);\n    var formatUtil = __webpack_require__(15);\n    var matrix = __webpack_require__(25);\n    var axisHelper = __webpack_require__(22);\n    var AxisBuilder = __webpack_require__(80);\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var textStyleModel = labelModel.getModel('textStyle');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = textStyleModel.getFont();\n        var textRect = textContain.getBoundingRect(\n            text, font, labelPos.textAlign, labelPos.textBaseline\n        );\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            style: {\n                text: text,\n                textFont: font,\n                textFill: textStyleModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var formatUtil = __webpack_require__(15);\n    var graphic = __webpack_require__(5);\n    var Model = __webpack_require__(14);\n    var numberUtil = __webpack_require__(9);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(12);\n    var matrix = __webpack_require__(25);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function'\n                            ? textColor(\n                                // (1) In category axis with data zoom, tick is not the original\n                                // index of axis.data. So tick should not be exposed to user\n                                // in category axis.\n                                // (2) Compatible with previous version, which always returns labelStr.\n                                // But in interval scale labelStr is like '223,445', which maked\n                                // user repalce ','. So we modify it to return original val but remain\n                                // it as 'string' to avoid error in replacing.\n                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                                index\n                            )\n                            : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.textVerticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisPointerModelHelper = __webpack_require__(37);\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = __webpack_require__(6).extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(5);\n    var zrUtil = __webpack_require__(0);\n    var echarts = __webpack_require__(6);\n\n    __webpack_require__(87);\n\n    __webpack_require__(236);\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(9);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(0);\n    var axisHelper = __webpack_require__(22);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getModel('textStyle').getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var axisHelper = __webpack_require__(22);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var ComponentModel = __webpack_require__(18);\n    var zrUtil = __webpack_require__(0);\n    var axisModelCreator = __webpack_require__(248);\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(85));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = __webpack_require__(28);\n    var axisHelper = __webpack_require__(22);\n\n    var zrUtil = __webpack_require__(0);\n    var Cartesian2D = __webpack_require__(251);\n    var Axis2D = __webpack_require__(249);\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    __webpack_require__(252);\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (\n                        axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis)\n                    )) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (!ignoreContainLabel && gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            // dataSampling requires axis extent, so resize\n            // should be performed in create stage.\n            grid.resize(gridModel, api, true);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    __webpack_require__(51).register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(16);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * For testable.\n */\n\n\n    var numberUtil = __webpack_require__(9);\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(5);\n    var BoundingRect = __webpack_require__(17);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n/* 92 */,\n/* 93 */,\n/* 94 */,\n/* 95 */,\n/* 96 */,\n/* 97 */,\n/* 98 */,\n/* 99 */,\n/* 100 */,\n/* 101 */,\n/* 102 */,\n/* 103 */,\n/* 104 */,\n/* 105 */,\n/* 106 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(111);\n    var Eventful = __webpack_require__(31);\n    var Transformable = __webpack_require__(117);\n    var Animatable = __webpack_require__(505);\n    var zrUtil = __webpack_require__(0);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(477);\n    var color = __webpack_require__(32);\n    var util = __webpack_require__(0);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(45);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(65);\n    var BoundingRect = __webpack_require__(17);\n    var zrUtil = __webpack_require__(0);\n\n    var LRU = __webpack_require__(110);\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textPositionRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(494);\n    var smoothBezier = __webpack_require__(493);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(25);\n    var vector = __webpack_require__(12);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n/* 118 */,\n/* 119 */,\n/* 120 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Url */\n/* unused harmony export Http */\n/* unused harmony export Resource */\n/*!\n * vue-resource v1.3.4\n * https://github.com/pagekit/vue-resource\n * Released under the MIT License.\n */\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING  = 2;\n\nfunction Promise$1(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise$1.reject = function (r) {\n    return new Promise$1(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise$1.resolve = function (x) {\n    return new Promise$1(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise$1.all = function all(iterable) {\n    return new Promise$1(function (resolve, reject) {\n        var count = 0, result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$1.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise$1.race = function race(iterable) {\n    return new Promise$1(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$1.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p$1 = Promise$1.prototype;\n\np$1.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np$1.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np$1.notify = function notify() {\n    var promise = this;\n\n    nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np$1.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise$1(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np$1.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\n/**\n * Promise adapter.\n */\n\nif (typeof Promise === 'undefined') {\n    window.Promise = Promise$1;\n}\n\nfunction PromiseObj(executor, context) {\n\n    if (executor instanceof Promise) {\n        this.promise = executor;\n    } else {\n        this.promise = new Promise(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromiseObj.all = function (iterable, context) {\n    return new PromiseObj(Promise.all(iterable), context);\n};\n\nPromiseObj.resolve = function (value, context) {\n    return new PromiseObj(Promise.resolve(value), context);\n};\n\nPromiseObj.reject = function (reason, context) {\n    return new PromiseObj(Promise.reject(reason), context);\n};\n\nPromiseObj.race = function (iterable, context) {\n    return new PromiseObj(Promise.race(iterable), context);\n};\n\nvar p = PromiseObj.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new PromiseObj(this.promise.then(fulfilled, rejected), this.context);\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new PromiseObj(this.promise.catch(rejected), this.context);\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n            callback.call(this);\n            return value;\n        }, function (reason) {\n            callback.call(this);\n            return Promise.reject(reason);\n        }\n    );\n};\n\n/**\n * Utility functions.\n */\n\nvar ref = {};\nvar hasOwnProperty = ref.hasOwnProperty;\n\nvar ref$1 = [];\nvar slice = ref$1.slice;\nvar debug = false;\nvar ntick;\n\nvar inBrowser = typeof window !== 'undefined';\n\nvar Util = function (ref) {\n    var config = ref.config;\n    var nextTick = ref.nextTick;\n\n    ntick = nextTick;\n    debug = config.debug || !config.silent;\n};\n\nfunction warn(msg) {\n    if (typeof console !== 'undefined' && debug) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n}\n\nfunction error(msg) {\n    if (typeof console !== 'undefined') {\n        console.error(msg);\n    }\n}\n\nfunction nextTick(cb, ctx) {\n    return ntick(cb, ctx);\n}\n\nfunction trim(str) {\n    return str ? str.replace(/^\\s*|\\s*$/g, '') : '';\n}\n\nfunction trimEnd(str, chars) {\n\n    if (str && chars === undefined) {\n        return str.replace(/\\s+$/, '');\n    }\n\n    if (!str || !chars) {\n        return str;\n    }\n\n    return str.replace(new RegExp((\"[\" + chars + \"]+$\")), '');\n}\n\nfunction toLower(str) {\n    return str ? str.toLowerCase() : '';\n}\n\nfunction toUpper(str) {\n    return str ? str.toUpperCase() : '';\n}\n\nvar isArray = Array.isArray;\n\nfunction isString(val) {\n    return typeof val === 'string';\n}\n\n\n\nfunction isFunction(val) {\n    return typeof val === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n}\n\nfunction isBlob(obj) {\n    return typeof Blob !== 'undefined' && obj instanceof Blob;\n}\n\nfunction isFormData(obj) {\n    return typeof FormData !== 'undefined' && obj instanceof FormData;\n}\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = PromiseObj.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\nfunction options(fn, obj, opts) {\n\n    opts = opts || {};\n\n    if (isFunction(opts)) {\n        opts = opts.call(obj);\n    }\n\n    return merge(fn.bind({$vm: obj, $options: opts}), fn, {$options: opts});\n}\n\nfunction each(obj, iterator) {\n\n    var i, key;\n\n    if (isArray(obj)) {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (isObject(obj)) {\n        for (key in obj) {\n            if (hasOwnProperty.call(obj, key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n}\n\nvar assign = Object.assign || _assign;\n\nfunction merge(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source, true);\n    });\n\n    return target;\n}\n\nfunction defaults(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n\n        for (var key in source) {\n            if (target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n\n    });\n\n    return target;\n}\n\nfunction _assign(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source);\n    });\n\n    return target;\n}\n\nfunction _merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (isArray(source[key]) && !isArray(target[key])) {\n                target[key] = [];\n            }\n            _merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\n/**\n * Root Prefix Transform.\n */\n\nvar root = function (options$$1, next) {\n\n    var url = next(options$$1);\n\n    if (isString(options$$1.root) && !/^(https?:)?\\//.test(url)) {\n        url = trimEnd(options$$1.root, '/') + '/' + url;\n    }\n\n    return url;\n};\n\n/**\n * Query Parameter Transform.\n */\n\nvar query = function (options$$1, next) {\n\n    var urlParams = Object.keys(Url.options.params), query = {}, url = next(options$$1);\n\n    each(options$$1.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = Url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n};\n\n/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nfunction expand(url, params, variables) {\n\n    var tmpl = parse(url), expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n}\n\nfunction parse(template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'], variables = [];\n\n    return {\n        vars: variables,\n        expand: function expand(context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null, values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n\n                } else {\n                    return encodeReserved(literal);\n                }\n            });\n        }\n    };\n}\n\nfunction getValues(context, operator, key, modifier) {\n\n    var value = context[key], result = [];\n\n    if (isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n\n                if (isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n}\n\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n}\n\nfunction encodeValue(operator, value, key) {\n\n    value = (operator === '+' || operator === '#') ? encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n}\n\nfunction encodeReserved(str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n}\n\n/**\n * URL Template (RFC 6570) Transform.\n */\n\nvar template = function (options) {\n\n    var variables = [], url = expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n};\n\n/**\n * Service for URL templating.\n */\n\nfunction Url(url, params) {\n\n    var self = this || {}, options$$1 = url, transform;\n\n    if (isString(url)) {\n        options$$1 = {url: url, params: params};\n    }\n\n    options$$1 = merge({}, Url.options, self.$options, options$$1);\n\n    Url.transforms.forEach(function (handler) {\n\n        if (isString(handler)) {\n            handler = Url.transform[handler];\n        }\n\n        if (isFunction(handler)) {\n            transform = factory(handler, transform, self.$vm);\n        }\n\n    });\n\n    return transform(options$$1);\n}\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transform = {template: template, query: query, root: root};\nUrl.transforms = ['template', 'query', 'root'];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [], escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    var el = document.createElement('a');\n\n    if (document.documentMode) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options$$1) {\n        return handler.call(vm, options$$1, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = isArray(obj), plain = isPlainObject(obj), hash;\n\n    each(obj, function (value, key) {\n\n        hash = isObject(value) || isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\n/**\n * XDomain client (Internet Explorer).\n */\n\nvar xdrClient = function (request) {\n    return new PromiseObj(function (resolve) {\n\n        var xdr = new XDomainRequest(), handler = function (ref) {\n            var type = ref.type;\n\n\n            var status = 0;\n\n            if (type === 'load') {\n                status = 200;\n            } else if (type === 'error') {\n                status = 500;\n            }\n\n            resolve(request.respondWith(xdr.responseText, {status: status}));\n        };\n\n        request.abort = function () { return xdr.abort(); };\n\n        xdr.open(request.method, request.getUrl());\n\n        if (request.timeout) {\n            xdr.timeout = request.timeout;\n        }\n\n        xdr.onload = handler;\n        xdr.onabort = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = handler;\n        xdr.onprogress = function () {};\n        xdr.send(request.getBody());\n    });\n};\n\n/**\n * CORS Interceptor.\n */\n\nvar SUPPORTS_CORS = inBrowser && 'withCredentials' in new XMLHttpRequest();\n\nvar cors = function (request, next) {\n\n    if (inBrowser) {\n\n        var orgUrl = Url.parse(location.href);\n        var reqUrl = Url.parse(request.getUrl());\n\n        if (reqUrl.protocol !== orgUrl.protocol || reqUrl.host !== orgUrl.host) {\n\n            request.crossOrigin = true;\n            request.emulateHTTP = false;\n\n            if (!SUPPORTS_CORS) {\n                request.client = xdrClient;\n            }\n        }\n    }\n\n    next();\n};\n\n/**\n * Form data Interceptor.\n */\n\nvar form = function (request, next) {\n\n    if (isFormData(request.body)) {\n\n        request.headers.delete('Content-Type');\n\n    } else if (isObject(request.body) && request.emulateJSON) {\n\n        request.body = Url.params(request.body);\n        request.headers.set('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    next();\n};\n\n/**\n * JSON Interceptor.\n */\n\nvar json = function (request, next) {\n\n    var type = request.headers.get('Content-Type') || '';\n\n    if (isObject(request.body) && type.indexOf('application/json') === 0) {\n        request.body = JSON.stringify(request.body);\n    }\n\n    next(function (response) {\n\n        return response.bodyText ? when(response.text(), function (text) {\n\n            type = response.headers.get('Content-Type') || '';\n\n            if (type.indexOf('application/json') === 0 || isJson(text)) {\n\n                try {\n                    response.body = JSON.parse(text);\n                } catch (e) {\n                    response.body = null;\n                }\n\n            } else {\n                response.body = text;\n            }\n\n            return response;\n\n        }) : response;\n\n    });\n};\n\nfunction isJson(str) {\n\n    var start = str.match(/^\\[|^\\{(?!\\{)/), end = {'[': /]$/, '{': /}$/};\n\n    return start && end[start[0]].test(str);\n}\n\n/**\n * JSONP client (Browser).\n */\n\nvar jsonpClient = function (request) {\n    return new PromiseObj(function (resolve) {\n\n        var name = request.jsonp || 'callback', callback = request.jsonpCallback || '_jsonp' + Math.random().toString(36).substr(2), body = null, handler, script;\n\n        handler = function (ref) {\n            var type = ref.type;\n\n\n            var status = 0;\n\n            if (type === 'load' && body !== null) {\n                status = 200;\n            } else if (type === 'error') {\n                status = 500;\n            }\n\n            if (status && window[callback]) {\n                delete window[callback];\n                document.body.removeChild(script);\n            }\n\n            resolve(request.respondWith(body, {status: status}));\n        };\n\n        window[callback] = function (result) {\n            body = JSON.stringify(result);\n        };\n\n        request.abort = function () {\n            handler({type: 'abort'});\n        };\n\n        request.params[name] = callback;\n\n        if (request.timeout) {\n            setTimeout(request.abort, request.timeout);\n        }\n\n        script = document.createElement('script');\n        script.src = request.getUrl();\n        script.type = 'text/javascript';\n        script.async = true;\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n};\n\n/**\n * JSONP Interceptor.\n */\n\nvar jsonp = function (request, next) {\n\n    if (request.method == 'JSONP') {\n        request.client = jsonpClient;\n    }\n\n    next();\n};\n\n/**\n * Before Interceptor.\n */\n\nvar before = function (request, next) {\n\n    if (isFunction(request.before)) {\n        request.before.call(this, request);\n    }\n\n    next();\n};\n\n/**\n * HTTP method override Interceptor.\n */\n\nvar method = function (request, next) {\n\n    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n        request.headers.set('X-HTTP-Method-Override', request.method);\n        request.method = 'POST';\n    }\n\n    next();\n};\n\n/**\n * Header Interceptor.\n */\n\nvar header = function (request, next) {\n\n    var headers = assign({}, Http.headers.common,\n        !request.crossOrigin ? Http.headers.custom : {},\n        Http.headers[toLower(request.method)]\n    );\n\n    each(headers, function (value, name) {\n        if (!request.headers.has(name)) {\n            request.headers.set(name, value);\n        }\n    });\n\n    next();\n};\n\n/**\n * XMLHttp client (Browser).\n */\n\nvar xhrClient = function (request) {\n    return new PromiseObj(function (resolve) {\n\n        var xhr = new XMLHttpRequest(), handler = function (event) {\n\n            var response = request.respondWith(\n                'response' in xhr ? xhr.response : xhr.responseText, {\n                    status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n                    statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText)\n                }\n            );\n\n            each(trim(xhr.getAllResponseHeaders()).split('\\n'), function (row) {\n                response.headers.append(row.slice(0, row.indexOf(':')), row.slice(row.indexOf(':') + 1));\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () { return xhr.abort(); };\n\n        if (request.progress) {\n            if (request.method === 'GET') {\n                xhr.addEventListener('progress', request.progress);\n            } else if (/^(POST|PUT)$/i.test(request.method)) {\n                xhr.upload.addEventListener('progress', request.progress);\n            }\n        }\n\n        xhr.open(request.method, request.getUrl(), true);\n\n        if (request.timeout) {\n            xhr.timeout = request.timeout;\n        }\n\n        if (request.responseType && 'responseType' in xhr) {\n            xhr.responseType = request.responseType;\n        }\n\n        if (request.withCredentials || request.credentials) {\n            xhr.withCredentials = true;\n        }\n\n        if (!request.crossOrigin) {\n            request.headers.set('X-Requested-With', 'XMLHttpRequest');\n        }\n\n        request.headers.forEach(function (value, name) {\n            xhr.setRequestHeader(name, value);\n        });\n\n        xhr.onload = handler;\n        xhr.onabort = handler;\n        xhr.onerror = handler;\n        xhr.ontimeout = handler;\n        xhr.send(request.getBody());\n    });\n};\n\n/**\n * Http client (Node).\n */\n\nvar nodeClient = function (request) {\n\n    var client = __webpack_require__(510);\n\n    return new PromiseObj(function (resolve) {\n\n        var url = request.getUrl();\n        var body = request.getBody();\n        var method = request.method;\n        var headers = {}, handler;\n\n        request.headers.forEach(function (value, name) {\n            headers[name] = value;\n        });\n\n        client(url, {body: body, method: method, headers: headers}).then(handler = function (resp) {\n\n            var response = request.respondWith(resp.body, {\n                    status: resp.statusCode,\n                    statusText: trim(resp.statusMessage)\n                }\n            );\n\n            each(resp.headers, function (value, name) {\n                response.headers.set(name, value);\n            });\n\n            resolve(response);\n\n        }, function (error$$1) { return handler(error$$1.response); });\n    });\n};\n\n/**\n * Base client.\n */\n\nvar Client = function (context) {\n\n    var reqHandlers = [sendRequest], resHandlers = [], handler;\n\n    if (!isObject(context)) {\n        context = null;\n    }\n\n    function Client(request) {\n        return new PromiseObj(function (resolve, reject) {\n\n            function exec() {\n\n                handler = reqHandlers.pop();\n\n                if (isFunction(handler)) {\n                    handler.call(context, request, next);\n                } else {\n                    warn((\"Invalid interceptor of type \" + (typeof handler) + \", must be a function\"));\n                    next();\n                }\n            }\n\n            function next(response) {\n\n                if (isFunction(response)) {\n\n                    resHandlers.unshift(response);\n\n                } else if (isObject(response)) {\n\n                    resHandlers.forEach(function (handler) {\n                        response = when(response, function (response) {\n                            return handler.call(context, response) || response;\n                        }, reject);\n                    });\n\n                    when(response, resolve, reject);\n\n                    return;\n                }\n\n                exec();\n            }\n\n            exec();\n\n        }, context);\n    }\n\n    Client.use = function (handler) {\n        reqHandlers.push(handler);\n    };\n\n    return Client;\n};\n\nfunction sendRequest(request, resolve) {\n\n    var client = request.client || (inBrowser ? xhrClient : nodeClient);\n\n    resolve(client(request));\n}\n\n/**\n * HTTP Headers.\n */\n\nvar Headers = function Headers(headers) {\n    var this$1 = this;\n\n\n    this.map = {};\n\n    each(headers, function (value, name) { return this$1.append(name, value); });\n};\n\nHeaders.prototype.has = function has (name) {\n    return getName(this.map, name) !== null;\n};\n\nHeaders.prototype.get = function get (name) {\n\n    var list = this.map[getName(this.map, name)];\n\n    return list ? list.join() : null;\n};\n\nHeaders.prototype.getAll = function getAll (name) {\n    return this.map[getName(this.map, name)] || [];\n};\n\nHeaders.prototype.set = function set (name, value) {\n    this.map[normalizeName(getName(this.map, name) || name)] = [trim(value)];\n};\n\nHeaders.prototype.append = function append (name, value){\n\n    var list = this.map[getName(this.map, name)];\n\n    if (list) {\n        list.push(trim(value));\n    } else {\n        this.set(name, value);\n    }\n};\n\nHeaders.prototype.delete = function delete$1 (name){\n    delete this.map[getName(this.map, name)];\n};\n\nHeaders.prototype.deleteAll = function deleteAll (){\n    this.map = {};\n};\n\nHeaders.prototype.forEach = function forEach (callback, thisArg) {\n        var this$1 = this;\n\n    each(this.map, function (list, name) {\n        each(list, function (value) { return callback.call(thisArg, value, name, this$1); });\n    });\n};\n\nfunction getName(map, name) {\n    return Object.keys(map).reduce(function (prev, curr) {\n        return toLower(name) === toLower(curr) ? curr : prev;\n    }, null);\n}\n\nfunction normalizeName(name) {\n\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n        throw new TypeError('Invalid character in header field name');\n    }\n\n    return trim(name);\n}\n\n/**\n * HTTP Response.\n */\n\nvar Response = function Response(body, ref) {\n    var url = ref.url;\n    var headers = ref.headers;\n    var status = ref.status;\n    var statusText = ref.statusText;\n\n\n    this.url = url;\n    this.ok = status >= 200 && status < 300;\n    this.status = status || 0;\n    this.statusText = statusText || '';\n    this.headers = new Headers(headers);\n    this.body = body;\n\n    if (isString(body)) {\n\n        this.bodyText = body;\n\n    } else if (isBlob(body)) {\n\n        this.bodyBlob = body;\n\n        if (isBlobText(body)) {\n            this.bodyText = blobText(body);\n        }\n    }\n};\n\nResponse.prototype.blob = function blob () {\n    return when(this.bodyBlob);\n};\n\nResponse.prototype.text = function text () {\n    return when(this.bodyText);\n};\n\nResponse.prototype.json = function json () {\n    return when(this.text(), function (text) { return JSON.parse(text); });\n};\n\nObject.defineProperty(Response.prototype, 'data', {\n\n    get: function get() {\n        return this.body;\n    },\n\n    set: function set(body) {\n        this.body = body;\n    }\n\n});\n\nfunction blobText(body) {\n    return new PromiseObj(function (resolve) {\n\n        var reader = new FileReader();\n\n        reader.readAsText(body);\n        reader.onload = function () {\n            resolve(reader.result);\n        };\n\n    });\n}\n\nfunction isBlobText(body) {\n    return body.type.indexOf('text') === 0 || body.type.indexOf('json') !== -1;\n}\n\n/**\n * HTTP Request.\n */\n\nvar Request = function Request(options$$1) {\n\n    this.body = null;\n    this.params = {};\n\n    assign(this, options$$1, {\n        method: toUpper(options$$1.method || 'GET')\n    });\n\n    if (!(this.headers instanceof Headers)) {\n        this.headers = new Headers(this.headers);\n    }\n};\n\nRequest.prototype.getUrl = function getUrl (){\n    return Url(this);\n};\n\nRequest.prototype.getBody = function getBody (){\n    return this.body;\n};\n\nRequest.prototype.respondWith = function respondWith (body, options$$1) {\n    return new Response(body, assign(options$$1 || {}, {url: this.getUrl()}));\n};\n\n/**\n * Service for sending network requests.\n */\n\nvar COMMON_HEADERS = {'Accept': 'application/json, text/plain, */*'};\nvar JSON_CONTENT_TYPE = {'Content-Type': 'application/json;charset=utf-8'};\n\nfunction Http(options$$1) {\n\n    var self = this || {}, client = Client(self.$vm);\n\n    defaults(options$$1 || {}, self.$options, Http.options);\n\n    Http.interceptors.forEach(function (handler) {\n\n        if (isString(handler)) {\n            handler = Http.interceptor[handler];\n        }\n\n        if (isFunction(handler)) {\n            client.use(handler);\n        }\n\n    });\n\n    return client(new Request(options$$1)).then(function (response) {\n\n        return response.ok ? response : PromiseObj.reject(response);\n\n    }, function (response) {\n\n        if (response instanceof Error) {\n            error(response);\n        }\n\n        return PromiseObj.reject(response);\n    });\n}\n\nHttp.options = {};\n\nHttp.headers = {\n    put: JSON_CONTENT_TYPE,\n    post: JSON_CONTENT_TYPE,\n    patch: JSON_CONTENT_TYPE,\n    delete: JSON_CONTENT_TYPE,\n    common: COMMON_HEADERS,\n    custom: {}\n};\n\nHttp.interceptor = {before: before, method: method, jsonp: jsonp, json: json, form: form, header: header, cors: cors};\nHttp.interceptors = ['before', 'method', 'jsonp', 'json', 'form', 'header', 'cors'];\n\n['get', 'delete', 'head', 'jsonp'].forEach(function (method$$1) {\n\n    Http[method$$1] = function (url, options$$1) {\n        return this(assign(options$$1 || {}, {url: url, method: method$$1}));\n    };\n\n});\n\n['post', 'put', 'patch'].forEach(function (method$$1) {\n\n    Http[method$$1] = function (url, body, options$$1) {\n        return this(assign(options$$1 || {}, {url: url, method: method$$1, body: body}));\n    };\n\n});\n\n/**\n * Service for interacting with RESTful services.\n */\n\nfunction Resource(url, params, actions, options$$1) {\n\n    var self = this || {}, resource = {};\n\n    actions = assign({},\n        Resource.actions,\n        actions\n    );\n\n    each(actions, function (action, name) {\n\n        action = merge({url: url, params: assign({}, params)}, options$$1, action);\n\n        resource[name] = function () {\n            return (self.$http || Http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options$$1 = assign({}, action), params = {}, body;\n\n    switch (args.length) {\n\n        case 2:\n\n            params = args[0];\n            body = args[1];\n\n            break;\n\n        case 1:\n\n            if (/^(POST|PUT|PATCH)$/i.test(options$$1.method)) {\n                body = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 2 arguments [params, body], got ' + args.length + ' arguments';\n    }\n\n    options$$1.body = body;\n    options$$1.params = assign({}, options$$1.params, params);\n\n    return options$$1;\n}\n\nResource.actions = {\n\n    get: {method: 'GET'},\n    save: {method: 'POST'},\n    query: {method: 'GET'},\n    update: {method: 'PUT'},\n    remove: {method: 'DELETE'},\n    delete: {method: 'DELETE'}\n\n};\n\n/**\n * Install plugin.\n */\n\nfunction plugin(Vue) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    Util(Vue);\n\n    Vue.url = Url;\n    Vue.http = Http;\n    Vue.resource = Resource;\n    Vue.Promise = PromiseObj;\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function get() {\n                return options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function get() {\n                return options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function get() {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function get() {\n                var this$1 = this;\n\n                return function (executor) { return new Vue.Promise(executor, this$1); };\n            }\n        }\n\n    });\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (plugin);\n\n\n\n/***/ }),\n/* 121 */,\n/* 122 */,\n/* 123 */,\n/* 124 */,\n/* 125 */,\n/* 126 */,\n/* 127 */,\n/* 128 */,\n/* 129 */,\n/* 130 */,\n/* 131 */,\n/* 132 */,\n/* 133 */,\n/* 134 */,\n/* 135 */,\n/* 136 */,\n/* 137 */,\n/* 138 */,\n/* 139 */,\n/* 140 */,\n/* 141 */,\n/* 142 */,\n/* 143 */,\n/* 144 */,\n/* 145 */,\n/* 146 */,\n/* 147 */,\n/* 148 */,\n/* 149 */,\n/* 150 */,\n/* 151 */,\n/* 152 */,\n/* 153 */,\n/* 154 */,\n/* 155 */,\n/* 156 */,\n/* 157 */,\n/* 158 */,\n/* 159 */,\n/* 160 */,\n/* 161 */,\n/* 162 */,\n/* 163 */,\n/* 164 */,\n/* 165 */,\n/* 166 */,\n/* 167 */,\n/* 168 */,\n/* 169 */,\n/* 170 */,\n/* 171 */,\n/* 172 */,\n/* 173 */,\n/* 174 */,\n/* 175 */,\n/* 176 */,\n/* 177 */,\n/* 178 */,\n/* 179 */,\n/* 180 */,\n/* 181 */,\n/* 182 */,\n/* 183 */,\n/* 184 */,\n/* 185 */,\n/* 186 */,\n/* 187 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(191), __esModule: true };\n\n/***/ }),\n/* 188 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(192), __esModule: true };\n\n/***/ }),\n/* 189 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _defineProperty = __webpack_require__(188);\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\n/***/ }),\n/* 190 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar core  = __webpack_require__(34)\n  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\nmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n/***/ }),\n/* 191 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(216);\nmodule.exports = __webpack_require__(34).Object.assign;\n\n/***/ }),\n/* 192 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(217);\nvar $Object = __webpack_require__(34).Object;\nmodule.exports = function defineProperty(it, key, desc){\n  return $Object.defineProperty(it, key, desc);\n};\n\n/***/ }),\n/* 193 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n/***/ }),\n/* 194 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(50);\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n/***/ }),\n/* 195 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = __webpack_require__(73)\n  , toLength  = __webpack_require__(212)\n  , toIndex   = __webpack_require__(211);\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n/***/ }),\n/* 196 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n\n/***/ }),\n/* 197 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// optional / simple context binding\nvar aFunction = __webpack_require__(193);\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n/***/ }),\n/* 198 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(50)\n  , document = __webpack_require__(49).document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n\n/***/ }),\n/* 199 */\n/***/ (function(module, exports) {\n\n// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n/***/ }),\n/* 200 */\n/***/ (function(module, exports) {\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n\n/***/ }),\n/* 201 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP         = __webpack_require__(71)\n  , createDesc = __webpack_require__(208);\nmodule.exports = __webpack_require__(35) ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n/***/ }),\n/* 202 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = !__webpack_require__(35) && !__webpack_require__(48)(function(){\n  return Object.defineProperty(__webpack_require__(198)('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n/***/ }),\n/* 203 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys  = __webpack_require__(206)\n  , gOPS     = __webpack_require__(204)\n  , pIE      = __webpack_require__(207)\n  , toObject = __webpack_require__(213)\n  , IObject  = __webpack_require__(70)\n  , $assign  = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || __webpack_require__(48)(function(){\n  var A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getSymbols = gOPS.f\n    , isEnum     = pIE.f;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  } return T;\n} : $assign;\n\n/***/ }),\n/* 204 */\n/***/ (function(module, exports) {\n\nexports.f = Object.getOwnPropertySymbols;\n\n/***/ }),\n/* 205 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar has          = __webpack_require__(200)\n  , toIObject    = __webpack_require__(73)\n  , arrayIndexOf = __webpack_require__(195)(false)\n  , IE_PROTO     = __webpack_require__(209)('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n/***/ }),\n/* 206 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = __webpack_require__(205)\n  , enumBugKeys = __webpack_require__(199);\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};\n\n/***/ }),\n/* 207 */\n/***/ (function(module, exports) {\n\nexports.f = {}.propertyIsEnumerable;\n\n/***/ }),\n/* 208 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n/***/ }),\n/* 209 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar shared = __webpack_require__(210)('keys')\n  , uid    = __webpack_require__(215);\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};\n\n/***/ }),\n/* 210 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(49)\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n\n/***/ }),\n/* 211 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toInteger = __webpack_require__(72)\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n/***/ }),\n/* 212 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.15 ToLength\nvar toInteger = __webpack_require__(72)\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n/***/ }),\n/* 213 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.13 ToObject(argument)\nvar defined = __webpack_require__(68);\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n/***/ }),\n/* 214 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(50);\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n/***/ }),\n/* 215 */\n/***/ (function(module, exports) {\n\nvar id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n/***/ }),\n/* 216 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.3.1 Object.assign(target, source)\nvar $export = __webpack_require__(69);\n\n$export($export.S + $export.F, 'Object', {assign: __webpack_require__(203)});\n\n/***/ }),\n/* 217 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $export = __webpack_require__(69);\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !__webpack_require__(35), 'Object', {defineProperty: __webpack_require__(71).f});\n\n/***/ }),\n/* 218 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n/* 219 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(221).extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n/***/ }),\n/* 220 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(5);\n    var helper = __webpack_require__(223);\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(__webpack_require__(14).prototype, __webpack_require__(222));\n\n    var BarView = __webpack_require__(6).extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d'\n                || coordinateSystemType === 'polar'\n            ) {\n                this._render(seriesModel, ecModel, api);\n            }\n            else if (__DEV__) {\n                console.warn('Only cartesian2d and polar supported for bar.');\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _render: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var coord = seriesModel.coordinateSystem;\n            var baseAxis = coord.getBaseAxis();\n            var isHorizontalOrRadial;\n\n            if (coord.type === 'cartesian2d') {\n                isHorizontalOrRadial = baseAxis.isHorizontal();\n            }\n            else if (coord.type === 'polar') {\n                isHorizontalOrRadial = baseAxis.dim === 'angle';\n            }\n\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getLayout[coord.type](data, dataIndex, itemModel);\n                    var el = elementCreator[coord.type](\n                        data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel\n                    );\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, dataIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = elementCreator[coord.type](\n                            data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true\n                        );\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, newIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    if (coord.type === 'cartesian2d') {\n                        el && removeRect(dataIndex, animationModel, el);\n                    }\n                    else {\n                        el && removeSector(dataIndex, animationModel, el);\n                    }\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        if (el.type === 'sector') {\n                            removeSector(el.dataIndex, ecModel, el);\n                        }\n                        else {\n                            removeRect(el.dataIndex, ecModel, el);\n                        }\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    var elementCreator = {\n\n        cartesian2d: function (\n            data, dataIndex, itemModel, layout, isHorizontal,\n            animationModel, isUpdate\n        ) {\n            var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var rectShape = rect.shape;\n                var animateProperty = isHorizontal ? 'height' : 'width';\n                var animateTarget = {};\n                rectShape[animateProperty] = 0;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return rect;\n        },\n\n        polar: function (\n            data, dataIndex, itemModel, layout, isRadial,\n            animationModel, isUpdate\n        ) {\n            var sector = new graphic.Sector({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var sectorShape = sector.shape;\n                var animateProperty = isRadial ? 'r' : 'endAngle';\n                var animateTarget = {};\n                sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return sector;\n        }\n    };\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function removeSector(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                r: el.shape.r0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    var getLayout = {\n        cartesian2d: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            var fixedLineWidth = getLineWidth(itemModel, layout);\n\n            // fix layout with lineWidth\n            var signX = layout.width > 0 ? 1 : -1;\n            var signY = layout.height > 0 ? 1 : -1;\n            return {\n                x: layout.x + signX * fixedLineWidth / 2,\n                y: layout.y + signY * fixedLineWidth / 2,\n                width: layout.width - signX * fixedLineWidth,\n                height: layout.height - signY * fixedLineWidth\n            };\n        },\n\n        polar: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            return {\n                cx: layout.cx,\n                cy: layout.cy,\n                r0: layout.r0,\n                r: layout.r,\n                startAngle: layout.startAngle,\n                endAngle: layout.endAngle\n            };\n        }\n    };\n\n    function updateStyle(\n        el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar\n    ) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        if (!isPolar) {\n            el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n        }\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var cursorStyle = itemModel.getShallow('cursor');\n        cursorStyle && el.attr('cursor', cursorStyle);\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        if (!isPolar) {\n            helper.setLabel(\n                el.style, hoverStyle, itemModel, color,\n                seriesModel, dataIndex, labelPositionOutside\n            );\n        }\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n/***/ }),\n/* 221 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var SeriesModel = __webpack_require__(38);\n    var createListFromArray = __webpack_require__(52);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n            // 最小角度为0，仅对极坐标系下的柱状图有效\n            barMinAngle: 0,\n            // cursor: null,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                normal: {\n                    // color: '各异'\n                },\n                emphasis: {}\n            }\n        }\n    });\n\n\n/***/ }),\n/* 222 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n\n    var getBarItemStyle = __webpack_require__(39)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n/***/ }),\n/* 223 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(5);\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        if (labelModel.get('show')) {\n            setLabel(\n                normalStyle, labelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            normalStyle.text = '';\n        }\n\n        if (hoverLabelModel.get('show')) {\n            setLabel(\n                hoverStyle, hoverLabelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            hoverStyle.text = '';\n        }\n    };\n\n    function setLabel(style, model, color, labelText, labelPositionOutside) {\n        graphic.setText(style, model, color);\n        style.text = labelText;\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 224 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var SeriesModel = __webpack_require__(38);\n    var whiskerBoxCommon = __webpack_require__(76);\n\n    var CandlestickSeries = SeriesModel.extend({\n\n        type: 'series.candlestick',\n\n        dependencies: ['xAxis', 'yAxis', 'grid'],\n\n        /**\n         * @readOnly\n         */\n        defaultValueDimensions: ['open', 'close', 'lowest', 'highest'],\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: null,\n\n        /**\n         * @override\n         */\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            layout: null, // 'horizontal' or 'vertical'\n\n            itemStyle: {\n                normal: {\n                    color: '#c23531', // 阳线 positive\n                    color0: '#314656', // 阴线 negative     '#c23531', '#314656'\n                    borderWidth: 1,\n                    // FIXME\n                    // ec2中使用的是lineStyle.color 和 lineStyle.color0\n                    borderColor: '#c23531',\n                    borderColor0: '#314656'\n                },\n                emphasis: {\n                    borderWidth: 2\n                }\n            },\n\n            barMaxWidth: null,\n            barMinWidth: null,\n            barWidth: null,\n\n            animationUpdate: false,\n            animationEasing: 'linear',\n            animationDuration: 300\n        },\n\n        /**\n         * Get dimension for shadow in dataZoom\n         * @return {string} dimension name\n         */\n        getShadowDim: function () {\n            return 'open';\n        },\n\n        brushSelector: function (dataIndex, data, selectors) {\n            var itemLayout = data.getItemLayout(dataIndex);\n            return selectors.rect(itemLayout.brushRect);\n        }\n\n    });\n\n    zrUtil.mixin(CandlestickSeries, whiskerBoxCommon.seriesModelMixin, true);\n\n    module.exports = CandlestickSeries;\n\n\n\n/***/ }),\n/* 225 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var ChartView = __webpack_require__(59);\n    var graphic = __webpack_require__(5);\n    var whiskerBoxCommon = __webpack_require__(76);\n\n    var CandlestickView = ChartView.extend({\n\n        type: 'candlestick',\n\n        getStyleUpdater: function () {\n            return updateStyle;\n        },\n\n        dispose: zrUtil.noop\n    });\n\n    zrUtil.mixin(CandlestickView, whiskerBoxCommon.viewMixin, true);\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n\n    function updateStyle(itemGroup, data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n        var color = data.getItemVisual(idx, 'color');\n        var borderColor = data.getItemVisual(idx, 'borderColor') || color;\n\n        // Color must be excluded.\n        // Because symbol provide setColor individually to set fill and stroke\n        var itemStyle = normalItemStyleModel.getItemStyle(\n            ['color', 'color0', 'borderColor', 'borderColor0']\n        );\n\n        var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n        whiskerEl.useStyle(itemStyle);\n        whiskerEl.style.stroke = borderColor;\n\n        var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n        bodyEl.useStyle(itemStyle);\n        bodyEl.style.fill = color;\n        bodyEl.style.stroke = borderColor;\n\n        var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n        graphic.setHoverStyle(itemGroup, hoverStyle);\n    }\n\n\n    module.exports = CandlestickView;\n\n\n\n/***/ }),\n/* 226 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var retrieve = __webpack_require__(0).retrieve;\n    var parsePercent = __webpack_require__(9).parsePercent;\n\n    module.exports = function (ecModel) {\n\n        ecModel.eachSeriesByType('candlestick', function (seriesModel) {\n\n            var coordSys = seriesModel.coordinateSystem;\n            var data = seriesModel.getData();\n            var candleWidth = calculateCandleWidth(seriesModel, data);\n            var chartLayout = seriesModel.get('layout');\n            var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n            var constDim = 1 - variableDim;\n            var coordDims = ['x', 'y'];\n            var vDims = [];\n            var cDim;\n\n            zrUtil.each(data.dimensions, function (dimName) {\n                var dimInfo = data.getDimensionInfo(dimName);\n                var coordDim = dimInfo.coordDim;\n                if (coordDim === coordDims[constDim]) {\n                    vDims.push(dimName);\n                }\n                else if (coordDim === coordDims[variableDim]) {\n                    cDim = dimName;\n                }\n            });\n\n            if (cDim == null || vDims.length < 4) {\n                return;\n            }\n\n            data.each([cDim].concat(vDims), function () {\n                var args = arguments;\n                var axisDimVal = args[0];\n                var idx = args[vDims.length + 1];\n\n                var openVal = args[1];\n                var closeVal = args[2];\n                var lowestVal = args[3];\n                var highestVal = args[4];\n\n                var ocLow = Math.min(openVal, closeVal);\n                var ocHigh = Math.max(openVal, closeVal);\n\n                var ocLowPoint = getPoint(ocLow);\n                var ocHighPoint = getPoint(ocHigh);\n                var lowestPoint = getPoint(lowestVal);\n                var highestPoint = getPoint(highestVal);\n\n                var whiskerEnds = [\n                    [highestPoint, ocHighPoint],\n                    [lowestPoint, ocLowPoint]\n                ];\n\n                var bodyEnds = [];\n                addBodyEnd(ocHighPoint, 0);\n                addBodyEnd(ocLowPoint, 1);\n\n                data.setItemLayout(idx, {\n                    chartLayout: chartLayout,\n                    sign: openVal > closeVal ? -1 : openVal < closeVal ? 1 : 0,\n                    initBaseline: openVal > closeVal\n                        ? ocHighPoint[constDim] : ocLowPoint[constDim], // open point.\n                    bodyEnds: bodyEnds,\n                    whiskerEnds: whiskerEnds,\n                    brushRect: makeBrushRect()\n                });\n\n                function getPoint(val) {\n                    var p = [];\n                    p[variableDim] = axisDimVal;\n                    p[constDim] = val;\n                    return (isNaN(axisDimVal) || isNaN(val))\n                        ? [NaN, NaN]\n                        : coordSys.dataToPoint(p);\n                }\n\n                function addBodyEnd(point, start) {\n                    var point1 = point.slice();\n                    var point2 = point.slice();\n                    point1[variableDim] += candleWidth / 2;\n                    point2[variableDim] -= candleWidth / 2;\n                    start\n                        ? bodyEnds.push(point1, point2)\n                        : bodyEnds.push(point2, point1);\n                }\n\n                function makeBrushRect() {\n                    var pmin = getPoint(Math.min(openVal, closeVal, lowestVal, highestVal));\n                    var pmax = getPoint(Math.max(openVal, closeVal, lowestVal, highestVal));\n\n                    pmin[variableDim] -= candleWidth / 2;\n                    pmax[variableDim] -= candleWidth / 2;\n\n                    return {\n                        x: pmin[0],\n                        y: pmin[1],\n                        width: constDim ? candleWidth : pmax[0] - pmin[0],\n                        height: constDim ? pmax[1] - pmin[1] : candleWidth\n                    };\n                }\n\n            }, true);\n        });\n    };\n\n    function calculateCandleWidth(seriesModel, data) {\n        var baseAxis = seriesModel.getBaseAxis();\n        var extent;\n\n        var bandWidth = baseAxis.type === 'category'\n            ? baseAxis.getBandWidth()\n            : (\n                extent = baseAxis.getExtent(),\n                Math.abs(extent[1] - extent[0]) / data.count()\n            );\n\n        var barMaxWidth = parsePercent(\n            retrieve(seriesModel.get('barMaxWidth'), bandWidth),\n            bandWidth\n        );\n        var barMinWidth = parsePercent(\n            retrieve(seriesModel.get('barMinWidth'), 1),\n            bandWidth\n        );\n        var barWidth = seriesModel.get('barWidth');\n        return barWidth != null\n            ? parsePercent(barWidth, bandWidth)\n            // Put max outer to ensure bar visible in spite of overlap.\n            : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n    }\n\n\n\n/***/ }),\n/* 227 */\n/***/ (function(module, exports) {\n\n\n\n    var positiveBorderColorQuery = ['itemStyle', 'normal', 'borderColor'];\n    var negativeBorderColorQuery = ['itemStyle', 'normal', 'borderColor0'];\n    var positiveColorQuery = ['itemStyle', 'normal', 'color'];\n    var negativeColorQuery = ['itemStyle', 'normal', 'color0'];\n\n    module.exports = function (ecModel, api) {\n\n        ecModel.eachRawSeriesByType('candlestick', function (seriesModel) {\n\n            var data = seriesModel.getData();\n\n            data.setVisual({\n                legendSymbol: 'roundRect'\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var sign = data.getItemLayout(idx).sign;\n\n                    data.setItemVisual(\n                        idx,\n                        {\n                            color: itemModel.get(\n                                sign > 0 ? positiveColorQuery : negativeColorQuery\n                            ),\n                            borderColor: itemModel.get(\n                                sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery\n                            )\n                        }\n                    );\n                });\n            }\n        });\n\n    };\n\n\n/***/ }),\n/* 228 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    module.exports = function (option) {\n        if (!option || !zrUtil.isArray(option.series)) {\n            return;\n        }\n\n        // Translate 'k' to 'candlestick'.\n        zrUtil.each(option.series, function (seriesItem) {\n            if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n                seriesItem.type = 'candlestick';\n            }\n        });\n    };\n\n\n\n/***/ }),\n/* 229 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = __webpack_require__(5);\n    var Symbol = __webpack_require__(75);\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis'),\n            cursorStyle: seriesModel.get('cursor')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n/***/ }),\n/* 230 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(5);\n    var Path = __webpack_require__(11);\n\n    var WhiskerPath = Path.extend({\n\n        type: 'whiskerInBox',\n\n        shape: {},\n\n        buildPath: function (ctx, shape) {\n            for (var i in shape) {\n                if (shape.hasOwnProperty(i) && i.indexOf('ends') === 0) {\n                    var pts = shape[i];\n                    ctx.moveTo(pts[0][0], pts[0][1]);\n                    ctx.lineTo(pts[1][0], pts[1][1]);\n                }\n            }\n        }\n    });\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/WhiskerBox}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @param {Function} styleUpdater\n     * @param {boolean} isInit\n     * @extends {module:zrender/graphic/Group}\n     */\n    function WhiskerBox(data, idx, styleUpdater, isInit) {\n        graphic.Group.call(this);\n\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.bodyIndex;\n\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.whiskerIndex;\n\n        /**\n         * @type {Function}\n         */\n        this.styleUpdater = styleUpdater;\n\n        this._createContent(data, idx, isInit);\n\n        this.updateData(data, idx, isInit);\n\n        /**\n         * Last series model.\n         * @type {module:echarts/model/Series}\n         */\n        this._seriesModel;\n    }\n\n    var whiskerBoxProto = WhiskerBox.prototype;\n\n    whiskerBoxProto._createContent = function (data, idx, isInit) {\n        var itemLayout = data.getItemLayout(idx);\n        var constDim = itemLayout.chartLayout === 'horizontal' ? 1 : 0;\n        var count = 0;\n\n        // Whisker element.\n        this.add(new graphic.Polygon({\n            shape: {\n                points: isInit\n                    ? transInit(itemLayout.bodyEnds, constDim, itemLayout)\n                    : itemLayout.bodyEnds\n            },\n            style: {strokeNoScale: true},\n            z2: 100\n        }));\n        this.bodyIndex = count++;\n\n        // Box element.\n        var whiskerEnds = zrUtil.map(itemLayout.whiskerEnds, function (ends) {\n            return isInit ? transInit(ends, constDim, itemLayout) : ends;\n        });\n        this.add(new WhiskerPath({\n            shape: makeWhiskerEndsShape(whiskerEnds),\n            style: {strokeNoScale: true},\n            z2: 100\n        }));\n        this.whiskerIndex = count++;\n    };\n\n    function transInit(points, dim, itemLayout) {\n        return zrUtil.map(points, function (point) {\n            point = point.slice();\n            point[dim] = itemLayout.initBaseline;\n            return point;\n        });\n    }\n\n    function makeWhiskerEndsShape(whiskerEnds) {\n        // zr animation only support 2-dim array.\n        var shape = {};\n        zrUtil.each(whiskerEnds, function (ends, i) {\n            shape['ends' + i] = ends;\n        });\n        return shape;\n    }\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    whiskerBoxProto.updateData = function (data, idx, isInit) {\n        var seriesModel = this._seriesModel = data.hostModel;\n        var itemLayout = data.getItemLayout(idx);\n        var updateMethod = graphic[isInit ? 'initProps' : 'updateProps'];\n        // this.childAt(this.bodyIndex).stopAnimation(true);\n        // this.childAt(this.whiskerIndex).stopAnimation(true);\n        updateMethod(\n            this.childAt(this.bodyIndex),\n            {shape: {points: itemLayout.bodyEnds}},\n            seriesModel, idx\n        );\n        updateMethod(\n            this.childAt(this.whiskerIndex),\n            {shape: makeWhiskerEndsShape(itemLayout.whiskerEnds)},\n            seriesModel, idx\n        );\n\n        this.styleUpdater.call(null, this, data, idx);\n    };\n\n    zrUtil.inherits(WhiskerBox, graphic.Group);\n\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/WhiskerBoxDraw\n     */\n    function WhiskerBoxDraw(styleUpdater) {\n        this.group = new graphic.Group();\n        this.styleUpdater = styleUpdater;\n    }\n\n    var whiskerBoxDrawProto = WhiskerBoxDraw.prototype;\n\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     */\n    whiskerBoxDrawProto.updateData = function (data) {\n        var group = this.group;\n        var oldData = this._data;\n        var styleUpdater = this.styleUpdater;\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                if (data.hasValue(newIdx)) {\n                    var symbolEl = new WhiskerBox(data, newIdx, styleUpdater, true);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n                // Empty data\n                if (!data.hasValue(newIdx)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n\n                if (!symbolEl) {\n                    symbolEl = new WhiskerBox(data, newIdx, styleUpdater);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && group.remove(el);\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    /**\n     * Remove symbols.\n     * @param {module:echarts/data/List} data\n     */\n    whiskerBoxDrawProto.remove = function () {\n        var group = this.group;\n        var data = this._data;\n        this._data = null;\n        data && data.eachItemGraphicEl(function (el) {\n            el && group.remove(el);\n        });\n    };\n\n    module.exports = WhiskerBoxDraw;\n\n\n/***/ }),\n/* 231 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var graphic = __webpack_require__(5);\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(10);\n\n    var helper = {};\n\n    helper.findLabelValueDim = function (data) {\n        var valueDim;\n        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\n\n        if (labelDims.length) {\n            valueDim = labelDims[0];\n        }\n        else {\n            // Get last value dim\n            var dimensions = data.dimensions.slice();\n            var dataType;\n            while (dimensions.length && (\n                valueDim = dimensions.pop(),\n                dataType = data.getDimensionInfo(valueDim).type,\n                dataType === 'ordinal' || dataType === 'time'\n            )) {} // jshint ignore:line\n        }\n\n        return valueDim;\n    };\n\n    helper.setTextToStyle = function (\n        data, dataIndex, valueDim, elStyle, seriesModel, labelModel, color\n    ) {\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                data.get(valueDim, dataIndex)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 232 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var createListFromArray = __webpack_require__(52);\n    var SeriesModel = __webpack_require__(38);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n            // cursor: null,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n/***/ }),\n/* 233 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME step not support polar\n\n\n    var zrUtil = __webpack_require__(0);\n    var SymbolDraw = __webpack_require__(229);\n    var Symbol = __webpack_require__(75);\n    var lineAnimationDiff = __webpack_require__(234);\n    var graphic = __webpack_require__(5);\n    var modelUtil = __webpack_require__(10);\n    var polyHelper = __webpack_require__(235);\n    var ChartView = __webpack_require__(59);\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n/***/ }),\n/* 234 */\n/***/ (function(module, exports) {\n\n\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n/***/ }),\n/* 235 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Poly path support NaN point\n\n\n    var Path = __webpack_require__(11);\n    var vec2 = __webpack_require__(12);\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n/***/ }),\n/* 236 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// TODO boundaryGap\n\n\n    __webpack_require__(86);\n\n    __webpack_require__(243);\n\n\n/***/ }),\n/* 237 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(6);\n    var axisPointerModelHelper = __webpack_require__(37);\n    var axisTrigger = __webpack_require__(242);\n    var zrUtil = __webpack_require__(0);\n\n    __webpack_require__(238);\n    __webpack_require__(239);\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    __webpack_require__(241);\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n/***/ }),\n/* 238 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(6);\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                textStyle: {\n                    color: '#fff'\n                },\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n/***/ }),\n/* 239 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var globalListener = __webpack_require__(78);\n\n    var AxisPonterView = __webpack_require__(6).extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n/***/ }),\n/* 240 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var clazzUtil = __webpack_require__(16);\n    var graphic = __webpack_require__(5);\n    var get = __webpack_require__(10).makeGetter();\n    var axisPointerModelHelper = __webpack_require__(37);\n    var eventTool = __webpack_require__(30);\n    var throttle = __webpack_require__(91);\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = createIcon(handleModel, {\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                    drift: bind(this._onHandleDragMove, this),\n                    ondragend: bind(this._onHandleDragEnd, this)\n                });\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals &= propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function createIcon(handleModel, handlers) {\n        var iconStr = handleModel.get('icon');\n        var style = {\n            x: -1, y: -1, width: 2, height: 2\n        };\n        var opt = zrUtil.extend({\n            style: {\n                strokeNoScale: true\n            },\n            rectHover: true,\n            cursor: 'move',\n            draggable: true\n        }, handlers);\n\n        return iconStr.indexOf('image://') === 0\n            ? (\n                style.image = iconStr.slice(8),\n                opt.style = style,\n                new graphic.Image(opt)\n            )\n            : graphic.makePath(\n                iconStr.replace('path://', ''),\n                opt,\n                style,\n                'center'\n            );\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n/***/ }),\n/* 241 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(5);\n    var BaseAxisPointer = __webpack_require__(240);\n    var viewHelper = __webpack_require__(79);\n    var cartesianAxisHelper = __webpack_require__(82);\n    var AxisView = __webpack_require__(81);\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n/***/ }),\n/* 242 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(10);\n    var modelHelper = __webpack_require__(37);\n    var findPointFromSeries = __webpack_require__(77);\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n/***/ }),\n/* 243 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(5);\n    var AxisBuilder = __webpack_require__(80);\n    var AxisView = __webpack_require__(81);\n    var cartesianAxisHelper = __webpack_require__(82);\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n/***/ }),\n/* 244 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var zrColor = __webpack_require__(32);\n    var eventUtil = __webpack_require__(30);\n    var formatUtil = __webpack_require__(15);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(13);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRoot;\n            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\n                x += viewportRoot.offsetLeft || 0;\n                y += viewportRoot.offsetTop || 0;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n/* 245 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(6).extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n/* 246 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(244);\n    var zrUtil = __webpack_require__(0);\n    var formatUtil = __webpack_require__(15);\n    var numberUtil = __webpack_require__(9);\n    var graphic = __webpack_require__(5);\n    var findPointFromSeries = __webpack_require__(77);\n    var layoutUtil = __webpack_require__(28);\n    var env = __webpack_require__(13);\n    var Model = __webpack_require__(14);\n    var globalListener = __webpack_require__(78);\n    var axisHelper = __webpack_require__(22);\n    var axisPointerViewHelper = __webpack_require__(79);\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    __webpack_require__(6).extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n/***/ }),\n/* 247 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n\n    var logAxis = zrUtil.defaults({\n        scale: true,\n        logBase: 10\n    }, valueAxis);\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n/***/ }),\n/* 248 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisDefault = __webpack_require__(247);\n    var zrUtil = __webpack_require__(0);\n    var ComponentModel = __webpack_require__(18);\n    var layout = __webpack_require__(28);\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n/***/ }),\n/* 249 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var Axis = __webpack_require__(84);\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n/***/ }),\n/* 250 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = __webpack_require__(0);\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n/***/ }),\n/* 251 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var Cartesian = __webpack_require__(250);\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n/***/ }),\n/* 252 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    __webpack_require__(86);\n\n    var ComponentModel = __webpack_require__(18);\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n/***/ }),\n/* 253 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n/* 254 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var createListFromArray = __webpack_require__(52);\n    var symbolUtil = __webpack_require__(90);\n    var axisHelper = __webpack_require__(22);\n    var axisModelCommonMixin = __webpack_require__(85);\n    var Model = __webpack_require__(14);\n    var util = __webpack_require__(0);\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: __webpack_require__(56),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n/***/ }),\n/* 255 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var numberUtil = __webpack_require__(9);\n    var parsePercent = numberUtil.parsePercent;\n\n    var STACK_PREFIX = '__ec_stack_';\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    /**\n     * @param {Object} opt\n     * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n     * @param {number} opt.count Positive interger.\n     * @param {number} [opt.barWidth]\n     * @param {number} [opt.barMaxWidth]\n     * @param {number} [opt.barGap]\n     * @param {number} [opt.barCategoryGap]\n     * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n     */\n    function getLayoutOnAxis(opt, api) {\n        var params = [];\n        var baseAxis = opt.axis;\n        var axisKey = 'axis0';\n\n        if (baseAxis.type !== 'category') {\n            return;\n        }\n        var bandWidth = baseAxis.getBandWidth();\n\n        for (var i = 0; i < opt.count || 0; i++) {\n            params.push(zrUtil.defaults({\n                bandWidth: bandWidth,\n                axisKey: axisKey,\n                stackId: STACK_PREFIX + i\n            }, opt));\n        }\n        var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n\n        var result = [];\n        for (var i = 0; i < opt.count; i++) {\n            var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n            item.offsetCenter = item.offset + item.width / 2;\n            result.push(item);\n        }\n\n        return result;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            return {\n                bandWidth: bandWidth,\n                barWidth: barWidth,\n                barMaxWidth: barMaxWidth,\n                barGap: barGap,\n                barCategoryGap: barCategoryGap,\n                axisKey: getAxisKey(baseAxis),\n                stackId: getSeriesStackId(seriesModel)\n            };\n        });\n\n        return doCalBarWidthAndOffset(seriesInfoList, api);\n    }\n\n    function doCalBarWidthAndOffset(seriesInfoList, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n            var axisKey = seriesInfo.axisKey;\n            var bandWidth = seriesInfo.bandWidth;\n            var columnsOnAxis = columnsMap[axisKey] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[axisKey] = columnsOnAxis;\n\n            var stackId = seriesInfo.stackId;\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            var barWidth = seriesInfo.barWidth;\n            if (barWidth && !stacks[stackId].width) {\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                stacks[stackId].width = barWidth;\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            var barMaxWidth = seriesInfo.barMaxWidth;\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            var barGap = seriesInfo.barGap;\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            var barCategoryGap = seriesInfo.barCategoryGap;\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    if (column.width) {\n                        maxWidth = Math.min(maxWidth, column.width);\n                    }\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            // Check series coordinate, do layout for cartesian2d only\n            if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coords = cartesian.dataToPoints(data, true);\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(valueAxis.dim, function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    barLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\n\n    module.exports = barLayoutGrid;\n\n\n/***/ }),\n/* 256 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (!coordSys) {\n                return;\n            }\n\n            var dims = [];\n            var coordDims = coordSys.dimensions;\n            for (var i = 0; i < coordDims.length; i++) {\n                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n            }\n\n            if (dims.length === 1) {\n                data.each(dims[0], function (x, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                });\n            }\n            else if (dims.length === 2) {\n                data.each(dims, function (x, y, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(\n                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                    );\n                }, true);\n            }\n        });\n    };\n\n\n\n/***/ }),\n/* 257 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(5);\n    var zrUtil = __webpack_require__(0);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n/* 258 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(10);\n    var Model = __webpack_require__(14);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(18);\n\n    var globalDefault = __webpack_require__(260);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(88));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n/* 259 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(10);\n    var ComponentModel = __webpack_require__(18);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n/* 260 */\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n/***/ }),\n/* 261 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(39)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n/* 262 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n/* 263 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(39)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n/* 264 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(39)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n/* 265 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(23);\n    var graphicUtil = __webpack_require__(5);\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n/***/ }),\n/* 266 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(0);\n    var compatStyle = __webpack_require__(267);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 267 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n/***/ }),\n/* 268 */\n/***/ (function(module, exports) {\n\n\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n/***/ }),\n/* 269 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var Scale = __webpack_require__(40);\n    var numberUtil = __webpack_require__(9);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(57);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n/* 270 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(0);\n    var Scale = __webpack_require__(40);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n/* 271 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = __webpack_require__(0);\n    var numberUtil = __webpack_require__(9);\n    var formatUtil = __webpack_require__(15);\n    var scaleHelper = __webpack_require__(89);\n\n    var IntervalScale = __webpack_require__(57);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n/* 272 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(46);\n    var componentUtil = __webpack_require__(58);\n    var clazzUtil = __webpack_require__(16);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n/* 273 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(66);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n/* 274 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 275 */,\n/* 276 */,\n/* 277 */,\n/* 278 */,\n/* 279 */,\n/* 280 */,\n/* 281 */,\n/* 282 */,\n/* 283 */,\n/* 284 */,\n/* 285 */,\n/* 286 */,\n/* 287 */,\n/* 288 */,\n/* 289 */,\n/* 290 */,\n/* 291 */,\n/* 292 */,\n/* 293 */,\n/* 294 */,\n/* 295 */,\n/* 296 */,\n/* 297 */,\n/* 298 */,\n/* 299 */,\n/* 300 */,\n/* 301 */,\n/* 302 */,\n/* 303 */,\n/* 304 */,\n/* 305 */,\n/* 306 */,\n/* 307 */,\n/* 308 */,\n/* 309 */,\n/* 310 */,\n/* 311 */,\n/* 312 */,\n/* 313 */,\n/* 314 */,\n/* 315 */,\n/* 316 */,\n/* 317 */,\n/* 318 */,\n/* 319 */,\n/* 320 */,\n/* 321 */,\n/* 322 */,\n/* 323 */,\n/* 324 */,\n/* 325 */,\n/* 326 */,\n/* 327 */,\n/* 328 */,\n/* 329 */,\n/* 330 */,\n/* 331 */,\n/* 332 */,\n/* 333 */,\n/* 334 */,\n/* 335 */,\n/* 336 */,\n/* 337 */,\n/* 338 */,\n/* 339 */,\n/* 340 */,\n/* 341 */,\n/* 342 */,\n/* 343 */,\n/* 344 */,\n/* 345 */,\n/* 346 */,\n/* 347 */,\n/* 348 */,\n/* 349 */,\n/* 350 */,\n/* 351 */,\n/* 352 */,\n/* 353 */,\n/* 354 */,\n/* 355 */,\n/* 356 */,\n/* 357 */,\n/* 358 */,\n/* 359 */,\n/* 360 */,\n/* 361 */,\n/* 362 */,\n/* 363 */,\n/* 364 */,\n/* 365 */,\n/* 366 */,\n/* 367 */,\n/* 368 */,\n/* 369 */,\n/* 370 */,\n/* 371 */,\n/* 372 */,\n/* 373 */,\n/* 374 */,\n/* 375 */,\n/* 376 */,\n/* 377 */,\n/* 378 */,\n/* 379 */,\n/* 380 */,\n/* 381 */,\n/* 382 */,\n/* 383 */,\n/* 384 */,\n/* 385 */,\n/* 386 */,\n/* 387 */,\n/* 388 */,\n/* 389 */,\n/* 390 */,\n/* 391 */,\n/* 392 */,\n/* 393 */,\n/* 394 */,\n/* 395 */,\n/* 396 */,\n/* 397 */,\n/* 398 */,\n/* 399 */,\n/* 400 */,\n/* 401 */,\n/* 402 */,\n/* 403 */,\n/* 404 */,\n/* 405 */,\n/* 406 */,\n/* 407 */,\n/* 408 */,\n/* 409 */,\n/* 410 */,\n/* 411 */,\n/* 412 */,\n/* 413 */,\n/* 414 */,\n/* 415 */,\n/* 416 */,\n/* 417 */,\n/* 418 */,\n/* 419 */,\n/* 420 */,\n/* 421 */,\n/* 422 */,\n/* 423 */,\n/* 424 */,\n/* 425 */,\n/* 426 */,\n/* 427 */,\n/* 428 */,\n/* 429 */,\n/* 430 */,\n/* 431 */,\n/* 432 */,\n/* 433 */,\n/* 434 */,\n/* 435 */,\n/* 436 */,\n/* 437 */,\n/* 438 */,\n/* 439 */,\n/* 440 */,\n/* 441 */,\n/* 442 */,\n/* 443 */,\n/* 444 */,\n/* 445 */,\n/* 446 */,\n/* 447 */,\n/* 448 */,\n/* 449 */,\n/* 450 */,\n/* 451 */,\n/* 452 */,\n/* 453 */,\n/* 454 */,\n/* 455 */,\n/* 456 */,\n/* 457 */,\n/* 458 */,\n/* 459 */,\n/* 460 */,\n/* 461 */,\n/* 462 */,\n/* 463 */,\n/* 464 */,\n/* 465 */,\n/* 466 */,\n/* 467 */,\n/* 468 */,\n/* 469 */\n/***/ (function(module, exports, __webpack_require__) {\n\n!function(e,t){ true?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.VueNativeSock=t():e.VueNativeSock=t()}(this,function(){return function(e){function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:o})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"\",t(t.s=1)}([function(e,t,n){\"use strict\";function o(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(t,\"__esModule\",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),i=function(){function e(){o(this,e),this.listeners=new Map}return r(e,[{key:\"addListener\",value:function(e,t,n){return\"function\"==typeof t&&(this.listeners.has(e)||this.listeners.set(e,[]),this.listeners.get(e).push({callback:t,vm:n}),!0)}},{key:\"removeListener\",value:function(e,t,n){var o=this.listeners.get(e),r=void 0;return!!(o&&o.length&&(r=o.reduce(function(e,o,r){return\"function\"==typeof o.callback&&o.callback===t&&o.vm===n&&(e=r),e},-1))>-1)&&(o.splice(r,1),this.listeners.set(e,o),!0)}},{key:\"emit\",value:function(e){for(var t=arguments.length,n=Array(t>1?t-1:0),o=1;o<t;o++)n[o-1]=arguments[o];var r=this.listeners.get(e);return!(!r||!r.length)&&(r.forEach(function(e){var t;(t=e.callback).call.apply(t,[e.vm].concat(n))}),!0)}}]),e}();t.default=new i},function(e,t,n){e.exports=n(2)},function(e,t,n){\"use strict\";function o(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0});var r=n(3),i=o(r),s=n(0),c=o(s);t.default={install:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!t)throw new Error(\"[vue-native-socket] cannot locate connection\");var o=new i.default(t,n);e.prototype.$socket=o.WebSocket,e.mixin({created:function(){var e=this,t=this.$options.sockets;this.$options.sockets=new Proxy({},{set:function(e,t,n){return c.default.addListener(t,n,this),e[t]=n,!0},deleteProperty:function(e,t){return c.default.removeListener(t,this.$options.sockets[t],this),delete e.key,!0}}),t&&Object.keys(t).forEach(function(n){e.$options.sockets[n]=t[n]})},beforeDestroy:function(){var e=this,t=this.$options.sockets;t&&Object.keys(t).forEach(function(t){delete e.$options.sockets[t]})}})}}},function(e,t,n){\"use strict\";function o(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(t,\"__esModule\",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),i=n(0),s=function(e){return e&&e.__esModule?e:{default:e}}(i),c=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};o(this,e),this.format=n.format&&n.format.toLowerCase(),this.connect(t,n),n.store&&(this.store=n.store),this.onEvent()}return r(e,[{key:\"connect\",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=n.protocol||\"\";this.WebSocket=n.WebSocket||(\"\"===o?new WebSocket(e):new WebSocket(e,o)),\"json\"===this.format&&(\"sendObj\"in this.WebSocket||(this.WebSocket.sendObj=function(e){return t.WebSocket.send(JSON.stringify(e))}))}},{key:\"onEvent\",value:function(){var e=this;[\"onmessage\",\"onclose\",\"onerror\",\"onopen\"].forEach(function(t){e.WebSocket[t]=function(n){s.default.emit(t,n),e.store&&e.passToStore(\"SOCKET_\"+t,n)}})}},{key:\"passToStore\",value:function(e,t){if(e.startsWith(\"SOCKET_\")){var n=\"commit\",o=e.toUpperCase(),r=t;\"json\"===this.format&&t.data&&(r=JSON.parse(t.data),o=[r.namespace||\"\",r.mutation].filter(function(e){return!!e}).join(\"/\"),r.action&&(n=\"dispatch\",o=r.action)),this.store[n](o,r)}}}]),e}();t.default=c}])});\n\n/***/ }),\n/* 470 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n  * vue-router v2.7.0\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (false) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also regiseter instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    data.props = resolveProps(route, matched.props && matched.props[name]);\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (false) {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    \"production\" !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    var val = extraQuery[key];\n    parsedQuery[key] = Array.isArray(val) ? val.slice() : val;\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: location.query || {},\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar index$1 = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar index = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (index$1(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (index$1(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\nindex.parse = parse_1;\nindex.compile = compile_1;\nindex.tokensToFunction = tokensToFunction_1;\nindex.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = index.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (false) {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  var pathMap = oldPathMap || Object.create(null);\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (false) {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var normalizedPath = normalizePath(path, parent);\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (false) {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (false) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = index(path, [], pathToRegexpOptions);\n  if (false) {\n    var keys = {};\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent) {\n  path = path.replace(/\\/$/, '');\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (false) {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (false) {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (false) {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (false) {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (false) {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (false) {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n    if (!shouldScroll) {\n      return\n    }\n    var isObject = typeof shouldScroll === 'object';\n    if (isObject && typeof shouldScroll.selector === 'string') {\n      var el = document.querySelector(shouldScroll.selector);\n      if (el) {\n        var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n        offset = normalizeOffset(offset);\n        position = getElementPosition(el, offset);\n      } else if (isValidPosition(shouldScroll)) {\n        position = normalizePosition(shouldScroll);\n      }\n    } else if (isObject && isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n\n    if (position) {\n      window.scrollTo(position.x, position.y);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (resolvedDef.__esModule && resolvedDef.default) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          \"production\" !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n      this$1.transitionTo(getLocation(this$1.base), function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    window.addEventListener('hashchange', function () {\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        replaceHash(route.fullPath);\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction pushHash (path) {\n  window.location.hash = path;\n}\n\nfunction replaceHash (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  window.location.replace((base + \"#\" + path));\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (false) {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: {} };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  \"production\" !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '2.7.0';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (VueRouter);\n\n\n/***/ }),\n/* 471 */\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n/* 472 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(0);\n    var Draggable = __webpack_require__(506);\n\n    var Eventful = __webpack_require__(31);\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n/***/ }),\n/* 473 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(0);\n    var config = __webpack_require__(45);\n    var Style = __webpack_require__(115);\n    var Pattern = __webpack_require__(114);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n/* 474 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(45);\n    var util = __webpack_require__(0);\n    var log = __webpack_require__(112);\n    var BoundingRect = __webpack_require__(17);\n    var timsort = __webpack_require__(64);\n\n    var Layer = __webpack_require__(473);\n\n    var requestAnimationFrame = __webpack_require__(108);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(113);\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n/* 475 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(0);\n    var env = __webpack_require__(13);\n\n    var Group = __webpack_require__(46);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(64);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n/* 476 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(0);\n    var Dispatcher = __webpack_require__(30).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(108);\n\n    var Animator = __webpack_require__(107);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n/* 477 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(478);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n/* 478 */\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n/* 479 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(109).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n/* 480 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(24);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 481 */\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 482 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(47).CMD;\n    var line = __webpack_require__(481);\n    var cubic = __webpack_require__(480);\n    var quadratic = __webpack_require__(483);\n    var arc = __webpack_require__(479);\n    var normalizeRadian = __webpack_require__(109).normalizeRadian;\n    var curve = __webpack_require__(24);\n\n    var windingLine = __webpack_require__(484);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n/* 483 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(24);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 484 */\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n/* 485 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(30);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n/* 486 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(12);\n    var curve = __webpack_require__(24);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n/* 487 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(30);\n    var zrUtil = __webpack_require__(0);\n    var Eventful = __webpack_require__(31);\n    var env = __webpack_require__(13);\n    var GestureMgr = __webpack_require__(485);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n/* 488 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(11);\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n/* 489 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var Gradient = __webpack_require__(66);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n/* 490 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var Gradient = __webpack_require__(66);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n/* 491 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(65);\n    var zrUtil = __webpack_require__(0);\n    var textContain = __webpack_require__(23);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n/* 492 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n/* 493 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(12);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n/* 494 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(12);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n/* 495 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = __webpack_require__(23);\n    var BoundingRect = __webpack_require__(17);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n            rect = style.textPositionRect || rect;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n/* 496 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(11).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n/* 497 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(24);\n    var vec2 = __webpack_require__(12);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(11).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n/* 498 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(11).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 499 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(11).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n/* 500 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(116);\n\n    module.exports = __webpack_require__(11).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n/* 501 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(116);\n\n    module.exports = __webpack_require__(11).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n/* 502 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(492);\n\n    module.exports = __webpack_require__(11).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n/* 503 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(11).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 504 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = __webpack_require__(13);\n    var Path = __webpack_require__(11);\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n/* 505 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(107);\n    var util = __webpack_require__(0);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(112);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n/* 506 */\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n/***/ }),\n/* 507 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(11);\n    var PathProxy = __webpack_require__(47);\n    var transformPath = __webpack_require__(508);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n/* 508 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(47).CMD;\n    var vec2 = __webpack_require__(12);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n/* 509 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(111);\n    var env = __webpack_require__(13);\n    var zrUtil = __webpack_require__(0);\n\n    var Handler = __webpack_require__(472);\n    var Storage = __webpack_require__(475);\n    var Animation = __webpack_require__(476);\n    var HandlerProxy = __webpack_require__(487);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(474)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.5.2';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ }),\n/* 510 */,\n/* 511 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n/* 512 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(471)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ })\n]);\n\n\n// WEBPACK FOOTER //\n// static/js/vendor.7f2b26f6bef2ffa9a782.js","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/util.js\n// module id = 0\n// module chunks = 1","/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-loader@12.2.2@vue-loader/lib/component-normalizer.js\n// module id = 1\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n    var Transformable = require('zrender/lib/mixin/Transformable');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    graphic.getFont = function (opt, ecModel) {\n        var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/graphic.js\n// module id = 5\n// module chunks = 1","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.6.2',\n        dependencies: {\n            zrender: '3.5.2'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.Axis = require('./coord/Axis');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = require('./helper');\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/echarts.js\n// module id = 6\n// module chunks = 1","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/number.js\n// module id = 9\n// module chunks = 1","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/model.js\n// module id = 10\n// module chunks = 1","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Path.js\n// module id = 11\n// module chunks = 1","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/vector.js\n// module id = 12\n// module chunks = 1","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/env.js\n// module id = 13\n// module chunks = 1","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/Model.js\n// module id = 14\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/format.js\n// module id = 15\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/clazz.js\n// module id = 16\n// module chunks = 1","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/BoundingRect.js\n// module id = 17\n// module chunks = 1","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/Component.js\n// module id = 18\n// module chunks = 1","/**\n * vuex v2.3.0\n * (c) 2017 Evan You\n * @license MIT\n */\nvar applyMixin = function (Vue) {\n  var version = Number(Vue.version.split('.')[0]);\n\n  if (version >= 2) {\n    var usesInit = Vue.config._lifecycleHooks.indexOf('init') > -1;\n    Vue.mixin(usesInit ? { init: vuexInit } : { beforeCreate: vuexInit });\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      if ( options === void 0 ) options = {};\n\n      options.init = options.init\n        ? [vuexInit].concat(options.init)\n        : vuexInit;\n      _init.call(this, options);\n    };\n  }\n\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n  function vuexInit () {\n    var options = this.$options;\n    // store injection\n    if (options.store) {\n      this.$store = options.store;\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store;\n    }\n  }\n};\n\nvar devtoolHook =\n  typeof window !== 'undefined' &&\n  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nfunction devtoolPlugin (store) {\n  if (!devtoolHook) { return }\n\n  store._devtoolHook = devtoolHook;\n\n  devtoolHook.emit('vuex:init', store);\n\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState);\n  });\n\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state);\n  });\n}\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\n\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime;\n  this._children = Object.create(null);\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors$1 = { namespaced: {} };\n\nprototypeAccessors$1.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors$1 );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  var this$1 = this;\n\n  // register root module (Vuex.Store options)\n  this.root = new Module(rawRootModule, false);\n\n  // register all nested modules\n  if (rawRootModule.modules) {\n    forEachValue(rawRootModule.modules, function (rawModule, key) {\n      this$1.register([key], rawModule, false);\n    });\n  }\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update(this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  var parent = this.get(path.slice(0, -1));\n  var newModule = new Module(rawModule, runtime);\n  parent.addChild(path[path.length - 1], newModule);\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n  if (!parent.getChild(key).runtime) { return }\n\n  parent.removeChild(key);\n};\n\nfunction update (targetModule, newModule) {\n  // update target module\n  targetModule.update(newModule);\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        console.warn(\n          \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n          'manual reload is needed'\n        );\n        return\n      }\n      update(targetModule.getChild(key), newModule.modules[key]);\n    }\n  }\n}\n\nvar Vue; // bind on install\n\nvar Store = function Store (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\");\n  assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n\n  var state = options.state; if ( state === void 0 ) state = {};\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\n  // store internal state\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._watcherVM = new Vue();\n\n  // bind commit and dispatch to self\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n  this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  };\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n  };\n\n  // strict mode\n  this.strict = strict;\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root);\n\n  // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreVM(this, state);\n\n  // apply plugins\n  plugins.concat(devtoolPlugin).forEach(function (plugin) { return plugin(this$1); });\n};\n\nvar prototypeAccessors = { state: {} };\n\nprototypeAccessors.state.get = function () {\n  return this._vm._data.$$state\n};\n\nprototypeAccessors.state.set = function (v) {\n  assert(false, \"Use store.replaceState() to explicit replace store state.\");\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload };\n  var entry = this._mutations[type];\n  if (!entry) {\n    console.error((\"[vuex] unknown mutation type: \" + type));\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload);\n    });\n  });\n  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });\n\n  if (options && options.silent) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    );\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var entry = this._actions[type];\n  if (!entry) {\n    console.error((\"[vuex] unknown action type: \" + type));\n    return\n  }\n  return entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload)\n};\n\nStore.prototype.subscribe = function subscribe (fn) {\n  var subs = this._subscribers;\n  if (subs.indexOf(fn) < 0) {\n    subs.push(fn);\n  }\n  return function () {\n    var i = subs.indexOf(fn);\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  }\n};\n\nStore.prototype.watch = function watch (getter, cb, options) {\n    var this$1 = this;\n\n  assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm._data.$$state = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule) {\n  if (typeof path === 'string') { path = [path]; }\n  assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  this._modules.register(path, rawModule);\n  installModule(this, this.state, path, this._modules.get(path));\n  // reset store to update getters...\n  resetStoreVM(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1 = this;\n\n  if (typeof path === 'string') { path = [path]; }\n  assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  this._modules.unregister(path);\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1));\n    Vue.delete(parentState, path[path.length - 1]);\n  });\n  resetStore(this);\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions);\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors );\n\nfunction resetStore (store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state;\n  // init all modules\n  installModule(store, state, [], store._modules.root, true);\n  // reset vm\n  resetStoreVM(store, state, hot);\n}\n\nfunction resetStoreVM (store, state, hot) {\n  var oldVm = store._vm;\n\n  // bind store public getters\n  store.getters = {};\n  var wrappedGetters = store._wrappedGetters;\n  var computed = {};\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    computed[key] = function () { return fn(store); };\n    Object.defineProperty(store.getters, key, {\n      get: function () { return store._vm[key]; },\n      enumerable: true // for local getters\n    });\n  });\n\n  // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  store._vm = new Vue({\n    data: {\n      $$state: state\n    },\n    computed: computed\n  });\n  Vue.config.silent = silent;\n\n  // enable strict mode for new vm\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldVm) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldVm._data.$$state = null;\n      });\n    }\n    Vue.nextTick(function () { return oldVm.$destroy(); });\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n  var namespace = store._modules.getNamespace(path);\n\n  // register in namespace map\n  if (module.namespaced) {\n    store._modulesNamespaceMap[namespace] = module;\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n    store._withCommit(function () {\n      Vue.set(parentState, moduleName, module.state);\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n\n  module.forEachAction(function (action, key) {\n    var namespacedType = namespace + key;\n    registerAction(store, namespacedType, action, local);\n  });\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace, path) {\n  var noNamespace = namespace === '';\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (!store._actions[type]) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (!store._mutations[type]) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  };\n\n  // getters and state object must be gotten lazily\n  // because they will be changed by vm update\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace\n        ? function () { return store.getters; }\n        : function () { return makeLocalGetters(store, namespace); }\n    },\n    state: {\n      get: function () { return getNestedState(store.state, path); }\n    }\n  });\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  var gettersProxy = {};\n\n  var splitPos = namespace.length;\n  Object.keys(store.getters).forEach(function (type) {\n    // skip if the target getter is not match this namespace\n    if (type.slice(0, splitPos) !== namespace) { return }\n\n    // extract local getter type\n    var localType = type.slice(splitPos);\n\n    // Add a port to the getters proxy.\n    // Define as getter property because\n    // we do not want to evaluate the getters in this time.\n    Object.defineProperty(gettersProxy, localType, {\n      get: function () { return store.getters[type]; },\n      enumerable: true\n    });\n  });\n\n  return gettersProxy\n}\n\nfunction registerMutation (store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler (payload) {\n    handler(local.state, payload);\n  });\n}\n\nfunction registerAction (store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler (payload, cb) {\n    var res = handler({\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload, cb);\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n        throw err\n      })\n    } else {\n      return res\n    }\n  });\n}\n\nfunction registerGetter (store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    console.error((\"[vuex] duplicate getter key: \" + type));\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      local.state, // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  };\n}\n\nfunction enableStrictMode (store) {\n  store._vm.$watch(function () { return this._data.$$state }, function () {\n    assert(store._committing, \"Do not mutate vuex store state outside mutation handlers.\");\n  }, { deep: true, sync: true });\n}\n\nfunction getNestedState (state, path) {\n  return path.length\n    ? path.reduce(function (state, key) { return state[key]; }, state)\n    : state\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  assert(typeof type === 'string', (\"Expects string as the type, but found \" + (typeof type) + \".\"));\n\n  return { type: type, payload: payload, options: options }\n}\n\nfunction install (_Vue) {\n  if (Vue) {\n    console.error(\n      '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n    );\n    return\n  }\n  Vue = _Vue;\n  applyMixin(Vue);\n}\n\n// auto install in dist mode\nif (typeof window !== 'undefined' && window.Vue) {\n  install(window.Vue);\n}\n\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n        if (!module) {\n          return\n        }\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      if (namespace && !getModuleByNamespace(this.$store, 'mapMutations', namespace)) {\n        return\n      }\n      return this.$store.commit.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedGetter () {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return\n      }\n      if (!(val in this.$store.getters)) {\n        console.error((\"[vuex] unknown getter: \" + val));\n        return\n      }\n      return this.$store.getters[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      if (namespace && !getModuleByNamespace(this.$store, 'mapActions', namespace)) {\n        return\n      }\n      return this.$store.dispatch.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nfunction normalizeMap (map) {\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n    return fn(namespace, map)\n  }\n}\n\nfunction getModuleByNamespace (store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n  if (!module) {\n    console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace));\n  }\n  return module\n}\n\nvar index_esm = {\n  Store: Store,\n  install: install,\n  version: '2.3.0',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions\n};\n\nexport { Store, mapState, mapMutations, mapGetters, mapActions };export default index_esm;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vuex@2.3.1@vuex/dist/vuex.esm.js\n// module id = 20\n// module chunks = 1","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_babel-runtime@6.23.0@babel-runtime/core-js/json/stringify.js\n// module id = 21\n// module chunks = 1","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: scale.type === 'interval' ? model.get('minInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/axisHelper.js\n// module id = 22\n// module chunks = 1","\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/text.js\n// module id = 23\n// module chunks = 1","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/curve.js\n// module id = 24\n// module chunks = 1","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/matrix.js\n// module id = 25\n// module chunks = 1","\"use strict\";\n\nexports.__esModule = true;\n\nvar _assign = require(\"../core-js/object/assign\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_babel-runtime@6.23.0@babel-runtime/helpers/extends.js\n// module id = 27\n// module chunks = 1","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/layout.js\n// module id = 28\n// module chunks = 1","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/event.js\n// module id = 30\n// module chunks = 1","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/mixin/Eventful.js\n// module id = 31\n// module chunks = 1","/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = require('../core/LRU');\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/tool/color.js\n// module id = 32\n// module chunks = 1","/*!\n * Vue.js v2.4.1\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nvar _toString = Object.prototype.toString;\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(val);\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      return JSON.stringify(a) === JSON.stringify(b)\n    } catch (e) {\n      // possible circular reference\n      return a === b\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName = (null); // work around flow check\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'string'\n      ? vm\n      : typeof vm === 'function' && vm.options\n        ? vm.options.name\n        : vm._isVue\n          ? vm.$options.name || vm.$options._componentTag\n          : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  var generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefix has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) {\n        try {\n          cb.call(ctx);\n        } catch (e) {\n          handleError(e, ctx, 'nextTick');\n        }\n      } else if (_resolve) {\n        _resolve(ctx);\n      }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve, reject) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this) : childVal,\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn.call(this, parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options) {\n  var inject = options.inject;\n  if (Array.isArray(inject)) {\n    var normalized = options.inject = {};\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = inject[i];\n    }\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child);\n  normalizeInject(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    valid = typeof value === expectedType.toLowerCase();\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        (last).text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (comp.__esModule && comp.default) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && isDef(c.componentOptions)) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      child.data && child.data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listensers hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data && parentVnode.data.attrs;\n  vm.$listeners = listeners;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction checkOptionType (vm, name) {\n  var option = vm.$options[name];\n  if (!isPlainObject(option)) {\n    warn(\n      (\"component option \\\"\" + name + \"\\\" should be an object.\"),\n      vm\n    );\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      if (isReservedAttribute(key) || config.isReservedAttr(key)) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  process.env.NODE_ENV !== 'production' && checkOptionType(vm, 'computed');\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production') {\n      if (getter === undefined) {\n        warn(\n          (\"No getter function has been defined for computed property \\\"\" + key + \"\\\".\"),\n          vm\n        );\n        getter = noop;\n      }\n    }\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  process.env.NODE_ENV !== 'production' && checkOptionType(vm, 'methods');\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  process.env.NODE_ENV !== 'production' && checkOptionType(vm, 'watch');\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  keyOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(keyOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    observerState.shouldConvert = false;\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    observerState.shouldConvert = true;\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (process.env.NODE_ENV !== 'production' && !hasOwn(result, key)) {\n        warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || {});\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    data: data,\n    props: props,\n    children: children,\n    parent: context,\n    listeners: data.on || {},\n    injections: resolveInject(Ctor.options.inject, context),\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    vnode.functionalOptions = Ctor.options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // keep listeners\n  var listeners = data.on;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    warn(\n      'Avoid using non-primitive value as key, ' +\n      'use string/number value instead.',\n      context\n    );\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && isUndef(child.ns)) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      props = extend(extend({}, bindObject), props);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && process.env.NODE_ENV !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(ours, existing) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', parentData && parentData.on, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, null, true);\n    defineReactive$$1(vm, '$listeners', parentData && parentData.on, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n  Vue.prototype._g = bindObjectListeners;\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-init:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(((vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue$3)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp, Array];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, current, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        if (cachedNode !== current) {\n          pruneCacheEntry(cachedNode);\n        }\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.4.1';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\n// Some browsers do not support dynamically changing type for <input>\n// so they need to be treated as different nodes\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !elmToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.elm = elm;\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (process.env.NODE_ENV !== 'production' &&\n              typeof console !== 'undefined' &&\n              !bailed\n            ) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers && modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (modelRs.exp) + \", \" + (modelRs.idx) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  if (once$$1) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  var isComponentRoot = isDef(vnode.componentOptions);\n  var oldOn = isComponentRoot ? oldVnode.data.nativeOn : oldVnode.data.on;\n  var on = isComponentRoot ? vnode.data.nativeOn : vnode.data.on;\n  if (isUndef(oldOn) && isUndef(on)) {\n    return\n  }\n  on = on || {};\n  oldOn = oldOn || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers) && modifiers.number) {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likley wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1 && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1 && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$options._renderChildren;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (process.env.NODE_ENV !== 'production' && isChrome) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n    config.productionTip !== false &&\n    inBrowser && typeof console !== 'undefined'\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\"/>\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      if (shouldIgnoreFirstNewline(lastTag, html)) {\n        advance(1);\n      }\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      process.env.NODE_ENV !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (!el.component && (\n          isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (process.env.NODE_ENV !== 'production' &&\n      name === 'click' &&\n      handler && handler.modifiers && handler.modifiers.right\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length > 1 || ast.type !== 1\n  )) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  return \"{key:\" + key + \",fn:function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el, state) || 'void 0'\n      : genElement(el, state)) + \"}}\"\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e('\" + (comment.text) + \"')\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (process.env.NODE_ENV !== 'production') {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\nexport default Vue$3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue@2.4.1@vue/dist/vue.esm.js\n// module id = 33\n// module chunks = 1","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_core.js\n// module id = 34\n// module chunks = 1","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_descriptors.js\n// module id = 35\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('../coord/cartesian/Grid');\n\n    require('./bar/BarSeries');\n    require('./bar/BarView');\n\n    var barLayoutGrid = require('../layout/barGrid');\n    var echarts = require('../echarts');\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    require('../component/gridSimple');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/bar.js\n// module id = 36\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(\n                    labelOption.textStyle || (labelOption.textStyle = {}),\n                    crossStyle.textStyle\n                );\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/modelHelper.js\n// module id = 37\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/Series.js\n// module id = 38\n// module chunks = 1","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 39\n// module chunks = 1","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/scale/Scale.js\n// module id = 40\n// module chunks = 1","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/config.js\n// module id = 45\n// module chunks = 1","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/container/Group.js\n// module id = 46\n// module chunks = 1","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/PathProxy.js\n// module id = 47\n// module chunks = 1","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_fails.js\n// module id = 48\n// module chunks = 1","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_global.js\n// module id = 49\n// module chunks = 1","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_is-object.js\n// module id = 50\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/CoordinateSystem.js\n// module id = 51\n// module chunks = 1","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/helper/createListFromArray.js\n// module id = 52\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n    var PRIORITY = echarts.PRIORITY;\n\n    require('./line/LineSeries');\n    require('./line/LineView');\n\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        require('../layout/points'), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        require('../processor/dataSample'), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    require('../component/gridSimple');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/line.js\n// module id = 53\n// module chunks = 1","// FIXME Better way to pack data in graphic element\n\n\n    require('./axisPointer');\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/tooltip.js\n// module id = 54\n// module chunks = 1","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/data/List.js\n// module id = 55\n// module chunks = 1","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/data/helper/completeDimensions.js\n// module id = 56\n// module chunks = 1","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n    var helper = require('./helper');\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         */\n        niceTicks: function (splitNumber, minInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval);\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval=false]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/scale/Interval.js\n// module id = 57\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/component.js\n// module id = 58\n// module chunks = 1","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/view/Chart.js\n// module id = 59\n// module chunks = 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 63\n// module chunks = 1","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/timsort.js\n// module id = 64\n// module chunks = 1","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Displayable.js\n// module id = 65\n// module chunks = 1","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Gradient.js\n// module id = 66\n// module chunks = 1","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_defined.js\n// module id = 68\n// module chunks = 1","var global    = require('./_global')\n  , core      = require('./_core')\n  , ctx       = require('./_ctx')\n  , hide      = require('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_export.js\n// module id = 69\n// module chunks = 1","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_iobject.js\n// module id = 70\n// module chunks = 1","var anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_object-dp.js\n// module id = 71\n// module chunks = 1","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_to-integer.js\n// module id = 72\n// module chunks = 1","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_to-iobject.js\n// module id = 73\n// module chunks = 1","\n\n    var echarts = require('../echarts');\n\n    require('./candlestick/CandlestickSeries');\n    require('./candlestick/CandlestickView');\n\n    echarts.registerPreprocessor(\n        require('./candlestick/preprocessor')\n    );\n\n    echarts.registerVisual(require('./candlestick/candlestickVisual'));\n    echarts.registerLayout(require('./candlestick/candlestickLayout'));\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/candlestick.js\n// module id = 74\n// module chunks = 1","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n    var labelHelper = require('./labelHelper');\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n        var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n            cursorStyle = itemModel.getShallow('cursor');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        cursorStyle && symbolPath.attr('cursor', cursorStyle);\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        var valueDim = labelHelper.findLabelValueDim(data);\n        labelHelper.setTextToStyle(\n            data, idx, valueDim, elStyle, seriesModel, labelModel, color\n        );\n        labelHelper.setTextToStyle(\n            data, idx, valueDim, hoverItemStyle, seriesModel, hoverLabelModel, color\n        );\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/helper/Symbol.js\n// module id = 75\n// module chunks = 1","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var WhiskerBoxDraw = require('../helper/WhiskerBoxDraw');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var seriesModelMixin = {\n\n        /**\n         * @private\n         * @type {string}\n         */\n        _baseAxisDim: null,\n\n        /**\n         * @override\n         */\n        getInitialData: function (option, ecModel) {\n            // When both types of xAxis and yAxis are 'value', layout is\n            // needed to be specified by user. Otherwise, layout can be\n            // judged by which axis is category.\n\n            var categories;\n\n            var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n            var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n            var addOrdinal;\n\n            // FIXME\n            // 考虑时间轴\n\n            if (xAxisType === 'category') {\n                option.layout = 'horizontal';\n                categories = xAxisModel.getCategories();\n                addOrdinal = true;\n            }\n            else if (yAxisType  === 'category') {\n                option.layout = 'vertical';\n                categories = yAxisModel.getCategories();\n                addOrdinal = true;\n            }\n            else {\n                option.layout = option.layout || 'horizontal';\n            }\n\n            var coordDims = ['x', 'y'];\n            var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n            var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n            var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n            var data = option.data;\n\n            addOrdinal && zrUtil.each(data, function (item, index) {\n                zrUtil.isArray(item) && item.unshift(index);\n            });\n\n            var dimensions = [{\n                name: baseAxisDim,\n                otherDims: {\n                    tooltip: false\n                },\n                dimsDef: ['base']\n            }, {\n                name: otherAxisDim,\n                dimsDef: this.defaultValueDimensions.slice()\n            }];\n\n            dimensions = completeDimensions(dimensions, data, {\n                encodeDef: this.get('encode'),\n                dimsDef: this.get('dimensions')\n            });\n\n            var list = new List(dimensions, this);\n            list.initData(data, categories ? categories.slice() : null);\n\n            return list;\n        },\n\n        /**\n         * If horizontal, base axis is x, otherwise y.\n         * @override\n         */\n        getBaseAxis: function () {\n            var dim = this._baseAxisDim;\n            return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n        }\n\n    };\n\n    var viewMixin = {\n\n        init: function () {\n            /**\n             * Old data.\n             * @private\n             * @type {module:echarts/chart/helper/WhiskerBoxDraw}\n             */\n            var whiskerBoxDraw = this._whiskerBoxDraw = new WhiskerBoxDraw(\n                this.getStyleUpdater()\n            );\n            this.group.add(whiskerBoxDraw.group);\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            this._whiskerBoxDraw.updateData(seriesModel.getData());\n        },\n\n        remove: function (ecModel) {\n            this._whiskerBoxDraw.remove();\n        }\n    };\n\n    module.exports = {\n        seriesModelMixin: seriesModelMixin,\n        viewMixin: viewMixin\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/helper/whiskerBoxCommon.js\n// module id = 76\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 77\n// module chunks = 1","\n\n    var env = require('zrender/lib/core/env');\n    var zrUtil = require('zrender/lib/core/util');\n    var get = require('../../util/model').makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/globalListener.js\n// module id = 78\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var textContain = require('zrender/lib/contain/text');\n    var formatUtil = require('../../util/format');\n    var matrix = require('zrender/lib/core/matrix');\n    var axisHelper = require('../../coord/axisHelper');\n    var AxisBuilder = require('../axis/AxisBuilder');\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var textStyleModel = labelModel.getModel('textStyle');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = textStyleModel.getFont();\n        var textRect = textContain.getBoundingRect(\n            text, font, labelPos.textAlign, labelPos.textBaseline\n        );\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            style: {\n                text: text,\n                textFont: font,\n                textFill: textStyleModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/viewHelper.js\n// module id = 79\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var matrix = require('zrender/lib/core/matrix');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function'\n                            ? textColor(\n                                // (1) In category axis with data zoom, tick is not the original\n                                // index of axis.data. So tick should not be exposed to user\n                                // in category axis.\n                                // (2) Compatible with previous version, which always returns labelStr.\n                                // But in interval scale labelStr is like '223,445', which maked\n                                // user repalce ','. So we modify it to return original val but remain\n                                // it as 'string' to avoid error in replacing.\n                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                                index\n                            )\n                            : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.textVerticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axis/AxisBuilder.js\n// module id = 80\n// module chunks = 1","\n\n    var axisPointerModelHelper = require('../axisPointer/modelHelper');\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axis/AxisView.js\n// module id = 81\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 82\n// module chunks = 1","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/gridSimple.js\n// module id = 83\n// module chunks = 1","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getModel('textStyle').getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/Axis.js\n// module id = 84\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/axisModelCommonMixin.js\n// module id = 85\n// module chunks = 1","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/cartesian/AxisModel.js\n// module id = 86\n// module chunks = 1","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (\n                        axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis)\n                    )) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (!ignoreContainLabel && gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            // dataSampling requires axis extent, so resize\n            // should be performed in create stage.\n            grid.resize(gridModel, api, true);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Grid.js\n// module id = 87\n// module chunks = 1","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/mixin/colorPalette.js\n// module id = 88\n// module chunks = 1","/**\n * For testable.\n */\n\n\n    var numberUtil = require('../util/number');\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/scale/helper.js\n// module id = 89\n// module chunks = 1","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/symbol.js\n// module id = 90\n// module chunks = 1","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/util/throttle.js\n// module id = 91\n// module chunks = 1","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/Element.js\n// module id = 106\n// module chunks = 1","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/animation/Animator.js\n// module id = 107\n// module chunks = 1","\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/animation/requestAnimationFrame.js\n// module id = 108\n// module chunks = 1","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/util.js\n// module id = 109\n// module chunks = 1","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/LRU.js\n// module id = 110\n// module chunks = 1","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/guid.js\n// module id = 111\n// module chunks = 1","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/log.js\n// module id = 112\n// module chunks = 1","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n\n    var LRU = require('../core/LRU');\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Image.js\n// module id = 113\n// module chunks = 1","\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Pattern.js\n// module id = 114\n// module chunks = 1","/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textPositionRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Style.js\n// module id = 115\n// module chunks = 1","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/helper/poly.js\n// module id = 116\n// module chunks = 1","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/mixin/Transformable.js\n// module id = 117\n// module chunks = 1","/*!\n * vue-resource v1.3.4\n * https://github.com/pagekit/vue-resource\n * Released under the MIT License.\n */\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING  = 2;\n\nfunction Promise$1(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise$1.reject = function (r) {\n    return new Promise$1(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise$1.resolve = function (x) {\n    return new Promise$1(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise$1.all = function all(iterable) {\n    return new Promise$1(function (resolve, reject) {\n        var count = 0, result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$1.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise$1.race = function race(iterable) {\n    return new Promise$1(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$1.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p$1 = Promise$1.prototype;\n\np$1.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np$1.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np$1.notify = function notify() {\n    var promise = this;\n\n    nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np$1.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise$1(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np$1.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\n/**\n * Promise adapter.\n */\n\nif (typeof Promise === 'undefined') {\n    window.Promise = Promise$1;\n}\n\nfunction PromiseObj(executor, context) {\n\n    if (executor instanceof Promise) {\n        this.promise = executor;\n    } else {\n        this.promise = new Promise(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromiseObj.all = function (iterable, context) {\n    return new PromiseObj(Promise.all(iterable), context);\n};\n\nPromiseObj.resolve = function (value, context) {\n    return new PromiseObj(Promise.resolve(value), context);\n};\n\nPromiseObj.reject = function (reason, context) {\n    return new PromiseObj(Promise.reject(reason), context);\n};\n\nPromiseObj.race = function (iterable, context) {\n    return new PromiseObj(Promise.race(iterable), context);\n};\n\nvar p = PromiseObj.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new PromiseObj(this.promise.then(fulfilled, rejected), this.context);\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new PromiseObj(this.promise.catch(rejected), this.context);\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n            callback.call(this);\n            return value;\n        }, function (reason) {\n            callback.call(this);\n            return Promise.reject(reason);\n        }\n    );\n};\n\n/**\n * Utility functions.\n */\n\nvar ref = {};\nvar hasOwnProperty = ref.hasOwnProperty;\n\nvar ref$1 = [];\nvar slice = ref$1.slice;\nvar debug = false;\nvar ntick;\n\nvar inBrowser = typeof window !== 'undefined';\n\nvar Util = function (ref) {\n    var config = ref.config;\n    var nextTick = ref.nextTick;\n\n    ntick = nextTick;\n    debug = config.debug || !config.silent;\n};\n\nfunction warn(msg) {\n    if (typeof console !== 'undefined' && debug) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n}\n\nfunction error(msg) {\n    if (typeof console !== 'undefined') {\n        console.error(msg);\n    }\n}\n\nfunction nextTick(cb, ctx) {\n    return ntick(cb, ctx);\n}\n\nfunction trim(str) {\n    return str ? str.replace(/^\\s*|\\s*$/g, '') : '';\n}\n\nfunction trimEnd(str, chars) {\n\n    if (str && chars === undefined) {\n        return str.replace(/\\s+$/, '');\n    }\n\n    if (!str || !chars) {\n        return str;\n    }\n\n    return str.replace(new RegExp((\"[\" + chars + \"]+$\")), '');\n}\n\nfunction toLower(str) {\n    return str ? str.toLowerCase() : '';\n}\n\nfunction toUpper(str) {\n    return str ? str.toUpperCase() : '';\n}\n\nvar isArray = Array.isArray;\n\nfunction isString(val) {\n    return typeof val === 'string';\n}\n\n\n\nfunction isFunction(val) {\n    return typeof val === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n}\n\nfunction isBlob(obj) {\n    return typeof Blob !== 'undefined' && obj instanceof Blob;\n}\n\nfunction isFormData(obj) {\n    return typeof FormData !== 'undefined' && obj instanceof FormData;\n}\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = PromiseObj.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\nfunction options(fn, obj, opts) {\n\n    opts = opts || {};\n\n    if (isFunction(opts)) {\n        opts = opts.call(obj);\n    }\n\n    return merge(fn.bind({$vm: obj, $options: opts}), fn, {$options: opts});\n}\n\nfunction each(obj, iterator) {\n\n    var i, key;\n\n    if (isArray(obj)) {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (isObject(obj)) {\n        for (key in obj) {\n            if (hasOwnProperty.call(obj, key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n}\n\nvar assign = Object.assign || _assign;\n\nfunction merge(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source, true);\n    });\n\n    return target;\n}\n\nfunction defaults(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n\n        for (var key in source) {\n            if (target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n\n    });\n\n    return target;\n}\n\nfunction _assign(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source);\n    });\n\n    return target;\n}\n\nfunction _merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (isArray(source[key]) && !isArray(target[key])) {\n                target[key] = [];\n            }\n            _merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\n/**\n * Root Prefix Transform.\n */\n\nvar root = function (options$$1, next) {\n\n    var url = next(options$$1);\n\n    if (isString(options$$1.root) && !/^(https?:)?\\//.test(url)) {\n        url = trimEnd(options$$1.root, '/') + '/' + url;\n    }\n\n    return url;\n};\n\n/**\n * Query Parameter Transform.\n */\n\nvar query = function (options$$1, next) {\n\n    var urlParams = Object.keys(Url.options.params), query = {}, url = next(options$$1);\n\n    each(options$$1.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = Url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n};\n\n/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nfunction expand(url, params, variables) {\n\n    var tmpl = parse(url), expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n}\n\nfunction parse(template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'], variables = [];\n\n    return {\n        vars: variables,\n        expand: function expand(context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null, values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n\n                } else {\n                    return encodeReserved(literal);\n                }\n            });\n        }\n    };\n}\n\nfunction getValues(context, operator, key, modifier) {\n\n    var value = context[key], result = [];\n\n    if (isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n\n                if (isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n}\n\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n}\n\nfunction encodeValue(operator, value, key) {\n\n    value = (operator === '+' || operator === '#') ? encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n}\n\nfunction encodeReserved(str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n}\n\n/**\n * URL Template (RFC 6570) Transform.\n */\n\nvar template = function (options) {\n\n    var variables = [], url = expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n};\n\n/**\n * Service for URL templating.\n */\n\nfunction Url(url, params) {\n\n    var self = this || {}, options$$1 = url, transform;\n\n    if (isString(url)) {\n        options$$1 = {url: url, params: params};\n    }\n\n    options$$1 = merge({}, Url.options, self.$options, options$$1);\n\n    Url.transforms.forEach(function (handler) {\n\n        if (isString(handler)) {\n            handler = Url.transform[handler];\n        }\n\n        if (isFunction(handler)) {\n            transform = factory(handler, transform, self.$vm);\n        }\n\n    });\n\n    return transform(options$$1);\n}\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transform = {template: template, query: query, root: root};\nUrl.transforms = ['template', 'query', 'root'];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [], escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    var el = document.createElement('a');\n\n    if (document.documentMode) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options$$1) {\n        return handler.call(vm, options$$1, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = isArray(obj), plain = isPlainObject(obj), hash;\n\n    each(obj, function (value, key) {\n\n        hash = isObject(value) || isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\n/**\n * XDomain client (Internet Explorer).\n */\n\nvar xdrClient = function (request) {\n    return new PromiseObj(function (resolve) {\n\n        var xdr = new XDomainRequest(), handler = function (ref) {\n            var type = ref.type;\n\n\n            var status = 0;\n\n            if (type === 'load') {\n                status = 200;\n            } else if (type === 'error') {\n                status = 500;\n            }\n\n            resolve(request.respondWith(xdr.responseText, {status: status}));\n        };\n\n        request.abort = function () { return xdr.abort(); };\n\n        xdr.open(request.method, request.getUrl());\n\n        if (request.timeout) {\n            xdr.timeout = request.timeout;\n        }\n\n        xdr.onload = handler;\n        xdr.onabort = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = handler;\n        xdr.onprogress = function () {};\n        xdr.send(request.getBody());\n    });\n};\n\n/**\n * CORS Interceptor.\n */\n\nvar SUPPORTS_CORS = inBrowser && 'withCredentials' in new XMLHttpRequest();\n\nvar cors = function (request, next) {\n\n    if (inBrowser) {\n\n        var orgUrl = Url.parse(location.href);\n        var reqUrl = Url.parse(request.getUrl());\n\n        if (reqUrl.protocol !== orgUrl.protocol || reqUrl.host !== orgUrl.host) {\n\n            request.crossOrigin = true;\n            request.emulateHTTP = false;\n\n            if (!SUPPORTS_CORS) {\n                request.client = xdrClient;\n            }\n        }\n    }\n\n    next();\n};\n\n/**\n * Form data Interceptor.\n */\n\nvar form = function (request, next) {\n\n    if (isFormData(request.body)) {\n\n        request.headers.delete('Content-Type');\n\n    } else if (isObject(request.body) && request.emulateJSON) {\n\n        request.body = Url.params(request.body);\n        request.headers.set('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    next();\n};\n\n/**\n * JSON Interceptor.\n */\n\nvar json = function (request, next) {\n\n    var type = request.headers.get('Content-Type') || '';\n\n    if (isObject(request.body) && type.indexOf('application/json') === 0) {\n        request.body = JSON.stringify(request.body);\n    }\n\n    next(function (response) {\n\n        return response.bodyText ? when(response.text(), function (text) {\n\n            type = response.headers.get('Content-Type') || '';\n\n            if (type.indexOf('application/json') === 0 || isJson(text)) {\n\n                try {\n                    response.body = JSON.parse(text);\n                } catch (e) {\n                    response.body = null;\n                }\n\n            } else {\n                response.body = text;\n            }\n\n            return response;\n\n        }) : response;\n\n    });\n};\n\nfunction isJson(str) {\n\n    var start = str.match(/^\\[|^\\{(?!\\{)/), end = {'[': /]$/, '{': /}$/};\n\n    return start && end[start[0]].test(str);\n}\n\n/**\n * JSONP client (Browser).\n */\n\nvar jsonpClient = function (request) {\n    return new PromiseObj(function (resolve) {\n\n        var name = request.jsonp || 'callback', callback = request.jsonpCallback || '_jsonp' + Math.random().toString(36).substr(2), body = null, handler, script;\n\n        handler = function (ref) {\n            var type = ref.type;\n\n\n            var status = 0;\n\n            if (type === 'load' && body !== null) {\n                status = 200;\n            } else if (type === 'error') {\n                status = 500;\n            }\n\n            if (status && window[callback]) {\n                delete window[callback];\n                document.body.removeChild(script);\n            }\n\n            resolve(request.respondWith(body, {status: status}));\n        };\n\n        window[callback] = function (result) {\n            body = JSON.stringify(result);\n        };\n\n        request.abort = function () {\n            handler({type: 'abort'});\n        };\n\n        request.params[name] = callback;\n\n        if (request.timeout) {\n            setTimeout(request.abort, request.timeout);\n        }\n\n        script = document.createElement('script');\n        script.src = request.getUrl();\n        script.type = 'text/javascript';\n        script.async = true;\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n};\n\n/**\n * JSONP Interceptor.\n */\n\nvar jsonp = function (request, next) {\n\n    if (request.method == 'JSONP') {\n        request.client = jsonpClient;\n    }\n\n    next();\n};\n\n/**\n * Before Interceptor.\n */\n\nvar before = function (request, next) {\n\n    if (isFunction(request.before)) {\n        request.before.call(this, request);\n    }\n\n    next();\n};\n\n/**\n * HTTP method override Interceptor.\n */\n\nvar method = function (request, next) {\n\n    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n        request.headers.set('X-HTTP-Method-Override', request.method);\n        request.method = 'POST';\n    }\n\n    next();\n};\n\n/**\n * Header Interceptor.\n */\n\nvar header = function (request, next) {\n\n    var headers = assign({}, Http.headers.common,\n        !request.crossOrigin ? Http.headers.custom : {},\n        Http.headers[toLower(request.method)]\n    );\n\n    each(headers, function (value, name) {\n        if (!request.headers.has(name)) {\n            request.headers.set(name, value);\n        }\n    });\n\n    next();\n};\n\n/**\n * XMLHttp client (Browser).\n */\n\nvar xhrClient = function (request) {\n    return new PromiseObj(function (resolve) {\n\n        var xhr = new XMLHttpRequest(), handler = function (event) {\n\n            var response = request.respondWith(\n                'response' in xhr ? xhr.response : xhr.responseText, {\n                    status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n                    statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText)\n                }\n            );\n\n            each(trim(xhr.getAllResponseHeaders()).split('\\n'), function (row) {\n                response.headers.append(row.slice(0, row.indexOf(':')), row.slice(row.indexOf(':') + 1));\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () { return xhr.abort(); };\n\n        if (request.progress) {\n            if (request.method === 'GET') {\n                xhr.addEventListener('progress', request.progress);\n            } else if (/^(POST|PUT)$/i.test(request.method)) {\n                xhr.upload.addEventListener('progress', request.progress);\n            }\n        }\n\n        xhr.open(request.method, request.getUrl(), true);\n\n        if (request.timeout) {\n            xhr.timeout = request.timeout;\n        }\n\n        if (request.responseType && 'responseType' in xhr) {\n            xhr.responseType = request.responseType;\n        }\n\n        if (request.withCredentials || request.credentials) {\n            xhr.withCredentials = true;\n        }\n\n        if (!request.crossOrigin) {\n            request.headers.set('X-Requested-With', 'XMLHttpRequest');\n        }\n\n        request.headers.forEach(function (value, name) {\n            xhr.setRequestHeader(name, value);\n        });\n\n        xhr.onload = handler;\n        xhr.onabort = handler;\n        xhr.onerror = handler;\n        xhr.ontimeout = handler;\n        xhr.send(request.getBody());\n    });\n};\n\n/**\n * Http client (Node).\n */\n\nvar nodeClient = function (request) {\n\n    var client = require('got');\n\n    return new PromiseObj(function (resolve) {\n\n        var url = request.getUrl();\n        var body = request.getBody();\n        var method = request.method;\n        var headers = {}, handler;\n\n        request.headers.forEach(function (value, name) {\n            headers[name] = value;\n        });\n\n        client(url, {body: body, method: method, headers: headers}).then(handler = function (resp) {\n\n            var response = request.respondWith(resp.body, {\n                    status: resp.statusCode,\n                    statusText: trim(resp.statusMessage)\n                }\n            );\n\n            each(resp.headers, function (value, name) {\n                response.headers.set(name, value);\n            });\n\n            resolve(response);\n\n        }, function (error$$1) { return handler(error$$1.response); });\n    });\n};\n\n/**\n * Base client.\n */\n\nvar Client = function (context) {\n\n    var reqHandlers = [sendRequest], resHandlers = [], handler;\n\n    if (!isObject(context)) {\n        context = null;\n    }\n\n    function Client(request) {\n        return new PromiseObj(function (resolve, reject) {\n\n            function exec() {\n\n                handler = reqHandlers.pop();\n\n                if (isFunction(handler)) {\n                    handler.call(context, request, next);\n                } else {\n                    warn((\"Invalid interceptor of type \" + (typeof handler) + \", must be a function\"));\n                    next();\n                }\n            }\n\n            function next(response) {\n\n                if (isFunction(response)) {\n\n                    resHandlers.unshift(response);\n\n                } else if (isObject(response)) {\n\n                    resHandlers.forEach(function (handler) {\n                        response = when(response, function (response) {\n                            return handler.call(context, response) || response;\n                        }, reject);\n                    });\n\n                    when(response, resolve, reject);\n\n                    return;\n                }\n\n                exec();\n            }\n\n            exec();\n\n        }, context);\n    }\n\n    Client.use = function (handler) {\n        reqHandlers.push(handler);\n    };\n\n    return Client;\n};\n\nfunction sendRequest(request, resolve) {\n\n    var client = request.client || (inBrowser ? xhrClient : nodeClient);\n\n    resolve(client(request));\n}\n\n/**\n * HTTP Headers.\n */\n\nvar Headers = function Headers(headers) {\n    var this$1 = this;\n\n\n    this.map = {};\n\n    each(headers, function (value, name) { return this$1.append(name, value); });\n};\n\nHeaders.prototype.has = function has (name) {\n    return getName(this.map, name) !== null;\n};\n\nHeaders.prototype.get = function get (name) {\n\n    var list = this.map[getName(this.map, name)];\n\n    return list ? list.join() : null;\n};\n\nHeaders.prototype.getAll = function getAll (name) {\n    return this.map[getName(this.map, name)] || [];\n};\n\nHeaders.prototype.set = function set (name, value) {\n    this.map[normalizeName(getName(this.map, name) || name)] = [trim(value)];\n};\n\nHeaders.prototype.append = function append (name, value){\n\n    var list = this.map[getName(this.map, name)];\n\n    if (list) {\n        list.push(trim(value));\n    } else {\n        this.set(name, value);\n    }\n};\n\nHeaders.prototype.delete = function delete$1 (name){\n    delete this.map[getName(this.map, name)];\n};\n\nHeaders.prototype.deleteAll = function deleteAll (){\n    this.map = {};\n};\n\nHeaders.prototype.forEach = function forEach (callback, thisArg) {\n        var this$1 = this;\n\n    each(this.map, function (list, name) {\n        each(list, function (value) { return callback.call(thisArg, value, name, this$1); });\n    });\n};\n\nfunction getName(map, name) {\n    return Object.keys(map).reduce(function (prev, curr) {\n        return toLower(name) === toLower(curr) ? curr : prev;\n    }, null);\n}\n\nfunction normalizeName(name) {\n\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n        throw new TypeError('Invalid character in header field name');\n    }\n\n    return trim(name);\n}\n\n/**\n * HTTP Response.\n */\n\nvar Response = function Response(body, ref) {\n    var url = ref.url;\n    var headers = ref.headers;\n    var status = ref.status;\n    var statusText = ref.statusText;\n\n\n    this.url = url;\n    this.ok = status >= 200 && status < 300;\n    this.status = status || 0;\n    this.statusText = statusText || '';\n    this.headers = new Headers(headers);\n    this.body = body;\n\n    if (isString(body)) {\n\n        this.bodyText = body;\n\n    } else if (isBlob(body)) {\n\n        this.bodyBlob = body;\n\n        if (isBlobText(body)) {\n            this.bodyText = blobText(body);\n        }\n    }\n};\n\nResponse.prototype.blob = function blob () {\n    return when(this.bodyBlob);\n};\n\nResponse.prototype.text = function text () {\n    return when(this.bodyText);\n};\n\nResponse.prototype.json = function json () {\n    return when(this.text(), function (text) { return JSON.parse(text); });\n};\n\nObject.defineProperty(Response.prototype, 'data', {\n\n    get: function get() {\n        return this.body;\n    },\n\n    set: function set(body) {\n        this.body = body;\n    }\n\n});\n\nfunction blobText(body) {\n    return new PromiseObj(function (resolve) {\n\n        var reader = new FileReader();\n\n        reader.readAsText(body);\n        reader.onload = function () {\n            resolve(reader.result);\n        };\n\n    });\n}\n\nfunction isBlobText(body) {\n    return body.type.indexOf('text') === 0 || body.type.indexOf('json') !== -1;\n}\n\n/**\n * HTTP Request.\n */\n\nvar Request = function Request(options$$1) {\n\n    this.body = null;\n    this.params = {};\n\n    assign(this, options$$1, {\n        method: toUpper(options$$1.method || 'GET')\n    });\n\n    if (!(this.headers instanceof Headers)) {\n        this.headers = new Headers(this.headers);\n    }\n};\n\nRequest.prototype.getUrl = function getUrl (){\n    return Url(this);\n};\n\nRequest.prototype.getBody = function getBody (){\n    return this.body;\n};\n\nRequest.prototype.respondWith = function respondWith (body, options$$1) {\n    return new Response(body, assign(options$$1 || {}, {url: this.getUrl()}));\n};\n\n/**\n * Service for sending network requests.\n */\n\nvar COMMON_HEADERS = {'Accept': 'application/json, text/plain, */*'};\nvar JSON_CONTENT_TYPE = {'Content-Type': 'application/json;charset=utf-8'};\n\nfunction Http(options$$1) {\n\n    var self = this || {}, client = Client(self.$vm);\n\n    defaults(options$$1 || {}, self.$options, Http.options);\n\n    Http.interceptors.forEach(function (handler) {\n\n        if (isString(handler)) {\n            handler = Http.interceptor[handler];\n        }\n\n        if (isFunction(handler)) {\n            client.use(handler);\n        }\n\n    });\n\n    return client(new Request(options$$1)).then(function (response) {\n\n        return response.ok ? response : PromiseObj.reject(response);\n\n    }, function (response) {\n\n        if (response instanceof Error) {\n            error(response);\n        }\n\n        return PromiseObj.reject(response);\n    });\n}\n\nHttp.options = {};\n\nHttp.headers = {\n    put: JSON_CONTENT_TYPE,\n    post: JSON_CONTENT_TYPE,\n    patch: JSON_CONTENT_TYPE,\n    delete: JSON_CONTENT_TYPE,\n    common: COMMON_HEADERS,\n    custom: {}\n};\n\nHttp.interceptor = {before: before, method: method, jsonp: jsonp, json: json, form: form, header: header, cors: cors};\nHttp.interceptors = ['before', 'method', 'jsonp', 'json', 'form', 'header', 'cors'];\n\n['get', 'delete', 'head', 'jsonp'].forEach(function (method$$1) {\n\n    Http[method$$1] = function (url, options$$1) {\n        return this(assign(options$$1 || {}, {url: url, method: method$$1}));\n    };\n\n});\n\n['post', 'put', 'patch'].forEach(function (method$$1) {\n\n    Http[method$$1] = function (url, body, options$$1) {\n        return this(assign(options$$1 || {}, {url: url, method: method$$1, body: body}));\n    };\n\n});\n\n/**\n * Service for interacting with RESTful services.\n */\n\nfunction Resource(url, params, actions, options$$1) {\n\n    var self = this || {}, resource = {};\n\n    actions = assign({},\n        Resource.actions,\n        actions\n    );\n\n    each(actions, function (action, name) {\n\n        action = merge({url: url, params: assign({}, params)}, options$$1, action);\n\n        resource[name] = function () {\n            return (self.$http || Http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options$$1 = assign({}, action), params = {}, body;\n\n    switch (args.length) {\n\n        case 2:\n\n            params = args[0];\n            body = args[1];\n\n            break;\n\n        case 1:\n\n            if (/^(POST|PUT|PATCH)$/i.test(options$$1.method)) {\n                body = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 2 arguments [params, body], got ' + args.length + ' arguments';\n    }\n\n    options$$1.body = body;\n    options$$1.params = assign({}, options$$1.params, params);\n\n    return options$$1;\n}\n\nResource.actions = {\n\n    get: {method: 'GET'},\n    save: {method: 'POST'},\n    query: {method: 'GET'},\n    update: {method: 'PUT'},\n    remove: {method: 'DELETE'},\n    delete: {method: 'DELETE'}\n\n};\n\n/**\n * Install plugin.\n */\n\nfunction plugin(Vue) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    Util(Vue);\n\n    Vue.url = Url;\n    Vue.http = Http;\n    Vue.resource = Resource;\n    Vue.Promise = PromiseObj;\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function get() {\n                return options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function get() {\n                return options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function get() {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function get() {\n                var this$1 = this;\n\n                return function (executor) { return new Vue.Promise(executor, this$1); };\n            }\n        }\n\n    });\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin);\n}\n\nexport default plugin;\nexport { Url, Http, Resource };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-resource@1.3.4@vue-resource/dist/vue-resource.es2015.js\n// module id = 120\n// module chunks = 1","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_babel-runtime@6.23.0@babel-runtime/core-js/object/assign.js\n// module id = 187\n// module chunks = 1","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_babel-runtime@6.23.0@babel-runtime/core-js/object/define-property.js\n// module id = 188\n// module chunks = 1","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_babel-runtime@6.23.0@babel-runtime/helpers/defineProperty.js\n// module id = 189\n// module chunks = 1","var core  = require('../../modules/_core')\n  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\nmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/fn/json/stringify.js\n// module id = 190\n// module chunks = 1","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/fn/object/assign.js\n// module id = 191\n// module chunks = 1","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc){\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/fn/object/define-property.js\n// module id = 192\n// module chunks = 1","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_a-function.js\n// module id = 193\n// module chunks = 1","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_an-object.js\n// module id = 194\n// module chunks = 1","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length')\n  , toIndex   = require('./_to-index');\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_array-includes.js\n// module id = 195\n// module chunks = 1","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_cof.js\n// module id = 196\n// module chunks = 1","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_ctx.js\n// module id = 197\n// module chunks = 1","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_dom-create.js\n// module id = 198\n// module chunks = 1","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_enum-bug-keys.js\n// module id = 199\n// module chunks = 1","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_has.js\n// module id = 200\n// module chunks = 1","var dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_hide.js\n// module id = 201\n// module chunks = 1","module.exports = !require('./_descriptors') && !require('./_fails')(function(){\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_ie8-dom-define.js\n// module id = 202\n// module chunks = 1","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys  = require('./_object-keys')\n  , gOPS     = require('./_object-gops')\n  , pIE      = require('./_object-pie')\n  , toObject = require('./_to-object')\n  , IObject  = require('./_iobject')\n  , $assign  = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function(){\n  var A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getSymbols = gOPS.f\n    , isEnum     = pIE.f;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  } return T;\n} : $assign;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_object-assign.js\n// module id = 203\n// module chunks = 1","exports.f = Object.getOwnPropertySymbols;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_object-gops.js\n// module id = 204\n// module chunks = 1","var has          = require('./_has')\n  , toIObject    = require('./_to-iobject')\n  , arrayIndexOf = require('./_array-includes')(false)\n  , IE_PROTO     = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_object-keys-internal.js\n// module id = 205\n// module chunks = 1","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = require('./_object-keys-internal')\n  , enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_object-keys.js\n// module id = 206\n// module chunks = 1","exports.f = {}.propertyIsEnumerable;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_object-pie.js\n// module id = 207\n// module chunks = 1","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_property-desc.js\n// module id = 208\n// module chunks = 1","var shared = require('./_shared')('keys')\n  , uid    = require('./_uid');\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_shared-key.js\n// module id = 209\n// module chunks = 1","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_shared.js\n// module id = 210\n// module chunks = 1","var toInteger = require('./_to-integer')\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_to-index.js\n// module id = 211\n// module chunks = 1","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_to-length.js\n// module id = 212\n// module chunks = 1","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_to-object.js\n// module id = 213\n// module chunks = 1","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_to-primitive.js\n// module id = 214\n// module chunks = 1","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/_uid.js\n// module id = 215\n// module chunks = 1","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', {assign: require('./_object-assign')});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/es6.object.assign.js\n// module id = 216\n// module chunks = 1","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', {defineProperty: require('./_object-dp').f});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.4.1@core-js/library/modules/es6.object.define-property.js\n// module id = 217\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/ExtensionAPI.js\n// module id = 218\n// module chunks = 1","\n\n    module.exports = require('./BaseBarSeries').extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/bar/BarSeries.js\n// module id = 219\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var helper = require('./helper');\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(require('../../model/Model').prototype, require('./barItemStyle'));\n\n    var BarView = require('../../echarts').extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d'\n                || coordinateSystemType === 'polar'\n            ) {\n                this._render(seriesModel, ecModel, api);\n            }\n            else if (__DEV__) {\n                console.warn('Only cartesian2d and polar supported for bar.');\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _render: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var coord = seriesModel.coordinateSystem;\n            var baseAxis = coord.getBaseAxis();\n            var isHorizontalOrRadial;\n\n            if (coord.type === 'cartesian2d') {\n                isHorizontalOrRadial = baseAxis.isHorizontal();\n            }\n            else if (coord.type === 'polar') {\n                isHorizontalOrRadial = baseAxis.dim === 'angle';\n            }\n\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getLayout[coord.type](data, dataIndex, itemModel);\n                    var el = elementCreator[coord.type](\n                        data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel\n                    );\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, dataIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = elementCreator[coord.type](\n                            data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true\n                        );\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, newIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    if (coord.type === 'cartesian2d') {\n                        el && removeRect(dataIndex, animationModel, el);\n                    }\n                    else {\n                        el && removeSector(dataIndex, animationModel, el);\n                    }\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        if (el.type === 'sector') {\n                            removeSector(el.dataIndex, ecModel, el);\n                        }\n                        else {\n                            removeRect(el.dataIndex, ecModel, el);\n                        }\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    var elementCreator = {\n\n        cartesian2d: function (\n            data, dataIndex, itemModel, layout, isHorizontal,\n            animationModel, isUpdate\n        ) {\n            var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var rectShape = rect.shape;\n                var animateProperty = isHorizontal ? 'height' : 'width';\n                var animateTarget = {};\n                rectShape[animateProperty] = 0;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return rect;\n        },\n\n        polar: function (\n            data, dataIndex, itemModel, layout, isRadial,\n            animationModel, isUpdate\n        ) {\n            var sector = new graphic.Sector({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var sectorShape = sector.shape;\n                var animateProperty = isRadial ? 'r' : 'endAngle';\n                var animateTarget = {};\n                sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return sector;\n        }\n    };\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function removeSector(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                r: el.shape.r0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    var getLayout = {\n        cartesian2d: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            var fixedLineWidth = getLineWidth(itemModel, layout);\n\n            // fix layout with lineWidth\n            var signX = layout.width > 0 ? 1 : -1;\n            var signY = layout.height > 0 ? 1 : -1;\n            return {\n                x: layout.x + signX * fixedLineWidth / 2,\n                y: layout.y + signY * fixedLineWidth / 2,\n                width: layout.width - signX * fixedLineWidth,\n                height: layout.height - signY * fixedLineWidth\n            };\n        },\n\n        polar: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            return {\n                cx: layout.cx,\n                cy: layout.cy,\n                r0: layout.r0,\n                r: layout.r,\n                startAngle: layout.startAngle,\n                endAngle: layout.endAngle\n            };\n        }\n    };\n\n    function updateStyle(\n        el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar\n    ) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        if (!isPolar) {\n            el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n        }\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var cursorStyle = itemModel.getShallow('cursor');\n        cursorStyle && el.attr('cursor', cursorStyle);\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        if (!isPolar) {\n            helper.setLabel(\n                el.style, hoverStyle, itemModel, color,\n                seriesModel, dataIndex, labelPositionOutside\n            );\n        }\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/bar/BarView.js\n// module id = 220\n// module chunks = 1","'use strict';\n\n\n    var SeriesModel = require('../../model/Series');\n    var createListFromArray = require('../helper/createListFromArray');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n            // 最小角度为0，仅对极坐标系下的柱状图有效\n            barMinAngle: 0,\n            // cursor: null,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                normal: {\n                    // color: '各异'\n                },\n                emphasis: {}\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/bar/BaseBarSeries.js\n// module id = 221\n// module chunks = 1","\n\n\n    var getBarItemStyle = require('../../model/mixin/makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/bar/barItemStyle.js\n// module id = 222\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        if (labelModel.get('show')) {\n            setLabel(\n                normalStyle, labelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            normalStyle.text = '';\n        }\n\n        if (hoverLabelModel.get('show')) {\n            setLabel(\n                hoverStyle, hoverLabelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            hoverStyle.text = '';\n        }\n    };\n\n    function setLabel(style, model, color, labelText, labelPositionOutside) {\n        graphic.setText(style, model, color);\n        style.text = labelText;\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/bar/helper.js\n// module id = 223\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SeriesModel = require('../../model/Series');\n    var whiskerBoxCommon = require('../helper/whiskerBoxCommon');\n\n    var CandlestickSeries = SeriesModel.extend({\n\n        type: 'series.candlestick',\n\n        dependencies: ['xAxis', 'yAxis', 'grid'],\n\n        /**\n         * @readOnly\n         */\n        defaultValueDimensions: ['open', 'close', 'lowest', 'highest'],\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: null,\n\n        /**\n         * @override\n         */\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            layout: null, // 'horizontal' or 'vertical'\n\n            itemStyle: {\n                normal: {\n                    color: '#c23531', // 阳线 positive\n                    color0: '#314656', // 阴线 negative     '#c23531', '#314656'\n                    borderWidth: 1,\n                    // FIXME\n                    // ec2中使用的是lineStyle.color 和 lineStyle.color0\n                    borderColor: '#c23531',\n                    borderColor0: '#314656'\n                },\n                emphasis: {\n                    borderWidth: 2\n                }\n            },\n\n            barMaxWidth: null,\n            barMinWidth: null,\n            barWidth: null,\n\n            animationUpdate: false,\n            animationEasing: 'linear',\n            animationDuration: 300\n        },\n\n        /**\n         * Get dimension for shadow in dataZoom\n         * @return {string} dimension name\n         */\n        getShadowDim: function () {\n            return 'open';\n        },\n\n        brushSelector: function (dataIndex, data, selectors) {\n            var itemLayout = data.getItemLayout(dataIndex);\n            return selectors.rect(itemLayout.brushRect);\n        }\n\n    });\n\n    zrUtil.mixin(CandlestickSeries, whiskerBoxCommon.seriesModelMixin, true);\n\n    module.exports = CandlestickSeries;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/candlestick/CandlestickSeries.js\n// module id = 224\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var ChartView = require('../../view/Chart');\n    var graphic = require('../../util/graphic');\n    var whiskerBoxCommon = require('../helper/whiskerBoxCommon');\n\n    var CandlestickView = ChartView.extend({\n\n        type: 'candlestick',\n\n        getStyleUpdater: function () {\n            return updateStyle;\n        },\n\n        dispose: zrUtil.noop\n    });\n\n    zrUtil.mixin(CandlestickView, whiskerBoxCommon.viewMixin, true);\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n\n    function updateStyle(itemGroup, data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n        var color = data.getItemVisual(idx, 'color');\n        var borderColor = data.getItemVisual(idx, 'borderColor') || color;\n\n        // Color must be excluded.\n        // Because symbol provide setColor individually to set fill and stroke\n        var itemStyle = normalItemStyleModel.getItemStyle(\n            ['color', 'color0', 'borderColor', 'borderColor0']\n        );\n\n        var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n        whiskerEl.useStyle(itemStyle);\n        whiskerEl.style.stroke = borderColor;\n\n        var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n        bodyEl.useStyle(itemStyle);\n        bodyEl.style.fill = color;\n        bodyEl.style.stroke = borderColor;\n\n        var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n        graphic.setHoverStyle(itemGroup, hoverStyle);\n    }\n\n\n    module.exports = CandlestickView;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/candlestick/CandlestickView.js\n// module id = 225\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var retrieve = require('zrender/lib/core/util').retrieve;\n    var parsePercent = require('../../util/number').parsePercent;\n\n    module.exports = function (ecModel) {\n\n        ecModel.eachSeriesByType('candlestick', function (seriesModel) {\n\n            var coordSys = seriesModel.coordinateSystem;\n            var data = seriesModel.getData();\n            var candleWidth = calculateCandleWidth(seriesModel, data);\n            var chartLayout = seriesModel.get('layout');\n            var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n            var constDim = 1 - variableDim;\n            var coordDims = ['x', 'y'];\n            var vDims = [];\n            var cDim;\n\n            zrUtil.each(data.dimensions, function (dimName) {\n                var dimInfo = data.getDimensionInfo(dimName);\n                var coordDim = dimInfo.coordDim;\n                if (coordDim === coordDims[constDim]) {\n                    vDims.push(dimName);\n                }\n                else if (coordDim === coordDims[variableDim]) {\n                    cDim = dimName;\n                }\n            });\n\n            if (cDim == null || vDims.length < 4) {\n                return;\n            }\n\n            data.each([cDim].concat(vDims), function () {\n                var args = arguments;\n                var axisDimVal = args[0];\n                var idx = args[vDims.length + 1];\n\n                var openVal = args[1];\n                var closeVal = args[2];\n                var lowestVal = args[3];\n                var highestVal = args[4];\n\n                var ocLow = Math.min(openVal, closeVal);\n                var ocHigh = Math.max(openVal, closeVal);\n\n                var ocLowPoint = getPoint(ocLow);\n                var ocHighPoint = getPoint(ocHigh);\n                var lowestPoint = getPoint(lowestVal);\n                var highestPoint = getPoint(highestVal);\n\n                var whiskerEnds = [\n                    [highestPoint, ocHighPoint],\n                    [lowestPoint, ocLowPoint]\n                ];\n\n                var bodyEnds = [];\n                addBodyEnd(ocHighPoint, 0);\n                addBodyEnd(ocLowPoint, 1);\n\n                data.setItemLayout(idx, {\n                    chartLayout: chartLayout,\n                    sign: openVal > closeVal ? -1 : openVal < closeVal ? 1 : 0,\n                    initBaseline: openVal > closeVal\n                        ? ocHighPoint[constDim] : ocLowPoint[constDim], // open point.\n                    bodyEnds: bodyEnds,\n                    whiskerEnds: whiskerEnds,\n                    brushRect: makeBrushRect()\n                });\n\n                function getPoint(val) {\n                    var p = [];\n                    p[variableDim] = axisDimVal;\n                    p[constDim] = val;\n                    return (isNaN(axisDimVal) || isNaN(val))\n                        ? [NaN, NaN]\n                        : coordSys.dataToPoint(p);\n                }\n\n                function addBodyEnd(point, start) {\n                    var point1 = point.slice();\n                    var point2 = point.slice();\n                    point1[variableDim] += candleWidth / 2;\n                    point2[variableDim] -= candleWidth / 2;\n                    start\n                        ? bodyEnds.push(point1, point2)\n                        : bodyEnds.push(point2, point1);\n                }\n\n                function makeBrushRect() {\n                    var pmin = getPoint(Math.min(openVal, closeVal, lowestVal, highestVal));\n                    var pmax = getPoint(Math.max(openVal, closeVal, lowestVal, highestVal));\n\n                    pmin[variableDim] -= candleWidth / 2;\n                    pmax[variableDim] -= candleWidth / 2;\n\n                    return {\n                        x: pmin[0],\n                        y: pmin[1],\n                        width: constDim ? candleWidth : pmax[0] - pmin[0],\n                        height: constDim ? pmax[1] - pmin[1] : candleWidth\n                    };\n                }\n\n            }, true);\n        });\n    };\n\n    function calculateCandleWidth(seriesModel, data) {\n        var baseAxis = seriesModel.getBaseAxis();\n        var extent;\n\n        var bandWidth = baseAxis.type === 'category'\n            ? baseAxis.getBandWidth()\n            : (\n                extent = baseAxis.getExtent(),\n                Math.abs(extent[1] - extent[0]) / data.count()\n            );\n\n        var barMaxWidth = parsePercent(\n            retrieve(seriesModel.get('barMaxWidth'), bandWidth),\n            bandWidth\n        );\n        var barMinWidth = parsePercent(\n            retrieve(seriesModel.get('barMinWidth'), 1),\n            bandWidth\n        );\n        var barWidth = seriesModel.get('barWidth');\n        return barWidth != null\n            ? parsePercent(barWidth, bandWidth)\n            // Put max outer to ensure bar visible in spite of overlap.\n            : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/candlestick/candlestickLayout.js\n// module id = 226\n// module chunks = 1","\n\n    var positiveBorderColorQuery = ['itemStyle', 'normal', 'borderColor'];\n    var negativeBorderColorQuery = ['itemStyle', 'normal', 'borderColor0'];\n    var positiveColorQuery = ['itemStyle', 'normal', 'color'];\n    var negativeColorQuery = ['itemStyle', 'normal', 'color0'];\n\n    module.exports = function (ecModel, api) {\n\n        ecModel.eachRawSeriesByType('candlestick', function (seriesModel) {\n\n            var data = seriesModel.getData();\n\n            data.setVisual({\n                legendSymbol: 'roundRect'\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var sign = data.getItemLayout(idx).sign;\n\n                    data.setItemVisual(\n                        idx,\n                        {\n                            color: itemModel.get(\n                                sign > 0 ? positiveColorQuery : negativeColorQuery\n                            ),\n                            borderColor: itemModel.get(\n                                sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery\n                            )\n                        }\n                    );\n                });\n            }\n        });\n\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/candlestick/candlestickVisual.js\n// module id = 227\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (option) {\n        if (!option || !zrUtil.isArray(option.series)) {\n            return;\n        }\n\n        // Translate 'k' to 'candlestick'.\n        zrUtil.each(option.series, function (seriesItem) {\n            if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n                seriesItem.type = 'candlestick';\n            }\n        });\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/candlestick/preprocessor.js\n// module id = 228\n// module chunks = 1","/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var Symbol = require('./Symbol');\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis'),\n            cursorStyle: seriesModel.get('cursor')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/helper/SymbolDraw.js\n// module id = 229\n// module chunks = 1","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var Path = require('zrender/lib/graphic/Path');\n\n    var WhiskerPath = Path.extend({\n\n        type: 'whiskerInBox',\n\n        shape: {},\n\n        buildPath: function (ctx, shape) {\n            for (var i in shape) {\n                if (shape.hasOwnProperty(i) && i.indexOf('ends') === 0) {\n                    var pts = shape[i];\n                    ctx.moveTo(pts[0][0], pts[0][1]);\n                    ctx.lineTo(pts[1][0], pts[1][1]);\n                }\n            }\n        }\n    });\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/WhiskerBox}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @param {Function} styleUpdater\n     * @param {boolean} isInit\n     * @extends {module:zrender/graphic/Group}\n     */\n    function WhiskerBox(data, idx, styleUpdater, isInit) {\n        graphic.Group.call(this);\n\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.bodyIndex;\n\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.whiskerIndex;\n\n        /**\n         * @type {Function}\n         */\n        this.styleUpdater = styleUpdater;\n\n        this._createContent(data, idx, isInit);\n\n        this.updateData(data, idx, isInit);\n\n        /**\n         * Last series model.\n         * @type {module:echarts/model/Series}\n         */\n        this._seriesModel;\n    }\n\n    var whiskerBoxProto = WhiskerBox.prototype;\n\n    whiskerBoxProto._createContent = function (data, idx, isInit) {\n        var itemLayout = data.getItemLayout(idx);\n        var constDim = itemLayout.chartLayout === 'horizontal' ? 1 : 0;\n        var count = 0;\n\n        // Whisker element.\n        this.add(new graphic.Polygon({\n            shape: {\n                points: isInit\n                    ? transInit(itemLayout.bodyEnds, constDim, itemLayout)\n                    : itemLayout.bodyEnds\n            },\n            style: {strokeNoScale: true},\n            z2: 100\n        }));\n        this.bodyIndex = count++;\n\n        // Box element.\n        var whiskerEnds = zrUtil.map(itemLayout.whiskerEnds, function (ends) {\n            return isInit ? transInit(ends, constDim, itemLayout) : ends;\n        });\n        this.add(new WhiskerPath({\n            shape: makeWhiskerEndsShape(whiskerEnds),\n            style: {strokeNoScale: true},\n            z2: 100\n        }));\n        this.whiskerIndex = count++;\n    };\n\n    function transInit(points, dim, itemLayout) {\n        return zrUtil.map(points, function (point) {\n            point = point.slice();\n            point[dim] = itemLayout.initBaseline;\n            return point;\n        });\n    }\n\n    function makeWhiskerEndsShape(whiskerEnds) {\n        // zr animation only support 2-dim array.\n        var shape = {};\n        zrUtil.each(whiskerEnds, function (ends, i) {\n            shape['ends' + i] = ends;\n        });\n        return shape;\n    }\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    whiskerBoxProto.updateData = function (data, idx, isInit) {\n        var seriesModel = this._seriesModel = data.hostModel;\n        var itemLayout = data.getItemLayout(idx);\n        var updateMethod = graphic[isInit ? 'initProps' : 'updateProps'];\n        // this.childAt(this.bodyIndex).stopAnimation(true);\n        // this.childAt(this.whiskerIndex).stopAnimation(true);\n        updateMethod(\n            this.childAt(this.bodyIndex),\n            {shape: {points: itemLayout.bodyEnds}},\n            seriesModel, idx\n        );\n        updateMethod(\n            this.childAt(this.whiskerIndex),\n            {shape: makeWhiskerEndsShape(itemLayout.whiskerEnds)},\n            seriesModel, idx\n        );\n\n        this.styleUpdater.call(null, this, data, idx);\n    };\n\n    zrUtil.inherits(WhiskerBox, graphic.Group);\n\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/WhiskerBoxDraw\n     */\n    function WhiskerBoxDraw(styleUpdater) {\n        this.group = new graphic.Group();\n        this.styleUpdater = styleUpdater;\n    }\n\n    var whiskerBoxDrawProto = WhiskerBoxDraw.prototype;\n\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     */\n    whiskerBoxDrawProto.updateData = function (data) {\n        var group = this.group;\n        var oldData = this._data;\n        var styleUpdater = this.styleUpdater;\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                if (data.hasValue(newIdx)) {\n                    var symbolEl = new WhiskerBox(data, newIdx, styleUpdater, true);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n                // Empty data\n                if (!data.hasValue(newIdx)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n\n                if (!symbolEl) {\n                    symbolEl = new WhiskerBox(data, newIdx, styleUpdater);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && group.remove(el);\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    /**\n     * Remove symbols.\n     * @param {module:echarts/data/List} data\n     */\n    whiskerBoxDrawProto.remove = function () {\n        var group = this.group;\n        var data = this._data;\n        this._data = null;\n        data && data.eachItemGraphicEl(function (el) {\n            el && group.remove(el);\n        });\n    };\n\n    module.exports = WhiskerBoxDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/helper/WhiskerBoxDraw.js\n// module id = 230\n// module chunks = 1","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    var helper = {};\n\n    helper.findLabelValueDim = function (data) {\n        var valueDim;\n        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\n\n        if (labelDims.length) {\n            valueDim = labelDims[0];\n        }\n        else {\n            // Get last value dim\n            var dimensions = data.dimensions.slice();\n            var dataType;\n            while (dimensions.length && (\n                valueDim = dimensions.pop(),\n                dataType = data.getDimensionInfo(valueDim).type,\n                dataType === 'ordinal' || dataType === 'time'\n            )) {} // jshint ignore:line\n        }\n\n        return valueDim;\n    };\n\n    helper.setTextToStyle = function (\n        data, dataIndex, valueDim, elStyle, seriesModel, labelModel, color\n    ) {\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                data.get(valueDim, dataIndex)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/helper/labelHelper.js\n// module id = 231\n// module chunks = 1","'use strict';\n\n\n    var createListFromArray = require('../helper/createListFromArray');\n    var SeriesModel = require('../../model/Series');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n            // cursor: null,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/line/LineSeries.js\n// module id = 232\n// module chunks = 1","'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SymbolDraw = require('../helper/SymbolDraw');\n    var Symbol = require('../helper/Symbol');\n    var lineAnimationDiff = require('./lineAnimationDiff');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var polyHelper = require('./poly');\n    var ChartView = require('../../view/Chart');\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/line/LineView.js\n// module id = 233\n// module chunks = 1","\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 234\n// module chunks = 1","// Poly path support NaN point\n\n\n    var Path = require('zrender/lib/graphic/Path');\n    var vec2 = require('zrender/lib/core/vector');\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/chart/line/poly.js\n// module id = 235\n// module chunks = 1","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/CartesianAxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axis.js\n// module id = 236\n// module chunks = 1","\n\n    var echarts = require('../echarts');\n    var axisPointerModelHelper = require('./axisPointer/modelHelper');\n    var axisTrigger = require('./axisPointer/axisTrigger');\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('./axisPointer/AxisPointerModel');\n    require('./axisPointer/AxisPointerView');\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    require('./axisPointer/CartesianAxisPointer');\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer.js\n// module id = 237\n// module chunks = 1","\n\n    var echarts = require('../../echarts');\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                textStyle: {\n                    color: '#fff'\n                },\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 238\n// module chunks = 1","\n\n    var globalListener = require('./globalListener');\n\n    var AxisPonterView = require('../../echarts').extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 239\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../../util/clazz');\n    var graphic = require('../../util/graphic');\n    var get = require('../../util/model').makeGetter();\n    var axisPointerModelHelper = require('./modelHelper');\n    var eventTool = require('zrender/lib/core/event');\n    var throttle = require('../../util/throttle');\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = createIcon(handleModel, {\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                    drift: bind(this._onHandleDragMove, this),\n                    ondragend: bind(this._onHandleDragEnd, this)\n                });\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals &= propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function createIcon(handleModel, handlers) {\n        var iconStr = handleModel.get('icon');\n        var style = {\n            x: -1, y: -1, width: 2, height: 2\n        };\n        var opt = zrUtil.extend({\n            style: {\n                strokeNoScale: true\n            },\n            rectHover: true,\n            cursor: 'move',\n            draggable: true\n        }, handlers);\n\n        return iconStr.indexOf('image://') === 0\n            ? (\n                style.image = iconStr.slice(8),\n                opt.style = style,\n                new graphic.Image(opt)\n            )\n            : graphic.makePath(\n                iconStr.replace('path://', ''),\n                opt,\n                style,\n                'center'\n            );\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 240\n// module chunks = 1","'use strict';\n\n\n    var graphic = require('../../util/graphic');\n    var BaseAxisPointer = require('./BaseAxisPointer');\n    var viewHelper = require('./viewHelper');\n    var cartesianAxisHelper = require('../axis/cartesianAxisHelper');\n    var AxisView = require('../axis/AxisView');\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 241\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var modelHelper = require('./modelHelper');\n    var findPointFromSeries = require('./findPointFromSeries');\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 242\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var AxisView = require('./AxisView');\n    var cartesianAxisHelper = require('./cartesianAxisHelper');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/axis/CartesianAxisView.js\n// module id = 243\n// module chunks = 1","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRoot;\n            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\n                x += viewportRoot.offsetLeft || 0;\n                y += viewportRoot.offsetTop || 0;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/tooltip/TooltipContent.js\n// module id = 244\n// module chunks = 1","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/tooltip/TooltipModel.js\n// module id = 245\n// module chunks = 1","\n\n    var TooltipContent = require('./TooltipContent');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var graphic = require('../../util/graphic');\n    var findPointFromSeries = require('../axisPointer/findPointFromSeries');\n    var layoutUtil = require('../../util/layout');\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n    var globalListener = require('../axisPointer/globalListener');\n    var axisHelper = require('../../coord/axisHelper');\n    var axisPointerViewHelper = require('../axisPointer/viewHelper');\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/component/tooltip/TooltipView.js\n// module id = 246\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n\n    var logAxis = zrUtil.defaults({\n        scale: true,\n        logBase: 10\n    }, valueAxis);\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/axisDefault.js\n// module id = 247\n// module chunks = 1","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/axisModelCreator.js\n// module id = 248\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Axis2D.js\n// module id = 249\n// module chunks = 1","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Cartesian.js\n// module id = 250\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 251\n// module chunks = 1","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/coord/cartesian/GridModel.js\n// module id = 252\n// module chunks = 1","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/data/DataDiffer.js\n// module id = 253\n// module chunks = 1","\n\n    var createListFromArray = require('./chart/helper/createListFromArray');\n    var symbolUtil = require('./util/symbol');\n    var axisHelper = require('./coord/axisHelper');\n    var axisModelCommonMixin = require('./coord/axisModelCommonMixin');\n    var Model = require('./model/Model');\n    var util = require('zrender/lib/core/util');\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: require('./data/helper/completeDimensions'),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/helper.js\n// module id = 254\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var parsePercent = numberUtil.parsePercent;\n\n    var STACK_PREFIX = '__ec_stack_';\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    /**\n     * @param {Object} opt\n     * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n     * @param {number} opt.count Positive interger.\n     * @param {number} [opt.barWidth]\n     * @param {number} [opt.barMaxWidth]\n     * @param {number} [opt.barGap]\n     * @param {number} [opt.barCategoryGap]\n     * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n     */\n    function getLayoutOnAxis(opt, api) {\n        var params = [];\n        var baseAxis = opt.axis;\n        var axisKey = 'axis0';\n\n        if (baseAxis.type !== 'category') {\n            return;\n        }\n        var bandWidth = baseAxis.getBandWidth();\n\n        for (var i = 0; i < opt.count || 0; i++) {\n            params.push(zrUtil.defaults({\n                bandWidth: bandWidth,\n                axisKey: axisKey,\n                stackId: STACK_PREFIX + i\n            }, opt));\n        }\n        var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n\n        var result = [];\n        for (var i = 0; i < opt.count; i++) {\n            var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n            item.offsetCenter = item.offset + item.width / 2;\n            result.push(item);\n        }\n\n        return result;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            return {\n                bandWidth: bandWidth,\n                barWidth: barWidth,\n                barMaxWidth: barMaxWidth,\n                barGap: barGap,\n                barCategoryGap: barCategoryGap,\n                axisKey: getAxisKey(baseAxis),\n                stackId: getSeriesStackId(seriesModel)\n            };\n        });\n\n        return doCalBarWidthAndOffset(seriesInfoList, api);\n    }\n\n    function doCalBarWidthAndOffset(seriesInfoList, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n            var axisKey = seriesInfo.axisKey;\n            var bandWidth = seriesInfo.bandWidth;\n            var columnsOnAxis = columnsMap[axisKey] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[axisKey] = columnsOnAxis;\n\n            var stackId = seriesInfo.stackId;\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            var barWidth = seriesInfo.barWidth;\n            if (barWidth && !stacks[stackId].width) {\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                stacks[stackId].width = barWidth;\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            var barMaxWidth = seriesInfo.barMaxWidth;\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            var barGap = seriesInfo.barGap;\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            var barCategoryGap = seriesInfo.barCategoryGap;\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    if (column.width) {\n                        maxWidth = Math.min(maxWidth, column.width);\n                    }\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            // Check series coordinate, do layout for cartesian2d only\n            if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coords = cartesian.dataToPoints(data, true);\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(valueAxis.dim, function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    barLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\n\n    module.exports = barLayoutGrid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/layout/barGrid.js\n// module id = 255\n// module chunks = 1","\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (!coordSys) {\n                return;\n            }\n\n            var dims = [];\n            var coordDims = coordSys.dimensions;\n            for (var i = 0; i < coordDims.length; i++) {\n                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n            }\n\n            if (dims.length === 1) {\n                data.each(dims[0], function (x, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                });\n            }\n            else if (dims.length === 2) {\n                data.each(dims, function (x, y, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(\n                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                    );\n                }, true);\n            }\n        });\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/layout/points.js\n// module id = 256\n// module chunks = 1","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/loading/default.js\n// module id = 257\n// module chunks = 1","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/Global.js\n// module id = 258\n// module chunks = 1","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/OptionManager.js\n// module id = 259\n// module chunks = 1","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/globalDefault.js\n// module id = 260\n// module chunks = 1","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/mixin/areaStyle.js\n// module id = 261\n// module chunks = 1","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/mixin/boxLayout.js\n// module id = 262\n// module chunks = 1","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/mixin/itemStyle.js\n// module id = 263\n// module chunks = 1","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/mixin/lineStyle.js\n// module id = 264\n// module chunks = 1","\n\n    var textContain = require('zrender/lib/contain/text');\n    var graphicUtil = require('../../util/graphic');\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/model/mixin/textStyle.js\n// module id = 265\n// module chunks = 1","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/preprocessor/backwardCompat.js\n// module id = 266\n// module chunks = 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 267\n// module chunks = 1","\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/processor/dataSample.js\n// module id = 268\n// module chunks = 1","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/scale/Log.js\n// module id = 269\n// module chunks = 1","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/scale/Ordinal.js\n// module id = 270\n// module chunks = 1","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var scaleHelper = require('./helper');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/scale/Time.js\n// module id = 271\n// module chunks = 1","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/view/Component.js\n// module id = 272\n// module chunks = 1","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/visual/seriesColor.js\n// module id = 273\n// module chunks = 1","\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.6.2@echarts/lib/visual/symbol.js\n// module id = 274\n// module chunks = 1","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.VueNativeSock=t():e.VueNativeSock=t()}(this,function(){return function(e){function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:o})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"\",t(t.s=1)}([function(e,t,n){\"use strict\";function o(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(t,\"__esModule\",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),i=function(){function e(){o(this,e),this.listeners=new Map}return r(e,[{key:\"addListener\",value:function(e,t,n){return\"function\"==typeof t&&(this.listeners.has(e)||this.listeners.set(e,[]),this.listeners.get(e).push({callback:t,vm:n}),!0)}},{key:\"removeListener\",value:function(e,t,n){var o=this.listeners.get(e),r=void 0;return!!(o&&o.length&&(r=o.reduce(function(e,o,r){return\"function\"==typeof o.callback&&o.callback===t&&o.vm===n&&(e=r),e},-1))>-1)&&(o.splice(r,1),this.listeners.set(e,o),!0)}},{key:\"emit\",value:function(e){for(var t=arguments.length,n=Array(t>1?t-1:0),o=1;o<t;o++)n[o-1]=arguments[o];var r=this.listeners.get(e);return!(!r||!r.length)&&(r.forEach(function(e){var t;(t=e.callback).call.apply(t,[e.vm].concat(n))}),!0)}}]),e}();t.default=new i},function(e,t,n){e.exports=n(2)},function(e,t,n){\"use strict\";function o(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0});var r=n(3),i=o(r),s=n(0),c=o(s);t.default={install:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!t)throw new Error(\"[vue-native-socket] cannot locate connection\");var o=new i.default(t,n);e.prototype.$socket=o.WebSocket,e.mixin({created:function(){var e=this,t=this.$options.sockets;this.$options.sockets=new Proxy({},{set:function(e,t,n){return c.default.addListener(t,n,this),e[t]=n,!0},deleteProperty:function(e,t){return c.default.removeListener(t,this.$options.sockets[t],this),delete e.key,!0}}),t&&Object.keys(t).forEach(function(n){e.$options.sockets[n]=t[n]})},beforeDestroy:function(){var e=this,t=this.$options.sockets;t&&Object.keys(t).forEach(function(t){delete e.$options.sockets[t]})}})}}},function(e,t,n){\"use strict\";function o(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(t,\"__esModule\",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),i=n(0),s=function(e){return e&&e.__esModule?e:{default:e}}(i),c=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};o(this,e),this.format=n.format&&n.format.toLowerCase(),this.connect(t,n),n.store&&(this.store=n.store),this.onEvent()}return r(e,[{key:\"connect\",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=n.protocol||\"\";this.WebSocket=n.WebSocket||(\"\"===o?new WebSocket(e):new WebSocket(e,o)),\"json\"===this.format&&(\"sendObj\"in this.WebSocket||(this.WebSocket.sendObj=function(e){return t.WebSocket.send(JSON.stringify(e))}))}},{key:\"onEvent\",value:function(){var e=this;[\"onmessage\",\"onclose\",\"onerror\",\"onopen\"].forEach(function(t){e.WebSocket[t]=function(n){s.default.emit(t,n),e.store&&e.passToStore(\"SOCKET_\"+t,n)}})}},{key:\"passToStore\",value:function(e,t){if(e.startsWith(\"SOCKET_\")){var n=\"commit\",o=e.toUpperCase(),r=t;\"json\"===this.format&&t.data&&(r=JSON.parse(t.data),o=[r.namespace||\"\",r.mutation].filter(function(e){return!!e}).join(\"/\"),r.action&&(n=\"dispatch\",o=r.action)),this.store[n](o,r)}}}]),e}();t.default=c}])});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-native-websocket@2.0.1@vue-native-websocket/dist/build.js\n// module id = 469\n// module chunks = 1","/**\n  * vue-router v2.7.0\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also regiseter instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    data.props = resolveProps(route, matched.props && matched.props[name]);\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    var val = extraQuery[key];\n    parsedQuery[key] = Array.isArray(val) ? val.slice() : val;\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: location.query || {},\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar index$1 = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar index = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (index$1(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (index$1(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\nindex.parse = parse_1;\nindex.compile = compile_1;\nindex.tokensToFunction = tokensToFunction_1;\nindex.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = index.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  var pathMap = oldPathMap || Object.create(null);\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var normalizedPath = normalizePath(path, parent);\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = index(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = {};\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent) {\n  path = path.replace(/\\/$/, '');\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n    if (!shouldScroll) {\n      return\n    }\n    var isObject = typeof shouldScroll === 'object';\n    if (isObject && typeof shouldScroll.selector === 'string') {\n      var el = document.querySelector(shouldScroll.selector);\n      if (el) {\n        var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n        offset = normalizeOffset(offset);\n        position = getElementPosition(el, offset);\n      } else if (isValidPosition(shouldScroll)) {\n        position = normalizePosition(shouldScroll);\n      }\n    } else if (isObject && isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n\n    if (position) {\n      window.scrollTo(position.x, position.y);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (resolvedDef.__esModule && resolvedDef.default) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n      this$1.transitionTo(getLocation(this$1.base), function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    window.addEventListener('hashchange', function () {\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        replaceHash(route.fullPath);\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction pushHash (path) {\n  window.location.hash = path;\n}\n\nfunction replaceHash (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  window.location.replace((base + \"#\" + path));\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: {} };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '2.7.0';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-router@2.7.0@vue-router/dist/vue-router.esm.js\n// module id = 470\n// module chunks = 1","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-style-loader@3.0.1@vue-style-loader/lib/listToStyles.js\n// module id = 471\n// module chunks = 1","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/Handler.js\n// module id = 472\n// module chunks = 1","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/Layer.js\n// module id = 473\n// module chunks = 1","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/Painter.js\n// module id = 474\n// module chunks = 1","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/Storage.js\n// module id = 475\n// module chunks = 1","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/animation/Animation.js\n// module id = 476\n// module chunks = 1","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/animation/Clip.js\n// module id = 477\n// module chunks = 1","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/animation/easing.js\n// module id = 478\n// module chunks = 1","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/arc.js\n// module id = 479\n// module chunks = 1","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/cubic.js\n// module id = 480\n// module chunks = 1","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/line.js\n// module id = 481\n// module chunks = 1","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/path.js\n// module id = 482\n// module chunks = 1","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/quadratic.js\n// module id = 483\n// module chunks = 1","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/windingLine.js\n// module id = 484\n// module chunks = 1","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/GestureMgr.js\n// module id = 485\n// module chunks = 1","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/bbox.js\n// module id = 486\n// module chunks = 1","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/dom/HandlerProxy.js\n// module id = 487\n// module chunks = 1","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/CompoundPath.js\n// module id = 488\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/LinearGradient.js\n// module id = 489\n// module chunks = 1","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/RadialGradient.js\n// module id = 490\n// module chunks = 1","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Text.js\n// module id = 491\n// module chunks = 1","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/helper/roundRect.js\n// module id = 492\n// module chunks = 1","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/helper/smoothBezier.js\n// module id = 493\n// module chunks = 1","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/helper/smoothSpline.js\n// module id = 494\n// module chunks = 1","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = require('../../contain/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n            rect = style.textPositionRect || rect;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/mixin/RectText.js\n// module id = 495\n// module chunks = 1","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Arc.js\n// module id = 496\n// module chunks = 1","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/BezierCurve.js\n// module id = 497\n// module chunks = 1","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Circle.js\n// module id = 498\n// module chunks = 1","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Line.js\n// module id = 499\n// module chunks = 1","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Polygon.js\n// module id = 500\n// module chunks = 1","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Polyline.js\n// module id = 501\n// module chunks = 1","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Rect.js\n// module id = 502\n// module chunks = 1","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Ring.js\n// module id = 503\n// module chunks = 1","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = require('../../core/env');\n    var Path = require('../Path');\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Sector.js\n// module id = 504\n// module chunks = 1","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/mixin/Animatable.js\n// module id = 505\n// module chunks = 1","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/mixin/Draggable.js\n// module id = 506\n// module chunks = 1","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/tool/path.js\n// module id = 507\n// module chunks = 1","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/tool/transformPath.js\n// module id = 508\n// module chunks = 1","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.5.2';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/zrender.js\n// module id = 509\n// module chunks = 1","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_css-loader@0.28.4@css-loader/lib/css-base.js\n// module id = 511\n// module chunks = 1","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-style-loader@3.0.1@vue-style-loader/lib/addStylesClient.js\n// module id = 512\n// module chunks = 1"],"sourceRoot":""}