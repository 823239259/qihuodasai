<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- realm -->
	<!--depends-on="userRepository, userLastOnlineRepository, userStatusHistoryRepository, 
		springUtils" -->
	<bean id="userRealm" class="org.apache.shiro.realm.UserRealm">
		<property name="authenticationCachingEnabled" value="false" />
		<property name="authorizationCachingEnabled" value="false" />
	</bean>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- Single realm app. If you have multiple realms, use the 'realms' property 
			instead. -->
		<property name="realm" ref="userRealm" />	
		<property name="rememberMeManager" ref="rememberMeManager"/>
	</bean>
	 <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="${shiro.uid.rememeberMe.cookie.name}"/>
        <property name="httpOnly" value="${shiro.uid.cookie.httpOnly}"/>
        <property name="maxAge" value="${shiro.uid.rememeberMe.cookie.maxAge}"/>
    </bean>
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberme cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('${shiro.uid.rememeberMe.cookie.base64.cipherKey}')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>
	<!-- filter -->
	<!--替换默认的form 验证过滤器 -->
	<bean id="formAuthenticationFilter"
		class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
		<!--表单上的用户名/密码 下次自动登录的参数名 -->
		<property name="usernameParam" value="username" />
		<property name="passwordParam" value="password" />
	</bean>

	<!-- 退出登录过滤器 -->
	<bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="${shiro.logout.success.url}" />
	</bean>

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<!-- override these for application-specific URLs if you like: -->
		<property name="loginUrl" value="${shiro.login.url}" />
		<property name="successUrl" value="${shiro.default.success.url}" />
		<property name="unauthorizedUrl" value="${shiro.unauthorizedUrl}" />
		<!-- The 'filters' property is not necessary since any declared javax.servlet.Filter 
			bean -->
		<!-- defined will be automatically acquired and available via its beanName 
			in chain /** = authc,sysUser,perms,roles -->
		<!-- definitions, but you can perform instance overrides or name aliases 
			here if you like: -->
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="formAuthenticationFilter" />
				<entry key="logout" value-ref="logoutFilter" />
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/static/** = anon
				/logout = logout
				/login = authc
				<!--/** = authc -->
				/admin/** = authc
			</value>
		</property>
	</bean>
	

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<!-- Enable Shiro Annotations for Spring-configured beans. Only run after -->
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />

	</bean>
</beans>